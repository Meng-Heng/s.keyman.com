{"version":3,"file":"keymanweb.js","lineCount":845,"mappings":"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","sources":["https://s.keyman.com/kmw/engine/16.0.30/src/version.inc.ts","https://s.keyman.com/kmw/engine/16.0.30/src/index.ts","https://s.keyman.com/kmw/engine/16.0.30/src/deepCopy.ts","https://s.keyman.com/kmw/engine/16.0.30/src/deviceSpec.ts","https://s.keyman.com/kmw/engine/16.0.30/src/globalObject.ts","https://s.keyman.com/kmw/engine/16.0.30/src/version.ts","https://s.keyman.com/kmw/engine/16.0.30/src/kmwstring.ts","https://s.keyman.com/kmw/engine/16.0.30/src/index.wrapped-for-bundle.ts","https://s.keyman.com/kmw/engine/16.0.30/src/promise-store.ts","https://s.keyman.com/kmw/engine/16.0.30/src/index.ts","https://s.keyman.com/kmw/engine/16.0.30/src/web-defaultWorker.ts","https://s.keyman.com/kmw/engine/16.0.30/src/index.js","https://s.keyman.com/kmw/engine/16.0.30/src/contextWindow.ts","https://s.keyman.com/kmw/engine/16.0.30/src/languageProcessor.ts","https://s.keyman.com/kmw/engine/16.0.30/src/inputProcessor.ts","https://s.keyman.com/kmw/engine/16.0.30/src/deadkeys.ts","https://s.keyman.com/kmw/engine/16.0.30/src/keyEvent.ts","https://s.keyman.com/kmw/engine/16.0.30/src/outputTarget.ts","https://s.keyman.com/kmw/engine/16.0.30/src/codes.ts","https://s.keyman.com/kmw/engine/16.0.30/src/ruleBehavior.ts","https://s.keyman.com/kmw/engine/16.0.30/src/defaultOutput.ts","https://s.keyman.com/kmw/engine/16.0.30/src/defaultLayouts.ts","https://s.keyman.com/kmw/engine/16.0.30/src/activeLayout.ts","https://s.keyman.com/kmw/engine/16.0.30/src/systemStores.ts","https://s.keyman.com/kmw/engine/16.0.30/src/kbdInterface.ts","https://s.keyman.com/kmw/engine/16.0.30/src/keyboard.ts","https://s.keyman.com/kmw/engine/16.0.30/src/keyMapping.ts","https://s.keyman.com/kmw/engine/16.0.30/src/keyboardProcessor.ts","https://s.keyman.com/kmw/engine/16.0.30/src/kmwtypedefs.ts","https://s.keyman.com/kmw/engine/16.0.30/src/singleton.ts","https://s.keyman.com/kmw/engine/16.0.30/src/domKbdInterface.ts","https://s.keyman.com/kmw/engine/16.0.30/src/styleConstants.ts","https://s.keyman.com/kmw/engine/16.0.30/src/kmwdevice.ts","https://s.keyman.com/kmw/engine/16.0.30/src/utils.ts","https://s.keyman.com/kmw/engine/16.0.30/src/touchAliasElement.ts","https://s.keyman.com/kmw/engine/16.0.30/src/preProcessor.ts","https://s.keyman.com/kmw/engine/16.0.30/src/domEventHandlers.ts","https://s.keyman.com/kmw/engine/16.0.30/src/domDefaultOutput.ts","https://s.keyman.com/kmw/engine/16.0.30/src/domOverrides.ts","https://s.keyman.com/kmw/engine/16.0.30/src/outputTarget.ts","https://s.keyman.com/kmw/engine/16.0.30/src/input.ts","https://s.keyman.com/kmw/engine/16.0.30/src/textarea.ts","https://s.keyman.com/kmw/engine/16.0.30/src/contentEditable.ts","https://s.keyman.com/kmw/engine/16.0.30/src/designIFrame.ts","https://s.keyman.com/kmw/engine/16.0.30/src/touchAlias.ts","https://s.keyman.com/kmw/engine/16.0.30/src/wrapElement.ts","https://s.keyman.com/kmw/engine/16.0.30/src/variableStoreCookieSerializer.ts","https://s.keyman.com/kmw/engine/16.0.30/src/domManager.ts","https://s.keyman.com/kmw/engine/16.0.30/src/kmwutils.ts","https://s.keyman.com/kmw/engine/16.0.30/src/kmwkeyboards.ts","https://s.keyman.com/kmw/engine/16.0.30/src/kmwhotkeys.ts","https://s.keyman.com/kmw/engine/16.0.30/src/kmwuimanager.ts","https://s.keyman.com/kmw/engine/16.0.30/src/languageMenu.ts","https://s.keyman.com/kmw/engine/16.0.30/src/lengthStyle.ts","https://s.keyman.com/kmw/engine/16.0.30/src/resizeBar.ts","https://s.keyman.com/kmw/engine/16.0.30/src/inputEventCoordinate.ts","https://s.keyman.com/kmw/engine/16.0.30/src/mouseDragOperation.ts","https://s.keyman.com/kmw/engine/16.0.30/src/titleBar.ts","https://s.keyman.com/kmw/engine/16.0.30/src/targetedFloatLayout.ts","https://s.keyman.com/kmw/engine/16.0.30/src/preProcessor.ts","https://s.keyman.com/kmw/engine/16.0.30/src/utils.ts","https://s.keyman.com/kmw/engine/16.0.30/src/oskKey.ts","https://s.keyman.com/kmw/engine/16.0.30/src/oskBaseKey.ts","https://s.keyman.com/kmw/engine/16.0.30/src/oskRow.ts","https://s.keyman.com/kmw/engine/16.0.30/src/oskLayer.ts","https://s.keyman.com/kmw/engine/16.0.30/src/oskLayerGroup.ts","https://s.keyman.com/kmw/engine/16.0.30/src/keytip.ts","https://s.keyman.com/kmw/engine/16.0.30/src/oskSubKey.ts","https://s.keyman.com/kmw/engine/16.0.30/src/subkeyPopup.ts","https://s.keyman.com/kmw/engine/16.0.30/src/pendingLongpress.ts","https://s.keyman.com/kmw/engine/16.0.30/src/pendingMultiTap.ts","https://s.keyman.com/kmw/engine/16.0.30/src/inputEventEngine.ts","https://s.keyman.com/kmw/engine/16.0.30/src/touchEventEngine.ts","https://s.keyman.com/kmw/engine/16.0.30/src/mouseEventEngine.ts","https://s.keyman.com/kmw/engine/16.0.30/src/visualKeyboard.ts","https://s.keyman.com/kmw/engine/16.0.30/src/uiTouchHandlerBase.ts","https://s.keyman.com/kmw/engine/16.0.30/src/banner.ts","https://s.keyman.com/kmw/engine/16.0.30/src/bannerManager.ts","https://s.keyman.com/kmw/engine/16.0.30/src/helpPageView.ts","https://s.keyman.com/kmw/engine/16.0.30/src/emptyView.ts","https://s.keyman.com/kmw/engine/16.0.30/src/oskView.ts","https://s.keyman.com/kmw/engine/16.0.30/src/anchoredOskView.ts","https://s.keyman.com/kmw/engine/16.0.30/src/floatingOskView.ts","https://s.keyman.com/kmw/engine/16.0.30/src/inlinedOskView.ts","https://s.keyman.com/kmw/engine/16.0.30/src/modelManager.ts","https://s.keyman.com/kmw/engine/16.0.30/src/kmwbase.ts","https://s.keyman.com/kmw/engine/16.0.30/src/keymanweb.ts","https://s.keyman.com/kmw/engine/16.0.30/src/kmwrotation.ts","https://s.keyman.com/kmw/engine/16.0.30/src/kmwnative.ts","https://s.keyman.com/kmw/engine/16.0.30/src/kmwinit.ts","https://s.keyman.com/kmw/engine/16.0.30/src/kmwapi.ts","https://s.keyman.com/kmw/engine/16.0.30/src/keytip.ts","https://s.keyman.com/kmw/engine/16.0.30/src/subkeyDelegator.ts","https://s.keyman.com/kmw/engine/16.0.30/src/pendingLongpress.ts"],"sourcesContent":["","","namespace com.keyman.utils {\r\n  /**\r\n   * Function     deepCopy\r\n   * Scope        Private\r\n   * @param       {Object}      p           object to copy\r\n   * @param       {Array=}      c0          array member being copied\r\n   * @return      {Object}                  clone (\u0027deep copy\u0027) of object\r\n   * Description  Makes an actual copy (not a reference) of an object, copying simple members,\r\n   *              arrays and member objects but not functions, so use with care!\r\n   */\r\n  export function deepCopy\u003cT\u003e(p:T, c0?): T {\r\n    var c = c0 || {};\r\n    for (var i in p) {\r\n      if(typeof p[i] === \u0027object\u0027 \u0026\u0026 p[i] != null) {\r\n        c[i] = (p[i].constructor === Array ) ? [] : {};\r\n        deepCopy(p[i],c[i]);\r\n      }\r\n      else {\r\n        c[i] = p[i];\r\n      }\r\n    }\r\n\r\n    return c;\r\n  }\r\n}","namespace com.keyman.utils {\r\n  export enum Browser {\r\n    Chrome = \u0027chrome\u0027,\r\n    Edge = \u0027edge\u0027,\r\n    Firefox = \u0027firefox\u0027,\r\n    Native = \u0027native\u0027, // Used by embedded mode\r\n    Opera = \u0027opera\u0027,\r\n    Safari = \u0027safari\u0027,\r\n    Other = \u0027other\u0027\r\n  }\r\n\r\n  export enum OperatingSystem {\r\n    Windows = \u0027windows\u0027,\r\n    macOS = \u0027macosx\u0027,\r\n    Linux = \u0027linux\u0027,\r\n    Android = \u0027android\u0027,\r\n    iOS = \u0027ios\u0027,\r\n    Other = \u0027other\u0027\r\n  }\r\n\r\n  export enum FormFactor {\r\n    Desktop = \u0027desktop\u0027,\r\n    Phone = \u0027phone\u0027,\r\n    Tablet = \u0027tablet\u0027\r\n  }\r\n\r\n  /**\r\n   * This class provides an abstract version of com.keyman.Device that is core-friendly, \r\n   * containing only the information needed by web-core for text processing use, devoid\r\n   * of any direct references to the DOM.\r\n   */\r\n  export class DeviceSpec {\r\n    readonly browser: Browser;\r\n    readonly formFactor: FormFactor;\r\n    readonly OS: OperatingSystem;\r\n    readonly touchable: boolean;\r\n\r\n    constructor(browser: string, formFactor: string, OS: string, touchable: boolean) {\r\n      switch(browser.toLowerCase() as Browser) {\r\n        case Browser.Chrome:\r\n        case Browser.Edge:\r\n        case Browser.Firefox:\r\n        case Browser.Native:\r\n        case Browser.Opera:\r\n        case Browser.Safari:\r\n          this.browser = browser.toLowerCase() as Browser;\r\n          break;\r\n        default:\r\n          this.browser = Browser.Other;\r\n      }\r\n\r\n      switch(formFactor.toLowerCase() as FormFactor) {\r\n        case FormFactor.Desktop:\r\n        case FormFactor.Phone:\r\n        case FormFactor.Tablet:\r\n          this.formFactor = formFactor.toLowerCase() as FormFactor;\r\n          break;\r\n        default:\r\n          throw (\"Invalid form factor specified for device: \" + formFactor);\r\n      }\r\n\r\n      switch(OS.toLowerCase() as OperatingSystem) {\r\n        case OperatingSystem.Windows.toLowerCase():\r\n        case OperatingSystem.macOS.toLowerCase():\r\n        case OperatingSystem.Linux.toLowerCase():\r\n        case OperatingSystem.Android.toLowerCase():\r\n        case OperatingSystem.iOS.toLowerCase():\r\n          this.OS = OS.toLowerCase() as OperatingSystem;\r\n          break;\r\n        default:\r\n          this.OS = OperatingSystem.Other;\r\n      }\r\n      \r\n      this.touchable = touchable;\r\n    }\r\n  }\r\n}","namespace com.keyman.utils {\r\n  /**\r\n   * Returns the base global object available to the current JS platform.\r\n   * - In browsers, returns `window`.\r\n   * - In WebWorkers, returns `self`.\r\n   * - In Node, returns `global`.\r\n   */\r\n  export function getGlobalObject(): typeof globalThis {\r\n    // Evergreen browsers have started defining \u0027globalThis\u0027.  \r\n    // Refer to https://devblogs.microsoft.com/typescript/announcing-typescript-3-4/#type-checking-for-globalthis\r\n    // and its referenced polyfill.  Said polyfill is very complex, so we opt for this far leaner variant.\r\n    if(typeof globalThis != \u0027undefined\u0027) {\r\n      return globalThis;  // Not available in IE or older Edge versions\r\n      // @ts-ignore (TS will throw errors for whatever platform we\u0027re not compiling for.)\r\n    } else if(typeof window != \u0027undefined\u0027) {\r\n      // @ts-ignore\r\n      return window; // The browser-based classic\r\n      // @ts-ignore\r\n    } else if(typeof self != \u0027undefined\u0027) {\r\n      // @ts-ignore\r\n      return self; // WebWorker global\r\n    } else {\r\n      // Assumption - if neither of the above exist, we\u0027re in Node, for unit-testing.\r\n      // Node doesn\u0027t have as many methods and properties as the other two, but what \r\n      // matters for us is that it\u0027s the base global.\r\n      //\r\n      // Some other headless JS solutions use \u0027this\u0027 instead, but Node\u0027s enough for our needs.\r\n      // @ts-ignore\r\n      return (global as any) as typeof globalThis;\r\n    }\r\n  }\r\n}","// Ensure that this class contains no reference into core KMW code - it is referenced\r\n// by components intended to be modular and possible to separate from core KMW.\r\n\r\nnamespace com.keyman.utils {\r\n  // Dotted-decimal version\r\n  export class Version {\r\n    public static readonly CURRENT = new Version(com.keyman.KEYMAN_VERSION.VERSION_RELEASE);\r\n\r\n    // Represents a default version value for keyboards compiled before this was compiled into keyboards.\r\n    // The exact version is unknown at this point, but the value is \"good enough\" for what we need.\r\n    public static readonly DEVELOPER_VERSION_FALLBACK = new Version([9, 0, 0]);\r\n\r\n    // For 12.0, the old default behavior of adding missing keycaps to the default layers was removed,\r\n    // as it results in unexpected, bug-like behavior for keyboard designers when it is unwanted.\r\n    public static readonly NO_DEFAULT_KEYCAPS = new Version([12, 0]);\r\n\r\n    public static readonly MAC_POSSIBLE_IPAD_ALIAS = new Version([10, 15]);\r\n\r\n    private readonly components: number[]\r\n\r\n    /**\r\n     * Parses version information, preparing it for use in comparisons.\r\n     * @param text Either a string representing a version number (ex: \"9.0.0\") or an array representing\r\n     *             its components (ex: [9, 0, 0]).\r\n     */\r\n    constructor(text: String | number[]) {\r\n      // If a keyboard doesn\u0027t specify a version, use the DEVELOPER_VERSION_FALLBACK values.\r\n      if(text === undefined || text === null) {\r\n        this.components = [].concat(Version.DEVELOPER_VERSION_FALLBACK.components);\r\n        return;\r\n      }\r\n\r\n      if(Array.isArray(text)) {\r\n        let components = text as number[];\r\n        if(components.length \u003c 2) {\r\n          throw new Error(\"Version string must have at least a major and minor component!\");\r\n        } else {\r\n          this.components = [].concat(components);\r\n          return;\r\n        }\r\n      }\r\n\r\n      // else, standard constructor path.\r\n      let parts = text.split(\u0027.\u0027);\r\n      let componentArray: number[] = [];\r\n\r\n      if(parts.length \u003c 2) {\r\n        throw new Error(\"Version string must have at least a major and minor component!\");\r\n      }\r\n\r\n      for(let i=0; i \u003c parts.length; i++) {\r\n        let value = parseInt(parts[i], 10);\r\n        if(isNaN(value)) {\r\n          throw new Error(\"Version string components must be numerical!\");\r\n        }\r\n\r\n        componentArray.push(value);\r\n      }\r\n\r\n      this.components = componentArray;\r\n    }\r\n\r\n    get major(): number {\r\n      return this.components[0];\r\n    }\r\n\r\n    get minor(): number {\r\n      return this.components[1];\r\n    }\r\n\r\n    toString(): string {\r\n      return this.components.join(\u0027.\u0027);\r\n    }\r\n\r\n    toJSON(): string {\r\n      return this.toString();\r\n    }\r\n\r\n    equals(other: Version): boolean {\r\n      return this.compareTo(other) == 0;\r\n    }\r\n\r\n    precedes(other: Version): boolean {\r\n      return this.compareTo(other) \u003c 0;\r\n    }\r\n\r\n    compareTo(other: Version): number {\r\n      // If the version info depth differs, we need a flag to indicate which instance is shorter.\r\n      var isShorter: boolean = this.components.length \u003c other.components.length;\r\n      var maxDepth: number = (this.components.length \u003c other.components.length) ? this.components.length : other.components.length;\r\n\r\n      var i: number;\r\n      for(i = 0; i \u003c maxDepth; i++) {\r\n        let delta = this.components[i] - other.components[i];\r\n        if(delta != 0) {\r\n          return delta;\r\n        }\r\n      }\r\n\r\n      var longList = isShorter ? other.components : this.components;\r\n      do {\r\n        if(longList[i] \u003e 0) {\r\n          return isShorter ? -1 : 1;\r\n        }\r\n        i++;\r\n      } while (i \u003c longList.length);\r\n\r\n      // Equal.\r\n      return 0;\r\n    }\r\n  }\r\n}","/***\r\n   KeymanWeb 14.0\r\n   Copyright 2020 SIL International\r\n***/\r\n\r\n/*\r\n * TODO:  Remove this file as part of addressing https://github.com/keymanapp/keyman/issues/2492.\r\n */\r\n\r\ninterface StringConstructor {\r\n  kmwFromCharCode(cp0: number): string,\r\n  _kmwFromCharCode(cp0: number): string,\r\n  kmwEnableSupplementaryPlane(bEnable: boolean)\r\n}\r\n\r\ninterface String {\r\n  kmwCharCodeAt(codePointIndex: number): number,\r\n  kmwCharAt(codePointIndex: number) : string,\r\n  kmwIndexOf(searchValue: string, fromIndex?: number) : number,\r\n  kmwLastIndexOf(searchValue: string, fromIndex?: number) : number,\r\n  kmwSlice(beginSlice: number, endSlice: number) : string,\r\n  kmwSubstring(start: number, length: number) : string,\r\n  kmwSubstr(start: number, length?: number) : string,\r\n  kmwBMPSubstr(start: number, length?: number) : string,\r\n  kmwLength(): number,\r\n  kmwBMPLength(): number,\r\n  kmwNextChar(codeUnitIndex: number): number,\r\n  kmwBMPNextChar(codeUnitIndex: number): number,\r\n  kmwPrevChar(codeUnitIndex: number): number,\r\n  kmwBMPPrevChar(codeUnitIndex: number): number,\r\n  kmwCodePointToCodeUnit(codePointIndex: number) : number,\r\n  kmwBMPCodePointToCodeUnit(codePointIndex: number) : number,\r\n  kmwCodeUnitToCodePoint(codeUnitIndex: number) : number,\r\n  kmwBMPCodeUnitToCodePoint(codeUnitIndex: number) : number,\r\n  _kmwCharCodeAt(codePointIndex: number): number,\r\n  _kmwCharAt(codePointIndex: number) : string,\r\n  _kmwIndexOf(searchValue: string, fromIndex?: number) : number,\r\n  _kmwLastIndexOf(searchValue: string, fromIndex?: number) : number,\r\n  _kmwSlice(beginSlice: number, endSlice: number) : string,\r\n  _kmwSubstring(start: number, length?: number) : string,\r\n  _kmwSubstr(start: number, length?: number) : string,\r\n  _kmwLength(): number,\r\n  _kmwNextChar(codeUnitIndex: number): number,\r\n  _kmwPrevChar(codeUnitIndex: number): number,\r\n  _kmwCodePointToCodeUnit(codePointIndex: number) : number,\r\n  _kmwCodeUnitToCodePoint(codeUnitIndex: number) : number,\r\n}\r\n\r\n/**\r\n * Constructs a string from one or more Unicode character codepoint values \r\n * passed as integer parameters.\r\n * \r\n * @param  {number} cp0,...   1 or more Unicode codepoints, e.g. 0x0065, 0x10000\r\n * @return {string|null}      The new String object.\r\n */\r\nString.kmwFromCharCode = function(cp0) {\r\n  var chars = [], i;\r\n  for (i = 0; i \u003c arguments.length; i++) {\r\n    var c = Number(arguments[i]);\r\n    if (!isFinite(c) || c \u003c 0 || c \u003e 0x10FFFF || Math.floor(c) !== c) {\r\n      throw new RangeError(\"Invalid code point \" + c);\r\n    }\r\n    if (c \u003c 0x10000) {\r\n      chars.push(c);\r\n    } else {\r\n      c -= 0x10000;\r\n      chars.push((c \u003e\u003e 10) + 0xD800);\r\n      chars.push((c % 0x400) + 0xDC00);\r\n    }\r\n  }\r\n  return String.fromCharCode.apply(undefined, chars);\r\n}\r\n\r\n/**\r\n * Returns a number indicating the Unicode value of the character at the given \r\n * code point index, with support for supplementary plane characters.\r\n * \r\n * @param  {number}  codePointIndex  The code point index into the string (not \r\n                                     the code unit index) to return\r\n * @return {number}                  The Unicode character value\r\n */\r\nString.prototype.kmwCharCodeAt = function(codePointIndex) {\r\n  var str = String(this);\r\n  var codeUnitIndex = 0;\r\n  \r\n  if (codePointIndex \u003c 0 || codePointIndex  \u003e= str.length) {\r\n    return NaN;\r\n  }\r\n\r\n  for(var i = 0; i \u003c codePointIndex; i++) {\r\n    codeUnitIndex = str.kmwNextChar(codeUnitIndex);\r\n    if(codeUnitIndex === null) return NaN;\r\n  }\r\n  \r\n  var first = str.charCodeAt(codeUnitIndex);\r\n  if (first \u003e= 0xD800 \u0026\u0026 first \u003c= 0xDBFF \u0026\u0026 str.length \u003e codeUnitIndex + 1) {\r\n    var second = str.charCodeAt(codeUnitIndex + 1);\r\n    if (second \u003e= 0xDC00 \u0026\u0026 second \u003c= 0xDFFF) {\r\n      return ((first - 0xD800) \u003c\u003c 10) + (second - 0xDC00) + 0x10000;\r\n    }\r\n  }\r\n  return first;  \r\n}\r\n\r\n/**\r\n * Returns the code point index within the calling String object of the first occurrence\r\n * of the specified value, or -1 if not found.\r\n * \r\n * @param  {string}  searchValue    The value to search for\r\n * @param  {number}  [fromIndex]    Optional code point index to start searching from\r\n * @return {number}                 The code point index of the specified search value\r\n */\r\nString.prototype.kmwIndexOf = function(searchValue, fromIndex) {\r\n  var str = String(this);\r\n  var codeUnitIndex = str.indexOf(searchValue, fromIndex);\r\n  \r\n  if(codeUnitIndex \u003c 0) {\r\n    return codeUnitIndex;\r\n  }\r\n  \r\n  var codePointIndex = 0;\r\n  for(var i = 0; i !== null \u0026\u0026 i \u003c codeUnitIndex; i = str.kmwNextChar(i)) codePointIndex++;\r\n  return codePointIndex;\r\n}\r\n\r\n/**\r\n * Returns the code point index within the calling String object of the last occurrence \r\n * of the specified value, or -1 if not found.\r\n * \r\n * @param  {string}  searchValue    The value to search for\r\n * @param  {number}  fromIndex      Optional code point index to start searching from\r\n * @return {number}                 The code point index of the specified search value\r\n */\r\nString.prototype.kmwLastIndexOf = function(searchValue, fromIndex)\r\n{\r\n  var str = String(this);\r\n  var codeUnitIndex = str.lastIndexOf(searchValue, fromIndex);\r\n  \r\n  if(codeUnitIndex \u003c 0) {\r\n    return codeUnitIndex;\r\n  }\r\n  \r\n  var codePointIndex = 0;\r\n  for(var i = 0; i !== null \u0026\u0026 i \u003c codeUnitIndex; i = str.kmwNextChar(i)) codePointIndex++;\r\n  return codePointIndex;\r\n}\r\n\r\n/**\r\n * Returns the length of the string in code points, as opposed to code units.\r\n * \r\n * @return {number}                 The length of the string in code points\r\n */\r\nString.prototype.kmwLength = function() {\r\n  var str = String(this);\r\n  \r\n  if(str.length == 0) return 0;\r\n  \r\n  for(var i = 0, codeUnitIndex = 0; codeUnitIndex !== null; i++) \r\n    codeUnitIndex = str.kmwNextChar(codeUnitIndex);\r\n  return i;\r\n}\r\n\r\n/**\r\n * Extracts a section of a string and returns a new string.\r\n * \r\n * @param  {number}  beginSlice    The start code point index in the string to \r\n *                                 extract from\r\n * @param  {number}  endSlice      Optional end code point index in the string\r\n *                                 to extract to\r\n * @return {string}                The substring as selected by beginSlice and\r\n *                                 endSlice\r\n */\r\nString.prototype.kmwSlice = function(beginSlice, endSlice) {\r\n  var str = String(this);\r\n  var beginSliceCodeUnit = str.kmwCodePointToCodeUnit(beginSlice);\r\n  var endSliceCodeUnit = str.kmwCodePointToCodeUnit(endSlice);\r\n  if(beginSliceCodeUnit === null || endSliceCodeUnit === null) \r\n    return \u0027\u0027;\r\n  else\r\n    return str.slice(beginSliceCodeUnit, endSliceCodeUnit);\r\n}\r\n\r\n/**\r\n * Returns the characters in a string beginning at the specified location through\r\n * the specified number of characters.\r\n * \r\n * @param  {number}  start         The start code point index in the string to \r\n *                                 extract from\r\n * @param  {number=}  length        Optional length to extract\r\n * @return {string}                The substring as selected by start and length\r\n */\r\nString.prototype.kmwSubstr = function(start, length?)\r\n{\r\n  var str = String(this);\r\n  if(start \u003c 0) \r\n  {\r\n    start = str.kmwLength() + start;\r\n  }\r\n\tif(start \u003c 0) start = 0;\r\n  var startCodeUnit = str.kmwCodePointToCodeUnit(start);\r\n  var endCodeUnit = startCodeUnit;\r\n  \r\n  if(startCodeUnit === null) return \u0027\u0027;\r\n  \r\n  if(arguments.length \u003c 2) {\r\n    endCodeUnit = str.length;\r\n  } else {\r\n    for(var i = 0; i \u003c length; i++) endCodeUnit = str.kmwNextChar(endCodeUnit);\r\n  }\r\n  if(endCodeUnit === null)\r\n    return str.substring(startCodeUnit);\r\n  else\r\n    return str.substring(startCodeUnit, endCodeUnit);\r\n}\r\n\r\n/**\r\n * Returns the characters in a string between two indexes into the string.\r\n * \r\n * @param  {number}  indexA        The start code point index in the string to \r\n *                                 extract from\r\n * @param  {number}  indexB        The end code point index in the string to \r\n *                                 extract to\r\n * @return {string}                The substring as selected by indexA and indexB\r\n */\r\nString.prototype.kmwSubstring = function(indexA, indexB)\r\n{\r\n  var str = String(this),indexACodeUnit,indexBCodeUnit;\r\n  \r\n  if(typeof(indexB) == \u0027undefined\u0027) \r\n  {\r\n    indexACodeUnit = str.kmwCodePointToCodeUnit(indexA);\r\n    indexBCodeUnit =  str.length;    \r\n  } \r\n  else\r\n  {\r\n    if(indexA \u003e indexB) { var c = indexA; indexA = indexB; indexB = c; }\r\n  \r\n    indexACodeUnit = str.kmwCodePointToCodeUnit(indexA);\r\n    indexBCodeUnit = str.kmwCodePointToCodeUnit(indexB);\r\n  }\r\n  if(isNaN(indexACodeUnit) || indexACodeUnit === null) indexACodeUnit = 0;\r\n  if(isNaN(indexBCodeUnit) || indexBCodeUnit === null) indexBCodeUnit = str.length;\r\n\r\n  return str.substring(indexACodeUnit, indexBCodeUnit);\r\n}\r\n\r\n/*\r\n  Helper functions\r\n*/\r\n\r\n/**\r\n * Returns the code unit index for the next code point in the string, accounting for\r\n * supplementary pairs \r\n *\r\n * @param  {number|null}  codeUnitIndex  The code unit position to increment\r\n * @return {number|null}                 The index of the next code point in the string,\r\n *                                       in code units\r\n */\r\nString.prototype.kmwNextChar = function(codeUnitIndex) {\r\n  var str = String(this);\r\n\r\n  if(codeUnitIndex === null || codeUnitIndex \u003c 0 || codeUnitIndex \u003e= str.length - 1) {\r\n    return null;\r\n  }\r\n  \r\n  var first = str.charCodeAt(codeUnitIndex);\r\n  if (first \u003e= 0xD800 \u0026\u0026 first \u003c= 0xDBFF \u0026\u0026 str.length \u003e codeUnitIndex + 1) {\r\n    var second = str.charCodeAt(codeUnitIndex + 1);\r\n    if (second \u003e= 0xDC00 \u0026\u0026 second \u003c= 0xDFFF) {\r\n      if(codeUnitIndex == str.length - 2) {\r\n        return null;\r\n      }\r\n      return codeUnitIndex + 2;\r\n    }\r\n  }\r\n  return codeUnitIndex + 1;\r\n}\r\n\r\n/**\r\n * Returns the code unit index for the previous code point in the string, accounting\r\n * for supplementary pairs \r\n *\r\n * @param  {number|null}  codeUnitIndex  The code unit position to decrement\r\n * @return {number|null}                 The index of the previous code point in the\r\n *                                       string, in code units\r\n*/\r\nString.prototype.kmwPrevChar = function(codeUnitIndex) {\r\n  var str = String(this);\r\n\r\n  if(codeUnitIndex == null || codeUnitIndex \u003c= 0 || codeUnitIndex \u003e str.length) {\r\n    return null;\r\n  }\r\n  \r\n  var second = str.charCodeAt(codeUnitIndex - 1);\r\n  if (second \u003e= 0xDC00 \u0026\u0026 second \u003c= 0xDFFF \u0026\u0026 codeUnitIndex \u003e 1) {\r\n    var first = str.charCodeAt(codeUnitIndex - 2);\r\n    if(first \u003e= 0xD800 \u0026\u0026 first \u003c= 0xDBFF) {\r\n      return codeUnitIndex - 2;\r\n    }\r\n  }\r\n  return codeUnitIndex - 1;\r\n}\r\n\r\n/**\r\n * Returns the corresponding code unit index to the code point index passed\r\n *\r\n * @param  {number|null} codePointIndex  A code point index in the string\r\n * @return {number|null}                 The corresponding code unit index\r\n */\r\nString.prototype.kmwCodePointToCodeUnit = function(codePointIndex) {\r\n  \r\n  if(codePointIndex === null) return null;\r\n  \r\n  var str = String(this);\r\n  var codeUnitIndex = 0;\r\n  \r\n  if(codePointIndex \u003c 0) {\r\n    codeUnitIndex = str.length;\r\n    for(var i = 0; i \u003e codePointIndex; i--) \r\n      codeUnitIndex = str.kmwPrevChar(codeUnitIndex);\t\r\n    return codeUnitIndex;\r\n  }\r\n  \r\n  if(codePointIndex == str.kmwLength()) return str.length;\r\n  \r\n  for(var i = 0; i \u003c codePointIndex; i++)\r\n    codeUnitIndex = str.kmwNextChar(codeUnitIndex);\r\n  return codeUnitIndex;\r\n}\r\n\r\n/**\r\n * Returns the corresponding code point index to the code unit index passed\r\n *\r\n * @param  {number|null}  codeUnitIndex  A code unit index in the string\r\n * @return {number|null}                 The corresponding code point index\r\n */\r\nString.prototype.kmwCodeUnitToCodePoint = function(codeUnitIndex) {\r\n  var str = String(this);\r\n  \r\n  if(codeUnitIndex === null)\r\n    return null;\r\n  else if(codeUnitIndex == 0)\r\n    return 0;\r\n  else if(codeUnitIndex \u003c 0)     \r\n    return str.substr(codeUnitIndex).kmwLength();\r\n  else\r\n    return str.substr(0,codeUnitIndex).kmwLength();\r\n}\r\n\r\n/**\r\n * Returns the character at a the code point index passed\r\n *\r\n * @param  {number}  codePointIndex  A code point index in the string\r\n * @return {string}                  The corresponding character\r\n */\r\nString.prototype.kmwCharAt = function(codePointIndex) {\r\n  var str = String(this);\r\n  \r\n  if(codePointIndex \u003e= 0) return str.kmwSubstr(codePointIndex,1); else return \u0027\u0027;\r\n}\r\n\r\n/**\r\n * String prototype library extensions for basic plane characters, \r\n * to simplify enabling or disabling supplementary plane functionality (I3319)\r\n */\r\n \r\n/**\r\n * Returns the code unit index for the next code point in the string\r\n *\r\n * @param  {number}  codeUnitIndex    A code point index in the string\r\n * @return {number|null}                   The corresponding character\r\n */ \r\nString.prototype.kmwBMPNextChar = function(codeUnitIndex)\r\n{\r\n  var str = String(this);\r\n  if(codeUnitIndex \u003c 0 || codeUnitIndex \u003e= str.length - 1) {\r\n    return null;\r\n  }\r\n  return codeUnitIndex + 1;\r\n}  \r\n\r\n/**\r\n * Returns the code unit index for the previous code point in the string\r\n *\r\n * @param  {number}  codeUnitIndex    A code unit index in the string\r\n * @return {number|null}                   The corresponding character\r\n */ \r\nString.prototype.kmwBMPPrevChar = function(codeUnitIndex)\r\n{\r\n  var str = String(this);\r\n\r\n  if(codeUnitIndex \u003c= 0 || codeUnitIndex \u003e str.length) {\r\n    return null;\r\n  }\r\n  return codeUnitIndex - 1;\r\n}  \r\n\r\n/**\r\n * Returns the code unit index for a code point index\r\n *\r\n * @param  {number}  codePointIndex   A code point index in the string\r\n * @return {number}                   The corresponding character\r\n */ \r\nString.prototype.kmwBMPCodePointToCodeUnit = function(codePointIndex)\r\n{\r\n  return codePointIndex;\r\n}\r\n\r\n/**\r\n * Returns the code point index for a code unit index\r\n *\r\n * @param  {number}  codeUnitIndex    A code point index in the string\r\n * @return {number}                   The corresponding character\r\n */ \r\nString.prototype.kmwBMPCodeUnitToCodePoint = function(codeUnitIndex)\r\n{\r\n  return codeUnitIndex;\r\n}\r\n\r\n/**\r\n * Returns the length of a BMP string\r\n *\r\n * @return {number}                   The length in code points\r\n */ \r\nString.prototype.kmwBMPLength = function()\r\n{\r\n  var str = String(this);\r\n  return str.length;\r\n}\r\n\r\n\r\n/**\r\n * Returns a substring \r\n *\r\n * @param  {number}  n\r\n * @param  {number=}  ln\r\n * @return {string}                   \r\n */ \r\nString.prototype.kmwBMPSubstr = function(n,ln?)\r\n{\r\n  var str=String(this);\r\n  if(n \u003e -1) \r\n    return str.substr(n,ln);\r\n  else\r\n    return str.substr(str.length+n,-n);  \r\n}\r\n\r\n/**\r\n * Enable or disable supplementary plane string handling\r\n *\r\n * @param  {boolean}  bEnable\r\n */ \r\nString.kmwEnableSupplementaryPlane = function(bEnable)\r\n{\r\n  var p=String.prototype;\r\n  String._kmwFromCharCode = bEnable ? String.kmwFromCharCode : String.fromCharCode;\r\n  p._kmwCharAt = bEnable ? p.kmwCharAt : p.charAt;\r\n  p._kmwCharCodeAt = bEnable ? p.kmwCharCodeAt : p.charCodeAt;\r\n  p._kmwIndexOf = bEnable ? p.kmwIndexOf :p.indexOf;\r\n  p._kmwLastIndexOf = bEnable ? p.kmwLastIndexOf : p.lastIndexOf ;\r\n  p._kmwSlice = bEnable ? p.kmwSlice : p.slice;\r\n  p._kmwSubstring = bEnable ? p.kmwSubstring : p.substring;\r\n  p._kmwSubstr = bEnable ? p.kmwSubstr : p.kmwBMPSubstr;\r\n  p._kmwLength = bEnable ? p.kmwLength : p.kmwBMPLength;\r\n  p._kmwNextChar = bEnable ? p.kmwNextChar : p.kmwBMPNextChar;\r\n  p._kmwPrevChar = bEnable ? p.kmwPrevChar : p.kmwBMPPrevChar;\r\n  p._kmwCodePointToCodeUnit = bEnable ? p.kmwCodePointToCodeUnit : p.kmwBMPCodePointToCodeUnit;\r\n  p._kmwCodeUnitToCodePoint = bEnable ? p.kmwCodeUnitToCodePoint : p.kmwBMPCodeUnitToCodePoint;\r\n}\r\n\r\n","// @ts-nocheck\n// Autogenerated code. Do not modify!\n// --START:LMLayerWorkerCode--\nfunction LMLayerWorkerCode () {\n/*! https://mths.be/codepointat v0.2.0 by @mathias */\nif (!String.prototype.codePointAt) {\n\t(function() {\n\t\t\u0027use strict\u0027; // needed to support `apply`/`call` with `undefined`/`null`\n\t\tvar defineProperty = (function() {\n\t\t\t// IE 8 only supports `Object.defineProperty` on DOM elements\n\t\t\ttry {\n\t\t\t\tvar object = {};\n\t\t\t\tvar $defineProperty = Object.defineProperty;\n\t\t\t\tvar result = $defineProperty(object, object, object) \u0026\u0026 $defineProperty;\n\t\t\t} catch(error) {}\n\t\t\treturn result;\n\t\t}());\n\t\tvar codePointAt = function(position) {\n\t\t\tif (this == null) {\n\t\t\t\tthrow TypeError();\n\t\t\t}\n\t\t\tvar string = String(this);\n\t\t\tvar size = string.length;\n\t\t\t// `ToInteger`\n\t\t\tvar index = position ? Number(position) : 0;\n\t\t\tif (index != index) { // better `isNaN`\n\t\t\t\tindex = 0;\n\t\t\t}\n\t\t\t// Account for out-of-bounds indices:\n\t\t\tif (index \u003c 0 || index \u003e= size) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\t// Get the first code unit\n\t\t\tvar first = string.charCodeAt(index);\n\t\t\tvar second;\n\t\t\tif ( // check if it’s the start of a surrogate pair\n\t\t\t\tfirst \u003e= 0xD800 \u0026\u0026 first \u003c= 0xDBFF \u0026\u0026 // high surrogate\n\t\t\t\tsize \u003e index + 1 // there is a next code unit\n\t\t\t) {\n\t\t\t\tsecond = string.charCodeAt(index + 1);\n\t\t\t\tif (second \u003e= 0xDC00 \u0026\u0026 second \u003c= 0xDFFF) { // low surrogate\n\t\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\t\treturn (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn first;\n\t\t};\n\t\tif (defineProperty) {\n\t\t\tdefineProperty(String.prototype, \u0027codePointAt\u0027, {\n\t\t\t\t\u0027value\u0027: codePointAt,\n\t\t\t\t\u0027configurable\u0027: true,\n\t\t\t\t\u0027writable\u0027: true\n\t\t\t});\n\t\t} else {\n\t\t\tString.prototype.codePointAt = codePointAt;\n\t\t}\n\t}());\n}\n// From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/fill\r\nif (!Array.prototype.fill) {\r\n  Object.defineProperty(Array.prototype, \u0027fill\u0027, {\r\n    value: function(value) {\r\n\r\n      // Steps 1-2.\r\n      if (this == null) {\r\n        throw new TypeError(\u0027this is null or not defined\u0027);\r\n      }\r\n\r\n      var O = Object(this);\r\n\r\n      // Steps 3-5.\r\n      var len = O.length \u003e\u003e\u003e 0;\r\n\r\n      // Steps 6-7.\r\n      var start = arguments[1];\r\n      var relativeStart = start \u003e\u003e 0;\r\n\r\n      // Step 8.\r\n      var k = relativeStart \u003c 0 ?\r\n        Math.max(len + relativeStart, 0) :\r\n        Math.min(relativeStart, len);\r\n\r\n      // Steps 9-10.\r\n      var end = arguments[2];\r\n      var relativeEnd = end === undefined ?\r\n        len : end \u003e\u003e 0;\r\n\r\n      // Step 11.\r\n      var finalValue = relativeEnd \u003c 0 ?\r\n        Math.max(len + relativeEnd, 0) :\r\n        Math.min(relativeEnd, len);\r\n\r\n      // Step 12.\r\n      while (k \u003c finalValue) {\r\n        O[k] = value;\r\n        k++;\r\n      }\r\n\r\n      // Step 13.\r\n      return O;\r\n    }\r\n  });\r\n}// From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from\r\n// Any npm-based ones require use of `require`, which won\u0027t work for us.\r\n\r\n// Production steps of ECMA-262, Edition 6, 22.1.2.1\r\nif (!Array.from) {\r\n  Array.from = (function () {\r\n    var toStr = Object.prototype.toString;\r\n    var isCallable = function (fn) {\r\n      return typeof fn === \u0027function\u0027 || toStr.call(fn) === \u0027[object Function]\u0027;\r\n    };\r\n    var toInteger = function (value) {\r\n      var number = Number(value);\r\n      if (isNaN(number)) { return 0; }\r\n      if (number === 0 || !isFinite(number)) { return number; }\r\n      return (number \u003e 0 ? 1 : -1) * Math.floor(Math.abs(number));\r\n    };\r\n    var maxSafeInteger = Math.pow(2, 53) - 1;\r\n    var toLength = function (value) {\r\n      var len = toInteger(value);\r\n      return Math.min(Math.max(len, 0), maxSafeInteger);\r\n    };\r\n\r\n    // The length property of the from method is 1.\r\n    return function from(arrayLike/*, mapFn, thisArg */) {\r\n      // 1. Let C be the this value.\r\n      var C = this;\r\n\r\n      // 2. Let items be ToObject(arrayLike).\r\n      var items = Object(arrayLike);\r\n\r\n      // 3. ReturnIfAbrupt(items).\r\n      if (arrayLike == null) {\r\n        throw new TypeError(\u0027Array.from requires an array-like object - not null or undefined\u0027);\r\n      }\r\n\r\n      // 4. If mapfn is undefined, then let mapping be false.\r\n      var mapFn = arguments.length \u003e 1 ? arguments[1] : void undefined;\r\n      var T;\r\n      if (typeof mapFn !== \u0027undefined\u0027) {\r\n        // 5. else\r\n        // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\r\n        if (!isCallable(mapFn)) {\r\n          throw new TypeError(\u0027Array.from: when provided, the second argument must be a function\u0027);\r\n        }\r\n\r\n        // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n        if (arguments.length \u003e 2) {\r\n          T = arguments[2];\r\n        }\r\n      }\r\n\r\n      // 10. Let lenValue be Get(items, \"length\").\r\n      // 11. Let len be ToLength(lenValue).\r\n      var len = toLength(items.length);\r\n\r\n      // 13. If IsConstructor(C) is true, then\r\n      // 13. a. Let A be the result of calling the [[Construct]] internal method \r\n      // of C with an argument list containing the single item len.\r\n      // 14. a. Else, Let A be ArrayCreate(len).\r\n      var A = isCallable(C) ? Object(new C(len)) : new Array(len);\r\n\r\n      // 16. Let k be 0.\r\n      var k = 0;\r\n      // 17. Repeat, while k \u003c len… (also steps a - h)\r\n      var kValue;\r\n      while (k \u003c len) {\r\n        kValue = items[k];\r\n        if (mapFn) {\r\n          A[k] = typeof T === \u0027undefined\u0027 ? mapFn(kValue, k) : mapFn.call(T, kValue, k);\r\n        } else {\r\n          A[k] = kValue;\r\n        }\r\n        k += 1;\r\n      }\r\n      // 18. Let putStatus be Put(A, \"length\", len, true).\r\n      A.length = len;\r\n      // 20. Return A.\r\n      return A;\r\n    };\r\n  }());\r\n}\r\n// From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\r\nif (!Object.keys) {\r\n  Object.keys = (function() {\r\n    \u0027use strict\u0027;\r\n    var hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        hasDontEnumBug = !({ toString: null }).propertyIsEnumerable(\u0027toString\u0027),\r\n        dontEnums = [\r\n          \u0027toString\u0027,\r\n          \u0027toLocaleString\u0027,\r\n          \u0027valueOf\u0027,\r\n          \u0027hasOwnProperty\u0027,\r\n          \u0027isPrototypeOf\u0027,\r\n          \u0027propertyIsEnumerable\u0027,\r\n          \u0027constructor\u0027\r\n        ],\r\n        dontEnumsLength = dontEnums.length;\r\n\r\n    return function(obj) {\r\n      if (typeof obj !== \u0027function\u0027 \u0026\u0026 (typeof obj !== \u0027object\u0027 || obj === null)) {\r\n        throw new TypeError(\u0027Object.keys called on non-object\u0027);\r\n      }\r\n\r\n      var result = [], prop, i;\r\n\r\n      for (prop in obj) {\r\n        if (hasOwnProperty.call(obj, prop)) {\r\n          result.push(prop);\r\n        }\r\n      }\r\n\r\n      if (hasDontEnumBug) {\r\n        for (i = 0; i \u003c dontEnumsLength; i++) {\r\n          if (hasOwnProperty.call(obj, dontEnums[i])) {\r\n            result.push(dontEnums[i]);\r\n          }\r\n        }\r\n      }\r\n      return result;\r\n    };\r\n  }());\r\n}\r\n\r\n// Now for Object.values, from https://github.com/tc39/proposal-object-values-entries/blob/master/polyfill.js\r\n// Early Android APIs do not support Reflect, hence the need to \u0027mesh\u0027 them like this.\r\n\r\nvar reduce = Function.bind.call(Function.call, Array.prototype.reduce);\r\nvar isEnumerable = Function.bind.call(Function.call, Object.prototype.propertyIsEnumerable);\r\nvar concat = Function.bind.call(Function.call, Array.prototype.concat);\r\n//var keys = Reflect.ownKeys;\r\nvar keys = Object.keys;\r\n\r\nif (!Object.values) {\r\n\tObject.values = function values(O) {\r\n\t\treturn reduce(keys(O), function(v, k) { return concat(v, typeof k === \u0027string\u0027 \u0026\u0026 isEnumerable(O, k) ? [O[k]] : []) }, []);\r\n\t};\r\n}\r\n\r\nif (!Object.entries) {\r\n\tObject.entries = function entries(O) {\r\n\t\treturn reduce(keys(O), function(e, k) { return concat(e, typeof k === \u0027string\u0027 \u0026\u0026 isEnumerable(O, k) ? [[k, O[k]]] : []) }, []);\r\n\t};\r\n}// From https://rousan.io/symbol-es6/, lightly modified to be worker-compatible for Android Lollipop.\r\n!function(global,factory){\"use strict\";\"object\"==typeof module\u0026\u0026\"object\"==typeof module.exports?module.exports=factory(global):factory(global)}(\"undefined\"!=typeof window?window:(self?self:global),function(global){\"use strict\";var defineProperty=Object.defineProperty,defineProperties=Object.defineProperties,symbolHiddenCounter=0,globalSymbolRegistry=[],slice=Array.prototype.slice,ES6=\"object\"==typeof global.ES6?global.ES6:global.ES6={},isArray=Array.isArray,objectToString=Object.prototype.toString,push=Array.prototype.push,emptyFunction=function(){},simpleFunction=function(arg){return arg},isCallable=function(fn){return\"function\"==typeof fn},Iterator=function(){},ArrayIterator=function(array,flag){this._array=array,this._flag=flag,this._nextIndex=0},StringIterator=function(string,flag){this._string=string,this._flag=flag,this._nextIndex=0},isObject=function(value){return null!==value\u0026\u0026(\"object\"==typeof value||\"function\"==typeof value)},setupSymbolInternals=function(symbol,desc){return defineProperties(symbol,{_description:{value:desc},_isSymbol:{value:!0},_id:{value:symbolHiddenCounter++}}),symbol},appendArray=function(array1,array2){if(\"number\"==typeof array1.length\u0026\u0026array1.length\u003e=0\u0026\u0026\"number\"==typeof array2.length\u0026\u0026array2.length\u003e=0){var length1=Math.floor(array1.length),length2=Math.floor(array2.length),i=0;for(array1.length=length1+length2;i\u003clength2;++i)array2.hasOwnProperty(i)\u0026\u0026(array1[length1+i]=array2[i])}},simpleInheritance=function(child,parent){if(\"function\"!=typeof child||\"function\"!=typeof parent)throw new TypeError(\"Child and Parent must be function type\");child.prototype=Object.create(parent.prototype),child.prototype.constructor=child},Symbol=function Symbol(desc){if(desc=void 0===desc?\"\":String(desc),this instanceof Symbol)throw new TypeError(\"Symbol is not a constructor\");return setupSymbolInternals(Object.create(Symbol.prototype),desc)};defineProperties(Symbol,{for:{value:function(key){key=String(key);for(var record,registryLength=globalSymbolRegistry.length,i=0;i\u003cregistryLength;++i)if((record=globalSymbolRegistry[i]).key===key)return record.symbol;return record={key:key,symbol:Symbol(key)},globalSymbolRegistry.push(record),record.symbol},writable:!0,configurable:!0},keyFor:{value:function(symbol){if(!ES6.isSymbol(symbol))throw new TypeError(String(symbol)+\" is not a symbol\");for(var record,registryLength=globalSymbolRegistry.length,i=0;i\u003cregistryLength;++i)if((record=globalSymbolRegistry[i]).symbol===symbol)return record.key},writable:!0,configurable:!0},hasInstance:{value:Symbol(\"Symbol.hasInstance\")},isConcatSpreadable:{value:Symbol(\"Symbol.isConcatSpreadable\")},iterator:{value:Symbol(\"Symbol.iterator\")},toStringTag:{value:Symbol(\"Symbol.toStringTag\")}}),Symbol.prototype.toString=function(){return\"@@_____\"+this._id+\"_____\"},Symbol.prototype.valueOf=function(){return this},defineProperty(Iterator.prototype,Symbol.iterator.toString(),{value:function(){return this},writable:!0,configurable:!0}),simpleInheritance(ArrayIterator,Iterator),simpleInheritance(StringIterator,Iterator),defineProperty(ArrayIterator.prototype,Symbol.toStringTag.toString(),{value:\"Array Iterator\",configurable:!0}),defineProperty(StringIterator.prototype,Symbol.toStringTag.toString(),{value:\"String Iterator\",configurable:!0}),ArrayIterator.prototype.next=function(){if(!(this instanceof ArrayIterator))throw new TypeError(\"Method Array Iterator.prototype.next called on incompatible receiver \"+String(this));var nextValue;return-1===this._nextIndex?{done:!0,value:void 0}:\"number\"==typeof this._array.length\u0026\u0026this._array.length\u003e=0\u0026\u0026this._nextIndex\u003cMath.floor(this._array.length)?(1===this._flag?nextValue=[this._nextIndex,this._array[this._nextIndex]]:2===this._flag?nextValue=this._array[this._nextIndex]:3===this._flag\u0026\u0026(nextValue=this._nextIndex),this._nextIndex++,{done:!1,value:nextValue}):(this._nextIndex=-1,{done:!0,value:void 0})},StringIterator.prototype.next=function(){if(!(this instanceof StringIterator))throw new TypeError(\"Method String Iterator.prototype.next called on incompatible receiver \"+String(this));var nextValue,stringObject=new String(this._string);return-1===this._nextIndex?{done:!0,value:void 0}:this._nextIndex\u003cstringObject.length?(nextValue=stringObject[this._nextIndex],this._nextIndex++,{done:!1,value:nextValue}):(this._nextIndex=-1,{done:!0,value:void 0})};var SpreadOperatorImpl=function(target,thisArg){this._target=target,this._values=[],this._thisArg=thisArg};SpreadOperatorImpl.prototype.spread=function(){var self=this;return slice.call(arguments).forEach(function(iterable){ES6.forOf(iterable,function(value){self._values.push(value)})}),self},SpreadOperatorImpl.prototype.add=function(){var self=this;return slice.call(arguments).forEach(function(value){self._values.push(value)}),self},SpreadOperatorImpl.prototype.call=function(thisArg){if(\"function\"!=typeof this._target)throw new TypeError(\"Target is not a function\");return thisArg=arguments.length\u003c=0?this._thisArg:thisArg,this._target.apply(thisArg,this._values)},SpreadOperatorImpl.prototype.new=function(){if(\"function\"!=typeof this._target)throw new TypeError(\"Target is not a constructor\");var temp,returnValue;return temp=Object.create(this._target.prototype),returnValue=this._target.apply(temp,this._values),isObject(returnValue)?returnValue:temp},SpreadOperatorImpl.prototype.array=function(){if(!isArray(this._target))throw new TypeError(\"Target is not a array\");return push.apply(this._target,this._values),this._target};return defineProperties(ES6,{isSymbol:{value:function(symbol){return symbol instanceof Symbol\u0026\u0026function(symbol){return!0===symbol._isSymbol\u0026\u0026\"number\"==typeof symbol._id\u0026\u0026\"string\"==typeof symbol._description}(symbol)},writable:!0,configurable:!0},instanceOf:{value:function(object,constructor){if(!isObject(constructor))throw new TypeError(\"Right-hand side of \u0027instanceof\u0027 is not an object\");var hasInstanceSymbolProp=constructor[Symbol.hasInstance];if(void 0===hasInstanceSymbolProp)return object instanceof constructor;if(\"function\"!=typeof hasInstanceSymbolProp)throw new TypeError(typeof hasInstanceSymbolProp+\" is not a function\");return hasInstanceSymbolProp.call(constructor,object)},writable:!0,configurable:!0},forOf:{value:function(iterable,callback,thisArg){if(callback=\"function\"!=typeof callback?emptyFunction:callback,\"function\"!=typeof iterable[Symbol.iterator])throw new TypeError(\"Iterable[Symbol.iterator] is not a function\");var iterationResult,iterator=iterable[Symbol.iterator]();if(\"function\"!=typeof iterator.next)throw new TypeError(\".iterator.next is not a function\");for(;;){if(iterationResult=iterator.next(),!isObject(iterationResult))throw new TypeError(\"Iterator result \"+iterationResult+\" is not an object\");if(iterationResult.done)break;callback.call(thisArg,iterationResult.value)}},writable:!0,configurable:!0},spreadOperator:{value:function(target,thisArg){if(\"function\"!=typeof target\u0026\u0026!isArray(target))throw new TypeError(\"Spread operator only supports on array and function objects at this moment\");return new SpreadOperatorImpl(target,thisArg)},writable:!0,configurable:!0}}),defineProperty(global,\"Symbol\",{value:Symbol,writable:!0,configurable:!0}),defineProperty(Function.prototype,Symbol.hasInstance.toString(),{value:function(instance){return\"function\"==typeof this\u0026\u0026instance instanceof this}}),defineProperty(Array.prototype,\"concat\",{value:function(){if(void 0===this||null===this)throw new TypeError(\"Array.prototype.concat called on null or undefined\");var self=Object(this),targets=slice.call(arguments),outputs=[];return targets.unshift(self),targets.forEach(function(target){isObject(target)?void 0!==target[Symbol.isConcatSpreadable]?target[Symbol.isConcatSpreadable]?appendArray(outputs,target):outputs.push(target):isArray(target)?appendArray(outputs,target):outputs.push(target):outputs.push(target)}),outputs},writable:!0,configurable:!0}),defineProperty(Object.prototype,\"toString\",{value:function(){return void 0===this||null===this?objectToString.call(this):\"string\"==typeof this[Symbol.toStringTag]?\"[object \"+this[Symbol.toStringTag]+\"]\":objectToString.call(this)},writable:!0,configurable:!0}),defineProperty(Array.prototype,Symbol.iterator.toString(),{value:function(){if(void 0===this||null===this)throw new TypeError(\"Cannot convert undefined or null to object\");var self=Object(this);return new ArrayIterator(self,2)},writable:!0,configurable:!0}),defineProperty(Array,\"from\",{value:function(arrayLike,mapFn,thisArg){var constructor,length,outputs,i=0;if(constructor=isCallable(this)?this:Array,void 0===arrayLike||null===arrayLike)throw new TypeError(\"Cannot convert undefined or null to object\");if(arrayLike=Object(arrayLike),void 0===mapFn)mapFn=simpleFunction;else if(!isCallable(mapFn))throw new TypeError(mapFn+\" is not a function\");if(void 0===arrayLike[Symbol.iterator]){if(!(\"number\"==typeof arrayLike.length\u0026\u0026arrayLike.length\u003e=0))return(outputs=new constructor(0)).length=0,outputs;for(length=Math.floor(arrayLike.length),(outputs=new constructor(length)).length=length;i\u003clength;++i)outputs[i]=mapFn.call(thisArg,arrayLike[i])}else(outputs=new constructor).length=0,ES6.forOf(arrayLike,function(value){outputs.length++,outputs[outputs.length-1]=mapFn.call(thisArg,value)});return outputs},writable:!0,configurable:!0}),defineProperty(Array.prototype,\"entries\",{value:function(){if(void 0===this||null===this)throw new TypeError(\"Cannot convert undefined or null to object\");var self=Object(this);return new ArrayIterator(self,1)},writable:!0,configurable:!0}),defineProperty(Array.prototype,\"keys\",{value:function(){if(void 0===this||null===this)throw new TypeError(\"Cannot convert undefined or null to object\");var self=Object(this);return new ArrayIterator(self,3)},writable:!0,configurable:!0}),defineProperty(String.prototype,Symbol.iterator.toString(),{value:function(){if(void 0===this||null===this)throw new TypeError(\"String.prototype[Symbol.iterator] called on null or undefined\");return new StringIterator(String(this),0)},writable:!0,configurable:!0}),ES6});\n\"use strict\";\r\n// Generated by common/web/keyman-version/build.sh\r\nvar com;\r\n(function (com) {\r\n    var keyman;\r\n    (function (keyman) {\r\n        var KEYMAN_VERSION = /** @class */ (function () {\r\n            function KEYMAN_VERSION() {\r\n            }\r\n            KEYMAN_VERSION.VERSION = \"16.0.30\";\r\n            KEYMAN_VERSION.VERSION_RELEASE = \"16.0\";\r\n            KEYMAN_VERSION.VERSION_MAJOR = \"16\";\r\n            KEYMAN_VERSION.VERSION_MINOR = \"0\";\r\n            KEYMAN_VERSION.VERSION_PATCH = \"30\";\r\n            KEYMAN_VERSION.TIER = \"alpha\";\r\n            KEYMAN_VERSION.VERSION_TAG = \"-alpha\";\r\n            KEYMAN_VERSION.VERSION_WITH_TAG = \"16.0.30-alpha\";\r\n            KEYMAN_VERSION.VERSION_ENVIRONMENT = \"alpha\";\r\n            KEYMAN_VERSION.SENTRY_RELEASE = \"release-16.0.30-alpha\";\r\n            return KEYMAN_VERSION;\r\n        }());\r\n        keyman.KEYMAN_VERSION = KEYMAN_VERSION;\r\n    })(keyman = com.keyman || (com.keyman = {}));\r\n})(com || (com = {}));\r\n/// \u003creference path=\"./version.inc.ts\" /\u003e\r\n// Add all namespaces defined here to the global scope:\r\nif (typeof module != \u0027undefined\u0027 \u0026\u0026 typeof module.exports != \u0027undefined\u0027) {\r\n    module.exports[\u0027KEYMAN_VERSION\u0027] = com.keyman.KEYMAN_VERSION;\r\n}\r\nvar com;\r\n(function (com) {\r\n    var keyman;\r\n    (function (keyman) {\r\n        var utils;\r\n        (function (utils) {\r\n            /**\r\n             * Function     deepCopy\r\n             * Scope        Private\r\n             * @param       {Object}      p           object to copy\r\n             * @param       {Array=}      c0          array member being copied\r\n             * @return      {Object}                  clone (\u0027deep copy\u0027) of object\r\n             * Description  Makes an actual copy (not a reference) of an object, copying simple members,\r\n             *              arrays and member objects but not functions, so use with care!\r\n             */\r\n            function deepCopy(p, c0) {\r\n                var c = c0 || {};\r\n                for (var i in p) {\r\n                    if (typeof p[i] === \u0027object\u0027 \u0026\u0026 p[i] != null) {\r\n                        c[i] = (p[i].constructor === Array) ? [] : {};\r\n                        deepCopy(p[i], c[i]);\r\n                    }\r\n                    else {\r\n                        c[i] = p[i];\r\n                    }\r\n                }\r\n                return c;\r\n            }\r\n            utils.deepCopy = deepCopy;\r\n        })(utils = keyman.utils || (keyman.utils = {}));\r\n    })(keyman = com.keyman || (com.keyman = {}));\r\n})(com || (com = {}));\r\nvar com;\r\n(function (com) {\r\n    var keyman;\r\n    (function (keyman) {\r\n        var utils;\r\n        (function (utils) {\r\n            var Browser;\r\n            (function (Browser) {\r\n                Browser[\"Chrome\"] = \"chrome\";\r\n                Browser[\"Edge\"] = \"edge\";\r\n                Browser[\"Firefox\"] = \"firefox\";\r\n                Browser[\"Native\"] = \"native\";\r\n                Browser[\"Opera\"] = \"opera\";\r\n                Browser[\"Safari\"] = \"safari\";\r\n                Browser[\"Other\"] = \"other\";\r\n            })(Browser = utils.Browser || (utils.Browser = {}));\r\n            var OperatingSystem;\r\n            (function (OperatingSystem) {\r\n                OperatingSystem[\"Windows\"] = \"windows\";\r\n                OperatingSystem[\"macOS\"] = \"macosx\";\r\n                OperatingSystem[\"Linux\"] = \"linux\";\r\n                OperatingSystem[\"Android\"] = \"android\";\r\n                OperatingSystem[\"iOS\"] = \"ios\";\r\n                OperatingSystem[\"Other\"] = \"other\";\r\n            })(OperatingSystem = utils.OperatingSystem || (utils.OperatingSystem = {}));\r\n            var FormFactor;\r\n            (function (FormFactor) {\r\n                FormFactor[\"Desktop\"] = \"desktop\";\r\n                FormFactor[\"Phone\"] = \"phone\";\r\n                FormFactor[\"Tablet\"] = \"tablet\";\r\n            })(FormFactor = utils.FormFactor || (utils.FormFactor = {}));\r\n            /**\r\n             * This class provides an abstract version of com.keyman.Device that is core-friendly,\r\n             * containing only the information needed by web-core for text processing use, devoid\r\n             * of any direct references to the DOM.\r\n             */\r\n            var DeviceSpec = /** @class */ (function () {\r\n                function DeviceSpec(browser, formFactor, OS, touchable) {\r\n                    switch (browser.toLowerCase()) {\r\n                        case Browser.Chrome:\r\n                        case Browser.Edge:\r\n                        case Browser.Firefox:\r\n                        case Browser.Native:\r\n                        case Browser.Opera:\r\n                        case Browser.Safari:\r\n                            this.browser = browser.toLowerCase();\r\n                            break;\r\n                        default:\r\n                            this.browser = Browser.Other;\r\n                    }\r\n                    switch (formFactor.toLowerCase()) {\r\n                        case FormFactor.Desktop:\r\n                        case FormFactor.Phone:\r\n                        case FormFactor.Tablet:\r\n                            this.formFactor = formFactor.toLowerCase();\r\n                            break;\r\n                        default:\r\n                            throw (\"Invalid form factor specified for device: \" + formFactor);\r\n                    }\r\n                    switch (OS.toLowerCase()) {\r\n                        case OperatingSystem.Windows.toLowerCase():\r\n                        case OperatingSystem.macOS.toLowerCase():\r\n                        case OperatingSystem.Linux.toLowerCase():\r\n                        case OperatingSystem.Android.toLowerCase():\r\n                        case OperatingSystem.iOS.toLowerCase():\r\n                            this.OS = OS.toLowerCase();\r\n                            break;\r\n                        default:\r\n                            this.OS = OperatingSystem.Other;\r\n                    }\r\n                    this.touchable = touchable;\r\n                }\r\n                return DeviceSpec;\r\n            }());\r\n            utils.DeviceSpec = DeviceSpec;\r\n        })(utils = keyman.utils || (keyman.utils = {}));\r\n    })(keyman = com.keyman || (com.keyman = {}));\r\n})(com || (com = {}));\r\nvar com;\r\n(function (com) {\r\n    var keyman;\r\n    (function (keyman) {\r\n        var utils;\r\n        (function (utils) {\r\n            /**\r\n             * Returns the base global object available to the current JS platform.\r\n             * - In browsers, returns `window`.\r\n             * - In WebWorkers, returns `self`.\r\n             * - In Node, returns `global`.\r\n             */\r\n            function getGlobalObject() {\r\n                // Evergreen browsers have started defining \u0027globalThis\u0027.  \r\n                // Refer to https://devblogs.microsoft.com/typescript/announcing-typescript-3-4/#type-checking-for-globalthis\r\n                // and its referenced polyfill.  Said polyfill is very complex, so we opt for this far leaner variant.\r\n                if (typeof globalThis != \u0027undefined\u0027) {\r\n                    return globalThis; // Not available in IE or older Edge versions\r\n                    // @ts-ignore (TS will throw errors for whatever platform we\u0027re not compiling for.)\r\n                }\r\n                else if (typeof window != \u0027undefined\u0027) {\r\n                    // @ts-ignore\r\n                    return window; // The browser-based classic\r\n                    // @ts-ignore\r\n                }\r\n                else if (typeof self != \u0027undefined\u0027) {\r\n                    // @ts-ignore\r\n                    return self; // WebWorker global\r\n                }\r\n                else {\r\n                    // Assumption - if neither of the above exist, we\u0027re in Node, for unit-testing.\r\n                    // Node doesn\u0027t have as many methods and properties as the other two, but what \r\n                    // matters for us is that it\u0027s the base global.\r\n                    //\r\n                    // Some other headless JS solutions use \u0027this\u0027 instead, but Node\u0027s enough for our needs.\r\n                    // @ts-ignore\r\n                    return global;\r\n                }\r\n            }\r\n            utils.getGlobalObject = getGlobalObject;\r\n        })(utils = keyman.utils || (keyman.utils = {}));\r\n    })(keyman = com.keyman || (com.keyman = {}));\r\n})(com || (com = {}));\r\n// Ensure that this class contains no reference into core KMW code - it is referenced\r\n// by components intended to be modular and possible to separate from core KMW.\r\nvar com;\r\n(function (com) {\r\n    var keyman;\r\n    (function (keyman) {\r\n        var utils;\r\n        (function (utils) {\r\n            // Dotted-decimal version\r\n            var Version = /** @class */ (function () {\r\n                /**\r\n                 * Parses version information, preparing it for use in comparisons.\r\n                 * @param text Either a string representing a version number (ex: \"9.0.0\") or an array representing\r\n                 *             its components (ex: [9, 0, 0]).\r\n                 */\r\n                function Version(text) {\r\n                    // If a keyboard doesn\u0027t specify a version, use the DEVELOPER_VERSION_FALLBACK values.\r\n                    if (text === undefined || text === null) {\r\n                        this.components = [].concat(Version.DEVELOPER_VERSION_FALLBACK.components);\r\n                        return;\r\n                    }\r\n                    if (Array.isArray(text)) {\r\n                        var components = text;\r\n                        if (components.length \u003c 2) {\r\n                            throw new Error(\"Version string must have at least a major and minor component!\");\r\n                        }\r\n                        else {\r\n                            this.components = [].concat(components);\r\n                            return;\r\n                        }\r\n                    }\r\n                    // else, standard constructor path.\r\n                    var parts = text.split(\u0027.\u0027);\r\n                    var componentArray = [];\r\n                    if (parts.length \u003c 2) {\r\n                        throw new Error(\"Version string must have at least a major and minor component!\");\r\n                    }\r\n                    for (var i = 0; i \u003c parts.length; i++) {\r\n                        var value = parseInt(parts[i], 10);\r\n                        if (isNaN(value)) {\r\n                            throw new Error(\"Version string components must be numerical!\");\r\n                        }\r\n                        componentArray.push(value);\r\n                    }\r\n                    this.components = componentArray;\r\n                }\r\n                Object.defineProperty(Version.prototype, \"major\", {\r\n                    get: function () {\r\n                        return this.components[0];\r\n                    },\r\n                    enumerable: false,\r\n                    configurable: true\r\n                });\r\n                Object.defineProperty(Version.prototype, \"minor\", {\r\n                    get: function () {\r\n                        return this.components[1];\r\n                    },\r\n                    enumerable: false,\r\n                    configurable: true\r\n                });\r\n                Version.prototype.toString = function () {\r\n                    return this.components.join(\u0027.\u0027);\r\n                };\r\n                Version.prototype.toJSON = function () {\r\n                    return this.toString();\r\n                };\r\n                Version.prototype.equals = function (other) {\r\n                    return this.compareTo(other) == 0;\r\n                };\r\n                Version.prototype.precedes = function (other) {\r\n                    return this.compareTo(other) \u003c 0;\r\n                };\r\n                Version.prototype.compareTo = function (other) {\r\n                    // If the version info depth differs, we need a flag to indicate which instance is shorter.\r\n                    var isShorter = this.components.length \u003c other.components.length;\r\n                    var maxDepth = (this.components.length \u003c other.components.length) ? this.components.length : other.components.length;\r\n                    var i;\r\n                    for (i = 0; i \u003c maxDepth; i++) {\r\n                        var delta = this.components[i] - other.components[i];\r\n                        if (delta != 0) {\r\n                            return delta;\r\n                        }\r\n                    }\r\n                    var longList = isShorter ? other.components : this.components;\r\n                    do {\r\n                        if (longList[i] \u003e 0) {\r\n                            return isShorter ? -1 : 1;\r\n                        }\r\n                        i++;\r\n                    } while (i \u003c longList.length);\r\n                    // Equal.\r\n                    return 0;\r\n                };\r\n                Version.CURRENT = new Version(com.keyman.KEYMAN_VERSION.VERSION_RELEASE);\r\n                // Represents a default version value for keyboards compiled before this was compiled into keyboards.\r\n                // The exact version is unknown at this point, but the value is \"good enough\" for what we need.\r\n                Version.DEVELOPER_VERSION_FALLBACK = new Version([9, 0, 0]);\r\n                // For 12.0, the old default behavior of adding missing keycaps to the default layers was removed,\r\n                // as it results in unexpected, bug-like behavior for keyboard designers when it is unwanted.\r\n                Version.NO_DEFAULT_KEYCAPS = new Version([12, 0]);\r\n                Version.MAC_POSSIBLE_IPAD_ALIAS = new Version([10, 15]);\r\n                return Version;\r\n            }());\r\n            utils.Version = Version;\r\n        })(utils = keyman.utils || (keyman.utils = {}));\r\n    })(keyman = com.keyman || (com.keyman = {}));\r\n})(com || (com = {}));\r\n/***\r\n   KeymanWeb 14.0\r\n   Copyright 2020 SIL International\r\n***/\r\n/**\r\n * Constructs a string from one or more Unicode character codepoint values\r\n * passed as integer parameters.\r\n *\r\n * @param  {number} cp0,...   1 or more Unicode codepoints, e.g. 0x0065, 0x10000\r\n * @return {string|null}      The new String object.\r\n */\r\nString.kmwFromCharCode = function (cp0) {\r\n    var chars = [], i;\r\n    for (i = 0; i \u003c arguments.length; i++) {\r\n        var c = Number(arguments[i]);\r\n        if (!isFinite(c) || c \u003c 0 || c \u003e 0x10FFFF || Math.floor(c) !== c) {\r\n            throw new RangeError(\"Invalid code point \" + c);\r\n        }\r\n        if (c \u003c 0x10000) {\r\n            chars.push(c);\r\n        }\r\n        else {\r\n            c -= 0x10000;\r\n            chars.push((c \u003e\u003e 10) + 0xD800);\r\n            chars.push((c % 0x400) + 0xDC00);\r\n        }\r\n    }\r\n    return String.fromCharCode.apply(undefined, chars);\r\n};\r\n/**\r\n * Returns a number indicating the Unicode value of the character at the given\r\n * code point index, with support for supplementary plane characters.\r\n *\r\n * @param  {number}  codePointIndex  The code point index into the string (not\r\n                                     the code unit index) to return\r\n * @return {number}                  The Unicode character value\r\n */\r\nString.prototype.kmwCharCodeAt = function (codePointIndex) {\r\n    var str = String(this);\r\n    var codeUnitIndex = 0;\r\n    if (codePointIndex \u003c 0 || codePointIndex \u003e= str.length) {\r\n        return NaN;\r\n    }\r\n    for (var i = 0; i \u003c codePointIndex; i++) {\r\n        codeUnitIndex = str.kmwNextChar(codeUnitIndex);\r\n        if (codeUnitIndex === null)\r\n            return NaN;\r\n    }\r\n    var first = str.charCodeAt(codeUnitIndex);\r\n    if (first \u003e= 0xD800 \u0026\u0026 first \u003c= 0xDBFF \u0026\u0026 str.length \u003e codeUnitIndex + 1) {\r\n        var second = str.charCodeAt(codeUnitIndex + 1);\r\n        if (second \u003e= 0xDC00 \u0026\u0026 second \u003c= 0xDFFF) {\r\n            return ((first - 0xD800) \u003c\u003c 10) + (second - 0xDC00) + 0x10000;\r\n        }\r\n    }\r\n    return first;\r\n};\r\n/**\r\n * Returns the code point index within the calling String object of the first occurrence\r\n * of the specified value, or -1 if not found.\r\n *\r\n * @param  {string}  searchValue    The value to search for\r\n * @param  {number}  [fromIndex]    Optional code point index to start searching from\r\n * @return {number}                 The code point index of the specified search value\r\n */\r\nString.prototype.kmwIndexOf = function (searchValue, fromIndex) {\r\n    var str = String(this);\r\n    var codeUnitIndex = str.indexOf(searchValue, fromIndex);\r\n    if (codeUnitIndex \u003c 0) {\r\n        return codeUnitIndex;\r\n    }\r\n    var codePointIndex = 0;\r\n    for (var i = 0; i !== null \u0026\u0026 i \u003c codeUnitIndex; i = str.kmwNextChar(i))\r\n        codePointIndex++;\r\n    return codePointIndex;\r\n};\r\n/**\r\n * Returns the code point index within the calling String object of the last occurrence\r\n * of the specified value, or -1 if not found.\r\n *\r\n * @param  {string}  searchValue    The value to search for\r\n * @param  {number}  fromIndex      Optional code point index to start searching from\r\n * @return {number}                 The code point index of the specified search value\r\n */\r\nString.prototype.kmwLastIndexOf = function (searchValue, fromIndex) {\r\n    var str = String(this);\r\n    var codeUnitIndex = str.lastIndexOf(searchValue, fromIndex);\r\n    if (codeUnitIndex \u003c 0) {\r\n        return codeUnitIndex;\r\n    }\r\n    var codePointIndex = 0;\r\n    for (var i = 0; i !== null \u0026\u0026 i \u003c codeUnitIndex; i = str.kmwNextChar(i))\r\n        codePointIndex++;\r\n    return codePointIndex;\r\n};\r\n/**\r\n * Returns the length of the string in code points, as opposed to code units.\r\n *\r\n * @return {number}                 The length of the string in code points\r\n */\r\nString.prototype.kmwLength = function () {\r\n    var str = String(this);\r\n    if (str.length == 0)\r\n        return 0;\r\n    for (var i = 0, codeUnitIndex = 0; codeUnitIndex !== null; i++)\r\n        codeUnitIndex = str.kmwNextChar(codeUnitIndex);\r\n    return i;\r\n};\r\n/**\r\n * Extracts a section of a string and returns a new string.\r\n *\r\n * @param  {number}  beginSlice    The start code point index in the string to\r\n *                                 extract from\r\n * @param  {number}  endSlice      Optional end code point index in the string\r\n *                                 to extract to\r\n * @return {string}                The substring as selected by beginSlice and\r\n *                                 endSlice\r\n */\r\nString.prototype.kmwSlice = function (beginSlice, endSlice) {\r\n    var str = String(this);\r\n    var beginSliceCodeUnit = str.kmwCodePointToCodeUnit(beginSlice);\r\n    var endSliceCodeUnit = str.kmwCodePointToCodeUnit(endSlice);\r\n    if (beginSliceCodeUnit === null || endSliceCodeUnit === null)\r\n        return \u0027\u0027;\r\n    else\r\n        return str.slice(beginSliceCodeUnit, endSliceCodeUnit);\r\n};\r\n/**\r\n * Returns the characters in a string beginning at the specified location through\r\n * the specified number of characters.\r\n *\r\n * @param  {number}  start         The start code point index in the string to\r\n *                                 extract from\r\n * @param  {number=}  length        Optional length to extract\r\n * @return {string}                The substring as selected by start and length\r\n */\r\nString.prototype.kmwSubstr = function (start, length) {\r\n    var str = String(this);\r\n    if (start \u003c 0) {\r\n        start = str.kmwLength() + start;\r\n    }\r\n    if (start \u003c 0)\r\n        start = 0;\r\n    var startCodeUnit = str.kmwCodePointToCodeUnit(start);\r\n    var endCodeUnit = startCodeUnit;\r\n    if (startCodeUnit === null)\r\n        return \u0027\u0027;\r\n    if (arguments.length \u003c 2) {\r\n        endCodeUnit = str.length;\r\n    }\r\n    else {\r\n        for (var i = 0; i \u003c length; i++)\r\n            endCodeUnit = str.kmwNextChar(endCodeUnit);\r\n    }\r\n    if (endCodeUnit === null)\r\n        return str.substring(startCodeUnit);\r\n    else\r\n        return str.substring(startCodeUnit, endCodeUnit);\r\n};\r\n/**\r\n * Returns the characters in a string between two indexes into the string.\r\n *\r\n * @param  {number}  indexA        The start code point index in the string to\r\n *                                 extract from\r\n * @param  {number}  indexB        The end code point index in the string to\r\n *                                 extract to\r\n * @return {string}                The substring as selected by indexA and indexB\r\n */\r\nString.prototype.kmwSubstring = function (indexA, indexB) {\r\n    var str = String(this), indexACodeUnit, indexBCodeUnit;\r\n    if (typeof (indexB) == \u0027undefined\u0027) {\r\n        indexACodeUnit = str.kmwCodePointToCodeUnit(indexA);\r\n        indexBCodeUnit = str.length;\r\n    }\r\n    else {\r\n        if (indexA \u003e indexB) {\r\n            var c = indexA;\r\n            indexA = indexB;\r\n            indexB = c;\r\n        }\r\n        indexACodeUnit = str.kmwCodePointToCodeUnit(indexA);\r\n        indexBCodeUnit = str.kmwCodePointToCodeUnit(indexB);\r\n    }\r\n    if (isNaN(indexACodeUnit) || indexACodeUnit === null)\r\n        indexACodeUnit = 0;\r\n    if (isNaN(indexBCodeUnit) || indexBCodeUnit === null)\r\n        indexBCodeUnit = str.length;\r\n    return str.substring(indexACodeUnit, indexBCodeUnit);\r\n};\r\n/*\r\n  Helper functions\r\n*/\r\n/**\r\n * Returns the code unit index for the next code point in the string, accounting for\r\n * supplementary pairs\r\n *\r\n * @param  {number|null}  codeUnitIndex  The code unit position to increment\r\n * @return {number|null}                 The index of the next code point in the string,\r\n *                                       in code units\r\n */\r\nString.prototype.kmwNextChar = function (codeUnitIndex) {\r\n    var str = String(this);\r\n    if (codeUnitIndex === null || codeUnitIndex \u003c 0 || codeUnitIndex \u003e= str.length - 1) {\r\n        return null;\r\n    }\r\n    var first = str.charCodeAt(codeUnitIndex);\r\n    if (first \u003e= 0xD800 \u0026\u0026 first \u003c= 0xDBFF \u0026\u0026 str.length \u003e codeUnitIndex + 1) {\r\n        var second = str.charCodeAt(codeUnitIndex + 1);\r\n        if (second \u003e= 0xDC00 \u0026\u0026 second \u003c= 0xDFFF) {\r\n            if (codeUnitIndex == str.length - 2) {\r\n                return null;\r\n            }\r\n            return codeUnitIndex + 2;\r\n        }\r\n    }\r\n    return codeUnitIndex + 1;\r\n};\r\n/**\r\n * Returns the code unit index for the previous code point in the string, accounting\r\n * for supplementary pairs\r\n *\r\n * @param  {number|null}  codeUnitIndex  The code unit position to decrement\r\n * @return {number|null}                 The index of the previous code point in the\r\n *                                       string, in code units\r\n*/\r\nString.prototype.kmwPrevChar = function (codeUnitIndex) {\r\n    var str = String(this);\r\n    if (codeUnitIndex == null || codeUnitIndex \u003c= 0 || codeUnitIndex \u003e str.length) {\r\n        return null;\r\n    }\r\n    var second = str.charCodeAt(codeUnitIndex - 1);\r\n    if (second \u003e= 0xDC00 \u0026\u0026 second \u003c= 0xDFFF \u0026\u0026 codeUnitIndex \u003e 1) {\r\n        var first = str.charCodeAt(codeUnitIndex - 2);\r\n        if (first \u003e= 0xD800 \u0026\u0026 first \u003c= 0xDBFF) {\r\n            return codeUnitIndex - 2;\r\n        }\r\n    }\r\n    return codeUnitIndex - 1;\r\n};\r\n/**\r\n * Returns the corresponding code unit index to the code point index passed\r\n *\r\n * @param  {number|null} codePointIndex  A code point index in the string\r\n * @return {number|null}                 The corresponding code unit index\r\n */\r\nString.prototype.kmwCodePointToCodeUnit = function (codePointIndex) {\r\n    if (codePointIndex === null)\r\n        return null;\r\n    var str = String(this);\r\n    var codeUnitIndex = 0;\r\n    if (codePointIndex \u003c 0) {\r\n        codeUnitIndex = str.length;\r\n        for (var i = 0; i \u003e codePointIndex; i--)\r\n            codeUnitIndex = str.kmwPrevChar(codeUnitIndex);\r\n        return codeUnitIndex;\r\n    }\r\n    if (codePointIndex == str.kmwLength())\r\n        return str.length;\r\n    for (var i = 0; i \u003c codePointIndex; i++)\r\n        codeUnitIndex = str.kmwNextChar(codeUnitIndex);\r\n    return codeUnitIndex;\r\n};\r\n/**\r\n * Returns the corresponding code point index to the code unit index passed\r\n *\r\n * @param  {number|null}  codeUnitIndex  A code unit index in the string\r\n * @return {number|null}                 The corresponding code point index\r\n */\r\nString.prototype.kmwCodeUnitToCodePoint = function (codeUnitIndex) {\r\n    var str = String(this);\r\n    if (codeUnitIndex === null)\r\n        return null;\r\n    else if (codeUnitIndex == 0)\r\n        return 0;\r\n    else if (codeUnitIndex \u003c 0)\r\n        return str.substr(codeUnitIndex).kmwLength();\r\n    else\r\n        return str.substr(0, codeUnitIndex).kmwLength();\r\n};\r\n/**\r\n * Returns the character at a the code point index passed\r\n *\r\n * @param  {number}  codePointIndex  A code point index in the string\r\n * @return {string}                  The corresponding character\r\n */\r\nString.prototype.kmwCharAt = function (codePointIndex) {\r\n    var str = String(this);\r\n    if (codePointIndex \u003e= 0)\r\n        return str.kmwSubstr(codePointIndex, 1);\r\n    else\r\n        return \u0027\u0027;\r\n};\r\n/**\r\n * String prototype library extensions for basic plane characters,\r\n * to simplify enabling or disabling supplementary plane functionality (I3319)\r\n */\r\n/**\r\n * Returns the code unit index for the next code point in the string\r\n *\r\n * @param  {number}  codeUnitIndex    A code point index in the string\r\n * @return {number|null}                   The corresponding character\r\n */\r\nString.prototype.kmwBMPNextChar = function (codeUnitIndex) {\r\n    var str = String(this);\r\n    if (codeUnitIndex \u003c 0 || codeUnitIndex \u003e= str.length - 1) {\r\n        return null;\r\n    }\r\n    return codeUnitIndex + 1;\r\n};\r\n/**\r\n * Returns the code unit index for the previous code point in the string\r\n *\r\n * @param  {number}  codeUnitIndex    A code unit index in the string\r\n * @return {number|null}                   The corresponding character\r\n */\r\nString.prototype.kmwBMPPrevChar = function (codeUnitIndex) {\r\n    var str = String(this);\r\n    if (codeUnitIndex \u003c= 0 || codeUnitIndex \u003e str.length) {\r\n        return null;\r\n    }\r\n    return codeUnitIndex - 1;\r\n};\r\n/**\r\n * Returns the code unit index for a code point index\r\n *\r\n * @param  {number}  codePointIndex   A code point index in the string\r\n * @return {number}                   The corresponding character\r\n */\r\nString.prototype.kmwBMPCodePointToCodeUnit = function (codePointIndex) {\r\n    return codePointIndex;\r\n};\r\n/**\r\n * Returns the code point index for a code unit index\r\n *\r\n * @param  {number}  codeUnitIndex    A code point index in the string\r\n * @return {number}                   The corresponding character\r\n */\r\nString.prototype.kmwBMPCodeUnitToCodePoint = function (codeUnitIndex) {\r\n    return codeUnitIndex;\r\n};\r\n/**\r\n * Returns the length of a BMP string\r\n *\r\n * @return {number}                   The length in code points\r\n */\r\nString.prototype.kmwBMPLength = function () {\r\n    var str = String(this);\r\n    return str.length;\r\n};\r\n/**\r\n * Returns a substring\r\n *\r\n * @param  {number}  n\r\n * @param  {number=}  ln\r\n * @return {string}\r\n */\r\nString.prototype.kmwBMPSubstr = function (n, ln) {\r\n    var str = String(this);\r\n    if (n \u003e -1)\r\n        return str.substr(n, ln);\r\n    else\r\n        return str.substr(str.length + n, -n);\r\n};\r\n/**\r\n * Enable or disable supplementary plane string handling\r\n *\r\n * @param  {boolean}  bEnable\r\n */\r\nString.kmwEnableSupplementaryPlane = function (bEnable) {\r\n    var p = String.prototype;\r\n    String._kmwFromCharCode = bEnable ? String.kmwFromCharCode : String.fromCharCode;\r\n    p._kmwCharAt = bEnable ? p.kmwCharAt : p.charAt;\r\n    p._kmwCharCodeAt = bEnable ? p.kmwCharCodeAt : p.charCodeAt;\r\n    p._kmwIndexOf = bEnable ? p.kmwIndexOf : p.indexOf;\r\n    p._kmwLastIndexOf = bEnable ? p.kmwLastIndexOf : p.lastIndexOf;\r\n    p._kmwSlice = bEnable ? p.kmwSlice : p.slice;\r\n    p._kmwSubstring = bEnable ? p.kmwSubstring : p.substring;\r\n    p._kmwSubstr = bEnable ? p.kmwSubstr : p.kmwBMPSubstr;\r\n    p._kmwLength = bEnable ? p.kmwLength : p.kmwBMPLength;\r\n    p._kmwNextChar = bEnable ? p.kmwNextChar : p.kmwBMPNextChar;\r\n    p._kmwPrevChar = bEnable ? p.kmwPrevChar : p.kmwBMPPrevChar;\r\n    p._kmwCodePointToCodeUnit = bEnable ? p.kmwCodePointToCodeUnit : p.kmwBMPCodePointToCodeUnit;\r\n    p._kmwCodeUnitToCodePoint = bEnable ? p.kmwCodeUnitToCodePoint : p.kmwBMPCodeUnitToCodePoint;\r\n};\r\n// References all utility includes from a single file, making import/export simple.\r\n///\u003creference path=\"deepCopy.ts\" /\u003e\r\n///\u003creference path=\"globalObject.ts\" /\u003e\r\n///\u003creference path=\"version.ts\" /\u003e\r\n///\u003creference path=\"kmwstring.ts\" /\u003e\r\n///\u003creference path=\"deviceSpec.ts\" /\u003e\r\nvar models;\r\n(function (models) {\r\n    models.SENTINEL_CODE_UNIT = \u0027\\uFDD0\u0027;\r\n    function applyTransform(transform, context) {\r\n        // First, get the current context\r\n        var fullLeftContext = context.left || \u0027\u0027;\r\n        var lLen = fullLeftContext.kmwLength();\r\n        var lDel = lLen \u003c transform.deleteLeft ? lLen : transform.deleteLeft;\r\n        var leftContext = fullLeftContext.kmwSubstr(0, lLen - lDel) + (transform.insert || \u0027\u0027);\r\n        var fullRightContext = context.right || \u0027\u0027;\r\n        var rLen = fullRightContext.kmwLength();\r\n        var rDel = rLen \u003c transform.deleteRight ? rLen : transform.deleteRight;\r\n        var rightContext = fullRightContext.kmwSubstr(rDel);\r\n        return {\r\n            left: leftContext,\r\n            right: rightContext,\r\n            startOfBuffer: context.startOfBuffer,\r\n            endOfBuffer: context.endOfBuffer,\r\n            casingForm: context.casingForm\r\n        };\r\n    }\r\n    models.applyTransform = applyTransform;\r\n    /**\r\n     * Merges two Transforms as if they were applied to a `Context` successively.\r\n     * @param first\r\n     * @param second\r\n     */\r\n    function buildMergedTransform(first, second) {\r\n        // These exist to avoid parameter mutation.\r\n        var mergedFirstInsert = first.insert;\r\n        var mergedSecondDelete = second.deleteLeft;\r\n        // The \u0027fun\u0027 case:  the second Transform wants to delete something from the first.\r\n        if (second.deleteLeft) {\r\n            var firstLength = first.insert.kmwLength();\r\n            if (firstLength \u003c= second.deleteLeft) {\r\n                mergedFirstInsert = \u0027\u0027;\r\n                mergedSecondDelete = second.deleteLeft - firstLength;\r\n            }\r\n            else {\r\n                mergedFirstInsert = first.insert.kmwSubstr(0, firstLength - second.deleteLeft);\r\n                mergedSecondDelete = 0;\r\n            }\r\n        }\r\n        return {\r\n            insert: mergedFirstInsert + second.insert,\r\n            deleteLeft: first.deleteLeft + mergedSecondDelete,\r\n            // As `first` would affect the context before `second` could take effect,\r\n            // this is the correct way to merge `deleteRight`.\r\n            deleteRight: (first.deleteRight || 0) + (second.deleteRight || 0)\r\n        };\r\n    }\r\n    models.buildMergedTransform = buildMergedTransform;\r\n    function isHighSurrogate(codeUnit) {\r\n        if (typeof codeUnit == \u0027string\u0027) {\r\n            codeUnit = codeUnit.charCodeAt(0);\r\n        }\r\n        return codeUnit \u003e= 0xD800 \u0026\u0026 codeUnit \u003c= 0xDBFF;\r\n    }\r\n    models.isHighSurrogate = isHighSurrogate;\r\n    function isLowSurrogate(codeUnit) {\r\n        if (typeof codeUnit == \u0027string\u0027) {\r\n            codeUnit = codeUnit.charCodeAt(0);\r\n        }\r\n        return codeUnit \u003e= 0xDC00 \u0026\u0026 codeUnit \u003c= 0xDFFF;\r\n    }\r\n    models.isLowSurrogate = isLowSurrogate;\r\n    function isSentinel(char) {\r\n        return char == models.SENTINEL_CODE_UNIT;\r\n    }\r\n    models.isSentinel = isSentinel;\r\n    function transformToSuggestion(transform, p) {\r\n        var suggestion = {\r\n            transform: transform,\r\n            transformId: transform.id,\r\n            displayAs: transform.insert\r\n        };\r\n        if (p === 0 || p) {\r\n            suggestion.p = p;\r\n        }\r\n        return suggestion;\r\n    }\r\n    models.transformToSuggestion = transformToSuggestion;\r\n    function defaultApplyCasing(casing, text) {\r\n        switch (casing) {\r\n            case \u0027lower\u0027:\r\n                return text.toLowerCase();\r\n            case \u0027upper\u0027:\r\n                return text.toUpperCase();\r\n            case \u0027initial\u0027:\r\n                // The length of the first code unit, as measured in code points.\r\n                var headUnitLength = 1;\r\n                // Is the first character a high surrogate, indicating possible use of UTF-16\r\n                // surrogate pairs?  Also, is the string long enough for there to BE a pair?\r\n                if (text.length \u003e 1 \u0026\u0026 isHighSurrogate(text.charAt(0))) {\r\n                    // It\u0027s possible, so now we check for low surrogates.\r\n                    if (isLowSurrogate(text.charCodeAt(1))) {\r\n                        // We have a surrogate pair; this pair is the \u0027first\u0027 character.\r\n                        headUnitLength = 2;\r\n                    }\r\n                }\r\n                // Capitalizes the first code unit of the string, leaving the rest intact.\r\n                return text.substring(0, headUnitLength).toUpperCase().concat(text.substring(headUnitLength));\r\n        }\r\n    }\r\n    models.defaultApplyCasing = defaultApplyCasing;\r\n})(models || (models = {}));\r\n/**\r\n * @file priority-queue.ts\r\n *\r\n * Defines a mildly abstracted priority queue implementation.\r\n */\r\nvar models;\r\n(function (models) {\r\n    var PriorityQueue = /** @class */ (function () {\r\n        /**\r\n         * Constructs an empty priority queue.\r\n         * @param comparator A `Comparator` returning negative values when and only when\r\n         * the first parameter should precede the second parameter.\r\n         */\r\n        function PriorityQueue(comparator, initialEntries) {\r\n            if (initialEntries === void 0) { initialEntries = []; }\r\n            // TODO: We may wish to allow options specifying a limit or threshold for adding\r\n            // items to the priority queue.  Possibly both.\r\n            //\r\n            // When that time comes, consider a min-max heap.\r\n            // https://en.wikipedia.org/wiki/Min-max_heap\r\n            this.comparator = comparator;\r\n            this.heap = Array.from(initialEntries);\r\n            this.heapify();\r\n        }\r\n        PriorityQueue.leftChildIndex = function (index) {\r\n            return index * 2 + 1;\r\n        };\r\n        PriorityQueue.rightChildIndex = function (index) {\r\n            return index * 2 + 2;\r\n        };\r\n        PriorityQueue.parentIndex = function (index) {\r\n            return Math.floor((index - 1) / 2);\r\n        };\r\n        PriorityQueue.prototype.heapify = function (start, end) {\r\n            if (start == undefined || end == undefined) {\r\n                this.heapify(0, this.count - 1);\r\n            }\r\n            // Use of \u0027indices\u0027 here is a bit of a customization.\r\n            // At the cost of (temporary) extra storage space, we can more efficiently enqueue\r\n            // multiple elements simultaneously.\r\n            var queuedIndices = [];\r\n            var lastParent = -1;\r\n            for (var i = end; i \u003e= start; i--) {\r\n                var parent = PriorityQueue.parentIndex(i);\r\n                if (this.siftDown(i) \u0026\u0026 parent \u003c start \u0026\u0026 lastParent != parent) {\r\n                    // We only need to queue examination for a heap node if its children have changed\r\n                    // and it isn\u0027t already being examined.\r\n                    queuedIndices.push(parent);\r\n                    lastParent = parent;\r\n                }\r\n            }\r\n            lastParent = -1;\r\n            while (queuedIndices.length \u003e 0) {\r\n                var index = queuedIndices.shift();\r\n                var parent = PriorityQueue.parentIndex(index);\r\n                if (this.siftDown(index) \u0026\u0026 parent \u003e= 0 \u0026\u0026 lastParent != parent) {\r\n                    // We only need to queue examination for a heap node if its children have changed.\r\n                    queuedIndices.push(parent);\r\n                    lastParent = parent;\r\n                }\r\n            }\r\n        };\r\n        Object.defineProperty(PriorityQueue.prototype, \"count\", {\r\n            /**\r\n             * Returns the number of elements currently held by the priority queue.\r\n             */\r\n            get: function () {\r\n                return this.heap.length;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * Returns the highest-priority item within the priority queue.\r\n         * \u003cp\u003e\r\n         * Is O(1).\r\n         */\r\n        PriorityQueue.prototype.peek = function () {\r\n            return this.heap[0]; // undefined if it doesn\u0027t exist... which is completely correct.\r\n        };\r\n        /**\r\n         * Inserts a new element into the priority queue, placing it in order.\r\n         * \u003cp\u003e\r\n         * Is O(log N), where N = # of items in the priority queue.\r\n         * @param element\r\n         */\r\n        PriorityQueue.prototype.enqueue = function (element) {\r\n            var index = this.heap.length;\r\n            this.heap.push(element);\r\n            var parent = PriorityQueue.parentIndex;\r\n            var parentIndex = parent(index);\r\n            while (index !== 0 \u0026\u0026 this.comparator(this.heap[index], this.heap[parentIndex]) \u003c 0) {\r\n                var a = this.heap[index];\r\n                this.heap[index] = this.heap[parentIndex];\r\n                this.heap[parentIndex] = a;\r\n                index = parentIndex;\r\n                parentIndex = parent(index);\r\n            }\r\n        };\r\n        /**\r\n         * Efficiently batch-enqueues multiple elements.\r\n         * Worst-case is the _better_ of the following:\r\n         * - O(`elements.count` + `heap.count`) - large element counts will trigger in-place\r\n         * heap reconstruction.\r\n         * - O(`elements.count` * log(`heap.count`)) - logarithmic when elements.count \u003c\u003c heap.count\r\n         * @param elements A group of elements to enqueue simultaneously.\r\n         */\r\n        PriorityQueue.prototype.enqueueAll = function (elements) {\r\n            if (elements.length == 0) {\r\n                return;\r\n            }\r\n            var firstIndex = this.count;\r\n            this.heap = this.heap.concat(elements);\r\n            var firstParent = PriorityQueue.parentIndex(firstIndex);\r\n            // The \u0027parent\u0027 of index 0 will return -1, which is illegal.\r\n            this.heapify(firstParent \u003e= 0 ? firstParent : 0, PriorityQueue.parentIndex(this.count - 1));\r\n        };\r\n        /**\r\n         * Removes the highest-priority element from the queue, returning it.\r\n         * \u003cp\u003e\r\n         * Is O(log N), where N = number of items in the priority queue.\r\n         */\r\n        PriorityQueue.prototype.dequeue = function () {\r\n            if (this.count == 0) {\r\n                return undefined;\r\n            }\r\n            var root = this.heap[0];\r\n            var tail = this.heap.pop();\r\n            if (this.heap.length \u003e 0) {\r\n                this.heap[0] = tail;\r\n                this.siftDown(0);\r\n            }\r\n            return root;\r\n        };\r\n        /**\r\n         * Compares the entry at the specified index against its children,\r\n         * propagating it downward within the heap until heap requirements are specified.\r\n         * \u003cp\u003e\r\n         * Is O(log N), where N = number of items in the priority queue.\r\n         *\r\n         * @param index The index of the top-most node that must be examined\r\n         * for repositioning.\r\n         * @returns `true` if a swap occurred, `false` otherwise.\r\n         */\r\n        PriorityQueue.prototype.siftDown = function (index) {\r\n            var leftIndex = PriorityQueue.leftChildIndex(index);\r\n            var rightIndex = PriorityQueue.rightChildIndex(index);\r\n            var topMostIndex = index;\r\n            if (leftIndex \u003c this.heap.length \u0026\u0026 this.comparator(this.heap[leftIndex], this.heap[topMostIndex]) \u003c 0) {\r\n                topMostIndex = leftIndex;\r\n            }\r\n            if (rightIndex \u003c this.heap.length \u0026\u0026 this.comparator(this.heap[rightIndex], this.heap[topMostIndex]) \u003c 0) {\r\n                topMostIndex = rightIndex;\r\n            }\r\n            if (topMostIndex != index) {\r\n                var a = this.heap[index];\r\n                this.heap[index] = this.heap[topMostIndex];\r\n                this.heap[topMostIndex] = a;\r\n                this.siftDown(topMostIndex);\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        };\r\n        /**\r\n         * Returns an array containing all entries of the priority queue.\r\n         * Altering the returned array will not affect the queue, but mutating\r\n         * the array\u0027s elements can cause unintended side effects.\r\n         *\r\n         * This function makes no guarantees on the ordering of the returned elements;\r\n         * they will almost certainly be unsorted.\r\n         */\r\n        PriorityQueue.prototype.toArray = function () {\r\n            return Array.from(this.heap);\r\n        };\r\n        return PriorityQueue;\r\n    }());\r\n    models.PriorityQueue = PriorityQueue;\r\n})(models || (models = {}));\r\n// While we _could_ define this within @keymanapp/models-wordbreakers instead, it\u0027s probably\r\n// better to leave that package as _just_ the wordbreakers.  \r\nvar models;\r\n(function (models) {\r\n    function tokenize(wordBreaker, context) {\r\n        context = context || {\r\n            left: undefined,\r\n            startOfBuffer: undefined,\r\n            endOfBuffer: undefined\r\n        };\r\n        var leftSpans = wordBreaker(context.left || \u0027\u0027) || [];\r\n        var rightSpans = wordBreaker(context.right || \u0027\u0027) || [];\r\n        var leftTail;\r\n        if (leftSpans.length \u003e 0) {\r\n            leftTail = leftSpans[leftSpans.length - 1];\r\n        }\r\n        // Handle any desired special handling for directly-pre-caret scenarios - where for this \r\n        // _specific_ context, we should not make a token division where one normally would exist otherwise.\r\n        //\r\n        // One notable example:  word-final apostrophe is tokenized separate from preceding text, but\r\n        // word-internal apostrophe is treated as part of the same word (i.e, English contractions).\r\n        // But, if the user is editing text and the caret is directly after a caret, there\u0027s a notable\r\n        // chance they may in the middle of typing a contraction. Refer to \r\n        // https://github.com/keymanapp/keyman/issues/6572.\r\n        if (leftSpans.length \u003e 1) {\r\n            var leftTailBase = leftSpans[leftSpans.length - 2];\r\n            // If the final two pre-caret spans are adjacent - without intervening whitespace...\r\n            if (leftTailBase.end == leftTail.start) {\r\n                // Ideal:  if(leftTailBase is standard-char-class \u0026\u0026 leftTail is single-quote-class)\r\n                // But we don\u0027t have character class access here; it\u0027s all wordbreaker-function internal.\r\n                // Upon inspection of the wordbreaker data definitions... the single-quote-class is ONLY \"\u0027\".\r\n                // So... we\u0027ll just be lazy for now and append the `\u0027`.\r\n                if (leftTail.text == \"\u0027\") {\r\n                    var mergedSpan = {\r\n                        text: leftTailBase.text + leftTail.text,\r\n                        start: leftTailBase.start,\r\n                        end: leftTail.end,\r\n                        length: leftTailBase.length + leftTail.length\r\n                    };\r\n                    leftSpans.pop(); // leftTail\r\n                    leftSpans.pop(); // leftTailBase\r\n                    leftSpans.push(mergedSpan);\r\n                    leftTail = mergedSpan; // don\u0027t forget to update the `leftTail` Span!\r\n                }\r\n            }\r\n        }\r\n        // With any \u0027detokenization\u0027 cases already handled, we may now begin to build the return object.\r\n        var tokenization = {\r\n            left: leftSpans.map(function (span) { return span.text; }),\r\n            right: rightSpans.map(function (span) { return span.text; }),\r\n            // A default initialization of the value.\r\n            caretSplitsToken: false\r\n        };\r\n        // Now the hard part - determining whether or not the caret caused a token split.\r\n        if (leftSpans.length \u003e 0 \u0026\u0026 rightSpans.length \u003e 0) {\r\n            var rightHead = rightSpans[0];\r\n            // If tokenization includes all characters on each side of the caret,\r\n            // we have a good candidate for a caret-splitting scenario.\r\n            var leftSuffixWordbreak = leftTail.end != context.left.length;\r\n            var rightPrefixWordbreak = rightHead.start != 0;\r\n            if (leftSuffixWordbreak || rightPrefixWordbreak) {\r\n                // Bypass the final test, as we already know the caret didn\u0027t split a token.\r\n                // (The tokenization process already removed characters between the two.)\r\n                return tokenization;\r\n            }\r\n            // Worth note - some languages don\u0027t use wordbreaking characters.  So, a final check:\r\n            //\r\n            // Does the wordbreaker split a merge of the \u0027two center\u0027 tokens?\r\n            // If not, then the caret is responsible for the split.\r\n            if (wordBreaker(leftTail.text + rightHead.text).length == 1) {\r\n                tokenization.caretSplitsToken = true;\r\n            }\r\n        }\r\n        return tokenization;\r\n    }\r\n    models.tokenize = tokenize;\r\n    /**\r\n     * Get the last word of the phrase before the caret or nothing.\r\n     * @param fullLeftContext the entire left context of the string.\r\n     */\r\n    function getLastPreCaretToken(wordBreaker, context) {\r\n        var tokenization = tokenize(wordBreaker, context);\r\n        if (tokenization.left.length \u003e 0) {\r\n            return tokenization.left.pop();\r\n        }\r\n        return \u0027\u0027;\r\n    }\r\n    models.getLastPreCaretToken = getLastPreCaretToken;\r\n    // While it is currently identical to getLastWord, this may change in the future.\r\n    // It\u0027s best not to write ourselves into a corner on this one, as disambiguating later\r\n    // would likely be pretty painful.\r\n    function wordbreak(wordBreaker, context) {\r\n        return getLastPreCaretToken(wordBreaker, context);\r\n    }\r\n    models.wordbreak = wordbreak;\r\n})(models || (models = {}));\r\n/*\r\n * Copyright (c) 2019 National Research Council Canada (author: Eddie A. Santos)\r\n * Copyright (c) 2019 SIL International\r\n * Copyright (c) 2015–2017 Conrad Irwin\r\n * Copyright (c) 2011–2015 Marc Campbell\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nvar __generator = (this \u0026\u0026 this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] \u0026 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" \u0026\u0026 (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y \u0026\u0026 (t = op[0] \u0026 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) \u0026\u0026 t.call(y), 0) : y.next) \u0026\u0026 !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] \u0026 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length \u003e 0 \u0026\u0026 t[t.length - 1]) \u0026\u0026 (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 \u0026\u0026 (!t || (op[1] \u003e t[0] \u0026\u0026 op[1] \u003c t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 \u0026\u0026 _.label \u003c t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t \u0026\u0026 _.label \u003c t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] \u0026 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\n// Worth noting:  we\u0027re starting to get quite a \u0027library\u0027 of common model/LMLayer functionality.\r\n// Should probably make a \u0027lm-utils\u0027 submodule.\r\n/// \u003creference path=\"common.ts\" /\u003e\r\n/// \u003creference path=\"priority-queue.ts\" /\u003e\r\n/// \u003creference path=\"tokenization.ts\" /\u003e\r\n/// \u003creference types=\"@keymanapp/models-types\" /\u003e\r\n/**\r\n * @file trie-model.ts\r\n *\r\n * Defines a simple word list (unigram) model.\r\n */\r\nvar models;\r\n(function (models) {\r\n    /** Upper bound on the amount of suggestions to generate. */\r\n    var MAX_SUGGESTIONS = 12;\r\n    /**\r\n     * @class TrieModel\r\n     *\r\n     * Defines a trie-backed word list model, or the unigram model.\r\n     * Unigram models throw away all preceding words, and search\r\n     * for the next word exclusively. As such, they can perform simple\r\n     * prefix searches within words, however they are not very good\r\n     * at predicting the next word.\r\n     */\r\n    var TrieModel = /** @class */ (function () {\r\n        function TrieModel(trieData, options) {\r\n            if (options === void 0) { options = {}; }\r\n            this.languageUsesCasing = options.languageUsesCasing;\r\n            this.applyCasing = options.applyCasing;\r\n            this._trie = new Trie(trieData[\u0027root\u0027], trieData[\u0027totalWeight\u0027], options.searchTermToKey || defaultSearchTermToKey);\r\n            this.breakWords = options.wordBreaker || getDefaultWordBreaker();\r\n            this.punctuation = options.punctuation;\r\n        }\r\n        TrieModel.prototype.configure = function (capabilities) {\r\n            return this.configuration = {\r\n                leftContextCodePoints: capabilities.maxLeftContextCodePoints,\r\n                rightContextCodePoints: capabilities.maxRightContextCodePoints\r\n            };\r\n        };\r\n        TrieModel.prototype.toKey = function (text) {\r\n            return this._trie.toKey(text);\r\n        };\r\n        TrieModel.prototype.predict = function (transform, context) {\r\n            // Special-case the empty buffer/transform: return the top suggestions.\r\n            if (!transform.insert \u0026\u0026 !context.left \u0026\u0026 !context.right \u0026\u0026 context.startOfBuffer \u0026\u0026 context.endOfBuffer) {\r\n                return makeDistribution(this._trie.firstN(MAX_SUGGESTIONS).map(function (_a) {\r\n                    var text = _a.text, p = _a.p;\r\n                    return ({\r\n                        transform: {\r\n                            insert: text,\r\n                            deleteLeft: 0\r\n                        },\r\n                        displayAs: text,\r\n                        p: p\r\n                    });\r\n                }));\r\n            }\r\n            // Compute the results of the keystroke:\r\n            var newContext = models.applyTransform(transform, context);\r\n            // Computes the different in word length after applying the transform above.\r\n            var leftDelOffset = transform.deleteLeft - transform.insert.kmwLength();\r\n            // All text to the left of the cursor INCLUDING anything that has\r\n            // just been typed.\r\n            var prefix = models.getLastPreCaretToken(this.breakWords, newContext);\r\n            // Return suggestions from the trie.\r\n            return makeDistribution(this._trie.lookup(prefix).map(function (_a) {\r\n                var text = _a.text, p = _a.p;\r\n                return models.transformToSuggestion({\r\n                    insert: text,\r\n                    // Delete whatever the prefix that the user wrote.\r\n                    deleteLeft: leftDelOffset + prefix.kmwLength()\r\n                    // Note: a separate capitalization/orthography engine can take this\r\n                    // result and transform it as needed.\r\n                }, p);\r\n            }));\r\n            /* Helper */\r\n            function makeDistribution(suggestions) {\r\n                var distribution = [];\r\n                for (var _i = 0, suggestions_1 = suggestions; _i \u003c suggestions_1.length; _i++) {\r\n                    var s = suggestions_1[_i];\r\n                    distribution.push({ sample: s, p: s.p });\r\n                }\r\n                return distribution;\r\n            }\r\n        };\r\n        Object.defineProperty(TrieModel.prototype, \"wordbreaker\", {\r\n            get: function () {\r\n                return this.breakWords;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        TrieModel.prototype.traverseFromRoot = function () {\r\n            return new TrieModel.Traversal(this._trie[\u0027root\u0027], \u0027\u0027);\r\n        };\r\n        TrieModel.Traversal = /** @class */ (function () {\r\n            function class_1(root, prefix) {\r\n                this.root = root;\r\n                this.prefix = prefix;\r\n            }\r\n            class_1.prototype.children = function () {\r\n                var root, _loop_1, this_1, _i, _a, entry, prefix_1, children, _loop_2, _b, children_1, key;\r\n                return __generator(this, function (_c) {\r\n                    switch (_c.label) {\r\n                        case 0:\r\n                            root = this.root;\r\n                            if (!(root.type == \u0027internal\u0027)) return [3 /*break*/, 5];\r\n                            _loop_1 = function (entry) {\r\n                                var entryNode, internalNode_1, _loop_3, _d, _e, lowSurrogate, fullText, prefix_2, prefix_3;\r\n                                return __generator(this, function (_f) {\r\n                                    switch (_f.label) {\r\n                                        case 0:\r\n                                            entryNode = root.children[entry];\r\n                                            if (!models.isHighSurrogate(entry)) return [3 /*break*/, 8];\r\n                                            if (!(entryNode.type == \u0027internal\u0027)) return [3 /*break*/, 5];\r\n                                            internalNode_1 = entryNode;\r\n                                            _loop_3 = function (lowSurrogate) {\r\n                                                var prefix;\r\n                                                return __generator(this, function (_g) {\r\n                                                    switch (_g.label) {\r\n                                                        case 0:\r\n                                                            prefix = this_1.prefix + entry + lowSurrogate;\r\n                                                            return [4 /*yield*/, {\r\n                                                                    char: entry + lowSurrogate,\r\n                                                                    traversal: function () { return new TrieModel.Traversal(internalNode_1.children[lowSurrogate], prefix); }\r\n                                                                }];\r\n                                                        case 1:\r\n                                                            _g.sent();\r\n                                                            return [2 /*return*/];\r\n                                                    }\r\n                                                });\r\n                                            };\r\n                                            _d = 0, _e = internalNode_1.values;\r\n                                            _f.label = 1;\r\n                                        case 1:\r\n                                            if (!(_d \u003c _e.length)) return [3 /*break*/, 4];\r\n                                            lowSurrogate = _e[_d];\r\n                                            return [5 /*yield**/, _loop_3(lowSurrogate)];\r\n                                        case 2:\r\n                                            _f.sent();\r\n                                            _f.label = 3;\r\n                                        case 3:\r\n                                            _d++;\r\n                                            return [3 /*break*/, 1];\r\n                                        case 4: return [3 /*break*/, 7];\r\n                                        case 5:\r\n                                            fullText = entryNode.entries[0].key;\r\n                                            entry = entry + fullText[this_1.prefix.length + 1]; // The other half of the non-BMP char.\r\n                                            prefix_2 = this_1.prefix + entry;\r\n                                            return [4 /*yield*/, {\r\n                                                    char: entry,\r\n                                                    traversal: function () { return new TrieModel.Traversal(entryNode, prefix_2); }\r\n                                                }];\r\n                                        case 6:\r\n                                            _f.sent();\r\n                                            _f.label = 7;\r\n                                        case 7: return [3 /*break*/, 12];\r\n                                        case 8:\r\n                                            if (!models.isSentinel(entry)) return [3 /*break*/, 9];\r\n                                            return [2 /*return*/, \"continue\"];\r\n                                        case 9:\r\n                                            if (!!entry) return [3 /*break*/, 10];\r\n                                            return [2 /*return*/, \"continue\"];\r\n                                        case 10:\r\n                                            prefix_3 = this_1.prefix + entry;\r\n                                            return [4 /*yield*/, {\r\n                                                    char: entry,\r\n                                                    traversal: function () { return new TrieModel.Traversal(entryNode, prefix_3); }\r\n                                                }];\r\n                                        case 11:\r\n                                            _f.sent();\r\n                                            _f.label = 12;\r\n                                        case 12: return [2 /*return*/];\r\n                                    }\r\n                                });\r\n                            };\r\n                            this_1 = this;\r\n                            _i = 0, _a = root.values;\r\n                            _c.label = 1;\r\n                        case 1:\r\n                            if (!(_i \u003c _a.length)) return [3 /*break*/, 4];\r\n                            entry = _a[_i];\r\n                            return [5 /*yield**/, _loop_1(entry)];\r\n                        case 2:\r\n                            _c.sent();\r\n                            _c.label = 3;\r\n                        case 3:\r\n                            _i++;\r\n                            return [3 /*break*/, 1];\r\n                        case 4: return [2 /*return*/];\r\n                        case 5:\r\n                            prefix_1 = this.prefix;\r\n                            children = root.entries.filter(function (entry) {\r\n                                return entry.key != prefix_1 \u0026\u0026 prefix_1.length \u003c entry.key.length;\r\n                            });\r\n                            _loop_2 = function (key) {\r\n                                var nodeKey;\r\n                                return __generator(this, function (_h) {\r\n                                    switch (_h.label) {\r\n                                        case 0:\r\n                                            nodeKey = key[prefix_1.length];\r\n                                            if (models.isHighSurrogate(nodeKey)) {\r\n                                                // Merge the other half of an SMP char in!\r\n                                                nodeKey = nodeKey + key[prefix_1.length + 1];\r\n                                            }\r\n                                            return [4 /*yield*/, {\r\n                                                    char: nodeKey,\r\n                                                    traversal: function () { return new TrieModel.Traversal(root, prefix_1 + nodeKey); }\r\n                                                }];\r\n                                        case 1:\r\n                                            _h.sent();\r\n                                            return [2 /*return*/];\r\n                                    }\r\n                                });\r\n                            };\r\n                            _b = 0, children_1 = children;\r\n                            _c.label = 6;\r\n                        case 6:\r\n                            if (!(_b \u003c children_1.length)) return [3 /*break*/, 9];\r\n                            key = children_1[_b].key;\r\n                            return [5 /*yield**/, _loop_2(key)];\r\n                        case 7:\r\n                            _c.sent();\r\n                            _c.label = 8;\r\n                        case 8:\r\n                            _b++;\r\n                            return [3 /*break*/, 6];\r\n                        case 9:\r\n                            ;\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            };\r\n            Object.defineProperty(class_1.prototype, \"entries\", {\r\n                get: function () {\r\n                    if (this.root.type == \u0027leaf\u0027) {\r\n                        var prefix_4 = this.prefix;\r\n                        var matches = this.root.entries.filter(function (entry) {\r\n                            return entry.key == prefix_4;\r\n                        });\r\n                        return matches.map(function (value) { return value.content; });\r\n                    }\r\n                    else {\r\n                        var matchingLeaf = this.root.children[models.SENTINEL_CODE_UNIT];\r\n                        if (matchingLeaf \u0026\u0026 matchingLeaf.type == \u0027leaf\u0027) {\r\n                            return matchingLeaf.entries.map(function (value) { return value.content; });\r\n                        }\r\n                        else {\r\n                            return [];\r\n                        }\r\n                    }\r\n                },\r\n                enumerable: false,\r\n                configurable: true\r\n            });\r\n            return class_1;\r\n        }());\r\n        return TrieModel;\r\n    }());\r\n    models.TrieModel = TrieModel;\r\n    ;\r\n    /**\r\n     * Wrapper class for the trie and its nodes.\r\n     */\r\n    var Trie = /** @class */ (function () {\r\n        function Trie(root, totalWeight, wordform2key) {\r\n            this.root = root;\r\n            this.toKey = wordform2key;\r\n            this.totalWeight = totalWeight;\r\n        }\r\n        /**\r\n         * Lookups an arbitrary prefix (a query) in the trie. Returns the top 3\r\n         * results in sorted order.\r\n         *\r\n         * @param prefix\r\n         */\r\n        Trie.prototype.lookup = function (prefix) {\r\n            var searchKey = this.toKey(prefix);\r\n            var lowestCommonNode = findPrefix(this.root, searchKey);\r\n            if (lowestCommonNode === null) {\r\n                return [];\r\n            }\r\n            return getSortedResults(lowestCommonNode, searchKey, this.totalWeight);\r\n        };\r\n        /**\r\n         * Returns the top N suggestions from the trie.\r\n         * @param n How many suggestions, maximum, to return.\r\n         */\r\n        Trie.prototype.firstN = function (n) {\r\n            return getSortedResults(this.root, \u0027\u0027, this.totalWeight, n);\r\n        };\r\n        return Trie;\r\n    }());\r\n    /**\r\n     * Finds the deepest descendent in the trie with the given prefix key.\r\n     *\r\n     * This means that a search in the trie for a given prefix has a best-case\r\n     * complexity of O(m) where m is the length of the prefix.\r\n     *\r\n     * @param key The prefix to search for.\r\n     * @param index The index in the prefix. Initially 0.\r\n     */\r\n    function findPrefix(node, key, index) {\r\n        if (index === void 0) { index = 0; }\r\n        // An important note - the Trie itself is built on a per-JS-character basis,\r\n        // not on a UTF-8 character-code basis.\r\n        if (node.type === \u0027leaf\u0027 || index === key.length) {\r\n            return node;\r\n        }\r\n        // So, for SMP models, we need to match each char of the supplementary pair\r\n        // in sequence.  Each has its own node in the Trie.\r\n        var char = key[index];\r\n        if (node.children[char]) {\r\n            return findPrefix(node.children[char], key, index + 1);\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Returns all entries matching the given prefix, in descending order of\r\n     * weight.\r\n     *\r\n     * @param prefix  the prefix to match.\r\n     * @param results the current results\r\n     * @param queue\r\n     */\r\n    function getSortedResults(node, prefix, N, limit) {\r\n        if (limit === void 0) { limit = MAX_SUGGESTIONS; }\r\n        var queue = new models.PriorityQueue(function (a, b) {\r\n            // In case of Trie compilation issues that emit `null` or `undefined`\r\n            return (b ? b.weight : 0) - (a ? a.weight : 0);\r\n        });\r\n        var results = [];\r\n        if (node.type === \u0027leaf\u0027) {\r\n            // Assuming the values are sorted, we can just add all of the values in the\r\n            // leaf, until we reach the limit.\r\n            for (var _i = 0, _a = node.entries; _i \u003c _a.length; _i++) {\r\n                var item = _a[_i];\r\n                // String.startsWith is not supported on certain Android (5.0) devices we wish to support.\r\n                // Requires a minimum of Chrome 36, as opposed to 5.0\u0027s default of 35.\r\n                if (item.key.indexOf(prefix) == 0) {\r\n                    var content = item.content, weight = item.weight;\r\n                    results.push({\r\n                        text: content,\r\n                        p: weight / N\r\n                    });\r\n                    if (results.length \u003e= limit) {\r\n                        return results;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            queue.enqueue(node);\r\n            var next = void 0;\r\n            var _loop_4 = function () {\r\n                if (isNode(next)) {\r\n                    // When a node is next up in the queue, that means that next least\r\n                    // likely suggestion is among its decsendants.\r\n                    // So we search all of its descendants!\r\n                    if (next.type === \u0027leaf\u0027) {\r\n                        queue.enqueueAll(next.entries);\r\n                    }\r\n                    else {\r\n                        // XXX: alias `next` so that TypeScript can be SURE that internal is\r\n                        // in fact an internal node. Because of the callback binding to the\r\n                        // original definition of node (i.e., a Node | Entry), this will not\r\n                        // type-check otherwise.\r\n                        var internal_1 = next;\r\n                        queue.enqueueAll(next.values.map(function (char) {\r\n                            return internal_1.children[char];\r\n                        }));\r\n                    }\r\n                }\r\n                else {\r\n                    // When an entry is up next in the queue, we just add its contents to\r\n                    // the results!\r\n                    results.push({\r\n                        text: next.content,\r\n                        p: next.weight / N\r\n                    });\r\n                    if (results.length \u003e= limit) {\r\n                        return { value: results };\r\n                    }\r\n                }\r\n            };\r\n            while (next = queue.dequeue()) {\r\n                var state_1 = _loop_4();\r\n                if (typeof state_1 === \"object\")\r\n                    return state_1.value;\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n    /** TypeScript type guard that returns whether the thing is a Node. */\r\n    function isNode(x) {\r\n        return \u0027type\u0027 in x;\r\n    }\r\n    /**\r\n     * Converts wordforms into an indexable form. It does this by\r\n     * normalizing into NFD, removing diacritics, and then converting\r\n     * the result to lowercase.\r\n     *\r\n     * This is a very naïve implementation, that I only think will work on\r\n     * some languages that use the Latin script. As of 2020-04-08, only\r\n     * 4 out of 11 (36%) of published language models use the Latin script,\r\n     * so this might not actually be a great default.\r\n     *\r\n     * This uses String.prototype.normalize() to convert normalize into NFD.\r\n     * NFD is an easy way to separate a Latin character from its diacritics;\r\n     * Even then, some Latin-based orthographies use code points that,\r\n     * under NFD normalization, do NOT decompose into an ASCII letter and a\r\n     * combining diacritical mark (e.g., SENĆOŦEN).\r\n     *\r\n     * Use this only in early iterations of the model. For a production lexical\r\n     * model, you SHOULD write/generate your own key function, tailored to your\r\n     * language.\r\n     */\r\n    function defaultSearchTermToKey(wordform) {\r\n        /**\r\n         * N.B.: this is (slightly) DIFFERENT than the version in\r\n         * keymanapp/lexical-model-compiler/build-trie\r\n         * as this is for compatibility for models built\r\n         * BEFORE the searchTermToKey function was bundled with\r\n         * all models.\r\n         *\r\n         * This compatibility version lowercases AFTER removing diacritics;\r\n         * the new version (bundled in future models) lowercases,\r\n         * NFD normalizes, THEN removes diacritics.\r\n         */\r\n        return wordform\r\n            .normalize(\u0027NFD\u0027)\r\n            // Remove all combining diacritics (if input is in NFD)\r\n            // common to Latin-orthographies.\r\n            .replace(/[\\u0300-\\u036f]/g, \u0027\u0027)\r\n            .toLowerCase();\r\n    }\r\n    function getDefaultWordBreaker() {\r\n        var namespace;\r\n        // @ts-ignore\r\n        if (typeof wordBreakers !== \u0027undefined\u0027) {\r\n            // @ts-ignore\r\n            namespace = wordBreakers;\r\n        }\r\n        else {\r\n            namespace = require(\u0027@keymanapp/models-wordBreakers\u0027).wordBreakers;\r\n        }\r\n        return namespace[\u0027default\u0027];\r\n    }\r\n})(models || (models = {}));\r\nvar models;\r\n(function (models) {\r\n    var QuoteBehavior;\r\n    (function (QuoteBehavior) {\r\n        QuoteBehavior[\"noQuotes\"] = \"no-quotes\";\r\n        QuoteBehavior[\"useQuotes\"] = \"use-quotes\";\r\n        QuoteBehavior[\"default\"] = \"default-quotes\";\r\n    })(QuoteBehavior = models.QuoteBehavior || (models.QuoteBehavior = {}));\r\n    // For an \"enum/namespace merge\".  See https://www.typescriptlang.org/docs/handbook/declaration-merging.html#merging-namespaces-with-classes\r\n    (function (QuoteBehavior) {\r\n        /**\r\n         * Applies the specified quote behavior to the provided `Transform`, mutating it as appropriate.\r\n         * @param transform    The Transform to be mutated\r\n         * @param punctuation  The active `LexicalModelPunctuation` settings\r\n         * @param defaultTo    The default quote behavior to use (in case the current value is `.default`)\r\n         */\r\n        function apply(behavior, text, punctuation, defaultTo) {\r\n            if (defaultTo == QuoteBehavior.default || !defaultTo) {\r\n                throw \"Specified quote behavior may be ambiguous - default behavior not specified (may not be .default)\";\r\n            }\r\n            if (behavior == QuoteBehavior.default) {\r\n                behavior = defaultTo;\r\n            }\r\n            switch (behavior) {\r\n                case QuoteBehavior.noQuotes:\r\n                    return text;\r\n                case QuoteBehavior.useQuotes:\r\n                    var _a = punctuation.quotesForKeepSuggestion, open = _a.open, close = _a.close;\r\n                    // This part\u0027s simple enough, at least.\r\n                    return open + text + close;\r\n                default:\r\n                    throw \"Unsupported quote behavior state detected; implementation missing!\";\r\n            }\r\n        }\r\n        QuoteBehavior.apply = apply;\r\n    })(QuoteBehavior = models.QuoteBehavior || (models.QuoteBehavior = {}));\r\n})(models || (models = {}));\r\n/// \u003creference path=\"./trie-model.ts\" /\u003e\r\n/// \u003creference path=\"./quote-behavior.ts\" /\u003e\r\n// Add all namespaces defined here to the global scope:\r\nif (typeof module != \u0027undefined\u0027 \u0026\u0026 typeof module.exports != \u0027undefined\u0027) {\r\n    module.exports[\u0027models\u0027] = models;\r\n}\r\n///\u003creference types=\"@keymanapp/models-types\" /\u003e\r\nvar wordBreakers;\r\n(function (wordBreakers) {\r\n    /**\r\n     * Splits ASCII words.\r\n     *\r\n     * @param phrase\r\n     */\r\n    function ascii(phrase) {\r\n        var matchWord = /[A-Za-z0-9\u0027]+/g;\r\n        var words = [];\r\n        var match;\r\n        while ((match = matchWord.exec(phrase)) !== null) {\r\n            words.push(new RegExpDerivedSpan(match[0], match.index));\r\n        }\r\n        return words;\r\n    }\r\n    wordBreakers.ascii = ascii;\r\n    /**\r\n     * A concrete span class that derives its properties from the result of\r\n     * RegExp.exec() array.\r\n     */\r\n    var RegExpDerivedSpan = /** @class */ (function () {\r\n        function RegExpDerivedSpan(text, start) {\r\n            this.text = text;\r\n            this.start = start;\r\n        }\r\n        Object.defineProperty(RegExpDerivedSpan.prototype, \"length\", {\r\n            get: function () {\r\n                return this.text.length;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(RegExpDerivedSpan.prototype, \"end\", {\r\n            get: function () {\r\n                return this.start + this.text.length;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        return RegExpDerivedSpan;\r\n    }());\r\n})(wordBreakers || (wordBreakers = {}));\r\nvar wordBreakers;\r\n(function (wordBreakers) {\r\n    var data;\r\n    (function (data) {\r\n        ;\r\n        data.WORD_BREAK_PROPERTY = [\r\n            [/*start*/ 0x0, 0 /* Other */],\r\n            [/*start*/ 0xA, 1 /* LF */],\r\n            [/*start*/ 0xB, 2 /* Newline */],\r\n            [/*start*/ 0xD, 3 /* CR */],\r\n            [/*start*/ 0xE, 0 /* Other */],\r\n            [/*start*/ 0x20, 4 /* WSegSpace */],\r\n            [/*start*/ 0x21, 0 /* Other */],\r\n            [/*start*/ 0x22, 5 /* Double_Quote */],\r\n            [/*start*/ 0x23, 0 /* Other */],\r\n            [/*start*/ 0x27, 6 /* Single_Quote */],\r\n            [/*start*/ 0x28, 0 /* Other */],\r\n            [/*start*/ 0x2C, 7 /* MidNum */],\r\n            [/*start*/ 0x2D, 0 /* Other */],\r\n            [/*start*/ 0x2E, 8 /* MidNumLet */],\r\n            [/*start*/ 0x2F, 0 /* Other */],\r\n            [/*start*/ 0x30, 9 /* Numeric */],\r\n            [/*start*/ 0x3A, 10 /* MidLetter */],\r\n            [/*start*/ 0x3B, 7 /* MidNum */],\r\n            [/*start*/ 0x3C, 0 /* Other */],\r\n            [/*start*/ 0x41, 11 /* ALetter */],\r\n            [/*start*/ 0x5B, 0 /* Other */],\r\n            [/*start*/ 0x5F, 12 /* ExtendNumLet */],\r\n            [/*start*/ 0x60, 0 /* Other */],\r\n            [/*start*/ 0x61, 11 /* ALetter */],\r\n            [/*start*/ 0x7B, 0 /* Other */],\r\n            [/*start*/ 0x85, 2 /* Newline */],\r\n            [/*start*/ 0x86, 0 /* Other */],\r\n            [/*start*/ 0xAA, 11 /* ALetter */],\r\n            [/*start*/ 0xAB, 0 /* Other */],\r\n            [/*start*/ 0xAD, 13 /* Format */],\r\n            [/*start*/ 0xAE, 0 /* Other */],\r\n            [/*start*/ 0xB5, 11 /* ALetter */],\r\n            [/*start*/ 0xB6, 0 /* Other */],\r\n            [/*start*/ 0xB7, 10 /* MidLetter */],\r\n            [/*start*/ 0xB8, 0 /* Other */],\r\n            [/*start*/ 0xBA, 11 /* ALetter */],\r\n            [/*start*/ 0xBB, 0 /* Other */],\r\n            [/*start*/ 0xC0, 11 /* ALetter */],\r\n            [/*start*/ 0xD7, 0 /* Other */],\r\n            [/*start*/ 0xD8, 11 /* ALetter */],\r\n            [/*start*/ 0xF7, 0 /* Other */],\r\n            [/*start*/ 0xF8, 11 /* ALetter */],\r\n            [/*start*/ 0x2D8, 0 /* Other */],\r\n            [/*start*/ 0x2DE, 11 /* ALetter */],\r\n            [/*start*/ 0x300, 14 /* Extend */],\r\n            [/*start*/ 0x370, 11 /* ALetter */],\r\n            [/*start*/ 0x375, 0 /* Other */],\r\n            [/*start*/ 0x376, 11 /* ALetter */],\r\n            [/*start*/ 0x378, 0 /* Other */],\r\n            [/*start*/ 0x37A, 11 /* ALetter */],\r\n            [/*start*/ 0x37E, 7 /* MidNum */],\r\n            [/*start*/ 0x37F, 11 /* ALetter */],\r\n            [/*start*/ 0x380, 0 /* Other */],\r\n            [/*start*/ 0x386, 11 /* ALetter */],\r\n            [/*start*/ 0x387, 10 /* MidLetter */],\r\n            [/*start*/ 0x388, 11 /* ALetter */],\r\n            [/*start*/ 0x38B, 0 /* Other */],\r\n            [/*start*/ 0x38C, 11 /* ALetter */],\r\n            [/*start*/ 0x38D, 0 /* Other */],\r\n            [/*start*/ 0x38E, 11 /* ALetter */],\r\n            [/*start*/ 0x3A2, 0 /* Other */],\r\n            [/*start*/ 0x3A3, 11 /* ALetter */],\r\n            [/*start*/ 0x3F6, 0 /* Other */],\r\n            [/*start*/ 0x3F7, 11 /* ALetter */],\r\n            [/*start*/ 0x482, 0 /* Other */],\r\n            [/*start*/ 0x483, 14 /* Extend */],\r\n            [/*start*/ 0x48A, 11 /* ALetter */],\r\n            [/*start*/ 0x530, 0 /* Other */],\r\n            [/*start*/ 0x531, 11 /* ALetter */],\r\n            [/*start*/ 0x557, 0 /* Other */],\r\n            [/*start*/ 0x559, 11 /* ALetter */],\r\n            [/*start*/ 0x55D, 0 /* Other */],\r\n            [/*start*/ 0x55E, 11 /* ALetter */],\r\n            [/*start*/ 0x55F, 10 /* MidLetter */],\r\n            [/*start*/ 0x560, 11 /* ALetter */],\r\n            [/*start*/ 0x589, 7 /* MidNum */],\r\n            [/*start*/ 0x58A, 11 /* ALetter */],\r\n            [/*start*/ 0x58B, 0 /* Other */],\r\n            [/*start*/ 0x591, 14 /* Extend */],\r\n            [/*start*/ 0x5BE, 0 /* Other */],\r\n            [/*start*/ 0x5BF, 14 /* Extend */],\r\n            [/*start*/ 0x5C0, 0 /* Other */],\r\n            [/*start*/ 0x5C1, 14 /* Extend */],\r\n            [/*start*/ 0x5C3, 0 /* Other */],\r\n            [/*start*/ 0x5C4, 14 /* Extend */],\r\n            [/*start*/ 0x5C6, 0 /* Other */],\r\n            [/*start*/ 0x5C7, 14 /* Extend */],\r\n            [/*start*/ 0x5C8, 0 /* Other */],\r\n            [/*start*/ 0x5D0, 15 /* Hebrew_Letter */],\r\n            [/*start*/ 0x5EB, 0 /* Other */],\r\n            [/*start*/ 0x5EF, 15 /* Hebrew_Letter */],\r\n            [/*start*/ 0x5F3, 11 /* ALetter */],\r\n            [/*start*/ 0x5F4, 10 /* MidLetter */],\r\n            [/*start*/ 0x5F5, 0 /* Other */],\r\n            [/*start*/ 0x600, 13 /* Format */],\r\n            [/*start*/ 0x606, 0 /* Other */],\r\n            [/*start*/ 0x60C, 7 /* MidNum */],\r\n            [/*start*/ 0x60E, 0 /* Other */],\r\n            [/*start*/ 0x610, 14 /* Extend */],\r\n            [/*start*/ 0x61B, 0 /* Other */],\r\n            [/*start*/ 0x61C, 13 /* Format */],\r\n            [/*start*/ 0x61D, 0 /* Other */],\r\n            [/*start*/ 0x620, 11 /* ALetter */],\r\n            [/*start*/ 0x64B, 14 /* Extend */],\r\n            [/*start*/ 0x660, 9 /* Numeric */],\r\n            [/*start*/ 0x66A, 0 /* Other */],\r\n            [/*start*/ 0x66B, 9 /* Numeric */],\r\n            [/*start*/ 0x66C, 7 /* MidNum */],\r\n            [/*start*/ 0x66D, 0 /* Other */],\r\n            [/*start*/ 0x66E, 11 /* ALetter */],\r\n            [/*start*/ 0x670, 14 /* Extend */],\r\n            [/*start*/ 0x671, 11 /* ALetter */],\r\n            [/*start*/ 0x6D4, 0 /* Other */],\r\n            [/*start*/ 0x6D5, 11 /* ALetter */],\r\n            [/*start*/ 0x6D6, 14 /* Extend */],\r\n            [/*start*/ 0x6DD, 13 /* Format */],\r\n            [/*start*/ 0x6DE, 0 /* Other */],\r\n            [/*start*/ 0x6DF, 14 /* Extend */],\r\n            [/*start*/ 0x6E5, 11 /* ALetter */],\r\n            [/*start*/ 0x6E7, 14 /* Extend */],\r\n            [/*start*/ 0x6E9, 0 /* Other */],\r\n            [/*start*/ 0x6EA, 14 /* Extend */],\r\n            [/*start*/ 0x6EE, 11 /* ALetter */],\r\n            [/*start*/ 0x6F0, 9 /* Numeric */],\r\n            [/*start*/ 0x6FA, 11 /* ALetter */],\r\n            [/*start*/ 0x6FD, 0 /* Other */],\r\n            [/*start*/ 0x6FF, 11 /* ALetter */],\r\n            [/*start*/ 0x700, 0 /* Other */],\r\n            [/*start*/ 0x70F, 13 /* Format */],\r\n            [/*start*/ 0x710, 11 /* ALetter */],\r\n            [/*start*/ 0x711, 14 /* Extend */],\r\n            [/*start*/ 0x712, 11 /* ALetter */],\r\n            [/*start*/ 0x730, 14 /* Extend */],\r\n            [/*start*/ 0x74B, 0 /* Other */],\r\n            [/*start*/ 0x74D, 11 /* ALetter */],\r\n            [/*start*/ 0x7A6, 14 /* Extend */],\r\n            [/*start*/ 0x7B1, 11 /* ALetter */],\r\n            [/*start*/ 0x7B2, 0 /* Other */],\r\n            [/*start*/ 0x7C0, 9 /* Numeric */],\r\n            [/*start*/ 0x7CA, 11 /* ALetter */],\r\n            [/*start*/ 0x7EB, 14 /* Extend */],\r\n            [/*start*/ 0x7F4, 11 /* ALetter */],\r\n            [/*start*/ 0x7F6, 0 /* Other */],\r\n            [/*start*/ 0x7F8, 7 /* MidNum */],\r\n            [/*start*/ 0x7F9, 0 /* Other */],\r\n            [/*start*/ 0x7FA, 11 /* ALetter */],\r\n            [/*start*/ 0x7FB, 0 /* Other */],\r\n            [/*start*/ 0x7FD, 14 /* Extend */],\r\n            [/*start*/ 0x7FE, 0 /* Other */],\r\n            [/*start*/ 0x800, 11 /* ALetter */],\r\n            [/*start*/ 0x816, 14 /* Extend */],\r\n            [/*start*/ 0x81A, 11 /* ALetter */],\r\n            [/*start*/ 0x81B, 14 /* Extend */],\r\n            [/*start*/ 0x824, 11 /* ALetter */],\r\n            [/*start*/ 0x825, 14 /* Extend */],\r\n            [/*start*/ 0x828, 11 /* ALetter */],\r\n            [/*start*/ 0x829, 14 /* Extend */],\r\n            [/*start*/ 0x82E, 0 /* Other */],\r\n            [/*start*/ 0x840, 11 /* ALetter */],\r\n            [/*start*/ 0x859, 14 /* Extend */],\r\n            [/*start*/ 0x85C, 0 /* Other */],\r\n            [/*start*/ 0x860, 11 /* ALetter */],\r\n            [/*start*/ 0x86B, 0 /* Other */],\r\n            [/*start*/ 0x8A0, 11 /* ALetter */],\r\n            [/*start*/ 0x8B5, 0 /* Other */],\r\n            [/*start*/ 0x8B6, 11 /* ALetter */],\r\n            [/*start*/ 0x8C8, 0 /* Other */],\r\n            [/*start*/ 0x8D3, 14 /* Extend */],\r\n            [/*start*/ 0x8E2, 13 /* Format */],\r\n            [/*start*/ 0x8E3, 14 /* Extend */],\r\n            [/*start*/ 0x904, 11 /* ALetter */],\r\n            [/*start*/ 0x93A, 14 /* Extend */],\r\n            [/*start*/ 0x93D, 11 /* ALetter */],\r\n            [/*start*/ 0x93E, 14 /* Extend */],\r\n            [/*start*/ 0x950, 11 /* ALetter */],\r\n            [/*start*/ 0x951, 14 /* Extend */],\r\n            [/*start*/ 0x958, 11 /* ALetter */],\r\n            [/*start*/ 0x962, 14 /* Extend */],\r\n            [/*start*/ 0x964, 0 /* Other */],\r\n            [/*start*/ 0x966, 9 /* Numeric */],\r\n            [/*start*/ 0x970, 0 /* Other */],\r\n            [/*start*/ 0x971, 11 /* ALetter */],\r\n            [/*start*/ 0x981, 14 /* Extend */],\r\n            [/*start*/ 0x984, 0 /* Other */],\r\n            [/*start*/ 0x985, 11 /* ALetter */],\r\n            [/*start*/ 0x98D, 0 /* Other */],\r\n            [/*start*/ 0x98F, 11 /* ALetter */],\r\n            [/*start*/ 0x991, 0 /* Other */],\r\n            [/*start*/ 0x993, 11 /* ALetter */],\r\n            [/*start*/ 0x9A9, 0 /* Other */],\r\n            [/*start*/ 0x9AA, 11 /* ALetter */],\r\n            [/*start*/ 0x9B1, 0 /* Other */],\r\n            [/*start*/ 0x9B2, 11 /* ALetter */],\r\n            [/*start*/ 0x9B3, 0 /* Other */],\r\n            [/*start*/ 0x9B6, 11 /* ALetter */],\r\n            [/*start*/ 0x9BA, 0 /* Other */],\r\n            [/*start*/ 0x9BC, 14 /* Extend */],\r\n            [/*start*/ 0x9BD, 11 /* ALetter */],\r\n            [/*start*/ 0x9BE, 14 /* Extend */],\r\n            [/*start*/ 0x9C5, 0 /* Other */],\r\n            [/*start*/ 0x9C7, 14 /* Extend */],\r\n            [/*start*/ 0x9C9, 0 /* Other */],\r\n            [/*start*/ 0x9CB, 14 /* Extend */],\r\n            [/*start*/ 0x9CE, 11 /* ALetter */],\r\n            [/*start*/ 0x9CF, 0 /* Other */],\r\n            [/*start*/ 0x9D7, 14 /* Extend */],\r\n            [/*start*/ 0x9D8, 0 /* Other */],\r\n            [/*start*/ 0x9DC, 11 /* ALetter */],\r\n            [/*start*/ 0x9DE, 0 /* Other */],\r\n            [/*start*/ 0x9DF, 11 /* ALetter */],\r\n            [/*start*/ 0x9E2, 14 /* Extend */],\r\n            [/*start*/ 0x9E4, 0 /* Other */],\r\n            [/*start*/ 0x9E6, 9 /* Numeric */],\r\n            [/*start*/ 0x9F0, 11 /* ALetter */],\r\n            [/*start*/ 0x9F2, 0 /* Other */],\r\n            [/*start*/ 0x9FC, 11 /* ALetter */],\r\n            [/*start*/ 0x9FD, 0 /* Other */],\r\n            [/*start*/ 0x9FE, 14 /* Extend */],\r\n            [/*start*/ 0x9FF, 0 /* Other */],\r\n            [/*start*/ 0xA01, 14 /* Extend */],\r\n            [/*start*/ 0xA04, 0 /* Other */],\r\n            [/*start*/ 0xA05, 11 /* ALetter */],\r\n            [/*start*/ 0xA0B, 0 /* Other */],\r\n            [/*start*/ 0xA0F, 11 /* ALetter */],\r\n            [/*start*/ 0xA11, 0 /* Other */],\r\n            [/*start*/ 0xA13, 11 /* ALetter */],\r\n            [/*start*/ 0xA29, 0 /* Other */],\r\n            [/*start*/ 0xA2A, 11 /* ALetter */],\r\n            [/*start*/ 0xA31, 0 /* Other */],\r\n            [/*start*/ 0xA32, 11 /* ALetter */],\r\n            [/*start*/ 0xA34, 0 /* Other */],\r\n            [/*start*/ 0xA35, 11 /* ALetter */],\r\n            [/*start*/ 0xA37, 0 /* Other */],\r\n            [/*start*/ 0xA38, 11 /* ALetter */],\r\n            [/*start*/ 0xA3A, 0 /* Other */],\r\n            [/*start*/ 0xA3C, 14 /* Extend */],\r\n            [/*start*/ 0xA3D, 0 /* Other */],\r\n            [/*start*/ 0xA3E, 14 /* Extend */],\r\n            [/*start*/ 0xA43, 0 /* Other */],\r\n            [/*start*/ 0xA47, 14 /* Extend */],\r\n            [/*start*/ 0xA49, 0 /* Other */],\r\n            [/*start*/ 0xA4B, 14 /* Extend */],\r\n            [/*start*/ 0xA4E, 0 /* Other */],\r\n            [/*start*/ 0xA51, 14 /* Extend */],\r\n            [/*start*/ 0xA52, 0 /* Other */],\r\n            [/*start*/ 0xA59, 11 /* ALetter */],\r\n            [/*start*/ 0xA5D, 0 /* Other */],\r\n            [/*start*/ 0xA5E, 11 /* ALetter */],\r\n            [/*start*/ 0xA5F, 0 /* Other */],\r\n            [/*start*/ 0xA66, 9 /* Numeric */],\r\n            [/*start*/ 0xA70, 14 /* Extend */],\r\n            [/*start*/ 0xA72, 11 /* ALetter */],\r\n            [/*start*/ 0xA75, 14 /* Extend */],\r\n            [/*start*/ 0xA76, 0 /* Other */],\r\n            [/*start*/ 0xA81, 14 /* Extend */],\r\n            [/*start*/ 0xA84, 0 /* Other */],\r\n            [/*start*/ 0xA85, 11 /* ALetter */],\r\n            [/*start*/ 0xA8E, 0 /* Other */],\r\n            [/*start*/ 0xA8F, 11 /* ALetter */],\r\n            [/*start*/ 0xA92, 0 /* Other */],\r\n            [/*start*/ 0xA93, 11 /* ALetter */],\r\n            [/*start*/ 0xAA9, 0 /* Other */],\r\n            [/*start*/ 0xAAA, 11 /* ALetter */],\r\n            [/*start*/ 0xAB1, 0 /* Other */],\r\n            [/*start*/ 0xAB2, 11 /* ALetter */],\r\n            [/*start*/ 0xAB4, 0 /* Other */],\r\n            [/*start*/ 0xAB5, 11 /* ALetter */],\r\n            [/*start*/ 0xABA, 0 /* Other */],\r\n            [/*start*/ 0xABC, 14 /* Extend */],\r\n            [/*start*/ 0xABD, 11 /* ALetter */],\r\n            [/*start*/ 0xABE, 14 /* Extend */],\r\n            [/*start*/ 0xAC6, 0 /* Other */],\r\n            [/*start*/ 0xAC7, 14 /* Extend */],\r\n            [/*start*/ 0xACA, 0 /* Other */],\r\n            [/*start*/ 0xACB, 14 /* Extend */],\r\n            [/*start*/ 0xACE, 0 /* Other */],\r\n            [/*start*/ 0xAD0, 11 /* ALetter */],\r\n            [/*start*/ 0xAD1, 0 /* Other */],\r\n            [/*start*/ 0xAE0, 11 /* ALetter */],\r\n            [/*start*/ 0xAE2, 14 /* Extend */],\r\n            [/*start*/ 0xAE4, 0 /* Other */],\r\n            [/*start*/ 0xAE6, 9 /* Numeric */],\r\n            [/*start*/ 0xAF0, 0 /* Other */],\r\n            [/*start*/ 0xAF9, 11 /* ALetter */],\r\n            [/*start*/ 0xAFA, 14 /* Extend */],\r\n            [/*start*/ 0xB00, 0 /* Other */],\r\n            [/*start*/ 0xB01, 14 /* Extend */],\r\n            [/*start*/ 0xB04, 0 /* Other */],\r\n            [/*start*/ 0xB05, 11 /* ALetter */],\r\n            [/*start*/ 0xB0D, 0 /* Other */],\r\n            [/*start*/ 0xB0F, 11 /* ALetter */],\r\n            [/*start*/ 0xB11, 0 /* Other */],\r\n            [/*start*/ 0xB13, 11 /* ALetter */],\r\n            [/*start*/ 0xB29, 0 /* Other */],\r\n            [/*start*/ 0xB2A, 11 /* ALetter */],\r\n            [/*start*/ 0xB31, 0 /* Other */],\r\n            [/*start*/ 0xB32, 11 /* ALetter */],\r\n            [/*start*/ 0xB34, 0 /* Other */],\r\n            [/*start*/ 0xB35, 11 /* ALetter */],\r\n            [/*start*/ 0xB3A, 0 /* Other */],\r\n            [/*start*/ 0xB3C, 14 /* Extend */],\r\n            [/*start*/ 0xB3D, 11 /* ALetter */],\r\n            [/*start*/ 0xB3E, 14 /* Extend */],\r\n            [/*start*/ 0xB45, 0 /* Other */],\r\n            [/*start*/ 0xB47, 14 /* Extend */],\r\n            [/*start*/ 0xB49, 0 /* Other */],\r\n            [/*start*/ 0xB4B, 14 /* Extend */],\r\n            [/*start*/ 0xB4E, 0 /* Other */],\r\n            [/*start*/ 0xB55, 14 /* Extend */],\r\n            [/*start*/ 0xB58, 0 /* Other */],\r\n            [/*start*/ 0xB5C, 11 /* ALetter */],\r\n            [/*start*/ 0xB5E, 0 /* Other */],\r\n            [/*start*/ 0xB5F, 11 /* ALetter */],\r\n            [/*start*/ 0xB62, 14 /* Extend */],\r\n            [/*start*/ 0xB64, 0 /* Other */],\r\n            [/*start*/ 0xB66, 9 /* Numeric */],\r\n            [/*start*/ 0xB70, 0 /* Other */],\r\n            [/*start*/ 0xB71, 11 /* ALetter */],\r\n            [/*start*/ 0xB72, 0 /* Other */],\r\n            [/*start*/ 0xB82, 14 /* Extend */],\r\n            [/*start*/ 0xB83, 11 /* ALetter */],\r\n            [/*start*/ 0xB84, 0 /* Other */],\r\n            [/*start*/ 0xB85, 11 /* ALetter */],\r\n            [/*start*/ 0xB8B, 0 /* Other */],\r\n            [/*start*/ 0xB8E, 11 /* ALetter */],\r\n            [/*start*/ 0xB91, 0 /* Other */],\r\n            [/*start*/ 0xB92, 11 /* ALetter */],\r\n            [/*start*/ 0xB96, 0 /* Other */],\r\n            [/*start*/ 0xB99, 11 /* ALetter */],\r\n            [/*start*/ 0xB9B, 0 /* Other */],\r\n            [/*start*/ 0xB9C, 11 /* ALetter */],\r\n            [/*start*/ 0xB9D, 0 /* Other */],\r\n            [/*start*/ 0xB9E, 11 /* ALetter */],\r\n            [/*start*/ 0xBA0, 0 /* Other */],\r\n            [/*start*/ 0xBA3, 11 /* ALetter */],\r\n            [/*start*/ 0xBA5, 0 /* Other */],\r\n            [/*start*/ 0xBA8, 11 /* ALetter */],\r\n            [/*start*/ 0xBAB, 0 /* Other */],\r\n            [/*start*/ 0xBAE, 11 /* ALetter */],\r\n            [/*start*/ 0xBBA, 0 /* Other */],\r\n            [/*start*/ 0xBBE, 14 /* Extend */],\r\n            [/*start*/ 0xBC3, 0 /* Other */],\r\n            [/*start*/ 0xBC6, 14 /* Extend */],\r\n            [/*start*/ 0xBC9, 0 /* Other */],\r\n            [/*start*/ 0xBCA, 14 /* Extend */],\r\n            [/*start*/ 0xBCE, 0 /* Other */],\r\n            [/*start*/ 0xBD0, 11 /* ALetter */],\r\n            [/*start*/ 0xBD1, 0 /* Other */],\r\n            [/*start*/ 0xBD7, 14 /* Extend */],\r\n            [/*start*/ 0xBD8, 0 /* Other */],\r\n            [/*start*/ 0xBE6, 9 /* Numeric */],\r\n            [/*start*/ 0xBF0, 0 /* Other */],\r\n            [/*start*/ 0xC00, 14 /* Extend */],\r\n            [/*start*/ 0xC05, 11 /* ALetter */],\r\n            [/*start*/ 0xC0D, 0 /* Other */],\r\n            [/*start*/ 0xC0E, 11 /* ALetter */],\r\n            [/*start*/ 0xC11, 0 /* Other */],\r\n            [/*start*/ 0xC12, 11 /* ALetter */],\r\n            [/*start*/ 0xC29, 0 /* Other */],\r\n            [/*start*/ 0xC2A, 11 /* ALetter */],\r\n            [/*start*/ 0xC3A, 0 /* Other */],\r\n            [/*start*/ 0xC3D, 11 /* ALetter */],\r\n            [/*start*/ 0xC3E, 14 /* Extend */],\r\n            [/*start*/ 0xC45, 0 /* Other */],\r\n            [/*start*/ 0xC46, 14 /* Extend */],\r\n            [/*start*/ 0xC49, 0 /* Other */],\r\n            [/*start*/ 0xC4A, 14 /* Extend */],\r\n            [/*start*/ 0xC4E, 0 /* Other */],\r\n            [/*start*/ 0xC55, 14 /* Extend */],\r\n            [/*start*/ 0xC57, 0 /* Other */],\r\n            [/*start*/ 0xC58, 11 /* ALetter */],\r\n            [/*start*/ 0xC5B, 0 /* Other */],\r\n            [/*start*/ 0xC60, 11 /* ALetter */],\r\n            [/*start*/ 0xC62, 14 /* Extend */],\r\n            [/*start*/ 0xC64, 0 /* Other */],\r\n            [/*start*/ 0xC66, 9 /* Numeric */],\r\n            [/*start*/ 0xC70, 0 /* Other */],\r\n            [/*start*/ 0xC80, 11 /* ALetter */],\r\n            [/*start*/ 0xC81, 14 /* Extend */],\r\n            [/*start*/ 0xC84, 0 /* Other */],\r\n            [/*start*/ 0xC85, 11 /* ALetter */],\r\n            [/*start*/ 0xC8D, 0 /* Other */],\r\n            [/*start*/ 0xC8E, 11 /* ALetter */],\r\n            [/*start*/ 0xC91, 0 /* Other */],\r\n            [/*start*/ 0xC92, 11 /* ALetter */],\r\n            [/*start*/ 0xCA9, 0 /* Other */],\r\n            [/*start*/ 0xCAA, 11 /* ALetter */],\r\n            [/*start*/ 0xCB4, 0 /* Other */],\r\n            [/*start*/ 0xCB5, 11 /* ALetter */],\r\n            [/*start*/ 0xCBA, 0 /* Other */],\r\n            [/*start*/ 0xCBC, 14 /* Extend */],\r\n            [/*start*/ 0xCBD, 11 /* ALetter */],\r\n            [/*start*/ 0xCBE, 14 /* Extend */],\r\n            [/*start*/ 0xCC5, 0 /* Other */],\r\n            [/*start*/ 0xCC6, 14 /* Extend */],\r\n            [/*start*/ 0xCC9, 0 /* Other */],\r\n            [/*start*/ 0xCCA, 14 /* Extend */],\r\n            [/*start*/ 0xCCE, 0 /* Other */],\r\n            [/*start*/ 0xCD5, 14 /* Extend */],\r\n            [/*start*/ 0xCD7, 0 /* Other */],\r\n            [/*start*/ 0xCDE, 11 /* ALetter */],\r\n            [/*start*/ 0xCDF, 0 /* Other */],\r\n            [/*start*/ 0xCE0, 11 /* ALetter */],\r\n            [/*start*/ 0xCE2, 14 /* Extend */],\r\n            [/*start*/ 0xCE4, 0 /* Other */],\r\n            [/*start*/ 0xCE6, 9 /* Numeric */],\r\n            [/*start*/ 0xCF0, 0 /* Other */],\r\n            [/*start*/ 0xCF1, 11 /* ALetter */],\r\n            [/*start*/ 0xCF3, 0 /* Other */],\r\n            [/*start*/ 0xD00, 14 /* Extend */],\r\n            [/*start*/ 0xD04, 11 /* ALetter */],\r\n            [/*start*/ 0xD0D, 0 /* Other */],\r\n            [/*start*/ 0xD0E, 11 /* ALetter */],\r\n            [/*start*/ 0xD11, 0 /* Other */],\r\n            [/*start*/ 0xD12, 11 /* ALetter */],\r\n            [/*start*/ 0xD3B, 14 /* Extend */],\r\n            [/*start*/ 0xD3D, 11 /* ALetter */],\r\n            [/*start*/ 0xD3E, 14 /* Extend */],\r\n            [/*start*/ 0xD45, 0 /* Other */],\r\n            [/*start*/ 0xD46, 14 /* Extend */],\r\n            [/*start*/ 0xD49, 0 /* Other */],\r\n            [/*start*/ 0xD4A, 14 /* Extend */],\r\n            [/*start*/ 0xD4E, 11 /* ALetter */],\r\n            [/*start*/ 0xD4F, 0 /* Other */],\r\n            [/*start*/ 0xD54, 11 /* ALetter */],\r\n            [/*start*/ 0xD57, 14 /* Extend */],\r\n            [/*start*/ 0xD58, 0 /* Other */],\r\n            [/*start*/ 0xD5F, 11 /* ALetter */],\r\n            [/*start*/ 0xD62, 14 /* Extend */],\r\n            [/*start*/ 0xD64, 0 /* Other */],\r\n            [/*start*/ 0xD66, 9 /* Numeric */],\r\n            [/*start*/ 0xD70, 0 /* Other */],\r\n            [/*start*/ 0xD7A, 11 /* ALetter */],\r\n            [/*start*/ 0xD80, 0 /* Other */],\r\n            [/*start*/ 0xD81, 14 /* Extend */],\r\n            [/*start*/ 0xD84, 0 /* Other */],\r\n            [/*start*/ 0xD85, 11 /* ALetter */],\r\n            [/*start*/ 0xD97, 0 /* Other */],\r\n            [/*start*/ 0xD9A, 11 /* ALetter */],\r\n            [/*start*/ 0xDB2, 0 /* Other */],\r\n            [/*start*/ 0xDB3, 11 /* ALetter */],\r\n            [/*start*/ 0xDBC, 0 /* Other */],\r\n            [/*start*/ 0xDBD, 11 /* ALetter */],\r\n            [/*start*/ 0xDBE, 0 /* Other */],\r\n            [/*start*/ 0xDC0, 11 /* ALetter */],\r\n            [/*start*/ 0xDC7, 0 /* Other */],\r\n            [/*start*/ 0xDCA, 14 /* Extend */],\r\n            [/*start*/ 0xDCB, 0 /* Other */],\r\n            [/*start*/ 0xDCF, 14 /* Extend */],\r\n            [/*start*/ 0xDD5, 0 /* Other */],\r\n            [/*start*/ 0xDD6, 14 /* Extend */],\r\n            [/*start*/ 0xDD7, 0 /* Other */],\r\n            [/*start*/ 0xDD8, 14 /* Extend */],\r\n            [/*start*/ 0xDE0, 0 /* Other */],\r\n            [/*start*/ 0xDE6, 9 /* Numeric */],\r\n            [/*start*/ 0xDF0, 0 /* Other */],\r\n            [/*start*/ 0xDF2, 14 /* Extend */],\r\n            [/*start*/ 0xDF4, 0 /* Other */],\r\n            [/*start*/ 0xE31, 14 /* Extend */],\r\n            [/*start*/ 0xE32, 0 /* Other */],\r\n            [/*start*/ 0xE34, 14 /* Extend */],\r\n            [/*start*/ 0xE3B, 0 /* Other */],\r\n            [/*start*/ 0xE47, 14 /* Extend */],\r\n            [/*start*/ 0xE4F, 0 /* Other */],\r\n            [/*start*/ 0xE50, 9 /* Numeric */],\r\n            [/*start*/ 0xE5A, 0 /* Other */],\r\n            [/*start*/ 0xEB1, 14 /* Extend */],\r\n            [/*start*/ 0xEB2, 0 /* Other */],\r\n            [/*start*/ 0xEB4, 14 /* Extend */],\r\n            [/*start*/ 0xEBD, 0 /* Other */],\r\n            [/*start*/ 0xEC8, 14 /* Extend */],\r\n            [/*start*/ 0xECE, 0 /* Other */],\r\n            [/*start*/ 0xED0, 9 /* Numeric */],\r\n            [/*start*/ 0xEDA, 0 /* Other */],\r\n            [/*start*/ 0xF00, 11 /* ALetter */],\r\n            [/*start*/ 0xF01, 0 /* Other */],\r\n            [/*start*/ 0xF18, 14 /* Extend */],\r\n            [/*start*/ 0xF1A, 0 /* Other */],\r\n            [/*start*/ 0xF20, 9 /* Numeric */],\r\n            [/*start*/ 0xF2A, 0 /* Other */],\r\n            [/*start*/ 0xF35, 14 /* Extend */],\r\n            [/*start*/ 0xF36, 0 /* Other */],\r\n            [/*start*/ 0xF37, 14 /* Extend */],\r\n            [/*start*/ 0xF38, 0 /* Other */],\r\n            [/*start*/ 0xF39, 14 /* Extend */],\r\n            [/*start*/ 0xF3A, 0 /* Other */],\r\n            [/*start*/ 0xF3E, 14 /* Extend */],\r\n            [/*start*/ 0xF40, 11 /* ALetter */],\r\n            [/*start*/ 0xF48, 0 /* Other */],\r\n            [/*start*/ 0xF49, 11 /* ALetter */],\r\n            [/*start*/ 0xF6D, 0 /* Other */],\r\n            [/*start*/ 0xF71, 14 /* Extend */],\r\n            [/*start*/ 0xF85, 0 /* Other */],\r\n            [/*start*/ 0xF86, 14 /* Extend */],\r\n            [/*start*/ 0xF88, 11 /* ALetter */],\r\n            [/*start*/ 0xF8D, 14 /* Extend */],\r\n            [/*start*/ 0xF98, 0 /* Other */],\r\n            [/*start*/ 0xF99, 14 /* Extend */],\r\n            [/*start*/ 0xFBD, 0 /* Other */],\r\n            [/*start*/ 0xFC6, 14 /* Extend */],\r\n            [/*start*/ 0xFC7, 0 /* Other */],\r\n            [/*start*/ 0x102B, 14 /* Extend */],\r\n            [/*start*/ 0x103F, 0 /* Other */],\r\n            [/*start*/ 0x1040, 9 /* Numeric */],\r\n            [/*start*/ 0x104A, 0 /* Other */],\r\n            [/*start*/ 0x1056, 14 /* Extend */],\r\n            [/*start*/ 0x105A, 0 /* Other */],\r\n            [/*start*/ 0x105E, 14 /* Extend */],\r\n            [/*start*/ 0x1061, 0 /* Other */],\r\n            [/*start*/ 0x1062, 14 /* Extend */],\r\n            [/*start*/ 0x1065, 0 /* Other */],\r\n            [/*start*/ 0x1067, 14 /* Extend */],\r\n            [/*start*/ 0x106E, 0 /* Other */],\r\n            [/*start*/ 0x1071, 14 /* Extend */],\r\n            [/*start*/ 0x1075, 0 /* Other */],\r\n            [/*start*/ 0x1082, 14 /* Extend */],\r\n            [/*start*/ 0x108E, 0 /* Other */],\r\n            [/*start*/ 0x108F, 14 /* Extend */],\r\n            [/*start*/ 0x1090, 9 /* Numeric */],\r\n            [/*start*/ 0x109A, 14 /* Extend */],\r\n            [/*start*/ 0x109E, 0 /* Other */],\r\n            [/*start*/ 0x10A0, 11 /* ALetter */],\r\n            [/*start*/ 0x10C6, 0 /* Other */],\r\n            [/*start*/ 0x10C7, 11 /* ALetter */],\r\n            [/*start*/ 0x10C8, 0 /* Other */],\r\n            [/*start*/ 0x10CD, 11 /* ALetter */],\r\n            [/*start*/ 0x10CE, 0 /* Other */],\r\n            [/*start*/ 0x10D0, 11 /* ALetter */],\r\n            [/*start*/ 0x10FB, 0 /* Other */],\r\n            [/*start*/ 0x10FC, 11 /* ALetter */],\r\n            [/*start*/ 0x1249, 0 /* Other */],\r\n            [/*start*/ 0x124A, 11 /* ALetter */],\r\n            [/*start*/ 0x124E, 0 /* Other */],\r\n            [/*start*/ 0x1250, 11 /* ALetter */],\r\n            [/*start*/ 0x1257, 0 /* Other */],\r\n            [/*start*/ 0x1258, 11 /* ALetter */],\r\n            [/*start*/ 0x1259, 0 /* Other */],\r\n            [/*start*/ 0x125A, 11 /* ALetter */],\r\n            [/*start*/ 0x125E, 0 /* Other */],\r\n            [/*start*/ 0x1260, 11 /* ALetter */],\r\n            [/*start*/ 0x1289, 0 /* Other */],\r\n            [/*start*/ 0x128A, 11 /* ALetter */],\r\n            [/*start*/ 0x128E, 0 /* Other */],\r\n            [/*start*/ 0x1290, 11 /* ALetter */],\r\n            [/*start*/ 0x12B1, 0 /* Other */],\r\n            [/*start*/ 0x12B2, 11 /* ALetter */],\r\n            [/*start*/ 0x12B6, 0 /* Other */],\r\n            [/*start*/ 0x12B8, 11 /* ALetter */],\r\n            [/*start*/ 0x12BF, 0 /* Other */],\r\n            [/*start*/ 0x12C0, 11 /* ALetter */],\r\n            [/*start*/ 0x12C1, 0 /* Other */],\r\n            [/*start*/ 0x12C2, 11 /* ALetter */],\r\n            [/*start*/ 0x12C6, 0 /* Other */],\r\n            [/*start*/ 0x12C8, 11 /* ALetter */],\r\n            [/*start*/ 0x12D7, 0 /* Other */],\r\n            [/*start*/ 0x12D8, 11 /* ALetter */],\r\n            [/*start*/ 0x1311, 0 /* Other */],\r\n            [/*start*/ 0x1312, 11 /* ALetter */],\r\n            [/*start*/ 0x1316, 0 /* Other */],\r\n            [/*start*/ 0x1318, 11 /* ALetter */],\r\n            [/*start*/ 0x135B, 0 /* Other */],\r\n            [/*start*/ 0x135D, 14 /* Extend */],\r\n            [/*start*/ 0x1360, 0 /* Other */],\r\n            [/*start*/ 0x1380, 11 /* ALetter */],\r\n            [/*start*/ 0x1390, 0 /* Other */],\r\n            [/*start*/ 0x13A0, 11 /* ALetter */],\r\n            [/*start*/ 0x13F6, 0 /* Other */],\r\n            [/*start*/ 0x13F8, 11 /* ALetter */],\r\n            [/*start*/ 0x13FE, 0 /* Other */],\r\n            [/*start*/ 0x1401, 11 /* ALetter */],\r\n            [/*start*/ 0x166D, 0 /* Other */],\r\n            [/*start*/ 0x166F, 11 /* ALetter */],\r\n            [/*start*/ 0x1680, 4 /* WSegSpace */],\r\n            [/*start*/ 0x1681, 11 /* ALetter */],\r\n            [/*start*/ 0x169B, 0 /* Other */],\r\n            [/*start*/ 0x16A0, 11 /* ALetter */],\r\n            [/*start*/ 0x16EB, 0 /* Other */],\r\n            [/*start*/ 0x16EE, 11 /* ALetter */],\r\n            [/*start*/ 0x16F9, 0 /* Other */],\r\n            [/*start*/ 0x1700, 11 /* ALetter */],\r\n            [/*start*/ 0x170D, 0 /* Other */],\r\n            [/*start*/ 0x170E, 11 /* ALetter */],\r\n            [/*start*/ 0x1712, 14 /* Extend */],\r\n            [/*start*/ 0x1715, 0 /* Other */],\r\n            [/*start*/ 0x1720, 11 /* ALetter */],\r\n            [/*start*/ 0x1732, 14 /* Extend */],\r\n            [/*start*/ 0x1735, 0 /* Other */],\r\n            [/*start*/ 0x1740, 11 /* ALetter */],\r\n            [/*start*/ 0x1752, 14 /* Extend */],\r\n            [/*start*/ 0x1754, 0 /* Other */],\r\n            [/*start*/ 0x1760, 11 /* ALetter */],\r\n            [/*start*/ 0x176D, 0 /* Other */],\r\n            [/*start*/ 0x176E, 11 /* ALetter */],\r\n            [/*start*/ 0x1771, 0 /* Other */],\r\n            [/*start*/ 0x1772, 14 /* Extend */],\r\n            [/*start*/ 0x1774, 0 /* Other */],\r\n            [/*start*/ 0x17B4, 14 /* Extend */],\r\n            [/*start*/ 0x17D4, 0 /* Other */],\r\n            [/*start*/ 0x17DD, 14 /* Extend */],\r\n            [/*start*/ 0x17DE, 0 /* Other */],\r\n            [/*start*/ 0x17E0, 9 /* Numeric */],\r\n            [/*start*/ 0x17EA, 0 /* Other */],\r\n            [/*start*/ 0x180B, 14 /* Extend */],\r\n            [/*start*/ 0x180E, 13 /* Format */],\r\n            [/*start*/ 0x180F, 0 /* Other */],\r\n            [/*start*/ 0x1810, 9 /* Numeric */],\r\n            [/*start*/ 0x181A, 0 /* Other */],\r\n            [/*start*/ 0x1820, 11 /* ALetter */],\r\n            [/*start*/ 0x1879, 0 /* Other */],\r\n            [/*start*/ 0x1880, 11 /* ALetter */],\r\n            [/*start*/ 0x1885, 14 /* Extend */],\r\n            [/*start*/ 0x1887, 11 /* ALetter */],\r\n            [/*start*/ 0x18A9, 14 /* Extend */],\r\n            [/*start*/ 0x18AA, 11 /* ALetter */],\r\n            [/*start*/ 0x18AB, 0 /* Other */],\r\n            [/*start*/ 0x18B0, 11 /* ALetter */],\r\n            [/*start*/ 0x18F6, 0 /* Other */],\r\n            [/*start*/ 0x1900, 11 /* ALetter */],\r\n            [/*start*/ 0x191F, 0 /* Other */],\r\n            [/*start*/ 0x1920, 14 /* Extend */],\r\n            [/*start*/ 0x192C, 0 /* Other */],\r\n            [/*start*/ 0x1930, 14 /* Extend */],\r\n            [/*start*/ 0x193C, 0 /* Other */],\r\n            [/*start*/ 0x1946, 9 /* Numeric */],\r\n            [/*start*/ 0x1950, 0 /* Other */],\r\n            [/*start*/ 0x19D0, 9 /* Numeric */],\r\n            [/*start*/ 0x19DA, 0 /* Other */],\r\n            [/*start*/ 0x1A00, 11 /* ALetter */],\r\n            [/*start*/ 0x1A17, 14 /* Extend */],\r\n            [/*start*/ 0x1A1C, 0 /* Other */],\r\n            [/*start*/ 0x1A55, 14 /* Extend */],\r\n            [/*start*/ 0x1A5F, 0 /* Other */],\r\n            [/*start*/ 0x1A60, 14 /* Extend */],\r\n            [/*start*/ 0x1A7D, 0 /* Other */],\r\n            [/*start*/ 0x1A7F, 14 /* Extend */],\r\n            [/*start*/ 0x1A80, 9 /* Numeric */],\r\n            [/*start*/ 0x1A8A, 0 /* Other */],\r\n            [/*start*/ 0x1A90, 9 /* Numeric */],\r\n            [/*start*/ 0x1A9A, 0 /* Other */],\r\n            [/*start*/ 0x1AB0, 14 /* Extend */],\r\n            [/*start*/ 0x1AC1, 0 /* Other */],\r\n            [/*start*/ 0x1B00, 14 /* Extend */],\r\n            [/*start*/ 0x1B05, 11 /* ALetter */],\r\n            [/*start*/ 0x1B34, 14 /* Extend */],\r\n            [/*start*/ 0x1B45, 11 /* ALetter */],\r\n            [/*start*/ 0x1B4C, 0 /* Other */],\r\n            [/*start*/ 0x1B50, 9 /* Numeric */],\r\n            [/*start*/ 0x1B5A, 0 /* Other */],\r\n            [/*start*/ 0x1B6B, 14 /* Extend */],\r\n            [/*start*/ 0x1B74, 0 /* Other */],\r\n            [/*start*/ 0x1B80, 14 /* Extend */],\r\n            [/*start*/ 0x1B83, 11 /* ALetter */],\r\n            [/*start*/ 0x1BA1, 14 /* Extend */],\r\n            [/*start*/ 0x1BAE, 11 /* ALetter */],\r\n            [/*start*/ 0x1BB0, 9 /* Numeric */],\r\n            [/*start*/ 0x1BBA, 11 /* ALetter */],\r\n            [/*start*/ 0x1BE6, 14 /* Extend */],\r\n            [/*start*/ 0x1BF4, 0 /* Other */],\r\n            [/*start*/ 0x1C00, 11 /* ALetter */],\r\n            [/*start*/ 0x1C24, 14 /* Extend */],\r\n            [/*start*/ 0x1C38, 0 /* Other */],\r\n            [/*start*/ 0x1C40, 9 /* Numeric */],\r\n            [/*start*/ 0x1C4A, 0 /* Other */],\r\n            [/*start*/ 0x1C4D, 11 /* ALetter */],\r\n            [/*start*/ 0x1C50, 9 /* Numeric */],\r\n            [/*start*/ 0x1C5A, 11 /* ALetter */],\r\n            [/*start*/ 0x1C7E, 0 /* Other */],\r\n            [/*start*/ 0x1C80, 11 /* ALetter */],\r\n            [/*start*/ 0x1C89, 0 /* Other */],\r\n            [/*start*/ 0x1C90, 11 /* ALetter */],\r\n            [/*start*/ 0x1CBB, 0 /* Other */],\r\n            [/*start*/ 0x1CBD, 11 /* ALetter */],\r\n            [/*start*/ 0x1CC0, 0 /* Other */],\r\n            [/*start*/ 0x1CD0, 14 /* Extend */],\r\n            [/*start*/ 0x1CD3, 0 /* Other */],\r\n            [/*start*/ 0x1CD4, 14 /* Extend */],\r\n            [/*start*/ 0x1CE9, 11 /* ALetter */],\r\n            [/*start*/ 0x1CED, 14 /* Extend */],\r\n            [/*start*/ 0x1CEE, 11 /* ALetter */],\r\n            [/*start*/ 0x1CF4, 14 /* Extend */],\r\n            [/*start*/ 0x1CF5, 11 /* ALetter */],\r\n            [/*start*/ 0x1CF7, 14 /* Extend */],\r\n            [/*start*/ 0x1CFA, 11 /* ALetter */],\r\n            [/*start*/ 0x1CFB, 0 /* Other */],\r\n            [/*start*/ 0x1D00, 11 /* ALetter */],\r\n            [/*start*/ 0x1DC0, 14 /* Extend */],\r\n            [/*start*/ 0x1DFA, 0 /* Other */],\r\n            [/*start*/ 0x1DFB, 14 /* Extend */],\r\n            [/*start*/ 0x1E00, 11 /* ALetter */],\r\n            [/*start*/ 0x1F16, 0 /* Other */],\r\n            [/*start*/ 0x1F18, 11 /* ALetter */],\r\n            [/*start*/ 0x1F1E, 0 /* Other */],\r\n            [/*start*/ 0x1F20, 11 /* ALetter */],\r\n            [/*start*/ 0x1F46, 0 /* Other */],\r\n            [/*start*/ 0x1F48, 11 /* ALetter */],\r\n            [/*start*/ 0x1F4E, 0 /* Other */],\r\n            [/*start*/ 0x1F50, 11 /* ALetter */],\r\n            [/*start*/ 0x1F58, 0 /* Other */],\r\n            [/*start*/ 0x1F59, 11 /* ALetter */],\r\n            [/*start*/ 0x1F5A, 0 /* Other */],\r\n            [/*start*/ 0x1F5B, 11 /* ALetter */],\r\n            [/*start*/ 0x1F5C, 0 /* Other */],\r\n            [/*start*/ 0x1F5D, 11 /* ALetter */],\r\n            [/*start*/ 0x1F5E, 0 /* Other */],\r\n            [/*start*/ 0x1F5F, 11 /* ALetter */],\r\n            [/*start*/ 0x1F7E, 0 /* Other */],\r\n            [/*start*/ 0x1F80, 11 /* ALetter */],\r\n            [/*start*/ 0x1FB5, 0 /* Other */],\r\n            [/*start*/ 0x1FB6, 11 /* ALetter */],\r\n            [/*start*/ 0x1FBD, 0 /* Other */],\r\n            [/*start*/ 0x1FBE, 11 /* ALetter */],\r\n            [/*start*/ 0x1FBF, 0 /* Other */],\r\n            [/*start*/ 0x1FC2, 11 /* ALetter */],\r\n            [/*start*/ 0x1FC5, 0 /* Other */],\r\n            [/*start*/ 0x1FC6, 11 /* ALetter */],\r\n            [/*start*/ 0x1FCD, 0 /* Other */],\r\n            [/*start*/ 0x1FD0, 11 /* ALetter */],\r\n            [/*start*/ 0x1FD4, 0 /* Other */],\r\n            [/*start*/ 0x1FD6, 11 /* ALetter */],\r\n            [/*start*/ 0x1FDC, 0 /* Other */],\r\n            [/*start*/ 0x1FE0, 11 /* ALetter */],\r\n            [/*start*/ 0x1FED, 0 /* Other */],\r\n            [/*start*/ 0x1FF2, 11 /* ALetter */],\r\n            [/*start*/ 0x1FF5, 0 /* Other */],\r\n            [/*start*/ 0x1FF6, 11 /* ALetter */],\r\n            [/*start*/ 0x1FFD, 0 /* Other */],\r\n            [/*start*/ 0x2000, 4 /* WSegSpace */],\r\n            [/*start*/ 0x2007, 0 /* Other */],\r\n            [/*start*/ 0x2008, 4 /* WSegSpace */],\r\n            [/*start*/ 0x200B, 0 /* Other */],\r\n            [/*start*/ 0x200C, 14 /* Extend */],\r\n            [/*start*/ 0x200D, 16 /* ZWJ */],\r\n            [/*start*/ 0x200E, 13 /* Format */],\r\n            [/*start*/ 0x2010, 0 /* Other */],\r\n            [/*start*/ 0x2018, 8 /* MidNumLet */],\r\n            [/*start*/ 0x201A, 0 /* Other */],\r\n            [/*start*/ 0x2024, 8 /* MidNumLet */],\r\n            [/*start*/ 0x2025, 0 /* Other */],\r\n            [/*start*/ 0x2027, 10 /* MidLetter */],\r\n            [/*start*/ 0x2028, 2 /* Newline */],\r\n            [/*start*/ 0x202A, 13 /* Format */],\r\n            [/*start*/ 0x202F, 12 /* ExtendNumLet */],\r\n            [/*start*/ 0x2030, 0 /* Other */],\r\n            [/*start*/ 0x203F, 12 /* ExtendNumLet */],\r\n            [/*start*/ 0x2041, 0 /* Other */],\r\n            [/*start*/ 0x2044, 7 /* MidNum */],\r\n            [/*start*/ 0x2045, 0 /* Other */],\r\n            [/*start*/ 0x2054, 12 /* ExtendNumLet */],\r\n            [/*start*/ 0x2055, 0 /* Other */],\r\n            [/*start*/ 0x205F, 4 /* WSegSpace */],\r\n            [/*start*/ 0x2060, 13 /* Format */],\r\n            [/*start*/ 0x2065, 0 /* Other */],\r\n            [/*start*/ 0x2066, 13 /* Format */],\r\n            [/*start*/ 0x2070, 0 /* Other */],\r\n            [/*start*/ 0x2071, 11 /* ALetter */],\r\n            [/*start*/ 0x2072, 0 /* Other */],\r\n            [/*start*/ 0x207F, 11 /* ALetter */],\r\n            [/*start*/ 0x2080, 0 /* Other */],\r\n            [/*start*/ 0x2090, 11 /* ALetter */],\r\n            [/*start*/ 0x209D, 0 /* Other */],\r\n            [/*start*/ 0x20D0, 14 /* Extend */],\r\n            [/*start*/ 0x20F1, 0 /* Other */],\r\n            [/*start*/ 0x2102, 11 /* ALetter */],\r\n            [/*start*/ 0x2103, 0 /* Other */],\r\n            [/*start*/ 0x2107, 11 /* ALetter */],\r\n            [/*start*/ 0x2108, 0 /* Other */],\r\n            [/*start*/ 0x210A, 11 /* ALetter */],\r\n            [/*start*/ 0x2114, 0 /* Other */],\r\n            [/*start*/ 0x2115, 11 /* ALetter */],\r\n            [/*start*/ 0x2116, 0 /* Other */],\r\n            [/*start*/ 0x2119, 11 /* ALetter */],\r\n            [/*start*/ 0x211E, 0 /* Other */],\r\n            [/*start*/ 0x2124, 11 /* ALetter */],\r\n            [/*start*/ 0x2125, 0 /* Other */],\r\n            [/*start*/ 0x2126, 11 /* ALetter */],\r\n            [/*start*/ 0x2127, 0 /* Other */],\r\n            [/*start*/ 0x2128, 11 /* ALetter */],\r\n            [/*start*/ 0x2129, 0 /* Other */],\r\n            [/*start*/ 0x212A, 11 /* ALetter */],\r\n            [/*start*/ 0x212E, 0 /* Other */],\r\n            [/*start*/ 0x212F, 11 /* ALetter */],\r\n            [/*start*/ 0x213A, 0 /* Other */],\r\n            [/*start*/ 0x213C, 11 /* ALetter */],\r\n            [/*start*/ 0x2140, 0 /* Other */],\r\n            [/*start*/ 0x2145, 11 /* ALetter */],\r\n            [/*start*/ 0x214A, 0 /* Other */],\r\n            [/*start*/ 0x214E, 11 /* ALetter */],\r\n            [/*start*/ 0x214F, 0 /* Other */],\r\n            [/*start*/ 0x2160, 11 /* ALetter */],\r\n            [/*start*/ 0x2189, 0 /* Other */],\r\n            [/*start*/ 0x24B6, 11 /* ALetter */],\r\n            [/*start*/ 0x24EA, 0 /* Other */],\r\n            [/*start*/ 0x2C00, 11 /* ALetter */],\r\n            [/*start*/ 0x2C2F, 0 /* Other */],\r\n            [/*start*/ 0x2C30, 11 /* ALetter */],\r\n            [/*start*/ 0x2C5F, 0 /* Other */],\r\n            [/*start*/ 0x2C60, 11 /* ALetter */],\r\n            [/*start*/ 0x2CE5, 0 /* Other */],\r\n            [/*start*/ 0x2CEB, 11 /* ALetter */],\r\n            [/*start*/ 0x2CEF, 14 /* Extend */],\r\n            [/*start*/ 0x2CF2, 11 /* ALetter */],\r\n            [/*start*/ 0x2CF4, 0 /* Other */],\r\n            [/*start*/ 0x2D00, 11 /* ALetter */],\r\n            [/*start*/ 0x2D26, 0 /* Other */],\r\n            [/*start*/ 0x2D27, 11 /* ALetter */],\r\n            [/*start*/ 0x2D28, 0 /* Other */],\r\n            [/*start*/ 0x2D2D, 11 /* ALetter */],\r\n            [/*start*/ 0x2D2E, 0 /* Other */],\r\n            [/*start*/ 0x2D30, 11 /* ALetter */],\r\n            [/*start*/ 0x2D68, 0 /* Other */],\r\n            [/*start*/ 0x2D6F, 11 /* ALetter */],\r\n            [/*start*/ 0x2D70, 0 /* Other */],\r\n            [/*start*/ 0x2D7F, 14 /* Extend */],\r\n            [/*start*/ 0x2D80, 11 /* ALetter */],\r\n            [/*start*/ 0x2D97, 0 /* Other */],\r\n            [/*start*/ 0x2DA0, 11 /* ALetter */],\r\n            [/*start*/ 0x2DA7, 0 /* Other */],\r\n            [/*start*/ 0x2DA8, 11 /* ALetter */],\r\n            [/*start*/ 0x2DAF, 0 /* Other */],\r\n            [/*start*/ 0x2DB0, 11 /* ALetter */],\r\n            [/*start*/ 0x2DB7, 0 /* Other */],\r\n            [/*start*/ 0x2DB8, 11 /* ALetter */],\r\n            [/*start*/ 0x2DBF, 0 /* Other */],\r\n            [/*start*/ 0x2DC0, 11 /* ALetter */],\r\n            [/*start*/ 0x2DC7, 0 /* Other */],\r\n            [/*start*/ 0x2DC8, 11 /* ALetter */],\r\n            [/*start*/ 0x2DCF, 0 /* Other */],\r\n            [/*start*/ 0x2DD0, 11 /* ALetter */],\r\n            [/*start*/ 0x2DD7, 0 /* Other */],\r\n            [/*start*/ 0x2DD8, 11 /* ALetter */],\r\n            [/*start*/ 0x2DDF, 0 /* Other */],\r\n            [/*start*/ 0x2DE0, 14 /* Extend */],\r\n            [/*start*/ 0x2E00, 0 /* Other */],\r\n            [/*start*/ 0x2E2F, 11 /* ALetter */],\r\n            [/*start*/ 0x2E30, 0 /* Other */],\r\n            [/*start*/ 0x3000, 4 /* WSegSpace */],\r\n            [/*start*/ 0x3001, 0 /* Other */],\r\n            [/*start*/ 0x3005, 11 /* ALetter */],\r\n            [/*start*/ 0x3006, 0 /* Other */],\r\n            [/*start*/ 0x302A, 14 /* Extend */],\r\n            [/*start*/ 0x3030, 0 /* Other */],\r\n            [/*start*/ 0x3031, 17 /* Katakana */],\r\n            [/*start*/ 0x3036, 0 /* Other */],\r\n            [/*start*/ 0x303B, 11 /* ALetter */],\r\n            [/*start*/ 0x303D, 0 /* Other */],\r\n            [/*start*/ 0x3099, 14 /* Extend */],\r\n            [/*start*/ 0x309B, 17 /* Katakana */],\r\n            [/*start*/ 0x309D, 0 /* Other */],\r\n            [/*start*/ 0x30A0, 17 /* Katakana */],\r\n            [/*start*/ 0x30FB, 0 /* Other */],\r\n            [/*start*/ 0x30FC, 17 /* Katakana */],\r\n            [/*start*/ 0x3100, 0 /* Other */],\r\n            [/*start*/ 0x3105, 11 /* ALetter */],\r\n            [/*start*/ 0x3130, 0 /* Other */],\r\n            [/*start*/ 0x3131, 11 /* ALetter */],\r\n            [/*start*/ 0x318F, 0 /* Other */],\r\n            [/*start*/ 0x31A0, 11 /* ALetter */],\r\n            [/*start*/ 0x31C0, 0 /* Other */],\r\n            [/*start*/ 0x31F0, 17 /* Katakana */],\r\n            [/*start*/ 0x3200, 0 /* Other */],\r\n            [/*start*/ 0x32D0, 17 /* Katakana */],\r\n            [/*start*/ 0x32FF, 0 /* Other */],\r\n            [/*start*/ 0x3300, 17 /* Katakana */],\r\n            [/*start*/ 0x3358, 0 /* Other */],\r\n            [/*start*/ 0xA000, 11 /* ALetter */],\r\n            [/*start*/ 0xA48D, 0 /* Other */],\r\n            [/*start*/ 0xA4D0, 11 /* ALetter */],\r\n            [/*start*/ 0xA4FE, 0 /* Other */],\r\n            [/*start*/ 0xA500, 11 /* ALetter */],\r\n            [/*start*/ 0xA60D, 0 /* Other */],\r\n            [/*start*/ 0xA610, 11 /* ALetter */],\r\n            [/*start*/ 0xA620, 9 /* Numeric */],\r\n            [/*start*/ 0xA62A, 11 /* ALetter */],\r\n            [/*start*/ 0xA62C, 0 /* Other */],\r\n            [/*start*/ 0xA640, 11 /* ALetter */],\r\n            [/*start*/ 0xA66F, 14 /* Extend */],\r\n            [/*start*/ 0xA673, 0 /* Other */],\r\n            [/*start*/ 0xA674, 14 /* Extend */],\r\n            [/*start*/ 0xA67E, 0 /* Other */],\r\n            [/*start*/ 0xA67F, 11 /* ALetter */],\r\n            [/*start*/ 0xA69E, 14 /* Extend */],\r\n            [/*start*/ 0xA6A0, 11 /* ALetter */],\r\n            [/*start*/ 0xA6F0, 14 /* Extend */],\r\n            [/*start*/ 0xA6F2, 0 /* Other */],\r\n            [/*start*/ 0xA708, 11 /* ALetter */],\r\n            [/*start*/ 0xA7C0, 0 /* Other */],\r\n            [/*start*/ 0xA7C2, 11 /* ALetter */],\r\n            [/*start*/ 0xA7CB, 0 /* Other */],\r\n            [/*start*/ 0xA7F5, 11 /* ALetter */],\r\n            [/*start*/ 0xA802, 14 /* Extend */],\r\n            [/*start*/ 0xA803, 11 /* ALetter */],\r\n            [/*start*/ 0xA806, 14 /* Extend */],\r\n            [/*start*/ 0xA807, 11 /* ALetter */],\r\n            [/*start*/ 0xA80B, 14 /* Extend */],\r\n            [/*start*/ 0xA80C, 11 /* ALetter */],\r\n            [/*start*/ 0xA823, 14 /* Extend */],\r\n            [/*start*/ 0xA828, 0 /* Other */],\r\n            [/*start*/ 0xA82C, 14 /* Extend */],\r\n            [/*start*/ 0xA82D, 0 /* Other */],\r\n            [/*start*/ 0xA840, 11 /* ALetter */],\r\n            [/*start*/ 0xA874, 0 /* Other */],\r\n            [/*start*/ 0xA880, 14 /* Extend */],\r\n            [/*start*/ 0xA882, 11 /* ALetter */],\r\n            [/*start*/ 0xA8B4, 14 /* Extend */],\r\n            [/*start*/ 0xA8C6, 0 /* Other */],\r\n            [/*start*/ 0xA8D0, 9 /* Numeric */],\r\n            [/*start*/ 0xA8DA, 0 /* Other */],\r\n            [/*start*/ 0xA8E0, 14 /* Extend */],\r\n            [/*start*/ 0xA8F2, 11 /* ALetter */],\r\n            [/*start*/ 0xA8F8, 0 /* Other */],\r\n            [/*start*/ 0xA8FB, 11 /* ALetter */],\r\n            [/*start*/ 0xA8FC, 0 /* Other */],\r\n            [/*start*/ 0xA8FD, 11 /* ALetter */],\r\n            [/*start*/ 0xA8FF, 14 /* Extend */],\r\n            [/*start*/ 0xA900, 9 /* Numeric */],\r\n            [/*start*/ 0xA90A, 11 /* ALetter */],\r\n            [/*start*/ 0xA926, 14 /* Extend */],\r\n            [/*start*/ 0xA92E, 0 /* Other */],\r\n            [/*start*/ 0xA930, 11 /* ALetter */],\r\n            [/*start*/ 0xA947, 14 /* Extend */],\r\n            [/*start*/ 0xA954, 0 /* Other */],\r\n            [/*start*/ 0xA960, 11 /* ALetter */],\r\n            [/*start*/ 0xA97D, 0 /* Other */],\r\n            [/*start*/ 0xA980, 14 /* Extend */],\r\n            [/*start*/ 0xA984, 11 /* ALetter */],\r\n            [/*start*/ 0xA9B3, 14 /* Extend */],\r\n            [/*start*/ 0xA9C1, 0 /* Other */],\r\n            [/*start*/ 0xA9CF, 11 /* ALetter */],\r\n            [/*start*/ 0xA9D0, 9 /* Numeric */],\r\n            [/*start*/ 0xA9DA, 0 /* Other */],\r\n            [/*start*/ 0xA9E5, 14 /* Extend */],\r\n            [/*start*/ 0xA9E6, 0 /* Other */],\r\n            [/*start*/ 0xA9F0, 9 /* Numeric */],\r\n            [/*start*/ 0xA9FA, 0 /* Other */],\r\n            [/*start*/ 0xAA00, 11 /* ALetter */],\r\n            [/*start*/ 0xAA29, 14 /* Extend */],\r\n            [/*start*/ 0xAA37, 0 /* Other */],\r\n            [/*start*/ 0xAA40, 11 /* ALetter */],\r\n            [/*start*/ 0xAA43, 14 /* Extend */],\r\n            [/*start*/ 0xAA44, 11 /* ALetter */],\r\n            [/*start*/ 0xAA4C, 14 /* Extend */],\r\n            [/*start*/ 0xAA4E, 0 /* Other */],\r\n            [/*start*/ 0xAA50, 9 /* Numeric */],\r\n            [/*start*/ 0xAA5A, 0 /* Other */],\r\n            [/*start*/ 0xAA7B, 14 /* Extend */],\r\n            [/*start*/ 0xAA7E, 0 /* Other */],\r\n            [/*start*/ 0xAAB0, 14 /* Extend */],\r\n            [/*start*/ 0xAAB1, 0 /* Other */],\r\n            [/*start*/ 0xAAB2, 14 /* Extend */],\r\n            [/*start*/ 0xAAB5, 0 /* Other */],\r\n            [/*start*/ 0xAAB7, 14 /* Extend */],\r\n            [/*start*/ 0xAAB9, 0 /* Other */],\r\n            [/*start*/ 0xAABE, 14 /* Extend */],\r\n            [/*start*/ 0xAAC0, 0 /* Other */],\r\n            [/*start*/ 0xAAC1, 14 /* Extend */],\r\n            [/*start*/ 0xAAC2, 0 /* Other */],\r\n            [/*start*/ 0xAAE0, 11 /* ALetter */],\r\n            [/*start*/ 0xAAEB, 14 /* Extend */],\r\n            [/*start*/ 0xAAF0, 0 /* Other */],\r\n            [/*start*/ 0xAAF2, 11 /* ALetter */],\r\n            [/*start*/ 0xAAF5, 14 /* Extend */],\r\n            [/*start*/ 0xAAF7, 0 /* Other */],\r\n            [/*start*/ 0xAB01, 11 /* ALetter */],\r\n            [/*start*/ 0xAB07, 0 /* Other */],\r\n            [/*start*/ 0xAB09, 11 /* ALetter */],\r\n            [/*start*/ 0xAB0F, 0 /* Other */],\r\n            [/*start*/ 0xAB11, 11 /* ALetter */],\r\n            [/*start*/ 0xAB17, 0 /* Other */],\r\n            [/*start*/ 0xAB20, 11 /* ALetter */],\r\n            [/*start*/ 0xAB27, 0 /* Other */],\r\n            [/*start*/ 0xAB28, 11 /* ALetter */],\r\n            [/*start*/ 0xAB2F, 0 /* Other */],\r\n            [/*start*/ 0xAB30, 11 /* ALetter */],\r\n            [/*start*/ 0xAB6A, 0 /* Other */],\r\n            [/*start*/ 0xAB70, 11 /* ALetter */],\r\n            [/*start*/ 0xABE3, 14 /* Extend */],\r\n            [/*start*/ 0xABEB, 0 /* Other */],\r\n            [/*start*/ 0xABEC, 14 /* Extend */],\r\n            [/*start*/ 0xABEE, 0 /* Other */],\r\n            [/*start*/ 0xABF0, 9 /* Numeric */],\r\n            [/*start*/ 0xABFA, 0 /* Other */],\r\n            [/*start*/ 0xAC00, 11 /* ALetter */],\r\n            [/*start*/ 0xD7A4, 0 /* Other */],\r\n            [/*start*/ 0xD7B0, 11 /* ALetter */],\r\n            [/*start*/ 0xD7C7, 0 /* Other */],\r\n            [/*start*/ 0xD7CB, 11 /* ALetter */],\r\n            [/*start*/ 0xD7FC, 0 /* Other */],\r\n            [/*start*/ 0xFB00, 11 /* ALetter */],\r\n            [/*start*/ 0xFB07, 0 /* Other */],\r\n            [/*start*/ 0xFB13, 11 /* ALetter */],\r\n            [/*start*/ 0xFB18, 0 /* Other */],\r\n            [/*start*/ 0xFB1D, 15 /* Hebrew_Letter */],\r\n            [/*start*/ 0xFB1E, 14 /* Extend */],\r\n            [/*start*/ 0xFB1F, 15 /* Hebrew_Letter */],\r\n            [/*start*/ 0xFB29, 0 /* Other */],\r\n            [/*start*/ 0xFB2A, 15 /* Hebrew_Letter */],\r\n            [/*start*/ 0xFB37, 0 /* Other */],\r\n            [/*start*/ 0xFB38, 15 /* Hebrew_Letter */],\r\n            [/*start*/ 0xFB3D, 0 /* Other */],\r\n            [/*start*/ 0xFB3E, 15 /* Hebrew_Letter */],\r\n            [/*start*/ 0xFB3F, 0 /* Other */],\r\n            [/*start*/ 0xFB40, 15 /* Hebrew_Letter */],\r\n            [/*start*/ 0xFB42, 0 /* Other */],\r\n            [/*start*/ 0xFB43, 15 /* Hebrew_Letter */],\r\n            [/*start*/ 0xFB45, 0 /* Other */],\r\n            [/*start*/ 0xFB46, 15 /* Hebrew_Letter */],\r\n            [/*start*/ 0xFB50, 11 /* ALetter */],\r\n            [/*start*/ 0xFBB2, 0 /* Other */],\r\n            [/*start*/ 0xFBD3, 11 /* ALetter */],\r\n            [/*start*/ 0xFD3E, 0 /* Other */],\r\n            [/*start*/ 0xFD50, 11 /* ALetter */],\r\n            [/*start*/ 0xFD90, 0 /* Other */],\r\n            [/*start*/ 0xFD92, 11 /* ALetter */],\r\n            [/*start*/ 0xFDC8, 0 /* Other */],\r\n            [/*start*/ 0xFDF0, 11 /* ALetter */],\r\n            [/*start*/ 0xFDFC, 0 /* Other */],\r\n            [/*start*/ 0xFE00, 14 /* Extend */],\r\n            [/*start*/ 0xFE10, 7 /* MidNum */],\r\n            [/*start*/ 0xFE11, 0 /* Other */],\r\n            [/*start*/ 0xFE13, 10 /* MidLetter */],\r\n            [/*start*/ 0xFE14, 7 /* MidNum */],\r\n            [/*start*/ 0xFE15, 0 /* Other */],\r\n            [/*start*/ 0xFE20, 14 /* Extend */],\r\n            [/*start*/ 0xFE30, 0 /* Other */],\r\n            [/*start*/ 0xFE33, 12 /* ExtendNumLet */],\r\n            [/*start*/ 0xFE35, 0 /* Other */],\r\n            [/*start*/ 0xFE4D, 12 /* ExtendNumLet */],\r\n            [/*start*/ 0xFE50, 7 /* MidNum */],\r\n            [/*start*/ 0xFE51, 0 /* Other */],\r\n            [/*start*/ 0xFE52, 8 /* MidNumLet */],\r\n            [/*start*/ 0xFE53, 0 /* Other */],\r\n            [/*start*/ 0xFE54, 7 /* MidNum */],\r\n            [/*start*/ 0xFE55, 10 /* MidLetter */],\r\n            [/*start*/ 0xFE56, 0 /* Other */],\r\n            [/*start*/ 0xFE70, 11 /* ALetter */],\r\n            [/*start*/ 0xFE75, 0 /* Other */],\r\n            [/*start*/ 0xFE76, 11 /* ALetter */],\r\n            [/*start*/ 0xFEFD, 0 /* Other */],\r\n            [/*start*/ 0xFEFF, 13 /* Format */],\r\n            [/*start*/ 0xFF00, 0 /* Other */],\r\n            [/*start*/ 0xFF07, 8 /* MidNumLet */],\r\n            [/*start*/ 0xFF08, 0 /* Other */],\r\n            [/*start*/ 0xFF0C, 7 /* MidNum */],\r\n            [/*start*/ 0xFF0D, 0 /* Other */],\r\n            [/*start*/ 0xFF0E, 8 /* MidNumLet */],\r\n            [/*start*/ 0xFF0F, 0 /* Other */],\r\n            [/*start*/ 0xFF10, 9 /* Numeric */],\r\n            [/*start*/ 0xFF1A, 10 /* MidLetter */],\r\n            [/*start*/ 0xFF1B, 7 /* MidNum */],\r\n            [/*start*/ 0xFF1C, 0 /* Other */],\r\n            [/*start*/ 0xFF21, 11 /* ALetter */],\r\n            [/*start*/ 0xFF3B, 0 /* Other */],\r\n            [/*start*/ 0xFF3F, 12 /* ExtendNumLet */],\r\n            [/*start*/ 0xFF40, 0 /* Other */],\r\n            [/*start*/ 0xFF41, 11 /* ALetter */],\r\n            [/*start*/ 0xFF5B, 0 /* Other */],\r\n            [/*start*/ 0xFF66, 17 /* Katakana */],\r\n            [/*start*/ 0xFF9E, 14 /* Extend */],\r\n            [/*start*/ 0xFFA0, 11 /* ALetter */],\r\n            [/*start*/ 0xFFBF, 0 /* Other */],\r\n            [/*start*/ 0xFFC2, 11 /* ALetter */],\r\n            [/*start*/ 0xFFC8, 0 /* Other */],\r\n            [/*start*/ 0xFFCA, 11 /* ALetter */],\r\n            [/*start*/ 0xFFD0, 0 /* Other */],\r\n            [/*start*/ 0xFFD2, 11 /* ALetter */],\r\n            [/*start*/ 0xFFD8, 0 /* Other */],\r\n            [/*start*/ 0xFFDA, 11 /* ALetter */],\r\n            [/*start*/ 0xFFDD, 0 /* Other */],\r\n            [/*start*/ 0xFFF9, 13 /* Format */],\r\n            [/*start*/ 0xFFFC, 0 /* Other */],\r\n            [/*start*/ 0x10000, 11 /* ALetter */],\r\n            [/*start*/ 0x1000C, 0 /* Other */],\r\n            [/*start*/ 0x1000D, 11 /* ALetter */],\r\n            [/*start*/ 0x10027, 0 /* Other */],\r\n            [/*start*/ 0x10028, 11 /* ALetter */],\r\n            [/*start*/ 0x1003B, 0 /* Other */],\r\n            [/*start*/ 0x1003C, 11 /* ALetter */],\r\n            [/*start*/ 0x1003E, 0 /* Other */],\r\n            [/*start*/ 0x1003F, 11 /* ALetter */],\r\n            [/*start*/ 0x1004E, 0 /* Other */],\r\n            [/*start*/ 0x10050, 11 /* ALetter */],\r\n            [/*start*/ 0x1005E, 0 /* Other */],\r\n            [/*start*/ 0x10080, 11 /* ALetter */],\r\n            [/*start*/ 0x100FB, 0 /* Other */],\r\n            [/*start*/ 0x10140, 11 /* ALetter */],\r\n            [/*start*/ 0x10175, 0 /* Other */],\r\n            [/*start*/ 0x101FD, 14 /* Extend */],\r\n            [/*start*/ 0x101FE, 0 /* Other */],\r\n            [/*start*/ 0x10280, 11 /* ALetter */],\r\n            [/*start*/ 0x1029D, 0 /* Other */],\r\n            [/*start*/ 0x102A0, 11 /* ALetter */],\r\n            [/*start*/ 0x102D1, 0 /* Other */],\r\n            [/*start*/ 0x102E0, 14 /* Extend */],\r\n            [/*start*/ 0x102E1, 0 /* Other */],\r\n            [/*start*/ 0x10300, 11 /* ALetter */],\r\n            [/*start*/ 0x10320, 0 /* Other */],\r\n            [/*start*/ 0x1032D, 11 /* ALetter */],\r\n            [/*start*/ 0x1034B, 0 /* Other */],\r\n            [/*start*/ 0x10350, 11 /* ALetter */],\r\n            [/*start*/ 0x10376, 14 /* Extend */],\r\n            [/*start*/ 0x1037B, 0 /* Other */],\r\n            [/*start*/ 0x10380, 11 /* ALetter */],\r\n            [/*start*/ 0x1039E, 0 /* Other */],\r\n            [/*start*/ 0x103A0, 11 /* ALetter */],\r\n            [/*start*/ 0x103C4, 0 /* Other */],\r\n            [/*start*/ 0x103C8, 11 /* ALetter */],\r\n            [/*start*/ 0x103D0, 0 /* Other */],\r\n            [/*start*/ 0x103D1, 11 /* ALetter */],\r\n            [/*start*/ 0x103D6, 0 /* Other */],\r\n            [/*start*/ 0x10400, 11 /* ALetter */],\r\n            [/*start*/ 0x1049E, 0 /* Other */],\r\n            [/*start*/ 0x104A0, 9 /* Numeric */],\r\n            [/*start*/ 0x104AA, 0 /* Other */],\r\n            [/*start*/ 0x104B0, 11 /* ALetter */],\r\n            [/*start*/ 0x104D4, 0 /* Other */],\r\n            [/*start*/ 0x104D8, 11 /* ALetter */],\r\n            [/*start*/ 0x104FC, 0 /* Other */],\r\n            [/*start*/ 0x10500, 11 /* ALetter */],\r\n            [/*start*/ 0x10528, 0 /* Other */],\r\n            [/*start*/ 0x10530, 11 /* ALetter */],\r\n            [/*start*/ 0x10564, 0 /* Other */],\r\n            [/*start*/ 0x10600, 11 /* ALetter */],\r\n            [/*start*/ 0x10737, 0 /* Other */],\r\n            [/*start*/ 0x10740, 11 /* ALetter */],\r\n            [/*start*/ 0x10756, 0 /* Other */],\r\n            [/*start*/ 0x10760, 11 /* ALetter */],\r\n            [/*start*/ 0x10768, 0 /* Other */],\r\n            [/*start*/ 0x10800, 11 /* ALetter */],\r\n            [/*start*/ 0x10806, 0 /* Other */],\r\n            [/*start*/ 0x10808, 11 /* ALetter */],\r\n            [/*start*/ 0x10809, 0 /* Other */],\r\n            [/*start*/ 0x1080A, 11 /* ALetter */],\r\n            [/*start*/ 0x10836, 0 /* Other */],\r\n            [/*start*/ 0x10837, 11 /* ALetter */],\r\n            [/*start*/ 0x10839, 0 /* Other */],\r\n            [/*start*/ 0x1083C, 11 /* ALetter */],\r\n            [/*start*/ 0x1083D, 0 /* Other */],\r\n            [/*start*/ 0x1083F, 11 /* ALetter */],\r\n            [/*start*/ 0x10856, 0 /* Other */],\r\n            [/*start*/ 0x10860, 11 /* ALetter */],\r\n            [/*start*/ 0x10877, 0 /* Other */],\r\n            [/*start*/ 0x10880, 11 /* ALetter */],\r\n            [/*start*/ 0x1089F, 0 /* Other */],\r\n            [/*start*/ 0x108E0, 11 /* ALetter */],\r\n            [/*start*/ 0x108F3, 0 /* Other */],\r\n            [/*start*/ 0x108F4, 11 /* ALetter */],\r\n            [/*start*/ 0x108F6, 0 /* Other */],\r\n            [/*start*/ 0x10900, 11 /* ALetter */],\r\n            [/*start*/ 0x10916, 0 /* Other */],\r\n            [/*start*/ 0x10920, 11 /* ALetter */],\r\n            [/*start*/ 0x1093A, 0 /* Other */],\r\n            [/*start*/ 0x10980, 11 /* ALetter */],\r\n            [/*start*/ 0x109B8, 0 /* Other */],\r\n            [/*start*/ 0x109BE, 11 /* ALetter */],\r\n            [/*start*/ 0x109C0, 0 /* Other */],\r\n            [/*start*/ 0x10A00, 11 /* ALetter */],\r\n            [/*start*/ 0x10A01, 14 /* Extend */],\r\n            [/*start*/ 0x10A04, 0 /* Other */],\r\n            [/*start*/ 0x10A05, 14 /* Extend */],\r\n            [/*start*/ 0x10A07, 0 /* Other */],\r\n            [/*start*/ 0x10A0C, 14 /* Extend */],\r\n            [/*start*/ 0x10A10, 11 /* ALetter */],\r\n            [/*start*/ 0x10A14, 0 /* Other */],\r\n            [/*start*/ 0x10A15, 11 /* ALetter */],\r\n            [/*start*/ 0x10A18, 0 /* Other */],\r\n            [/*start*/ 0x10A19, 11 /* ALetter */],\r\n            [/*start*/ 0x10A36, 0 /* Other */],\r\n            [/*start*/ 0x10A38, 14 /* Extend */],\r\n            [/*start*/ 0x10A3B, 0 /* Other */],\r\n            [/*start*/ 0x10A3F, 14 /* Extend */],\r\n            [/*start*/ 0x10A40, 0 /* Other */],\r\n            [/*start*/ 0x10A60, 11 /* ALetter */],\r\n            [/*start*/ 0x10A7D, 0 /* Other */],\r\n            [/*start*/ 0x10A80, 11 /* ALetter */],\r\n            [/*start*/ 0x10A9D, 0 /* Other */],\r\n            [/*start*/ 0x10AC0, 11 /* ALetter */],\r\n            [/*start*/ 0x10AC8, 0 /* Other */],\r\n            [/*start*/ 0x10AC9, 11 /* ALetter */],\r\n            [/*start*/ 0x10AE5, 14 /* Extend */],\r\n            [/*start*/ 0x10AE7, 0 /* Other */],\r\n            [/*start*/ 0x10B00, 11 /* ALetter */],\r\n            [/*start*/ 0x10B36, 0 /* Other */],\r\n            [/*start*/ 0x10B40, 11 /* ALetter */],\r\n            [/*start*/ 0x10B56, 0 /* Other */],\r\n            [/*start*/ 0x10B60, 11 /* ALetter */],\r\n            [/*start*/ 0x10B73, 0 /* Other */],\r\n            [/*start*/ 0x10B80, 11 /* ALetter */],\r\n            [/*start*/ 0x10B92, 0 /* Other */],\r\n            [/*start*/ 0x10C00, 11 /* ALetter */],\r\n            [/*start*/ 0x10C49, 0 /* Other */],\r\n            [/*start*/ 0x10C80, 11 /* ALetter */],\r\n            [/*start*/ 0x10CB3, 0 /* Other */],\r\n            [/*start*/ 0x10CC0, 11 /* ALetter */],\r\n            [/*start*/ 0x10CF3, 0 /* Other */],\r\n            [/*start*/ 0x10D00, 11 /* ALetter */],\r\n            [/*start*/ 0x10D24, 14 /* Extend */],\r\n            [/*start*/ 0x10D28, 0 /* Other */],\r\n            [/*start*/ 0x10D30, 9 /* Numeric */],\r\n            [/*start*/ 0x10D3A, 0 /* Other */],\r\n            [/*start*/ 0x10E80, 11 /* ALetter */],\r\n            [/*start*/ 0x10EAA, 0 /* Other */],\r\n            [/*start*/ 0x10EAB, 14 /* Extend */],\r\n            [/*start*/ 0x10EAD, 0 /* Other */],\r\n            [/*start*/ 0x10EB0, 11 /* ALetter */],\r\n            [/*start*/ 0x10EB2, 0 /* Other */],\r\n            [/*start*/ 0x10F00, 11 /* ALetter */],\r\n            [/*start*/ 0x10F1D, 0 /* Other */],\r\n            [/*start*/ 0x10F27, 11 /* ALetter */],\r\n            [/*start*/ 0x10F28, 0 /* Other */],\r\n            [/*start*/ 0x10F30, 11 /* ALetter */],\r\n            [/*start*/ 0x10F46, 14 /* Extend */],\r\n            [/*start*/ 0x10F51, 0 /* Other */],\r\n            [/*start*/ 0x10FB0, 11 /* ALetter */],\r\n            [/*start*/ 0x10FC5, 0 /* Other */],\r\n            [/*start*/ 0x10FE0, 11 /* ALetter */],\r\n            [/*start*/ 0x10FF7, 0 /* Other */],\r\n            [/*start*/ 0x11000, 14 /* Extend */],\r\n            [/*start*/ 0x11003, 11 /* ALetter */],\r\n            [/*start*/ 0x11038, 14 /* Extend */],\r\n            [/*start*/ 0x11047, 0 /* Other */],\r\n            [/*start*/ 0x11066, 9 /* Numeric */],\r\n            [/*start*/ 0x11070, 0 /* Other */],\r\n            [/*start*/ 0x1107F, 14 /* Extend */],\r\n            [/*start*/ 0x11083, 11 /* ALetter */],\r\n            [/*start*/ 0x110B0, 14 /* Extend */],\r\n            [/*start*/ 0x110BB, 0 /* Other */],\r\n            [/*start*/ 0x110BD, 13 /* Format */],\r\n            [/*start*/ 0x110BE, 0 /* Other */],\r\n            [/*start*/ 0x110CD, 13 /* Format */],\r\n            [/*start*/ 0x110CE, 0 /* Other */],\r\n            [/*start*/ 0x110D0, 11 /* ALetter */],\r\n            [/*start*/ 0x110E9, 0 /* Other */],\r\n            [/*start*/ 0x110F0, 9 /* Numeric */],\r\n            [/*start*/ 0x110FA, 0 /* Other */],\r\n            [/*start*/ 0x11100, 14 /* Extend */],\r\n            [/*start*/ 0x11103, 11 /* ALetter */],\r\n            [/*start*/ 0x11127, 14 /* Extend */],\r\n            [/*start*/ 0x11135, 0 /* Other */],\r\n            [/*start*/ 0x11136, 9 /* Numeric */],\r\n            [/*start*/ 0x11140, 0 /* Other */],\r\n            [/*start*/ 0x11144, 11 /* ALetter */],\r\n            [/*start*/ 0x11145, 14 /* Extend */],\r\n            [/*start*/ 0x11147, 11 /* ALetter */],\r\n            [/*start*/ 0x11148, 0 /* Other */],\r\n            [/*start*/ 0x11150, 11 /* ALetter */],\r\n            [/*start*/ 0x11173, 14 /* Extend */],\r\n            [/*start*/ 0x11174, 0 /* Other */],\r\n            [/*start*/ 0x11176, 11 /* ALetter */],\r\n            [/*start*/ 0x11177, 0 /* Other */],\r\n            [/*start*/ 0x11180, 14 /* Extend */],\r\n            [/*start*/ 0x11183, 11 /* ALetter */],\r\n            [/*start*/ 0x111B3, 14 /* Extend */],\r\n            [/*start*/ 0x111C1, 11 /* ALetter */],\r\n            [/*start*/ 0x111C5, 0 /* Other */],\r\n            [/*start*/ 0x111C9, 14 /* Extend */],\r\n            [/*start*/ 0x111CD, 0 /* Other */],\r\n            [/*start*/ 0x111CE, 14 /* Extend */],\r\n            [/*start*/ 0x111D0, 9 /* Numeric */],\r\n            [/*start*/ 0x111DA, 11 /* ALetter */],\r\n            [/*start*/ 0x111DB, 0 /* Other */],\r\n            [/*start*/ 0x111DC, 11 /* ALetter */],\r\n            [/*start*/ 0x111DD, 0 /* Other */],\r\n            [/*start*/ 0x11200, 11 /* ALetter */],\r\n            [/*start*/ 0x11212, 0 /* Other */],\r\n            [/*start*/ 0x11213, 11 /* ALetter */],\r\n            [/*start*/ 0x1122C, 14 /* Extend */],\r\n            [/*start*/ 0x11238, 0 /* Other */],\r\n            [/*start*/ 0x1123E, 14 /* Extend */],\r\n            [/*start*/ 0x1123F, 0 /* Other */],\r\n            [/*start*/ 0x11280, 11 /* ALetter */],\r\n            [/*start*/ 0x11287, 0 /* Other */],\r\n            [/*start*/ 0x11288, 11 /* ALetter */],\r\n            [/*start*/ 0x11289, 0 /* Other */],\r\n            [/*start*/ 0x1128A, 11 /* ALetter */],\r\n            [/*start*/ 0x1128E, 0 /* Other */],\r\n            [/*start*/ 0x1128F, 11 /* ALetter */],\r\n            [/*start*/ 0x1129E, 0 /* Other */],\r\n            [/*start*/ 0x1129F, 11 /* ALetter */],\r\n            [/*start*/ 0x112A9, 0 /* Other */],\r\n            [/*start*/ 0x112B0, 11 /* ALetter */],\r\n            [/*start*/ 0x112DF, 14 /* Extend */],\r\n            [/*start*/ 0x112EB, 0 /* Other */],\r\n            [/*start*/ 0x112F0, 9 /* Numeric */],\r\n            [/*start*/ 0x112FA, 0 /* Other */],\r\n            [/*start*/ 0x11300, 14 /* Extend */],\r\n            [/*start*/ 0x11304, 0 /* Other */],\r\n            [/*start*/ 0x11305, 11 /* ALetter */],\r\n            [/*start*/ 0x1130D, 0 /* Other */],\r\n            [/*start*/ 0x1130F, 11 /* ALetter */],\r\n            [/*start*/ 0x11311, 0 /* Other */],\r\n            [/*start*/ 0x11313, 11 /* ALetter */],\r\n            [/*start*/ 0x11329, 0 /* Other */],\r\n            [/*start*/ 0x1132A, 11 /* ALetter */],\r\n            [/*start*/ 0x11331, 0 /* Other */],\r\n            [/*start*/ 0x11332, 11 /* ALetter */],\r\n            [/*start*/ 0x11334, 0 /* Other */],\r\n            [/*start*/ 0x11335, 11 /* ALetter */],\r\n            [/*start*/ 0x1133A, 0 /* Other */],\r\n            [/*start*/ 0x1133B, 14 /* Extend */],\r\n            [/*start*/ 0x1133D, 11 /* ALetter */],\r\n            [/*start*/ 0x1133E, 14 /* Extend */],\r\n            [/*start*/ 0x11345, 0 /* Other */],\r\n            [/*start*/ 0x11347, 14 /* Extend */],\r\n            [/*start*/ 0x11349, 0 /* Other */],\r\n            [/*start*/ 0x1134B, 14 /* Extend */],\r\n            [/*start*/ 0x1134E, 0 /* Other */],\r\n            [/*start*/ 0x11350, 11 /* ALetter */],\r\n            [/*start*/ 0x11351, 0 /* Other */],\r\n            [/*start*/ 0x11357, 14 /* Extend */],\r\n            [/*start*/ 0x11358, 0 /* Other */],\r\n            [/*start*/ 0x1135D, 11 /* ALetter */],\r\n            [/*start*/ 0x11362, 14 /* Extend */],\r\n            [/*start*/ 0x11364, 0 /* Other */],\r\n            [/*start*/ 0x11366, 14 /* Extend */],\r\n            [/*start*/ 0x1136D, 0 /* Other */],\r\n            [/*start*/ 0x11370, 14 /* Extend */],\r\n            [/*start*/ 0x11375, 0 /* Other */],\r\n            [/*start*/ 0x11400, 11 /* ALetter */],\r\n            [/*start*/ 0x11435, 14 /* Extend */],\r\n            [/*start*/ 0x11447, 11 /* ALetter */],\r\n            [/*start*/ 0x1144B, 0 /* Other */],\r\n            [/*start*/ 0x11450, 9 /* Numeric */],\r\n            [/*start*/ 0x1145A, 0 /* Other */],\r\n            [/*start*/ 0x1145E, 14 /* Extend */],\r\n            [/*start*/ 0x1145F, 11 /* ALetter */],\r\n            [/*start*/ 0x11462, 0 /* Other */],\r\n            [/*start*/ 0x11480, 11 /* ALetter */],\r\n            [/*start*/ 0x114B0, 14 /* Extend */],\r\n            [/*start*/ 0x114C4, 11 /* ALetter */],\r\n            [/*start*/ 0x114C6, 0 /* Other */],\r\n            [/*start*/ 0x114C7, 11 /* ALetter */],\r\n            [/*start*/ 0x114C8, 0 /* Other */],\r\n            [/*start*/ 0x114D0, 9 /* Numeric */],\r\n            [/*start*/ 0x114DA, 0 /* Other */],\r\n            [/*start*/ 0x11580, 11 /* ALetter */],\r\n            [/*start*/ 0x115AF, 14 /* Extend */],\r\n            [/*start*/ 0x115B6, 0 /* Other */],\r\n            [/*start*/ 0x115B8, 14 /* Extend */],\r\n            [/*start*/ 0x115C1, 0 /* Other */],\r\n            [/*start*/ 0x115D8, 11 /* ALetter */],\r\n            [/*start*/ 0x115DC, 14 /* Extend */],\r\n            [/*start*/ 0x115DE, 0 /* Other */],\r\n            [/*start*/ 0x11600, 11 /* ALetter */],\r\n            [/*start*/ 0x11630, 14 /* Extend */],\r\n            [/*start*/ 0x11641, 0 /* Other */],\r\n            [/*start*/ 0x11644, 11 /* ALetter */],\r\n            [/*start*/ 0x11645, 0 /* Other */],\r\n            [/*start*/ 0x11650, 9 /* Numeric */],\r\n            [/*start*/ 0x1165A, 0 /* Other */],\r\n            [/*start*/ 0x11680, 11 /* ALetter */],\r\n            [/*start*/ 0x116AB, 14 /* Extend */],\r\n            [/*start*/ 0x116B8, 11 /* ALetter */],\r\n            [/*start*/ 0x116B9, 0 /* Other */],\r\n            [/*start*/ 0x116C0, 9 /* Numeric */],\r\n            [/*start*/ 0x116CA, 0 /* Other */],\r\n            [/*start*/ 0x1171D, 14 /* Extend */],\r\n            [/*start*/ 0x1172C, 0 /* Other */],\r\n            [/*start*/ 0x11730, 9 /* Numeric */],\r\n            [/*start*/ 0x1173A, 0 /* Other */],\r\n            [/*start*/ 0x11800, 11 /* ALetter */],\r\n            [/*start*/ 0x1182C, 14 /* Extend */],\r\n            [/*start*/ 0x1183B, 0 /* Other */],\r\n            [/*start*/ 0x118A0, 11 /* ALetter */],\r\n            [/*start*/ 0x118E0, 9 /* Numeric */],\r\n            [/*start*/ 0x118EA, 0 /* Other */],\r\n            [/*start*/ 0x118FF, 11 /* ALetter */],\r\n            [/*start*/ 0x11907, 0 /* Other */],\r\n            [/*start*/ 0x11909, 11 /* ALetter */],\r\n            [/*start*/ 0x1190A, 0 /* Other */],\r\n            [/*start*/ 0x1190C, 11 /* ALetter */],\r\n            [/*start*/ 0x11914, 0 /* Other */],\r\n            [/*start*/ 0x11915, 11 /* ALetter */],\r\n            [/*start*/ 0x11917, 0 /* Other */],\r\n            [/*start*/ 0x11918, 11 /* ALetter */],\r\n            [/*start*/ 0x11930, 14 /* Extend */],\r\n            [/*start*/ 0x11936, 0 /* Other */],\r\n            [/*start*/ 0x11937, 14 /* Extend */],\r\n            [/*start*/ 0x11939, 0 /* Other */],\r\n            [/*start*/ 0x1193B, 14 /* Extend */],\r\n            [/*start*/ 0x1193F, 11 /* ALetter */],\r\n            [/*start*/ 0x11940, 14 /* Extend */],\r\n            [/*start*/ 0x11941, 11 /* ALetter */],\r\n            [/*start*/ 0x11942, 14 /* Extend */],\r\n            [/*start*/ 0x11944, 0 /* Other */],\r\n            [/*start*/ 0x11950, 9 /* Numeric */],\r\n            [/*start*/ 0x1195A, 0 /* Other */],\r\n            [/*start*/ 0x119A0, 11 /* ALetter */],\r\n            [/*start*/ 0x119A8, 0 /* Other */],\r\n            [/*start*/ 0x119AA, 11 /* ALetter */],\r\n            [/*start*/ 0x119D1, 14 /* Extend */],\r\n            [/*start*/ 0x119D8, 0 /* Other */],\r\n            [/*start*/ 0x119DA, 14 /* Extend */],\r\n            [/*start*/ 0x119E1, 11 /* ALetter */],\r\n            [/*start*/ 0x119E2, 0 /* Other */],\r\n            [/*start*/ 0x119E3, 11 /* ALetter */],\r\n            [/*start*/ 0x119E4, 14 /* Extend */],\r\n            [/*start*/ 0x119E5, 0 /* Other */],\r\n            [/*start*/ 0x11A00, 11 /* ALetter */],\r\n            [/*start*/ 0x11A01, 14 /* Extend */],\r\n            [/*start*/ 0x11A0B, 11 /* ALetter */],\r\n            [/*start*/ 0x11A33, 14 /* Extend */],\r\n            [/*start*/ 0x11A3A, 11 /* ALetter */],\r\n            [/*start*/ 0x11A3B, 14 /* Extend */],\r\n            [/*start*/ 0x11A3F, 0 /* Other */],\r\n            [/*start*/ 0x11A47, 14 /* Extend */],\r\n            [/*start*/ 0x11A48, 0 /* Other */],\r\n            [/*start*/ 0x11A50, 11 /* ALetter */],\r\n            [/*start*/ 0x11A51, 14 /* Extend */],\r\n            [/*start*/ 0x11A5C, 11 /* ALetter */],\r\n            [/*start*/ 0x11A8A, 14 /* Extend */],\r\n            [/*start*/ 0x11A9A, 0 /* Other */],\r\n            [/*start*/ 0x11A9D, 11 /* ALetter */],\r\n            [/*start*/ 0x11A9E, 0 /* Other */],\r\n            [/*start*/ 0x11AC0, 11 /* ALetter */],\r\n            [/*start*/ 0x11AF9, 0 /* Other */],\r\n            [/*start*/ 0x11C00, 11 /* ALetter */],\r\n            [/*start*/ 0x11C09, 0 /* Other */],\r\n            [/*start*/ 0x11C0A, 11 /* ALetter */],\r\n            [/*start*/ 0x11C2F, 14 /* Extend */],\r\n            [/*start*/ 0x11C37, 0 /* Other */],\r\n            [/*start*/ 0x11C38, 14 /* Extend */],\r\n            [/*start*/ 0x11C40, 11 /* ALetter */],\r\n            [/*start*/ 0x11C41, 0 /* Other */],\r\n            [/*start*/ 0x11C50, 9 /* Numeric */],\r\n            [/*start*/ 0x11C5A, 0 /* Other */],\r\n            [/*start*/ 0x11C72, 11 /* ALetter */],\r\n            [/*start*/ 0x11C90, 0 /* Other */],\r\n            [/*start*/ 0x11C92, 14 /* Extend */],\r\n            [/*start*/ 0x11CA8, 0 /* Other */],\r\n            [/*start*/ 0x11CA9, 14 /* Extend */],\r\n            [/*start*/ 0x11CB7, 0 /* Other */],\r\n            [/*start*/ 0x11D00, 11 /* ALetter */],\r\n            [/*start*/ 0x11D07, 0 /* Other */],\r\n            [/*start*/ 0x11D08, 11 /* ALetter */],\r\n            [/*start*/ 0x11D0A, 0 /* Other */],\r\n            [/*start*/ 0x11D0B, 11 /* ALetter */],\r\n            [/*start*/ 0x11D31, 14 /* Extend */],\r\n            [/*start*/ 0x11D37, 0 /* Other */],\r\n            [/*start*/ 0x11D3A, 14 /* Extend */],\r\n            [/*start*/ 0x11D3B, 0 /* Other */],\r\n            [/*start*/ 0x11D3C, 14 /* Extend */],\r\n            [/*start*/ 0x11D3E, 0 /* Other */],\r\n            [/*start*/ 0x11D3F, 14 /* Extend */],\r\n            [/*start*/ 0x11D46, 11 /* ALetter */],\r\n            [/*start*/ 0x11D47, 14 /* Extend */],\r\n            [/*start*/ 0x11D48, 0 /* Other */],\r\n            [/*start*/ 0x11D50, 9 /* Numeric */],\r\n            [/*start*/ 0x11D5A, 0 /* Other */],\r\n            [/*start*/ 0x11D60, 11 /* ALetter */],\r\n            [/*start*/ 0x11D66, 0 /* Other */],\r\n            [/*start*/ 0x11D67, 11 /* ALetter */],\r\n            [/*start*/ 0x11D69, 0 /* Other */],\r\n            [/*start*/ 0x11D6A, 11 /* ALetter */],\r\n            [/*start*/ 0x11D8A, 14 /* Extend */],\r\n            [/*start*/ 0x11D8F, 0 /* Other */],\r\n            [/*start*/ 0x11D90, 14 /* Extend */],\r\n            [/*start*/ 0x11D92, 0 /* Other */],\r\n            [/*start*/ 0x11D93, 14 /* Extend */],\r\n            [/*start*/ 0x11D98, 11 /* ALetter */],\r\n            [/*start*/ 0x11D99, 0 /* Other */],\r\n            [/*start*/ 0x11DA0, 9 /* Numeric */],\r\n            [/*start*/ 0x11DAA, 0 /* Other */],\r\n            [/*start*/ 0x11EE0, 11 /* ALetter */],\r\n            [/*start*/ 0x11EF3, 14 /* Extend */],\r\n            [/*start*/ 0x11EF7, 0 /* Other */],\r\n            [/*start*/ 0x11FB0, 11 /* ALetter */],\r\n            [/*start*/ 0x11FB1, 0 /* Other */],\r\n            [/*start*/ 0x12000, 11 /* ALetter */],\r\n            [/*start*/ 0x1239A, 0 /* Other */],\r\n            [/*start*/ 0x12400, 11 /* ALetter */],\r\n            [/*start*/ 0x1246F, 0 /* Other */],\r\n            [/*start*/ 0x12480, 11 /* ALetter */],\r\n            [/*start*/ 0x12544, 0 /* Other */],\r\n            [/*start*/ 0x13000, 11 /* ALetter */],\r\n            [/*start*/ 0x1342F, 0 /* Other */],\r\n            [/*start*/ 0x13430, 13 /* Format */],\r\n            [/*start*/ 0x13439, 0 /* Other */],\r\n            [/*start*/ 0x14400, 11 /* ALetter */],\r\n            [/*start*/ 0x14647, 0 /* Other */],\r\n            [/*start*/ 0x16800, 11 /* ALetter */],\r\n            [/*start*/ 0x16A39, 0 /* Other */],\r\n            [/*start*/ 0x16A40, 11 /* ALetter */],\r\n            [/*start*/ 0x16A5F, 0 /* Other */],\r\n            [/*start*/ 0x16A60, 9 /* Numeric */],\r\n            [/*start*/ 0x16A6A, 0 /* Other */],\r\n            [/*start*/ 0x16AD0, 11 /* ALetter */],\r\n            [/*start*/ 0x16AEE, 0 /* Other */],\r\n            [/*start*/ 0x16AF0, 14 /* Extend */],\r\n            [/*start*/ 0x16AF5, 0 /* Other */],\r\n            [/*start*/ 0x16B00, 11 /* ALetter */],\r\n            [/*start*/ 0x16B30, 14 /* Extend */],\r\n            [/*start*/ 0x16B37, 0 /* Other */],\r\n            [/*start*/ 0x16B40, 11 /* ALetter */],\r\n            [/*start*/ 0x16B44, 0 /* Other */],\r\n            [/*start*/ 0x16B50, 9 /* Numeric */],\r\n            [/*start*/ 0x16B5A, 0 /* Other */],\r\n            [/*start*/ 0x16B63, 11 /* ALetter */],\r\n            [/*start*/ 0x16B78, 0 /* Other */],\r\n            [/*start*/ 0x16B7D, 11 /* ALetter */],\r\n            [/*start*/ 0x16B90, 0 /* Other */],\r\n            [/*start*/ 0x16E40, 11 /* ALetter */],\r\n            [/*start*/ 0x16E80, 0 /* Other */],\r\n            [/*start*/ 0x16F00, 11 /* ALetter */],\r\n            [/*start*/ 0x16F4B, 0 /* Other */],\r\n            [/*start*/ 0x16F4F, 14 /* Extend */],\r\n            [/*start*/ 0x16F50, 11 /* ALetter */],\r\n            [/*start*/ 0x16F51, 14 /* Extend */],\r\n            [/*start*/ 0x16F88, 0 /* Other */],\r\n            [/*start*/ 0x16F8F, 14 /* Extend */],\r\n            [/*start*/ 0x16F93, 11 /* ALetter */],\r\n            [/*start*/ 0x16FA0, 0 /* Other */],\r\n            [/*start*/ 0x16FE0, 11 /* ALetter */],\r\n            [/*start*/ 0x16FE2, 0 /* Other */],\r\n            [/*start*/ 0x16FE3, 11 /* ALetter */],\r\n            [/*start*/ 0x16FE4, 14 /* Extend */],\r\n            [/*start*/ 0x16FE5, 0 /* Other */],\r\n            [/*start*/ 0x16FF0, 14 /* Extend */],\r\n            [/*start*/ 0x16FF2, 0 /* Other */],\r\n            [/*start*/ 0x1B000, 17 /* Katakana */],\r\n            [/*start*/ 0x1B001, 0 /* Other */],\r\n            [/*start*/ 0x1B164, 17 /* Katakana */],\r\n            [/*start*/ 0x1B168, 0 /* Other */],\r\n            [/*start*/ 0x1BC00, 11 /* ALetter */],\r\n            [/*start*/ 0x1BC6B, 0 /* Other */],\r\n            [/*start*/ 0x1BC70, 11 /* ALetter */],\r\n            [/*start*/ 0x1BC7D, 0 /* Other */],\r\n            [/*start*/ 0x1BC80, 11 /* ALetter */],\r\n            [/*start*/ 0x1BC89, 0 /* Other */],\r\n            [/*start*/ 0x1BC90, 11 /* ALetter */],\r\n            [/*start*/ 0x1BC9A, 0 /* Other */],\r\n            [/*start*/ 0x1BC9D, 14 /* Extend */],\r\n            [/*start*/ 0x1BC9F, 0 /* Other */],\r\n            [/*start*/ 0x1BCA0, 13 /* Format */],\r\n            [/*start*/ 0x1BCA4, 0 /* Other */],\r\n            [/*start*/ 0x1D165, 14 /* Extend */],\r\n            [/*start*/ 0x1D16A, 0 /* Other */],\r\n            [/*start*/ 0x1D16D, 14 /* Extend */],\r\n            [/*start*/ 0x1D173, 13 /* Format */],\r\n            [/*start*/ 0x1D17B, 14 /* Extend */],\r\n            [/*start*/ 0x1D183, 0 /* Other */],\r\n            [/*start*/ 0x1D185, 14 /* Extend */],\r\n            [/*start*/ 0x1D18C, 0 /* Other */],\r\n            [/*start*/ 0x1D1AA, 14 /* Extend */],\r\n            [/*start*/ 0x1D1AE, 0 /* Other */],\r\n            [/*start*/ 0x1D242, 14 /* Extend */],\r\n            [/*start*/ 0x1D245, 0 /* Other */],\r\n            [/*start*/ 0x1D400, 11 /* ALetter */],\r\n            [/*start*/ 0x1D455, 0 /* Other */],\r\n            [/*start*/ 0x1D456, 11 /* ALetter */],\r\n            [/*start*/ 0x1D49D, 0 /* Other */],\r\n            [/*start*/ 0x1D49E, 11 /* ALetter */],\r\n            [/*start*/ 0x1D4A0, 0 /* Other */],\r\n            [/*start*/ 0x1D4A2, 11 /* ALetter */],\r\n            [/*start*/ 0x1D4A3, 0 /* Other */],\r\n            [/*start*/ 0x1D4A5, 11 /* ALetter */],\r\n            [/*start*/ 0x1D4A7, 0 /* Other */],\r\n            [/*start*/ 0x1D4A9, 11 /* ALetter */],\r\n            [/*start*/ 0x1D4AD, 0 /* Other */],\r\n            [/*start*/ 0x1D4AE, 11 /* ALetter */],\r\n            [/*start*/ 0x1D4BA, 0 /* Other */],\r\n            [/*start*/ 0x1D4BB, 11 /* ALetter */],\r\n            [/*start*/ 0x1D4BC, 0 /* Other */],\r\n            [/*start*/ 0x1D4BD, 11 /* ALetter */],\r\n            [/*start*/ 0x1D4C4, 0 /* Other */],\r\n            [/*start*/ 0x1D4C5, 11 /* ALetter */],\r\n            [/*start*/ 0x1D506, 0 /* Other */],\r\n            [/*start*/ 0x1D507, 11 /* ALetter */],\r\n            [/*start*/ 0x1D50B, 0 /* Other */],\r\n            [/*start*/ 0x1D50D, 11 /* ALetter */],\r\n            [/*start*/ 0x1D515, 0 /* Other */],\r\n            [/*start*/ 0x1D516, 11 /* ALetter */],\r\n            [/*start*/ 0x1D51D, 0 /* Other */],\r\n            [/*start*/ 0x1D51E, 11 /* ALetter */],\r\n            [/*start*/ 0x1D53A, 0 /* Other */],\r\n            [/*start*/ 0x1D53B, 11 /* ALetter */],\r\n            [/*start*/ 0x1D53F, 0 /* Other */],\r\n            [/*start*/ 0x1D540, 11 /* ALetter */],\r\n            [/*start*/ 0x1D545, 0 /* Other */],\r\n            [/*start*/ 0x1D546, 11 /* ALetter */],\r\n            [/*start*/ 0x1D547, 0 /* Other */],\r\n            [/*start*/ 0x1D54A, 11 /* ALetter */],\r\n            [/*start*/ 0x1D551, 0 /* Other */],\r\n            [/*start*/ 0x1D552, 11 /* ALetter */],\r\n            [/*start*/ 0x1D6A6, 0 /* Other */],\r\n            [/*start*/ 0x1D6A8, 11 /* ALetter */],\r\n            [/*start*/ 0x1D6C1, 0 /* Other */],\r\n            [/*start*/ 0x1D6C2, 11 /* ALetter */],\r\n            [/*start*/ 0x1D6DB, 0 /* Other */],\r\n            [/*start*/ 0x1D6DC, 11 /* ALetter */],\r\n            [/*start*/ 0x1D6FB, 0 /* Other */],\r\n            [/*start*/ 0x1D6FC, 11 /* ALetter */],\r\n            [/*start*/ 0x1D715, 0 /* Other */],\r\n            [/*start*/ 0x1D716, 11 /* ALetter */],\r\n            [/*start*/ 0x1D735, 0 /* Other */],\r\n            [/*start*/ 0x1D736, 11 /* ALetter */],\r\n            [/*start*/ 0x1D74F, 0 /* Other */],\r\n            [/*start*/ 0x1D750, 11 /* ALetter */],\r\n            [/*start*/ 0x1D76F, 0 /* Other */],\r\n            [/*start*/ 0x1D770, 11 /* ALetter */],\r\n            [/*start*/ 0x1D789, 0 /* Other */],\r\n            [/*start*/ 0x1D78A, 11 /* ALetter */],\r\n            [/*start*/ 0x1D7A9, 0 /* Other */],\r\n            [/*start*/ 0x1D7AA, 11 /* ALetter */],\r\n            [/*start*/ 0x1D7C3, 0 /* Other */],\r\n            [/*start*/ 0x1D7C4, 11 /* ALetter */],\r\n            [/*start*/ 0x1D7CC, 0 /* Other */],\r\n            [/*start*/ 0x1D7CE, 9 /* Numeric */],\r\n            [/*start*/ 0x1D800, 0 /* Other */],\r\n            [/*start*/ 0x1DA00, 14 /* Extend */],\r\n            [/*start*/ 0x1DA37, 0 /* Other */],\r\n            [/*start*/ 0x1DA3B, 14 /* Extend */],\r\n            [/*start*/ 0x1DA6D, 0 /* Other */],\r\n            [/*start*/ 0x1DA75, 14 /* Extend */],\r\n            [/*start*/ 0x1DA76, 0 /* Other */],\r\n            [/*start*/ 0x1DA84, 14 /* Extend */],\r\n            [/*start*/ 0x1DA85, 0 /* Other */],\r\n            [/*start*/ 0x1DA9B, 14 /* Extend */],\r\n            [/*start*/ 0x1DAA0, 0 /* Other */],\r\n            [/*start*/ 0x1DAA1, 14 /* Extend */],\r\n            [/*start*/ 0x1DAB0, 0 /* Other */],\r\n            [/*start*/ 0x1E000, 14 /* Extend */],\r\n            [/*start*/ 0x1E007, 0 /* Other */],\r\n            [/*start*/ 0x1E008, 14 /* Extend */],\r\n            [/*start*/ 0x1E019, 0 /* Other */],\r\n            [/*start*/ 0x1E01B, 14 /* Extend */],\r\n            [/*start*/ 0x1E022, 0 /* Other */],\r\n            [/*start*/ 0x1E023, 14 /* Extend */],\r\n            [/*start*/ 0x1E025, 0 /* Other */],\r\n            [/*start*/ 0x1E026, 14 /* Extend */],\r\n            [/*start*/ 0x1E02B, 0 /* Other */],\r\n            [/*start*/ 0x1E100, 11 /* ALetter */],\r\n            [/*start*/ 0x1E12D, 0 /* Other */],\r\n            [/*start*/ 0x1E130, 14 /* Extend */],\r\n            [/*start*/ 0x1E137, 11 /* ALetter */],\r\n            [/*start*/ 0x1E13E, 0 /* Other */],\r\n            [/*start*/ 0x1E140, 9 /* Numeric */],\r\n            [/*start*/ 0x1E14A, 0 /* Other */],\r\n            [/*start*/ 0x1E14E, 11 /* ALetter */],\r\n            [/*start*/ 0x1E14F, 0 /* Other */],\r\n            [/*start*/ 0x1E2C0, 11 /* ALetter */],\r\n            [/*start*/ 0x1E2EC, 14 /* Extend */],\r\n            [/*start*/ 0x1E2F0, 9 /* Numeric */],\r\n            [/*start*/ 0x1E2FA, 0 /* Other */],\r\n            [/*start*/ 0x1E800, 11 /* ALetter */],\r\n            [/*start*/ 0x1E8C5, 0 /* Other */],\r\n            [/*start*/ 0x1E8D0, 14 /* Extend */],\r\n            [/*start*/ 0x1E8D7, 0 /* Other */],\r\n            [/*start*/ 0x1E900, 11 /* ALetter */],\r\n            [/*start*/ 0x1E944, 14 /* Extend */],\r\n            [/*start*/ 0x1E94B, 11 /* ALetter */],\r\n            [/*start*/ 0x1E94C, 0 /* Other */],\r\n            [/*start*/ 0x1E950, 9 /* Numeric */],\r\n            [/*start*/ 0x1E95A, 0 /* Other */],\r\n            [/*start*/ 0x1EE00, 11 /* ALetter */],\r\n            [/*start*/ 0x1EE04, 0 /* Other */],\r\n            [/*start*/ 0x1EE05, 11 /* ALetter */],\r\n            [/*start*/ 0x1EE20, 0 /* Other */],\r\n            [/*start*/ 0x1EE21, 11 /* ALetter */],\r\n            [/*start*/ 0x1EE23, 0 /* Other */],\r\n            [/*start*/ 0x1EE24, 11 /* ALetter */],\r\n            [/*start*/ 0x1EE25, 0 /* Other */],\r\n            [/*start*/ 0x1EE27, 11 /* ALetter */],\r\n            [/*start*/ 0x1EE28, 0 /* Other */],\r\n            [/*start*/ 0x1EE29, 11 /* ALetter */],\r\n            [/*start*/ 0x1EE33, 0 /* Other */],\r\n            [/*start*/ 0x1EE34, 11 /* ALetter */],\r\n            [/*start*/ 0x1EE38, 0 /* Other */],\r\n            [/*start*/ 0x1EE39, 11 /* ALetter */],\r\n            [/*start*/ 0x1EE3A, 0 /* Other */],\r\n            [/*start*/ 0x1EE3B, 11 /* ALetter */],\r\n            [/*start*/ 0x1EE3C, 0 /* Other */],\r\n            [/*start*/ 0x1EE42, 11 /* ALetter */],\r\n            [/*start*/ 0x1EE43, 0 /* Other */],\r\n            [/*start*/ 0x1EE47, 11 /* ALetter */],\r\n            [/*start*/ 0x1EE48, 0 /* Other */],\r\n            [/*start*/ 0x1EE49, 11 /* ALetter */],\r\n            [/*start*/ 0x1EE4A, 0 /* Other */],\r\n            [/*start*/ 0x1EE4B, 11 /* ALetter */],\r\n            [/*start*/ 0x1EE4C, 0 /* Other */],\r\n            [/*start*/ 0x1EE4D, 11 /* ALetter */],\r\n            [/*start*/ 0x1EE50, 0 /* Other */],\r\n            [/*start*/ 0x1EE51, 11 /* ALetter */],\r\n            [/*start*/ 0x1EE53, 0 /* Other */],\r\n            [/*start*/ 0x1EE54, 11 /* ALetter */],\r\n            [/*start*/ 0x1EE55, 0 /* Other */],\r\n            [/*start*/ 0x1EE57, 11 /* ALetter */],\r\n            [/*start*/ 0x1EE58, 0 /* Other */],\r\n            [/*start*/ 0x1EE59, 11 /* ALetter */],\r\n            [/*start*/ 0x1EE5A, 0 /* Other */],\r\n            [/*start*/ 0x1EE5B, 11 /* ALetter */],\r\n            [/*start*/ 0x1EE5C, 0 /* Other */],\r\n            [/*start*/ 0x1EE5D, 11 /* ALetter */],\r\n            [/*start*/ 0x1EE5E, 0 /* Other */],\r\n            [/*start*/ 0x1EE5F, 11 /* ALetter */],\r\n            [/*start*/ 0x1EE60, 0 /* Other */],\r\n            [/*start*/ 0x1EE61, 11 /* ALetter */],\r\n            [/*start*/ 0x1EE63, 0 /* Other */],\r\n            [/*start*/ 0x1EE64, 11 /* ALetter */],\r\n            [/*start*/ 0x1EE65, 0 /* Other */],\r\n            [/*start*/ 0x1EE67, 11 /* ALetter */],\r\n            [/*start*/ 0x1EE6B, 0 /* Other */],\r\n            [/*start*/ 0x1EE6C, 11 /* ALetter */],\r\n            [/*start*/ 0x1EE73, 0 /* Other */],\r\n            [/*start*/ 0x1EE74, 11 /* ALetter */],\r\n            [/*start*/ 0x1EE78, 0 /* Other */],\r\n            [/*start*/ 0x1EE79, 11 /* ALetter */],\r\n            [/*start*/ 0x1EE7D, 0 /* Other */],\r\n            [/*start*/ 0x1EE7E, 11 /* ALetter */],\r\n            [/*start*/ 0x1EE7F, 0 /* Other */],\r\n            [/*start*/ 0x1EE80, 11 /* ALetter */],\r\n            [/*start*/ 0x1EE8A, 0 /* Other */],\r\n            [/*start*/ 0x1EE8B, 11 /* ALetter */],\r\n            [/*start*/ 0x1EE9C, 0 /* Other */],\r\n            [/*start*/ 0x1EEA1, 11 /* ALetter */],\r\n            [/*start*/ 0x1EEA4, 0 /* Other */],\r\n            [/*start*/ 0x1EEA5, 11 /* ALetter */],\r\n            [/*start*/ 0x1EEAA, 0 /* Other */],\r\n            [/*start*/ 0x1EEAB, 11 /* ALetter */],\r\n            [/*start*/ 0x1EEBC, 0 /* Other */],\r\n            [/*start*/ 0x1F130, 11 /* ALetter */],\r\n            [/*start*/ 0x1F14A, 0 /* Other */],\r\n            [/*start*/ 0x1F150, 11 /* ALetter */],\r\n            [/*start*/ 0x1F16A, 0 /* Other */],\r\n            [/*start*/ 0x1F170, 11 /* ALetter */],\r\n            [/*start*/ 0x1F18A, 0 /* Other */],\r\n            [/*start*/ 0x1F1E6, 18 /* Regional_Indicator */],\r\n            [/*start*/ 0x1F200, 0 /* Other */],\r\n            [/*start*/ 0x1F3FB, 14 /* Extend */],\r\n            [/*start*/ 0x1F400, 0 /* Other */],\r\n            [/*start*/ 0x1FBF0, 9 /* Numeric */],\r\n            [/*start*/ 0x1FBFA, 0 /* Other */],\r\n            [/*start*/ 0xE0001, 13 /* Format */],\r\n            [/*start*/ 0xE0002, 0 /* Other */],\r\n            [/*start*/ 0xE0020, 14 /* Extend */],\r\n            [/*start*/ 0xE0080, 0 /* Other */],\r\n            [/*start*/ 0xE0100, 14 /* Extend */],\r\n            [/*start*/ 0xE01F0, 0 /* Other */],\r\n        ];\r\n    })(data = wordBreakers.data || (wordBreakers.data = {}));\r\n})(wordBreakers || (wordBreakers = {}));\r\n// Include the word-breaking data here:\r\n/// \u003creference path=\"./data.ts\" /\u003e\r\nvar wordBreakers;\r\n(function (wordBreakers) {\r\n    /**\r\n     * Word breaker based on Unicode Standard Annex #29, Section 4.1:\r\n     * Default Word Boundary Specification.\r\n     *\r\n     * @see http://unicode.org/reports/tr29/#Word_Boundaries\r\n     * @see https://github.com/eddieantonio/unicode-default-word-boundary/tree/v12.0.0\r\n     */\r\n    function default_(text) {\r\n        var boundaries = findBoundaries(text);\r\n        if (boundaries.length == 0) {\r\n            return [];\r\n        }\r\n        // All non-empty strings have at least TWO boundaries at the start and end of\r\n        // the string.\r\n        var spans = [];\r\n        for (var i = 0; i \u003c boundaries.length - 1; i++) {\r\n            var start = boundaries[i];\r\n            var end = boundaries[i + 1];\r\n            var span = new LazySpan(text, start, end);\r\n            if (isNonSpace(span.text)) {\r\n                spans.push(span);\r\n                // Preserve a sequence-final space if it exists.  Needed to signal \"end of word\".\r\n            }\r\n            else if (i == boundaries.length - 2) { // if \"we just checked the final boundary\"...\r\n                // We don\u0027t want to return the whitespace itself; the correct token is simply \u0027\u0027.\r\n                span = new LazySpan(text, end, end);\r\n                spans.push(span);\r\n            }\r\n        }\r\n        return spans;\r\n    }\r\n    wordBreakers.default_ = default_;\r\n    var WORD_BREAK_PROPERTY = wordBreakers.data.WORD_BREAK_PROPERTY;\r\n    /**\r\n     * A span that does not cut out the substring until it absolutely has to!\r\n     */\r\n    var LazySpan = /** @class */ (function () {\r\n        function LazySpan(source, start, end) {\r\n            this._source = source;\r\n            this.start = start;\r\n            this.end = end;\r\n        }\r\n        Object.defineProperty(LazySpan.prototype, \"text\", {\r\n            get: function () {\r\n                return this._source.substring(this.start, this.end);\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(LazySpan.prototype, \"length\", {\r\n            get: function () {\r\n                return this.end - this.start;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        return LazySpan;\r\n    }());\r\n    /**\r\n     * Returns true when the chunk does not solely consist of whitespace.\r\n     *\r\n     * @param chunk a chunk of text. Starts and ends at word boundaries.\r\n     */\r\n    function isNonSpace(chunk) {\r\n        return !Array.from(chunk).map(property).every(function (wb) { return (wb === 3 /* CR */ ||\r\n            wb === 1 /* LF */ ||\r\n            wb === 2 /* Newline */ ||\r\n            wb === 4 /* WSegSpace */); });\r\n    }\r\n    /**\r\n     * Yields a series of string indices where a word break should\r\n     * occur. That is, there should be a break BEFORE each string\r\n     * index yielded by this generator.\r\n     *\r\n     * @param text Text to find word boundaries in.\r\n     */\r\n    function findBoundaries(text) {\r\n        var _a, _b, _c;\r\n        // WB1 and WB2: no boundaries if given an empty string.\r\n        if (text.length === 0) {\r\n            // There are no boundaries in an empty string!\r\n            return [];\r\n        }\r\n        // This algorithm works by maintaining a sliding window of four SCALAR VALUES.\r\n        //\r\n        //  - Scalar values? JavaScript strings are NOT actually a string of\r\n        //    Unicode code points; some characters are made up of TWO\r\n        //    JavaScript indices. e.g.,\r\n        //        \"💩\".length === 2;\r\n        //        \"💩\"[0] === \u0027\\uD83D\u0027;\r\n        //        \"💩\"[1] === \u0027\\uDCA9\u0027;\r\n        //\r\n        //    These characters that are represented by TWO indices are\r\n        //    called \"surrogate pairs\". Since we don\u0027t want to be in the\r\n        //    \"middle\" of a character, make sure we\u0027re always advancing\r\n        //    by scalar values, and NOT indices. That means, we sometimes\r\n        //    need to advance by TWO indices, not just one.\r\n        //  - Four values? Some rules look at what\u0027s to the left of\r\n        //    left, and some look at what\u0027s to the right of right. So\r\n        //    keep track of this!\r\n        var boundaries = [];\r\n        var rightPos;\r\n        var lookaheadPos = 0; // lookahead, one scalar value to the right of right.\r\n        // Before the start of the string is also the start of the string.\r\n        var lookbehind;\r\n        var left = 19 /* sot */;\r\n        var right = 19 /* sot */;\r\n        var lookahead = wordbreakPropertyAt(0);\r\n        // Count RIs to make sure we\u0027re not splitting emoji flags:\r\n        var nConsecutiveRegionalIndicators = 0;\r\n        do {\r\n            // Shift all positions, one scalar value to the right.\r\n            rightPos = lookaheadPos;\r\n            lookaheadPos = positionAfter(lookaheadPos);\r\n            // Shift all properties, one scalar value to the right.\r\n            _a = [left, right, lookahead, wordbreakPropertyAt(lookaheadPos)], lookbehind = _a[0], left = _a[1], right = _a[2], lookahead = _a[3];\r\n            // Break at the start and end of text, unless the text is empty.\r\n            // WB1: Break at start of text...\r\n            if (left === 19 /* sot */) {\r\n                boundaries.push(rightPos);\r\n                continue;\r\n            }\r\n            // WB2: Break at the end of text...\r\n            if (right === 20 /* eot */) {\r\n                boundaries.push(rightPos);\r\n                break; // Reached the end of the string. We\u0027re done!\r\n            }\r\n            // WB3: Do not break within CRLF:\r\n            if (left === 3 /* CR */ \u0026\u0026 right === 1 /* LF */)\r\n                continue;\r\n            // WB3b: Otherwise, break after...\r\n            if (left === 2 /* Newline */ ||\r\n                left === 3 /* CR */ ||\r\n                left === 1 /* LF */) {\r\n                boundaries.push(rightPos);\r\n                continue;\r\n            }\r\n            // WB3a: ...and before newlines\r\n            if (right === 2 /* Newline */ ||\r\n                right === 3 /* CR */ ||\r\n                right === 1 /* LF */) {\r\n                boundaries.push(rightPos);\r\n                continue;\r\n            }\r\n            // TODO: WB3c is not implemented, due to its complex, error-prone\r\n            // implementation, requiring a ginormous regexp, and the fact that\r\n            // the only thing it does is prevent big emoji sequences from being\r\n            // split up, like 🧚🏼‍♂️\r\n            // https://www.unicode.org/Public/emoji/12.0/emoji-zwj-sequences.txt\r\n            // WB3d: Keep horizontal whitespace together\r\n            if (left === 4 /* WSegSpace */ \u0026\u0026 right == 4 /* WSegSpace */)\r\n                continue;\r\n            // WB4: Ignore format and extend characters\r\n            // This is to keep grapheme clusters together!\r\n            // See: Section 6.2: https://unicode.org/reports/tr29/#Grapheme_Cluster_and_Format_Rules\r\n            // N.B.: The rule about \"except after sot, CR, LF, and\r\n            // Newline\" already been by WB1, WB2, WB3a, and WB3b above.\r\n            while (right === 13 /* Format */ ||\r\n                right === 14 /* Extend */ ||\r\n                right === 16 /* ZWJ */) {\r\n                // Continue advancing in the string, as if these\r\n                // characters do not exist. DO NOT update left and\r\n                // lookbehind however!\r\n                _b = [lookaheadPos, positionAfter(lookaheadPos)], rightPos = _b[0], lookaheadPos = _b[1];\r\n                _c = [lookahead, wordbreakPropertyAt(lookaheadPos)], right = _c[0], lookahead = _c[1];\r\n            }\r\n            // In ignoring the characters in the previous loop, we could\r\n            // have fallen off the end of the string, so end the loop\r\n            // prematurely if that happens!\r\n            if (right === 20 /* eot */) {\r\n                boundaries.push(rightPos);\r\n                break;\r\n            }\r\n            // WB4 (continued): Lookahead must ALSO ignore these format,\r\n            // extend, ZWJ characters!\r\n            while (lookahead === 13 /* Format */ ||\r\n                lookahead === 14 /* Extend */ ||\r\n                lookahead === 16 /* ZWJ */) {\r\n                // Continue advancing in the string, as if these\r\n                // characters do not exist. DO NOT update left and right,\r\n                // however!\r\n                lookaheadPos = positionAfter(lookaheadPos);\r\n                lookahead = wordbreakPropertyAt(lookaheadPos);\r\n            }\r\n            // WB5: Do not break between most letters.\r\n            if (isAHLetter(left) \u0026\u0026 isAHLetter(right))\r\n                continue;\r\n            // Do not break across certain punctuation\r\n            // WB6: (Don\u0027t break before apostrophes in contractions)\r\n            if (isAHLetter(left) \u0026\u0026 isAHLetter(lookahead) \u0026\u0026\r\n                (right === 10 /* MidLetter */ || isMidNumLetQ(right)))\r\n                continue;\r\n            // WB7: (Don\u0027t break after apostrophes in contractions)\r\n            if (isAHLetter(lookbehind) \u0026\u0026 isAHLetter(right) \u0026\u0026\r\n                (left === 10 /* MidLetter */ || isMidNumLetQ(left)))\r\n                continue;\r\n            // WB7a\r\n            if (left === 15 /* Hebrew_Letter */ \u0026\u0026 right === 6 /* Single_Quote */)\r\n                continue;\r\n            // WB7b\r\n            if (left === 15 /* Hebrew_Letter */ \u0026\u0026 right === 5 /* Double_Quote */ \u0026\u0026\r\n                lookahead === 15 /* Hebrew_Letter */)\r\n                continue;\r\n            // WB7c\r\n            if (lookbehind === 15 /* Hebrew_Letter */ \u0026\u0026 left === 5 /* Double_Quote */ \u0026\u0026\r\n                right === 15 /* Hebrew_Letter */)\r\n                continue;\r\n            // Do not break within sequences of digits, or digits adjacent to letters.\r\n            // e.g., \"3a\" or \"A3\"\r\n            // WB8\r\n            if (left === 9 /* Numeric */ \u0026\u0026 right === 9 /* Numeric */)\r\n                continue;\r\n            // WB9\r\n            if (isAHLetter(left) \u0026\u0026 right === 9 /* Numeric */)\r\n                continue;\r\n            // WB10\r\n            if (left === 9 /* Numeric */ \u0026\u0026 isAHLetter(right))\r\n                continue;\r\n            // Do not break within sequences, such as 3.2, 3,456.789\r\n            // WB11\r\n            if (lookbehind === 9 /* Numeric */ \u0026\u0026 right === 9 /* Numeric */ \u0026\u0026\r\n                (left === 7 /* MidNum */ || isMidNumLetQ(left)))\r\n                continue;\r\n            // WB12\r\n            if (left === 9 /* Numeric */ \u0026\u0026 lookahead === 9 /* Numeric */ \u0026\u0026\r\n                (right === 7 /* MidNum */ || isMidNumLetQ(right)))\r\n                continue;\r\n            // WB13: Do not break between Katakana\r\n            if (left === 17 /* Katakana */ \u0026\u0026 right === 17 /* Katakana */)\r\n                continue;\r\n            // Do not break from extenders (e.g., U+202F NARROW NO-BREAK SPACE)\r\n            // WB13a\r\n            if ((isAHLetter(left) ||\r\n                left === 9 /* Numeric */ ||\r\n                left === 17 /* Katakana */ ||\r\n                left === 12 /* ExtendNumLet */) \u0026\u0026\r\n                right === 12 /* ExtendNumLet */)\r\n                continue;\r\n            // WB13b\r\n            if ((isAHLetter(right) ||\r\n                right === 9 /* Numeric */ ||\r\n                right === 17 /* Katakana */) \u0026\u0026 left === 12 /* ExtendNumLet */)\r\n                continue;\r\n            // WB15 \u0026 WB16:\r\n            // Do not break within emoji flag sequences. That is, do not break between\r\n            // regional indicator (RI) symbols if there is an odd number of RI\r\n            // characters before the break point.\r\n            if (right === 18 /* Regional_Indicator */) {\r\n                // Emoji flags are actually composed of TWO scalar values, each being a\r\n                // \"regional indicator\". These indicators correspond to Latin letters. Put\r\n                // two of them together, and they spell out an ISO 3166-1-alpha-2 country\r\n                // code. Since these always come in pairs, NEVER split the pairs! So, if\r\n                // we happen to be inside the middle of an odd numbered of\r\n                // Regional_Indicators, DON\u0027T SPLIT IT!\r\n                nConsecutiveRegionalIndicators += 1;\r\n                if ((nConsecutiveRegionalIndicators % 2) == 1) {\r\n                    continue;\r\n                }\r\n            }\r\n            else {\r\n                nConsecutiveRegionalIndicators = 0;\r\n            }\r\n            // WB999: Otherwise, break EVERYWHERE (including around ideographs)\r\n            boundaries.push(rightPos);\r\n        } while (rightPos \u003c text.length);\r\n        return boundaries;\r\n        ///// Internal utility functions /////\r\n        /**\r\n         * Returns the position of the start of the next scalar value. This jumps\r\n         * over surrogate pairs.\r\n         *\r\n         * If asked for the character AFTER the end of the string, this always\r\n         * returns the length of the string.\r\n         */\r\n        function positionAfter(pos) {\r\n            if (pos \u003e= text.length) {\r\n                return text.length;\r\n            }\r\n            else if (isStartOfSurrogatePair(text[pos])) {\r\n                return pos + 2;\r\n            }\r\n            return pos + 1;\r\n        }\r\n        /**\r\n         * Return the value of the Word_Break property at the given string index.\r\n         * @param pos position in the text.\r\n         */\r\n        function wordbreakPropertyAt(pos) {\r\n            if (pos \u003c 0) {\r\n                return 19 /* sot */; // Always \"start of string\" before the string starts!\r\n            }\r\n            else if (pos \u003e= text.length) {\r\n                return 20 /* eot */; // Always \"end of string\" after the string ends!\r\n            }\r\n            else if (isStartOfSurrogatePair(text[pos])) {\r\n                // Surrogate pairs the next TWO items from the string!\r\n                return property(text[pos] + text[pos + 1]);\r\n            }\r\n            return property(text[pos]);\r\n        }\r\n        // Word_Break rule macros\r\n        // See: https://unicode.org/reports/tr29/#WB_Rule_Macros\r\n        function isAHLetter(prop) {\r\n            return prop === 11 /* ALetter */ ||\r\n                prop === 15 /* Hebrew_Letter */;\r\n        }\r\n        function isMidNumLetQ(prop) {\r\n            return prop === 8 /* MidNumLet */ ||\r\n                prop === 6 /* Single_Quote */;\r\n        }\r\n    }\r\n    function isStartOfSurrogatePair(character) {\r\n        var codeUnit = character.charCodeAt(0);\r\n        return codeUnit \u003e= 0xD800 \u0026\u0026 codeUnit \u003c= 0xDBFF;\r\n    }\r\n    /**\r\n     * Return the Word_Break property value for a character.\r\n     * Note that\r\n     * @param character a scalar value\r\n     */\r\n    function property(character) {\r\n        // This MUST be a scalar value.\r\n        // TODO: remove dependence on character.codepointAt()?\r\n        var codepoint = character.codePointAt(0);\r\n        return searchForProperty(codepoint, 0, WORD_BREAK_PROPERTY.length - 1);\r\n    }\r\n    /**\r\n     * Binary search for the word break property of a given CODE POINT.\r\n     */\r\n    function searchForProperty(codePoint, left, right) {\r\n        // All items that are not found in the array are assigned the \u0027Other\u0027 property.\r\n        if (right \u003c left) {\r\n            return 0 /* Other */;\r\n        }\r\n        var midpoint = left + ~~((right - left) / 2);\r\n        var candidate = WORD_BREAK_PROPERTY[midpoint];\r\n        var nextRange = WORD_BREAK_PROPERTY[midpoint + 1];\r\n        var startOfNextRange = nextRange ? nextRange[0 /* Start */] : Infinity;\r\n        if (codePoint \u003c candidate[0 /* Start */]) {\r\n            return searchForProperty(codePoint, left, midpoint - 1);\r\n        }\r\n        else if (codePoint \u003e= startOfNextRange) {\r\n            return searchForProperty(codePoint, midpoint + 1, right);\r\n        }\r\n        // We found it!\r\n        return candidate[1 /* Value */];\r\n    }\r\n})(wordBreakers || (wordBreakers = {}));\r\n// We cannot export a member whose name is a reserved word when\r\n// implementing a namespace, BUT we can manually make the\r\n// assignment and **declare** it as part of the namespace.\r\nwordBreakers[\u0027default\u0027] = wordBreakers.default_;\r\nvar wordBreakers;\r\n(function (wordBreakers) {\r\n    /**\r\n     * A **VERY** dumb word breaker that simply splits at words. Do not use this\r\n     * word breaker!\r\n     *\r\n     * @param phrase The phrase in which to break words.\r\n     * @deprecated Use a word breaker tailored to your language instead!\r\n     */\r\n    function placeholder(phrase) {\r\n        var nextStart = 0;\r\n        return phrase.split(/\\s+/).map(function (utterance) {\r\n            // XXX: The indices are NOT accurate to the original phrase!\r\n            var span = {\r\n                start: nextStart,\r\n                end: nextStart + utterance.length,\r\n                text: utterance,\r\n                length: utterance.length\r\n            };\r\n            nextStart = span.end;\r\n            return span;\r\n        });\r\n    }\r\n    wordBreakers.placeholder = placeholder;\r\n})(wordBreakers || (wordBreakers = {}));\r\n/// \u003creference path=\"./ascii.ts\" /\u003e\r\n/// \u003creference path=\"./default/index.ts\" /\u003e\r\n/// \u003creference path=\"./placeholder.ts\" /\u003e\r\n// Let the word breakers be available both in the browser and in Node.\r\nif (typeof module !== \"undefined\" \u0026\u0026 module.exports) {\r\n    module.exports[\u0027wordBreakers\u0027] = wordBreakers;\r\n}\r\n/*\r\n * Copyright (c) 2018 National Research Council Canada (author: Eddie A. Santos)\r\n * Copyright (c) 2018 SIL International\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nvar __values = (this \u0026\u0026 this.__values) || function(o) {\r\n    var s = typeof Symbol === \"function\" \u0026\u0026 Symbol.iterator, m = s \u0026\u0026 o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o \u0026\u0026 typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o \u0026\u0026 i \u003e= o.length) o = void 0;\r\n            return { value: o \u0026\u0026 o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n};\r\nvar models;\r\n(function (models) {\r\n    /**\r\n     * @file dummy-model.ts\r\n     *\r\n     * Defines the Dummy model, which is used for testing the\r\n     * prediction API exclusively.\r\n     */\r\n    /**\r\n     * The Dummy Model that returns nonsensical, but predictable results.\r\n     */\r\n    var DummyModel = /** @class */ (function () {\r\n        function DummyModel(options) {\r\n            options = options || {};\r\n            // Create a shallow copy of the suggestions;\r\n            // this class mutates the array.\r\n            this._futureSuggestions = options.futureSuggestions\r\n                ? options.futureSuggestions.slice() : [];\r\n            if (options.punctuation) {\r\n                this.punctuation = options.punctuation;\r\n            }\r\n        }\r\n        DummyModel.prototype.configure = function (capabilities) {\r\n            this.configuration = {\r\n                leftContextCodePoints: capabilities.maxLeftContextCodePoints,\r\n                rightContextCodePoints: capabilities.maxRightContextCodePoints\r\n            };\r\n            return this.configuration;\r\n        };\r\n        DummyModel.prototype.predict = function (transform, context, injectedSuggestions) {\r\n            var makeUniformDistribution = function (suggestions) {\r\n                var e_1, _a;\r\n                var distribution = [];\r\n                var n = suggestions.length;\r\n                try {\r\n                    for (var suggestions_1 = __values(suggestions), suggestions_1_1 = suggestions_1.next(); !suggestions_1_1.done; suggestions_1_1 = suggestions_1.next()) {\r\n                        var s = suggestions_1_1.value;\r\n                        distribution.push({ sample: s, p: 1 }); // For a dummy model, this is sufficient.  The uniformness is all that matters.\r\n                    }\r\n                }\r\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (suggestions_1_1 \u0026\u0026 !suggestions_1_1.done \u0026\u0026 (_a = suggestions_1.return)) _a.call(suggestions_1);\r\n                    }\r\n                    finally { if (e_1) throw e_1.error; }\r\n                }\r\n                return distribution;\r\n            };\r\n            if (injectedSuggestions) {\r\n                return makeUniformDistribution(injectedSuggestions);\r\n            }\r\n            var currentSet = this._futureSuggestions.shift();\r\n            if (!currentSet) {\r\n                return [];\r\n            }\r\n            else {\r\n                return makeUniformDistribution(currentSet);\r\n            }\r\n        };\r\n        return DummyModel;\r\n    }());\r\n    models.DummyModel = DummyModel;\r\n    ;\r\n})(models || (models = {}));\r\nvar __read = (this \u0026\u0026 this.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" \u0026\u0026 o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- \u003e 0) \u0026\u0026 !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r \u0026\u0026 !r.done \u0026\u0026 (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\nvar correction;\r\n(function (correction) {\r\n    // A semi-optimized \u0027online\u0027/iterative Damerau-Levenshtein calculator with the following features:\r\n    // - may add new character to the \u0027input\u0027 string or to the \u0027match\u0027 string, reusing all old calculations efficiently.\r\n    // - allows a \u0027focused\u0027 evaluation that seeks if the edit distance is within a specific range.  Designed for use in match-searching,\r\n    //   where we want to find the \u0027closest\u0027 matching strings in a lexicon.\r\n    // - towards such a match-searching algorithm/heuristic: should nothing be found within that range, all prior calculations may be reused\r\n    //   to search across the lexicon with an incremented edit distance.\r\n    // - minimized memory footprint: O(m) memory footprint (where m = length of \u0027input\u0027 string), rather than O(mn) (where n = length of \u0027match\u0027 string)\r\n    //   - guaranteed to use a smaller footprint than DiagonalizedIterativeDamerauLevenshteinCalculation.\r\n    //\r\n    // In short:  Used to optimize calculations for low edit-distance checks, then expanded if/as necessary\r\n    //            if a greater edit distance is requested.\r\n    //\r\n    // Reference: https://en.wikipedia.org/wiki/Wagner%E2%80%93Fischer_algorithm#Possible_modifications\r\n    //    - Motivating statement:  \"if we are only interested in the distance if it is smaller than a threshold...\"  \r\n    var ClassicalDistanceCalculation = /** @class */ (function () {\r\n        function ClassicalDistanceCalculation(other) {\r\n            /**\r\n             * Specifies how far off-diagonal calculations should be performed.  A value of 0 only evaluates cells with matching\r\n             * row and column indicies.\r\n             *\r\n             * The resulting value from .getFinalCost() is only guaranteed correct if it is less than or equal to this value.\r\n             * Otherwise, this object represents a heuristic that _may_ overestimate the true edit distance.  Note that it will\r\n             * never underestimate.\r\n             */\r\n            this.diagonalWidth = 2; // TODO: Ideally, should start at 1... but we\u0027ll start at 2 for now\r\n            // as a naive workaround for multi-char transform limitations.\r\n            // The sequence of characters input so far.\r\n            this.inputSequence = [];\r\n            this.matchSequence = [];\r\n            if (other) {\r\n                // Clone class properties.\r\n                var rowCount = other.resolvedDistances.length;\r\n                this.resolvedDistances = Array(rowCount);\r\n                for (var r = 0; r \u003c rowCount; r++) {\r\n                    this.resolvedDistances[r] = Array.from(other.resolvedDistances[r]);\r\n                }\r\n                this.inputSequence = Array.from(other.inputSequence);\r\n                this.matchSequence = Array.from(other.matchSequence);\r\n                this.diagonalWidth = other.diagonalWidth;\r\n            }\r\n            else {\r\n                this.resolvedDistances = [];\r\n            }\r\n        }\r\n        ClassicalDistanceCalculation.prototype.getTrueIndex = function (r, c, width) {\r\n            var retVal = {\r\n                row: r,\r\n                col: c - r + width,\r\n                sparse: false\r\n            };\r\n            if (retVal.col \u003c 0 || retVal.col \u003e 2 * width) {\r\n                retVal.sparse = true;\r\n            }\r\n            return retVal;\r\n        };\r\n        ClassicalDistanceCalculation.prototype.getCostAt = function (i, j, width) {\r\n            if (width === void 0) { width = this.diagonalWidth; }\r\n            // Check for and handle the set of fixed-value virtualized indices.\r\n            if (i \u003c 0 || j \u003c 0) {\r\n                if (i == -1 \u0026\u0026 j \u003e= -1) {\r\n                    return j + 1;\r\n                }\r\n                else if (j == -1 \u0026\u0026 i \u003e= -1) {\r\n                    return i + 1;\r\n                }\r\n                return Number.MAX_VALUE;\r\n            }\r\n            var index = this.getTrueIndex(i, j, width);\r\n            return index.sparse ? Number.MAX_VALUE : this.resolvedDistances[index.row][index.col];\r\n        };\r\n        /**\r\n         * Noting the above link\u0027s statement prefixed \"By examining diagonals instead of rows, and by using lazy evaluation...\",\r\n         * this function will return the actual edit distance between the strings, temporarily increasing the computed\r\n         * diagonal\u0027s size if necessary.\r\n         *\r\n         * Does not actually mutate the instance.\r\n         */\r\n        ClassicalDistanceCalculation.prototype.getFinalCost = function () {\r\n            var buffer = this;\r\n            var val = buffer.getHeuristicFinalCost();\r\n            while (val \u003e buffer.diagonalWidth) {\r\n                // A consequence of treating this class as immutable.\r\n                buffer = buffer.increaseMaxDistance();\r\n                val = buffer.getHeuristicFinalCost();\r\n            }\r\n            return val;\r\n        };\r\n        /**\r\n         * Returns this instance\u0027s computed edit distance.  If greater than the diagonal\u0027s width value, note that it may be an overestimate.\r\n         */\r\n        ClassicalDistanceCalculation.prototype.getHeuristicFinalCost = function () {\r\n            return this.getCostAt(this.inputSequence.length - 1, this.matchSequence.length - 1);\r\n        };\r\n        /**\r\n         * Returns `true` if the represented edit distance is less than or equal to the specified threshold, minimizing the amount of calculations\r\n         * needed to meet the specified limit.\r\n         *\r\n         * Does not mutate the instance.\r\n         * @param threshold\r\n         */\r\n        ClassicalDistanceCalculation.prototype.hasFinalCostWithin = function (threshold) {\r\n            var buffer = this;\r\n            var val = buffer.getHeuristicFinalCost();\r\n            var guaranteedBound = this.diagonalWidth;\r\n            do {\r\n                // val will never exceed the length of the longer string, no matter how large the threshold.\r\n                if (val \u003c= threshold) {\r\n                    return true;\r\n                }\r\n                else if (guaranteedBound \u003c threshold) {\r\n                    buffer = buffer.increaseMaxDistance();\r\n                    guaranteedBound++;\r\n                    val = buffer.getHeuristicFinalCost();\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            } while (true);\r\n            return false;\r\n        };\r\n        /**\r\n         * Determines the edit path used to obtain the optimal cost, distinguishing between zero-cost\r\n         * substitutions (\u0027match\u0027 operations) and actual substitutions.\r\n         * @param row\r\n         * @param col\r\n         */\r\n        ClassicalDistanceCalculation.prototype.editPath = function (row, col) {\r\n            if (row === void 0) { row = this.inputSequence.length - 1; }\r\n            if (col === void 0) { col = this.matchSequence.length - 1; }\r\n            var currentCost = this.getCostAt(row, col);\r\n            var ops = null;\r\n            var parent = null;\r\n            var insertParentCost = this.getCostAt(row, col - 1);\r\n            var deleteParentCost = this.getCostAt(row - 1, col);\r\n            var substitutionParentCost = this.getCostAt(row - 1, col - 1);\r\n            var _a = __read(ClassicalDistanceCalculation.getTransposeParent(this, row, col), 2), lastInputIndex = _a[0], lastMatchIndex = _a[1];\r\n            if (lastInputIndex \u003e= 0 \u0026\u0026 lastMatchIndex \u003e= 0) {\r\n                // OK, a transposition source is quite possible.  Still need to do more vetting, to be sure.\r\n                var expectedCost = 1;\r\n                // This transposition includes either \u0027transpose-insert\u0027 or \u0027transpose-delete\u0027 operations.\r\n                ops = [\u0027transpose-start\u0027]; // always needs a \u0027start\u0027.\r\n                if (lastInputIndex != row - 1) {\r\n                    var count = row - lastInputIndex - 1;\r\n                    ops = ops.concat(Array(count).fill(\u0027transpose-delete\u0027));\r\n                    expectedCost += count;\r\n                }\r\n                else {\r\n                    var count = col - lastMatchIndex - 1;\r\n                    ops = ops.concat(Array(count).fill(\u0027transpose-insert\u0027));\r\n                    expectedCost += count;\r\n                }\r\n                ops.push(\u0027transpose-end\u0027);\r\n                // Double-check our expectations.\r\n                if (this.getCostAt(lastInputIndex - 1, lastMatchIndex - 1) != currentCost - expectedCost) {\r\n                    ops = null;\r\n                }\r\n                parent = [lastInputIndex - 1, lastMatchIndex - 1];\r\n            }\r\n            if (ops) {\r\n                // bypass the ladder.\r\n            }\r\n            else if (substitutionParentCost == currentCost - 1) {\r\n                ops = [\u0027substitute\u0027];\r\n                parent = [row - 1, col - 1];\r\n            }\r\n            else if (insertParentCost == currentCost - 1) {\r\n                ops = [\u0027insert\u0027];\r\n                parent = [row, col - 1];\r\n            }\r\n            else if (deleteParentCost == currentCost - 1) {\r\n                ops = [\u0027delete\u0027];\r\n                parent = [row - 1, col];\r\n            }\r\n            else { //if(substitutionParentCost == currentCost) {\r\n                ops = [\u0027match\u0027];\r\n                parent = [row - 1, col - 1];\r\n            }\r\n            // Recursively build the edit path.\r\n            if (parent[0] \u003e= 0 \u0026\u0026 parent[1] \u003e= 0) {\r\n                return this.editPath(parent[0], parent[1]).concat(ops);\r\n            }\r\n            else {\r\n                if (parent[0] \u003e -1) {\r\n                    // There are initial deletions.\r\n                    return Array(parent[0] + 1).fill(\u0027delete\u0027).concat(ops);\r\n                }\r\n                else if (parent[1] \u003e -1) {\r\n                    // There are initial insertions.\r\n                    return Array(parent[1] + 1).fill(\u0027insert\u0027).concat(ops);\r\n                }\r\n                else {\r\n                    return ops;\r\n                }\r\n            }\r\n        };\r\n        ClassicalDistanceCalculation.getTransposeParent = function (buffer, r, c) {\r\n            // Block any transpositions where the tokens are identical.\r\n            // Other operations will be cheaper.  Also, block cases where \u0027parents\u0027 are impossible.\r\n            if (r \u003c 0 || c \u003c 0 || buffer.inputSequence[r].key == buffer.matchSequence[c].key) {\r\n                return [-1, -1];\r\n            }\r\n            // Transposition checks\r\n            var lastInputIndex = -1;\r\n            for (var i = r - 1; i \u003e= 0; i--) {\r\n                if (buffer.inputSequence[i].key == buffer.matchSequence[c].key) {\r\n                    lastInputIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n            var lastMatchIndex = -1;\r\n            for (var i = c - 1; i \u003e= 0; i--) {\r\n                if (buffer.matchSequence[i].key == buffer.inputSequence[r].key) {\r\n                    lastMatchIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n            return [lastInputIndex, lastMatchIndex];\r\n        };\r\n        ClassicalDistanceCalculation.initialCostAt = function (buffer, r, c, insertCost, deleteCost) {\r\n            var baseSubstitutionCost = buffer.inputSequence[r].key == buffer.matchSequence[c].key ? 0 : 1;\r\n            var substitutionCost = buffer.getCostAt(r - 1, c - 1) + baseSubstitutionCost;\r\n            var insertionCost = insertCost || buffer.getCostAt(r, c - 1) + 1; // If set meaningfully, will never equal zero.\r\n            var deletionCost = deleteCost || buffer.getCostAt(r - 1, c) + 1; // If set meaningfully, will never equal zero.\r\n            var transpositionCost = Number.MAX_VALUE;\r\n            if (r \u003e 0 \u0026\u0026 c \u003e 0) { // bypass when transpositions are known to be impossible.\r\n                var _a = __read(ClassicalDistanceCalculation.getTransposeParent(buffer, r, c), 2), lastInputIndex = _a[0], lastMatchIndex = _a[1];\r\n                transpositionCost = buffer.getCostAt(lastInputIndex - 1, lastMatchIndex - 1) + (r - lastInputIndex - 1) + 1 + (c - lastMatchIndex - 1);\r\n            }\r\n            return Math.min(substitutionCost, deletionCost, insertionCost, transpositionCost);\r\n        };\r\n        ClassicalDistanceCalculation.prototype.getSubset = function (inputLength, matchLength) {\r\n            var trimmedInstance = new ClassicalDistanceCalculation(this);\r\n            if (inputLength \u003e this.inputSequence.length || matchLength \u003e this.matchSequence.length) {\r\n                throw \"Invalid dimensions specified for trim operation\";\r\n            }\r\n            // Trim our tracked input \u0026 match sequences.\r\n            trimmedInstance.inputSequence.splice(inputLength);\r\n            trimmedInstance.matchSequence.splice(matchLength);\r\n            // Major index corresponds to input length.\r\n            trimmedInstance.resolvedDistances.splice(inputLength);\r\n            // The real fun:  trimming off columns. (Minor index, corresponds to match length)\r\n            var finalTrueIndex = this.getTrueIndex(inputLength - 1, matchLength - 1, this.diagonalWidth);\r\n            // The diagonal index increases as the row index decreases.\r\n            for (var diagonalIndex = finalTrueIndex.col; diagonalIndex \u003c= 2 * this.diagonalWidth; diagonalIndex++) {\r\n                var row = finalTrueIndex.row - (diagonalIndex - finalTrueIndex.col);\r\n                if (row \u003c 0) {\r\n                    break;\r\n                }\r\n                if (diagonalIndex \u003c 0) {\r\n                    trimmedInstance.resolvedDistances[row] = Array(2 * trimmedInstance.diagonalWidth + 1).fill(Number.MAX_VALUE);\r\n                }\r\n                else {\r\n                    var newCount = 2 * this.diagonalWidth - diagonalIndex;\r\n                    var keptEntries = trimmedInstance.resolvedDistances[row].splice(0, diagonalIndex + 1);\r\n                    var newEntries = Array(newCount).fill(Number.MAX_VALUE);\r\n                    trimmedInstance.resolvedDistances[row] = keptEntries.concat(newEntries);\r\n                }\r\n            }\r\n            return trimmedInstance;\r\n        };\r\n        ClassicalDistanceCalculation.forDiagonalOfAxis = function (diagonalWidth, centerIndex, axisCap, closure) {\r\n            var diagonalCap = axisCap - centerIndex \u003c diagonalWidth ? axisCap - centerIndex + diagonalWidth : 2 * diagonalWidth;\r\n            var startOffset = centerIndex - diagonalWidth; // The axis\u0027s index for diagonal entry 0.  May be negative.\r\n            var diagonalStart = startOffset \u003c 0 ? 0 : startOffset;\r\n            for (var diagonalIndex = diagonalStart - startOffset; diagonalIndex \u003c= diagonalCap; diagonalIndex++) {\r\n                closure(startOffset + diagonalIndex, diagonalIndex);\r\n            }\r\n        };\r\n        // Inputs add an extra row / first index entry.\r\n        ClassicalDistanceCalculation.prototype.addInputChar = function (token) {\r\n            var returnBuffer = new ClassicalDistanceCalculation(this);\r\n            var r = returnBuffer.inputSequence.length;\r\n            returnBuffer.inputSequence.push(token);\r\n            // Insert a row, even if we don\u0027t actually do anything with it yet.\r\n            // Initialize all entries with Number.MAX_VALUE, as `undefined` use leads to JS math issues.\r\n            var row = Array(2 * returnBuffer.diagonalWidth + 1).fill(Number.MAX_VALUE);\r\n            returnBuffer.resolvedDistances[r] = row;\r\n            // If there isn\u0027t a \u0027match\u0027 entry yet, there are no values to compute.  Exit immediately.\r\n            if (returnBuffer.matchSequence.length == 0) {\r\n                return returnBuffer;\r\n            }\r\n            ClassicalDistanceCalculation.forDiagonalOfAxis(returnBuffer.diagonalWidth, r, returnBuffer.matchSequence.length - 1, function (c, diagIndex) {\r\n                row[diagIndex] = ClassicalDistanceCalculation.initialCostAt(returnBuffer, r, c);\r\n            });\r\n            return returnBuffer;\r\n        };\r\n        ClassicalDistanceCalculation.prototype.addMatchChar = function (token) {\r\n            var returnBuffer = new ClassicalDistanceCalculation(this);\r\n            var c = returnBuffer.matchSequence.length;\r\n            returnBuffer.matchSequence.push(token);\r\n            // If there isn\u0027t a \u0027match\u0027 entry yet, there are no values to compute.  Exit immediately.\r\n            if (returnBuffer.inputSequence.length == 0) {\r\n                return returnBuffer;\r\n            }\r\n            ClassicalDistanceCalculation.forDiagonalOfAxis(returnBuffer.diagonalWidth, c, returnBuffer.inputSequence.length - 1, function (r, diagIndex) {\r\n                var row = returnBuffer.resolvedDistances[r];\r\n                // Since diagIndex is from the perspective of the row, it must be inverted to properly index the column.\r\n                row[2 * returnBuffer.diagonalWidth - diagIndex] = ClassicalDistanceCalculation.initialCostAt(returnBuffer, r, c);\r\n            });\r\n            return returnBuffer;\r\n        };\r\n        ClassicalDistanceCalculation.prototype.increaseMaxDistance = function () {\r\n            var returnBuffer = new ClassicalDistanceCalculation(this);\r\n            returnBuffer.diagonalWidth++;\r\n            if (returnBuffer.inputSequence.length \u003c 1 || returnBuffer.matchSequence.length \u003c 1) {\r\n                return returnBuffer;\r\n            }\r\n            // An abstraction of the common aspects of transposition handling during diagonal extensions.\r\n            function forPossibleTranspositionsInDiagonal(startPos, fixedChar, lookupString, closure) {\r\n                var diagonalCap = 2 * (returnBuffer.diagonalWidth - 1); // The maximum diagonal index permitted\r\n                var axisCap = lookupString.length - 1; // The maximum index supported by the axis of iteration\r\n                // Ensures that diagonal iteration only occurs within the axis\u0027s supported range\r\n                diagonalCap = diagonalCap \u003c axisCap - startPos ? diagonalCap : axisCap - startPos;\r\n                // Iterate within the diagonal and call our closure for any potential transpositions.\r\n                for (var diagonalIndex = 0; diagonalIndex \u003c= diagonalCap; diagonalIndex++) {\r\n                    if (fixedChar == lookupString[startPos + diagonalIndex].key) {\r\n                        closure(startPos + diagonalIndex, diagonalIndex);\r\n                    }\r\n                }\r\n            }\r\n            var _loop_1 = function (r) {\r\n                var leftCell = Number.MAX_VALUE;\r\n                var c = r - returnBuffer.diagonalWidth; // External index of the left-most entry, which we will now calculate.\r\n                if (c \u003e= 0) {\r\n                    // If c == 0, cell is at edge, thus a known value for insertions exists.\r\n                    // Base cost: r+1, +1 for inserting.\r\n                    var insertionCost_1 = c == 0 ? r + 2 : Number.MAX_VALUE;\r\n                    // compute new left cell\r\n                    leftCell = ClassicalDistanceCalculation.initialCostAt(returnBuffer, r, c, insertionCost_1, undefined);\r\n                    var addedCost_1 = leftCell;\r\n                    // daisy-chain possible updates\r\n                    // cell (r, c+1):  new insertion source\r\n                    if (c \u003c returnBuffer.matchSequence.length - 1) {\r\n                        // We propagate the new added cost (via insertion) to the old left-most cell, which is one to our right.\r\n                        ClassicalDistanceCalculation.propagateUpdateFrom(returnBuffer, r, c + 1, addedCost_1 + 1, 0);\r\n                        // Only possible if insertions are also possible AND more conditions are met.\r\n                        // cells (r+2, * \u003e c+2):  new transposition source\r\n                        var transposeRow_1 = r + 2;\r\n                        if (r + 2 \u003c this_1.inputSequence.length) { // Row to check for transposes must exist.\r\n                            var rowChar = returnBuffer.inputSequence[r + 1].key;\r\n                            // First possible match in input could be at index c + 2, which adjusts col c+2\u0027s cost.  Except that entry in r+2\r\n                            // doesn\u0027t exist yet - so we start with c+3 instead.\r\n                            forPossibleTranspositionsInDiagonal(c + 3, rowChar, returnBuffer.matchSequence, function (axisIndex, diagIndex) {\r\n                                // Because (r+2, c+3) is root, not (r+2, c+2).  Min cost of 2.\r\n                                ClassicalDistanceCalculation.propagateUpdateFrom(returnBuffer, transposeRow_1, axisIndex, addedCost_1 + diagIndex + 2, diagIndex);\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                var rightCell = Number.MAX_VALUE;\r\n                c = r + returnBuffer.diagonalWidth;\r\n                if (c \u003c returnBuffer.matchSequence.length) {\r\n                    // If r == 0, cell is at edge, thus a known value for insertions exists.\r\n                    // Base cost: c+1, +1 for inserting.\r\n                    var deletionCost = r == 0 ? c + 2 : Number.MAX_VALUE;\r\n                    // the current row wants to use adjusted diagonal width; we must specify use of the old width \u0026 its mapping instead.\r\n                    insertionCost = returnBuffer.getCostAt(r, c - 1, this_1.diagonalWidth) + 1;\r\n                    // compute new right cell\r\n                    rightCell = ClassicalDistanceCalculation.initialCostAt(returnBuffer, r, c, insertionCost, deletionCost);\r\n                    var addedCost_2 = rightCell;\r\n                    // daisy-chain possible updates\r\n                    // cell (r+1, c):  new deletion source\r\n                    if (r \u003c returnBuffer.inputSequence.length - 1) {\r\n                        // We propagate the new added cost (via deletion) to the old right-most cell, which is one to our right.\r\n                        ClassicalDistanceCalculation.propagateUpdateFrom(returnBuffer, r + 1, c, addedCost_2 + 1, 2 * this_1.diagonalWidth);\r\n                        // Only possible if deletions are also possible AND more conditions are met.\r\n                        // cells(* \u003e r+2, c+2): new transposition source\r\n                        var transposeCol_1 = c + 2;\r\n                        if (c + 2 \u003c this_1.matchSequence.length) { // Row to check for transposes must exist.\r\n                            var colChar = returnBuffer.matchSequence[r + 1].key;\r\n                            // First possible match in input could be at index r + 2, which adjusts row r+2\u0027s cost.  Except that entry in c+2\r\n                            // doesn\u0027t exist yet - so we start with r+3 instead.\r\n                            forPossibleTranspositionsInDiagonal(r + 3, colChar, returnBuffer.inputSequence, function (axisIndex, diagIndex) {\r\n                                var diagColIndex = 2 * (returnBuffer.diagonalWidth - 1) - diagIndex;\r\n                                // Because (r+3, c+2) is root, not (r+2, c+2).  Min cost of 2.\r\n                                ClassicalDistanceCalculation.propagateUpdateFrom(returnBuffer, axisIndex, transposeCol_1, addedCost_2 + diagIndex + 2, diagColIndex);\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                // Constructs the final expanded diagonal for the row.\r\n                returnBuffer.resolvedDistances[r] = [leftCell].concat(returnBuffer.resolvedDistances[r], rightCell);\r\n            };\r\n            var this_1 = this, insertionCost;\r\n            for (var r = 0; r \u003c returnBuffer.inputSequence.length; r++) {\r\n                _loop_1(r);\r\n            }\r\n            return returnBuffer;\r\n        };\r\n        ClassicalDistanceCalculation.propagateUpdateFrom = function (buffer, r, c, value, diagonalIndex) {\r\n            // Note:  this function does not actually need the `c` parameter!\r\n            //        That said, it\u0027s very useful when tracing stack traces \u0026 debugging.\r\n            if (value \u003c buffer.resolvedDistances[r][diagonalIndex]) {\r\n                buffer.resolvedDistances[r][diagonalIndex] = value;\r\n            }\r\n            else {\r\n                return;\r\n            }\r\n            var internalRow = r \u003c buffer.inputSequence.length - 1;\r\n            var internalCol = c \u003c buffer.matchSequence.length - 1;\r\n            // We have to compensate for the current \u0026 following rows not having been expanded yet.\r\n            if (diagonalIndex \u003c 2 * (buffer.diagonalWidth - 1) \u0026\u0026 internalCol) {\r\n                // We\u0027ve inserted to the left of an existing calculation - check for propagation via insertion.\r\n                var updateCost = value + 1;\r\n                this.propagateUpdateFrom(buffer, r, c + 1, updateCost, diagonalIndex + 1);\r\n            }\r\n            if (diagonalIndex \u003e 0 \u0026\u0026 internalRow) {\r\n                // We\u0027ve inserted above an existing calculation - check for propagation via deletion\r\n                var updateCost = value + 1;\r\n                this.propagateUpdateFrom(buffer, r + 1, c, updateCost, diagonalIndex - 1);\r\n            }\r\n            // If both, check for propagation via substitution and possible transpositions\r\n            if (internalRow \u0026\u0026 internalCol) {\r\n                var updateCost = value + (buffer.inputSequence[r + 1].key == buffer.matchSequence[c + 1].key ? 0 : 1);\r\n                this.propagateUpdateFrom(buffer, r + 1, c + 1, updateCost, diagonalIndex);\r\n                // Propagating transpositions (only possible if \u0027internal\u0027.)\r\n                var nextInputIndex = -1;\r\n                for (var i = r + 2; i \u003c buffer.inputSequence.length; i++) {\r\n                    if (buffer.inputSequence[i].key == buffer.matchSequence[c + 1].key) {\r\n                        nextInputIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n                var nextMatchIndex = -1;\r\n                for (var i = c + 2; i \u003c buffer.matchSequence.length; i++) {\r\n                    if (buffer.matchSequence[i].key == buffer.inputSequence[r + 1].key) {\r\n                        nextMatchIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n                if (nextInputIndex \u003e 0 \u0026\u0026 nextMatchIndex \u003e 0) {\r\n                    var transpositionCost = value + (nextInputIndex - r - 2) + 1 + (nextMatchIndex - c - 2);\r\n                    this.propagateUpdateFrom(buffer, nextInputIndex, nextMatchIndex, transpositionCost, (buffer.diagonalWidth - 1) + nextMatchIndex - nextInputIndex);\r\n                }\r\n            }\r\n        };\r\n        Object.defineProperty(ClassicalDistanceCalculation.prototype, \"mapKey\", {\r\n            get: function () {\r\n                var inputString = this.inputSequence.map(function (value) { return value.key; }).join(\u0027\u0027);\r\n                var matchString = this.matchSequence.map(function (value) { return value.key; }).join(\u0027\u0027);\r\n                return inputString + models.SENTINEL_CODE_UNIT + matchString + models.SENTINEL_CODE_UNIT + this.diagonalWidth;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(ClassicalDistanceCalculation.prototype, \"lastInputEntry\", {\r\n            get: function () {\r\n                return this.inputSequence[this.inputSequence.length - 1];\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(ClassicalDistanceCalculation.prototype, \"lastMatchEntry\", {\r\n            get: function () {\r\n                return this.matchSequence[this.matchSequence.length - 1];\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        ClassicalDistanceCalculation.computeDistance = function (input, match, bandSize) {\r\n            if (bandSize === void 0) { bandSize = 1; }\r\n            // Initialize the calculation buffer, setting the diagonal width (as appropriate) in advance.\r\n            var buffer = new ClassicalDistanceCalculation();\r\n            bandSize = bandSize || 1;\r\n            buffer.diagonalWidth = bandSize;\r\n            for (var i = 0; i \u003c input.length; i++) {\r\n                buffer = buffer.addInputChar(input[i]);\r\n            }\r\n            for (var j = 0; j \u003c match.length; j++) {\r\n                buffer = buffer.addMatchChar(match[j]);\r\n            }\r\n            return buffer;\r\n        };\r\n        return ClassicalDistanceCalculation;\r\n    }());\r\n    correction.ClassicalDistanceCalculation = ClassicalDistanceCalculation;\r\n})(correction || (correction = {}));\r\n/// \u003creference path=\"classical-calculation.ts\" /\u003e\r\nvar __generator = (this \u0026\u0026 this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] \u0026 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" \u0026\u0026 (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y \u0026\u0026 (t = op[0] \u0026 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) \u0026\u0026 t.call(y), 0) : y.next) \u0026\u0026 !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] \u0026 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length \u003e 0 \u0026\u0026 t[t.length - 1]) \u0026\u0026 (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 \u0026\u0026 (!t || (op[1] \u003e t[0] \u0026\u0026 op[1] \u003c t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 \u0026\u0026 _.label \u003c t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t \u0026\u0026 _.label \u003c t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] \u0026 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar correction;\r\n(function (correction) {\r\n    correction.QUEUE_NODE_COMPARATOR = function (arg1, arg2) {\r\n        return arg1.currentCost - arg2.currentCost;\r\n    };\r\n    // Represents a processed node for the correction-search\u0027s search-space\u0027s tree-like graph.  May represent\r\n    // internal and \u0027leaf\u0027 nodes on said graph, as well as the overall root of the search.  Also used to represent\r\n    // edges on the graph TO said nodes - there\u0027s a bit of overloading here.  Either way, it stores the cost of the\r\n    // optimum path used to reach the ndoe.\r\n    //\r\n    // The stored path cost may be an overestimate when the edit distance is greater than the current search threshold.  The\r\n    // first version of the node to be dequeued from SearchSpace\u0027s priority queue hierarchy \u0027wins\u0027 and is taken as the absolute\r\n    // minimum; subsequent versions are ignored as suboptimal.\r\n    //\r\n    // Provides functions usable to enumerate across the node\u0027s outward edges to new nodes for continued search.\r\n    // Most of the actual calculations occur as part of this process.\r\n    //\r\n    // For nodes with raw edit-distance cost within the current threshold for correction searches, we do have admissibility.\r\n    // If not enough nodes are available within that threshold, however, admissibility may be lost, leaving our search as a\r\n    // heuristic.\r\n    //\r\n    var SearchNode = /** @class */ (function () {\r\n        function SearchNode(rootTraversal, toKey) {\r\n            this.toKey = function (str) { return str; };\r\n            toKey = toKey || (function (x) { return x; });\r\n            if (rootTraversal instanceof SearchNode) {\r\n                var priorNode = rootTraversal;\r\n                this.calculation = priorNode.calculation;\r\n                this.currentTraversal = priorNode.currentTraversal;\r\n                this.priorInput = priorNode.priorInput;\r\n                this.toKey = priorNode.toKey;\r\n            }\r\n            else {\r\n                this.calculation = new correction.ClassicalDistanceCalculation();\r\n                this.currentTraversal = rootTraversal;\r\n                this.priorInput = [];\r\n                this.toKey = toKey;\r\n            }\r\n        }\r\n        Object.defineProperty(SearchNode.prototype, \"knownCost\", {\r\n            get: function () {\r\n                return this.calculation.getHeuristicFinalCost();\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(SearchNode.prototype, \"inputSamplingCost\", {\r\n            get: function () {\r\n                if (this._inputCost !== undefined) {\r\n                    return this._inputCost;\r\n                }\r\n                else {\r\n                    var MIN_P_1 = SearchSpace.MIN_KEYSTROKE_PROBABILITY;\r\n                    // Should technically re-normalize the sampling distribution.\r\n                    // -ln(p) is smaller for larger probabilities, as ln(p) is always \u003c= 0.  Approaches infinity as p =\u003e 0.\r\n                    // TODO:  probably more efficient to instead use actual \u0027probability space\u0027... but that\u0027ll involve extra changes.\r\n                    this._inputCost = this.priorInput.map(function (mass) { return mass.p \u003e MIN_P_1 ? mass.p : MIN_P_1; }).reduce(function (previous, current) { return previous - Math.log(current); }, 0);\r\n                    return this._inputCost;\r\n                }\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(SearchNode.prototype, \"currentCost\", {\r\n            // The part used to prioritize our search.\r\n            get: function () {\r\n                // - We reintrepret \u0027known cost\u0027 as a psuedo-probability.\r\n                //   - Noting that 1/e = 0.367879441, an edit-distance cost of 1 may be intepreted as -ln(1/e) - a log-space \u0027likelihood\u0027.\r\n                //     - Not exactly normalized, though.\r\n                // That\u0027s a really, really high likelihood, thoough.\r\n                //\r\n                // At any rate, we can linearly scale the known-cost to have about whatever probability we want.\r\n                // If we can state it as p = 1 / (c * e), note then that ln(c * e) = ln(c) + 1.  So, scale * (ln(c) + 1).\r\n                // If we can state it as e^x, note that ln(e^x) = x * ln(e) = x - just scale by \u0027x\u0027!\r\n                // p = 1 / (e^4) = 0.01831563888.  This still exceeds many neighboring keys!\r\n                // p = 1 / (e^5) = 0.00673794699.  Strikes a good balance.\r\n                // Should easily give priority to neighboring keys before edit-distance kicks in (when keys are a bit ambiguous)\r\n                return SearchSpace.EDIT_DISTANCE_COST_SCALE * this.knownCost + this.inputSamplingCost;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        SearchNode.prototype.buildInsertionEdges = function () {\r\n            var e_2, _a;\r\n            var edges = [];\r\n            try {\r\n                for (var _b = __values(this.currentTraversal.children()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var lexicalChild = _c.value;\r\n                    var traversal = lexicalChild.traversal();\r\n                    var matchToken = {\r\n                        key: lexicalChild.char,\r\n                        traversal: traversal\r\n                    };\r\n                    var childCalc = this.calculation.addMatchChar(matchToken);\r\n                    var searchChild = new SearchNode(this);\r\n                    searchChild.calculation = childCalc;\r\n                    searchChild.priorInput = this.priorInput;\r\n                    searchChild.currentTraversal = traversal;\r\n                    edges.push(searchChild);\r\n                }\r\n            }\r\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c \u0026\u0026 !_c.done \u0026\u0026 (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_2) throw e_2.error; }\r\n            }\r\n            return edges;\r\n        };\r\n        SearchNode.prototype.buildDeletionEdges = function (inputDistribution) {\r\n            var e_3, _a;\r\n            var edges = [];\r\n            try {\r\n                /*\r\n                 * If the probability of an input is less than the highest probability * the base edit-distance likelihood,\r\n                 * don\u0027t build an edge for it; just rely on edits from the highest-probability edge.\r\n                 *\r\n                 * We may be able to be stricter, but this should be a decent start.\r\n                 *\r\n                 * Note:  thanks to ModelCompositor.predict, we know the distribution is pre-sorted.\r\n                 */\r\n                for (var inputDistribution_1 = __values(inputDistribution), inputDistribution_1_1 = inputDistribution_1.next(); !inputDistribution_1_1.done; inputDistribution_1_1 = inputDistribution_1.next()) {\r\n                    var probMass = inputDistribution_1_1.value;\r\n                    if (probMass.p \u003c inputDistribution[0].p * Math.exp(-SearchSpace.EDIT_DISTANCE_COST_SCALE)) {\r\n                        // Again, we\u0027re pre-sorted.  All further entries will be too low-cost to consider.\r\n                        break;\r\n                    }\r\n                    var edgeCalc = this.calculation;\r\n                    var transform = probMass.sample;\r\n                    if (transform.deleteLeft) {\r\n                        edgeCalc = edgeCalc.getSubset(edgeCalc.inputSequence.length - transform.deleteLeft, edgeCalc.matchSequence.length);\r\n                    }\r\n                    // TODO:  transform.deleteRight currently not supported.\r\n                    var inputPath = Array.from(this.priorInput);\r\n                    inputPath.push(probMass);\r\n                    // Tokenize and iterate over input chars, adding them into the calc.\r\n                    for (var i = 0; i \u003c transform.insert.length; i++) {\r\n                        var char = transform.insert[i];\r\n                        if (models.isHighSurrogate(char)) {\r\n                            i++;\r\n                            char = char + transform.insert[i];\r\n                        }\r\n                        // In case of NFD input, filter out any empty-strings that may arise\r\n                        // when \u0027keying\u0027 raw diacritics.\r\n                        var keyedChar = this.toKey(char);\r\n                        if (keyedChar) {\r\n                            edgeCalc = edgeCalc.addInputChar({ key: keyedChar });\r\n                        }\r\n                    }\r\n                    var childEdge = new SearchNode(this);\r\n                    childEdge.calculation = edgeCalc;\r\n                    childEdge.priorInput = inputPath;\r\n                    edges.push(childEdge);\r\n                }\r\n            }\r\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n            finally {\r\n                try {\r\n                    if (inputDistribution_1_1 \u0026\u0026 !inputDistribution_1_1.done \u0026\u0026 (_a = inputDistribution_1.return)) _a.call(inputDistribution_1);\r\n                }\r\n                finally { if (e_3) throw e_3.error; }\r\n            }\r\n            return edges;\r\n        };\r\n        // While this may SEEM to be unnecessary, note that sometimes substitutions (which are computed\r\n        // via insert + delete) may be lower cost than both just-insert and just-delete.\r\n        SearchNode.prototype.buildSubstitutionEdges = function (inputDistribution) {\r\n            var e_4, _a, e_5, _b;\r\n            // Handles the \u0027input\u0027 component.\r\n            var intermediateEdges = this.buildDeletionEdges(inputDistribution);\r\n            var edges = [];\r\n            try {\r\n                for (var _c = __values(this.currentTraversal.children()), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                    var lexicalChild = _d.value;\r\n                    try {\r\n                        for (var intermediateEdges_1 = (e_5 = void 0, __values(intermediateEdges)), intermediateEdges_1_1 = intermediateEdges_1.next(); !intermediateEdges_1_1.done; intermediateEdges_1_1 = intermediateEdges_1.next()) {\r\n                            var edge = intermediateEdges_1_1.value;\r\n                            var traversal = lexicalChild.traversal();\r\n                            var matchToken = {\r\n                                key: lexicalChild.char,\r\n                                traversal: traversal\r\n                            };\r\n                            var childCalc = edge.calculation.addMatchChar(matchToken);\r\n                            var searchChild = new SearchNode(this);\r\n                            searchChild.calculation = childCalc;\r\n                            searchChild.priorInput = edge.priorInput;\r\n                            searchChild.currentTraversal = traversal;\r\n                            edges.push(searchChild);\r\n                        }\r\n                    }\r\n                    catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n                    finally {\r\n                        try {\r\n                            if (intermediateEdges_1_1 \u0026\u0026 !intermediateEdges_1_1.done \u0026\u0026 (_b = intermediateEdges_1.return)) _b.call(intermediateEdges_1);\r\n                        }\r\n                        finally { if (e_5) throw e_5.error; }\r\n                    }\r\n                }\r\n            }\r\n            catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_d \u0026\u0026 !_d.done \u0026\u0026 (_a = _c.return)) _a.call(_c);\r\n                }\r\n                finally { if (e_4) throw e_4.error; }\r\n            }\r\n            return edges;\r\n        };\r\n        Object.defineProperty(SearchNode.prototype, \"mapKey\", {\r\n            get: function () {\r\n                var inputString = this.priorInput.map(function (value) { return \u0027+\u0027 + value.sample.insert + \u0027-\u0027 + value.sample.deleteLeft; }).join(\u0027\u0027);\r\n                var matchString = this.calculation.matchSequence.map(function (value) { return value.key; }).join(\u0027\u0027);\r\n                // TODO:  might should also track diagonalWidth.\r\n                return inputString + models.SENTINEL_CODE_UNIT + matchString;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        return SearchNode;\r\n    }());\r\n    correction.SearchNode = SearchNode;\r\n    var SearchSpaceTier = /** @class */ (function () {\r\n        function SearchSpaceTier(index, initialEdges) {\r\n            this.processed = [];\r\n            this.index = index;\r\n            this.correctionQueue = new models.PriorityQueue(correction.QUEUE_NODE_COMPARATOR, initialEdges);\r\n        }\r\n        SearchSpaceTier.prototype.increaseMaxEditDistance = function () {\r\n            // By extracting the entries from the priority queue and increasing distance outside of it as a batch job,\r\n            // we get an O(N) implementation, rather than the O(N log N) that would result from maintaining the original queue.\r\n            var entries = this.correctionQueue.toArray();\r\n            entries.forEach(function (edge) { edge.calculation = edge.calculation.increaseMaxDistance(); });\r\n            // Since we just modified the stored instances, and the costs may have shifted, we need to re-heapify.\r\n            this.correctionQueue = new models.PriorityQueue(correction.QUEUE_NODE_COMPARATOR, entries);\r\n        };\r\n        return SearchSpaceTier;\r\n    }());\r\n    var SearchResult = /** @class */ (function () {\r\n        function SearchResult(node) {\r\n            this.resultNode = node;\r\n        }\r\n        Object.defineProperty(SearchResult.prototype, \"inputSequence\", {\r\n            get: function () {\r\n                return this.resultNode.priorInput;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(SearchResult.prototype, \"matchSequence\", {\r\n            get: function () {\r\n                return this.resultNode.calculation.matchSequence;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        ;\r\n        Object.defineProperty(SearchResult.prototype, \"matchString\", {\r\n            get: function () {\r\n                return this.matchSequence.map(function (value) { return value.key; }).join(\u0027\u0027);\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(SearchResult.prototype, \"knownCost\", {\r\n            get: function () {\r\n                return this.resultNode.knownCost;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(SearchResult.prototype, \"inputSamplingCost\", {\r\n            get: function () {\r\n                return this.resultNode.inputSamplingCost;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(SearchResult.prototype, \"totalCost\", {\r\n            get: function () {\r\n                return this.resultNode.currentCost;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(SearchResult.prototype, \"finalTraversal\", {\r\n            get: function () {\r\n                return this.resultNode.currentTraversal;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        return SearchResult;\r\n    }());\r\n    correction.SearchResult = SearchResult;\r\n    // The set of search spaces corresponding to the same \u0027context\u0027 for search.\r\n    // Whenever a wordbreak boundary is crossed, a new instance should be made.\r\n    var SearchSpace = /** @class */ (function () {\r\n        function SearchSpace(model) {\r\n            this.tierOrdering = [];\r\n            this.inputSequence = [];\r\n            this.minInputCost = [];\r\n            // Marks all results that have already been returned since the last input was received.\r\n            this.returnedValues = {};\r\n            // Signals that the edge has already been processed.\r\n            this.processedEdgeSet = {};\r\n            if (!model) {\r\n                throw \"The LexicalModel parameter must not be null / undefined.\";\r\n            }\r\n            else if (!model.traverseFromRoot) {\r\n                throw \"The provided model does not implement the `traverseFromRoot` function, which is needed to support robust correction searching.\";\r\n            }\r\n            // Constructs the comparator needed for the following line.\r\n            this.buildQueueSpaceComparator();\r\n            this.selectionQueue = new models.PriorityQueue(this.QUEUE_SPACE_COMPARATOR);\r\n            this.rootNode = new SearchNode(model.traverseFromRoot(), model.toKey ? model.toKey.bind(model) : null);\r\n            this.completedPaths = [this.rootNode];\r\n            // Adds a base level queue to handle initial insertions.\r\n            // Start with _just_ the root node.  Necessary for proper empty-token, empty-input handling!\r\n            var baseTier = new SearchSpaceTier(0, [this.rootNode]);\r\n            this.tierOrdering.push(baseTier);\r\n            this.selectionQueue.enqueue(baseTier);\r\n        }\r\n        SearchSpace.prototype.buildQueueSpaceComparator = function () {\r\n            var searchSpace = this;\r\n            this.QUEUE_SPACE_COMPARATOR = function (space1, space2) {\r\n                var node1 = space1.correctionQueue.peek();\r\n                var node2 = space2.correctionQueue.peek();\r\n                var index1 = space1.index;\r\n                var index2 = space2.index;\r\n                var tierMinCost = 0;\r\n                var sign = 1;\r\n                if (index2 \u003c index1) {\r\n                    var temp = index2;\r\n                    index2 = index1;\r\n                    index1 = temp;\r\n                    sign = -1;\r\n                }\r\n                // Boost the cost of the lower tier by the minimum cost possible for the missing inputs between them.\r\n                // In essence, compare the nodes as if the lower tier had the most likely input appended for each such\r\n                // input missing at the lower tier.\r\n                //\r\n                // A 100% admissible heuristic to favor a deeper search, since the added cost is guaranteed if the path\r\n                // is traversed further.\r\n                //\r\n                // Remember, tier index i\u0027s last used input was from input index i-1.\r\n                // As a result, i is the first needed input index, with index2 - 1 the last entry needed to match them.\r\n                for (var i = index1; i \u003c index2; i++) {\r\n                    tierMinCost = tierMinCost + searchSpace.minInputCost[i];\r\n                }\r\n                // Guards, just in case one of the search spaces ever has an empty node.\r\n                if (node1 \u0026\u0026 node2) {\r\n                    // If node1 is lower-tier, node1 is the one in need of boosted cost.\r\n                    // `sign` flips it when node2 is lower tier.\r\n                    return node1.currentCost - node2.currentCost + sign * tierMinCost;\r\n                }\r\n                else if (node2) {\r\n                    return 1;\r\n                }\r\n                else {\r\n                    return -1;\r\n                }\r\n            };\r\n        };\r\n        SearchSpace.prototype.increaseMaxEditDistance = function () {\r\n            this.tierOrdering.forEach(function (tier) { tier.increaseMaxEditDistance(); });\r\n        };\r\n        SearchSpace.prototype.addInput = function (inputDistribution) {\r\n            this.inputSequence.push(inputDistribution);\r\n            // Assumes that `inputDistribution` is already sorted.\r\n            this.minInputCost.push(-Math.log(inputDistribution[0].p));\r\n            // With a newly-available input, we can extend new input-dependent paths from\r\n            // our previously-reached \u0027extractedResults\u0027 nodes.\r\n            var newlyAvailableEdges = [];\r\n            var batches = this.completedPaths.map(function (node) {\r\n                var deletions = node.buildDeletionEdges(inputDistribution);\r\n                var substitutions = node.buildSubstitutionEdges(inputDistribution);\r\n                return deletions.concat(substitutions);\r\n            });\r\n            // Don\u0027t forget to reset the array; the contained nodes no longer reach the search\u0027s end.\r\n            this.completedPaths = [];\r\n            this.returnedValues = {};\r\n            batches.forEach(function (batch) {\r\n                newlyAvailableEdges = newlyAvailableEdges.concat(batch);\r\n            });\r\n            // Now that we\u0027ve built the new edges, we can efficiently construct the new search tier.\r\n            var tier = new SearchSpaceTier(this.tierOrdering.length, newlyAvailableEdges);\r\n            this.tierOrdering.push(tier);\r\n            this.selectionQueue.enqueue(tier);\r\n        };\r\n        // TODO: will want eventually for reversions and/or backspaces\r\n        SearchSpace.prototype.removeLastInput = function () {\r\n            // 1.  truncate all entries from that search tier; we need to \u0027restore\u0027 extractedResults to match\r\n            //     the state that would have existed without the last search tier.\r\n            // 2.  remove the last search tier.  Which may necessitate reconstructing the tier queue, but oh well.\r\n        };\r\n        SearchSpace.prototype.hasNextMatchEntry = function () {\r\n            var topQueue = this.selectionQueue.peek();\r\n            if (topQueue) {\r\n                return topQueue.correctionQueue.count \u003e 0;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        };\r\n        SearchSpace.prototype.handleNextNode = function () {\r\n            if (!this.hasNextMatchEntry()) {\r\n                return { type: \u0027none\u0027 };\r\n            }\r\n            var bestTier = this.selectionQueue.dequeue();\r\n            var currentNode = bestTier.correctionQueue.dequeue();\r\n            var unmatchedResult = {\r\n                type: \u0027intermediate\u0027,\r\n                cost: currentNode.currentCost\r\n            };\r\n            // Have we already processed a matching edge?  If so, skip it.\r\n            // We already know the previous edge is of lower cost.\r\n            if (this.processedEdgeSet[currentNode.mapKey]) {\r\n                this.selectionQueue.enqueue(bestTier);\r\n                return unmatchedResult;\r\n            }\r\n            else {\r\n                this.processedEdgeSet[currentNode.mapKey] = true;\r\n            }\r\n            // Stage 1:  filter out nodes/edges we want to prune\r\n            // Forbid a raw edit-distance of greater than 2.\r\n            // Note:  .knownCost is not scaled, while its contribution to .currentCost _is_ scaled.\r\n            var substitutionsOnly = false;\r\n            if (currentNode.knownCost \u003e 2) {\r\n                return unmatchedResult;\r\n            }\r\n            else if (currentNode.knownCost == 2) {\r\n                // Hard restriction:  no further edits will be supported.  This helps keep the search\r\n                // more narrowly focused.\r\n                substitutionsOnly = true;\r\n            }\r\n            var tierMinCost = 0;\r\n            for (var i = 0; i \u003c= bestTier.index; i++) {\r\n                tierMinCost += this.minInputCost[i];\r\n            }\r\n            // Thresholds _any_ path, partially based on currently-traversed distance.\r\n            // Allows a little \u0027wiggle room\u0027 + 2 \"hard\" edits.\r\n            // Can be important if needed characters don\u0027t actually exist on the keyboard\r\n            // ... or even just not the then-current layer of the keyboard.\r\n            if (currentNode.currentCost \u003e tierMinCost + 2.5 * SearchSpace.EDIT_DISTANCE_COST_SCALE) {\r\n                return unmatchedResult;\r\n            }\r\n            // Stage 2:  build remaining edges\r\n            // Always possible, as this does not require any new input.\r\n            if (!substitutionsOnly) {\r\n                var insertionEdges = currentNode.buildInsertionEdges();\r\n                bestTier.correctionQueue.enqueueAll(insertionEdges);\r\n            }\r\n            if (bestTier.index == this.tierOrdering.length - 1) {\r\n                // It was the final tier - store the node for future reference.\r\n                this.completedPaths.push(currentNode);\r\n                // Since we don\u0027t modify any other tier, we may simply reinsert the removed tier.\r\n                this.selectionQueue.enqueue(bestTier);\r\n                return {\r\n                    type: \u0027complete\u0027,\r\n                    cost: currentNode.currentCost,\r\n                    finalNode: currentNode\r\n                };\r\n            }\r\n            else {\r\n                // Time to construct new edges for the next tier!\r\n                var nextTier = this.tierOrdering[bestTier.index + 1];\r\n                var inputIndex = nextTier.index;\r\n                var deletionEdges = [];\r\n                if (!substitutionsOnly) {\r\n                    deletionEdges = currentNode.buildDeletionEdges(this.inputSequence[inputIndex - 1]);\r\n                }\r\n                var substitutionEdges = currentNode.buildSubstitutionEdges(this.inputSequence[inputIndex - 1]);\r\n                // Note:  we\u0027re live-modifying the tier\u0027s cost here!  The priority queue loses its guarantees as a result.\r\n                nextTier.correctionQueue.enqueueAll(deletionEdges.concat(substitutionEdges));\r\n                // So, we simply rebuild the selection queue.\r\n                this.selectionQueue = new models.PriorityQueue(this.QUEUE_SPACE_COMPARATOR, this.tierOrdering);\r\n                // We didn\u0027t reach an end-node, so we just end the iteration and continue the search.\r\n            }\r\n            // If we\u0027ve somehow fully exhausted all search options, indicate that none remain.\r\n            return unmatchedResult;\r\n        };\r\n        // Current best guesstimate of how compositor will retrieve ideal corrections.\r\n        SearchSpace.prototype.getBestMatches = function (waitMillis) {\r\n            var searchSpace, currentReturns, timeStart, maxTime, BatchingAssistant, batcher, returnedValues, preprocessedQueue, entry, batch_1, batch_2, timedOut, newResult, now, batch_3, batch;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        searchSpace = this;\r\n                        currentReturns = {};\r\n                        timeStart = Date.now();\r\n                        if (waitMillis == 0) {\r\n                            maxTime = Infinity;\r\n                        }\r\n                        else if (waitMillis == undefined || Number.isNaN(waitMillis)) { // also covers null.\r\n                            maxTime = SearchSpace.DEFAULT_ALLOTTED_CORRECTION_TIME_INTERVAL;\r\n                        }\r\n                        else {\r\n                            maxTime = waitMillis;\r\n                        }\r\n                        BatchingAssistant = /** @class */ (function () {\r\n                            function BatchingAssistant() {\r\n                                this.currentCost = Number.MIN_SAFE_INTEGER;\r\n                                this.entries = [];\r\n                            }\r\n                            BatchingAssistant.prototype.checkAndAdd = function (entry) {\r\n                                var result = null;\r\n                                if (entry.currentCost \u003e this.currentCost) {\r\n                                    result = this.tryFinalize();\r\n                                    this.currentCost = entry.currentCost;\r\n                                }\r\n                                // Filter out any duplicated match sequences.  The same match sequence may be reached via\r\n                                // different input sequences, after all.\r\n                                var outputMapKey = entry.calculation.matchSequence.map(function (value) { return value.key; }).join(\u0027\u0027);\r\n                                // First, ensure the edge has an existing \u0027shared\u0027 cache entry.\r\n                                if (!searchSpace.returnedValues[outputMapKey]) {\r\n                                    searchSpace.returnedValues[outputMapKey] = entry;\r\n                                }\r\n                                // Check the generator\u0027s local returned-value cache - this determines whether or not we\r\n                                // need to add a new \u0027return\u0027 to the batch.\r\n                                if (!currentReturns[outputMapKey]) {\r\n                                    this.entries.push(new SearchResult(entry));\r\n                                    currentReturns[outputMapKey] = entry;\r\n                                }\r\n                                return result;\r\n                            };\r\n                            BatchingAssistant.prototype.tryFinalize = function () {\r\n                                var result = null;\r\n                                if (this.entries.length \u003e 0) {\r\n                                    result = this.entries;\r\n                                    this.entries = [];\r\n                                }\r\n                                return result;\r\n                            };\r\n                            return BatchingAssistant;\r\n                        }());\r\n                        batcher = new BatchingAssistant();\r\n                        returnedValues = Object.values(this.returnedValues);\r\n                        if (!(returnedValues.length \u003e 0)) return [3 /*break*/, 6];\r\n                        preprocessedQueue = new models.PriorityQueue(correction.QUEUE_NODE_COMPARATOR, returnedValues);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        if (!(preprocessedQueue.count \u003e 0)) return [3 /*break*/, 4];\r\n                        entry = preprocessedQueue.dequeue();\r\n                        batch_1 = batcher.checkAndAdd(entry);\r\n                        if (!batch_1) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, batch_1];\r\n                    case 2:\r\n                        _a.sent();\r\n                        _a.label = 3;\r\n                    case 3: return [3 /*break*/, 1];\r\n                    case 4:\r\n                        batch_2 = batcher.tryFinalize();\r\n                        if (!batch_2) return [3 /*break*/, 6];\r\n                        return [4 /*yield*/, batch_2];\r\n                    case 5:\r\n                        _a.sent();\r\n                        _a.label = 6;\r\n                    case 6:\r\n                        timedOut = false;\r\n                        _a.label = 7;\r\n                    case 7:\r\n                        newResult = void 0;\r\n                        // Search for a \u0027complete\u0027 path, skipping all partial paths as long as time remains.\r\n                        do {\r\n                            newResult = this.handleNextNode();\r\n                            now = Date.now();\r\n                            if (now - timeStart \u003e maxTime) {\r\n                                timedOut = true;\r\n                            }\r\n                        } while (!timedOut \u0026\u0026 newResult.type == \u0027intermediate\u0027);\r\n                        batch_3 = void 0;\r\n                        if (newResult.type == \u0027none\u0027) {\r\n                            return [3 /*break*/, 10];\r\n                        }\r\n                        else if (newResult.type == \u0027complete\u0027) {\r\n                            batch_3 = batcher.checkAndAdd(newResult.finalNode);\r\n                        }\r\n                        if (!batch_3) return [3 /*break*/, 9];\r\n                        return [4 /*yield*/, batch_3];\r\n                    case 8:\r\n                        _a.sent();\r\n                        _a.label = 9;\r\n                    case 9:\r\n                        if (!timedOut \u0026\u0026 this.hasNextMatchEntry()) return [3 /*break*/, 7];\r\n                        _a.label = 10;\r\n                    case 10:\r\n                        batch = batcher.tryFinalize();\r\n                        if (!batch) return [3 /*break*/, 12];\r\n                        return [4 /*yield*/, batch];\r\n                    case 11:\r\n                        _a.sent();\r\n                        _a.label = 12;\r\n                    case 12: return [2 /*return*/, null];\r\n                }\r\n            });\r\n        };\r\n        // p = 1 / (e^4) = 0.01831563888.  This still exceeds many neighboring keys!\r\n        // p = 1 / (e^5) = 0.00673794699.  Strikes a good balance.\r\n        // Should easily give priority to neighboring keys before edit-distance kicks in (when keys are a bit ambiguous)\r\n        SearchSpace.EDIT_DISTANCE_COST_SCALE = 5;\r\n        SearchSpace.MIN_KEYSTROKE_PROBABILITY = 0.0001;\r\n        SearchSpace.DEFAULT_ALLOTTED_CORRECTION_TIME_INTERVAL = 33; // in milliseconds.\r\n        return SearchSpace;\r\n    }());\r\n    correction.SearchSpace = SearchSpace;\r\n})(correction || (correction = {}));\r\n/// \u003creference path=\"distance-modeler.ts\" /\u003e\r\nvar __extends = (this \u0026\u0026 this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array \u0026\u0026 function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" \u0026\u0026 b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar correction;\r\n(function (correction) {\r\n    function textToCharTransforms(text, transformId) {\r\n        var perCharTransforms = [];\r\n        for (var i = 0; i \u003c text.kmwLength(); i++) {\r\n            var char = text.kmwCharAt(i); // is SMP-aware\r\n            var transform = {\r\n                insert: char,\r\n                deleteLeft: 0,\r\n                id: transformId\r\n            };\r\n            perCharTransforms.push(transform);\r\n        }\r\n        return perCharTransforms;\r\n    }\r\n    var TrackedContextSuggestion = /** @class */ (function () {\r\n        function TrackedContextSuggestion() {\r\n        }\r\n        return TrackedContextSuggestion;\r\n    }());\r\n    correction.TrackedContextSuggestion = TrackedContextSuggestion;\r\n    var TrackedContextToken = /** @class */ (function () {\r\n        function TrackedContextToken() {\r\n            this.transformDistributions = [];\r\n            this.activeReplacementId = -1;\r\n        }\r\n        Object.defineProperty(TrackedContextToken.prototype, \"isNew\", {\r\n            get: function () {\r\n                return this.transformDistributions.length == 0;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(TrackedContextToken.prototype, \"currentText\", {\r\n            get: function () {\r\n                if (this.replacementText === undefined || this.replacementText === null) {\r\n                    return this.raw;\r\n                }\r\n                else {\r\n                    return this.replacementText;\r\n                }\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(TrackedContextToken.prototype, \"replacement\", {\r\n            get: function () {\r\n                var replacementId = this.activeReplacementId;\r\n                return this.replacements.find(function (replacement) {\r\n                    return replacement.suggestion.id == replacementId;\r\n                });\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        TrackedContextToken.prototype.revert = function () {\r\n            delete this.activeReplacementId;\r\n        };\r\n        return TrackedContextToken;\r\n    }());\r\n    correction.TrackedContextToken = TrackedContextToken;\r\n    var TrackedContextState = /** @class */ (function () {\r\n        function TrackedContextState(obj) {\r\n            // Tracks all search spaces starting at the current token.\r\n            // In the lm-layer\u0027s current form, this should only ever have one entry.\r\n            // Leaves \u0027design space\u0027 for if/when we add support for phrase-level corrections/predictions.\r\n            this.searchSpace = [];\r\n            if (obj instanceof TrackedContextState) {\r\n                var source = obj;\r\n                // Be sure to deep-copy the tokens!  Pointer-aliasing is bad here.\r\n                this.tokens = source.tokens.map(function (token) {\r\n                    var copy = new TrackedContextToken();\r\n                    copy.raw = token.raw;\r\n                    copy.replacements = token.replacements;\r\n                    copy.activeReplacementId = token.activeReplacementId;\r\n                    copy.transformDistributions = token.transformDistributions;\r\n                    if (token.replacementText) {\r\n                        copy.replacementText = token.replacementText;\r\n                    }\r\n                    return copy;\r\n                });\r\n                this.searchSpace = obj.searchSpace;\r\n                this.indexOffset = 0;\r\n                this.model = obj.model;\r\n            }\r\n            else {\r\n                var lexicalModel = obj;\r\n                this.tokens = [];\r\n                this.indexOffset = Number.MIN_SAFE_INTEGER;\r\n                this.model = lexicalModel;\r\n                if (lexicalModel \u0026\u0026 lexicalModel.traverseFromRoot) {\r\n                    this.searchSpace = [new correction.SearchSpace(lexicalModel)];\r\n                }\r\n            }\r\n        }\r\n        Object.defineProperty(TrackedContextState.prototype, \"head\", {\r\n            get: function () {\r\n                return this.tokens[0];\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(TrackedContextState.prototype, \"tail\", {\r\n            get: function () {\r\n                return this.tokens[this.tokens.length - 1];\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        TrackedContextState.prototype.popHead = function () {\r\n            this.tokens.splice(0, 2);\r\n            this.indexOffset -= 1;\r\n        };\r\n        TrackedContextState.prototype.pushTail = function (token) {\r\n            if (this.model \u0026\u0026 this.model.traverseFromRoot) {\r\n                this.searchSpace = [new correction.SearchSpace(this.model)]; // yeah, need to update SearchSpace for compatibility\r\n            }\r\n            else {\r\n                this.searchSpace = [];\r\n            }\r\n            this.tokens.push(token);\r\n            var state = this;\r\n            if (state.searchSpace.length \u003e 0) {\r\n                token.transformDistributions.forEach(function (distrib) { return state.searchSpace[0].addInput(distrib); });\r\n            }\r\n        };\r\n        TrackedContextState.prototype.pushWhitespaceToTail = function (transformDistribution) {\r\n            if (transformDistribution === void 0) { transformDistribution = null; }\r\n            var whitespaceToken = new TrackedContextToken();\r\n            // Track the Transform that resulted in the whitespace \u0027token\u0027.\r\n            // Will be needed for phrase-level correction/prediction.\r\n            whitespaceToken.transformDistributions = [transformDistribution];\r\n            whitespaceToken.raw = null;\r\n            this.tokens.push(whitespaceToken);\r\n        };\r\n        /**\r\n         * Used for 14.0\u0027s backspace workaround, which flattens all previous Distribution\u003cTransform\u003e\r\n         * entries because of limitations with direct use of backspace transforms.\r\n         * @param tokenText\r\n         * @param transformId\r\n         */\r\n        TrackedContextState.prototype.replaceTailForBackspace = function (tokenText, transformId) {\r\n            this.tokens.pop();\r\n            // It\u0027s a backspace transform; time for special handling!\r\n            //\r\n            // For now, with 14.0, we simply compress all remaining Transforms for the token into \r\n            // multiple single-char transforms.  Probabalistically modeling BKSP is quite complex, \r\n            // so we simplify by assuming everything remaining after a BKSP is \u0027true\u0027 and \u0027intended\u0027 text.\r\n            //\r\n            // Note that we cannot just use a single, monolithic transform at this point b/c\r\n            // of our current edit-distance optimization strategy; diagonalization is currently... \r\n            // not very compatible with that.\r\n            var backspacedTokenContext = textToCharTransforms(tokenText, transformId).map(function (transform) {\r\n                return [{ sample: transform, p: 1.0 }];\r\n            });\r\n            var compactedToken = new TrackedContextToken();\r\n            compactedToken.raw = tokenText;\r\n            compactedToken.transformDistributions = backspacedTokenContext;\r\n            this.pushTail(compactedToken);\r\n        };\r\n        TrackedContextState.prototype.updateTail = function (transformDistribution, tokenText) {\r\n            var editedToken = this.tail;\r\n            // Preserve existing text if new text isn\u0027t specified.\r\n            tokenText = tokenText || (tokenText === \u0027\u0027 ? \u0027\u0027 : editedToken.raw);\r\n            if (transformDistribution \u0026\u0026 transformDistribution.length \u003e 0) {\r\n                editedToken.transformDistributions.push(transformDistribution);\r\n                if (this.searchSpace) {\r\n                    this.searchSpace.forEach(function (space) { return space.addInput(transformDistribution); });\r\n                }\r\n            }\r\n            // Replace old token\u0027s raw-text with new token\u0027s raw-text.\r\n            editedToken.raw = tokenText;\r\n        };\r\n        TrackedContextState.prototype.toRawTokenization = function () {\r\n            var e_6, _a;\r\n            var sequence = [];\r\n            try {\r\n                for (var _b = __values(this.tokens), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var token = _c.value;\r\n                    // Hide any tokens representing wordbreaks.  (Thinking ahead to phrase-level possibilities)\r\n                    if (token.currentText !== null) {\r\n                        sequence.push(token.currentText);\r\n                    }\r\n                }\r\n            }\r\n            catch (e_6_1) { e_6 = { error: e_6_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c \u0026\u0026 !_c.done \u0026\u0026 (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_6) throw e_6.error; }\r\n            }\r\n            return sequence;\r\n        };\r\n        return TrackedContextState;\r\n    }());\r\n    correction.TrackedContextState = TrackedContextState;\r\n    var CircularArray = /** @class */ (function () {\r\n        function CircularArray(size) {\r\n            if (size === void 0) { size = CircularArray.DEFAULT_ARRAY_SIZE; }\r\n            this.currentHead = 0;\r\n            this.currentTail = 0;\r\n            this.circle = Array(size);\r\n        }\r\n        Object.defineProperty(CircularArray.prototype, \"count\", {\r\n            get: function () {\r\n                var diff = this.currentHead - this.currentTail;\r\n                if (diff \u003c 0) {\r\n                    diff = diff + this.circle.length;\r\n                }\r\n                return diff;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(CircularArray.prototype, \"maxCount\", {\r\n            get: function () {\r\n                return this.circle.length;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(CircularArray.prototype, \"oldest\", {\r\n            get: function () {\r\n                if (this.count == 0) {\r\n                    return undefined;\r\n                }\r\n                return this.item(0);\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(CircularArray.prototype, \"newest\", {\r\n            get: function () {\r\n                if (this.count == 0) {\r\n                    return undefined;\r\n                }\r\n                return this.item(this.count - 1);\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        CircularArray.prototype.enqueue = function (item) {\r\n            var prevItem = null;\r\n            var nextHead = (this.currentHead + 1) % this.maxCount;\r\n            if (nextHead == this.currentTail) {\r\n                prevItem = this.circle[this.currentTail];\r\n                this.currentTail = (this.currentTail + 1) % this.maxCount;\r\n            }\r\n            this.circle[this.currentHead] = item;\r\n            this.currentHead = nextHead;\r\n            return prevItem;\r\n        };\r\n        CircularArray.prototype.dequeue = function () {\r\n            if (this.currentTail == this.currentHead) {\r\n                return null;\r\n            }\r\n            else {\r\n                var item = this.circle[this.currentTail];\r\n                this.currentTail = (this.currentTail + 1) % this.maxCount;\r\n                return item;\r\n            }\r\n        };\r\n        CircularArray.prototype.popNewest = function () {\r\n            if (this.currentTail == this.currentHead) {\r\n                return null;\r\n            }\r\n            else {\r\n                var item = this.circle[this.currentHead];\r\n                this.currentHead = (this.currentHead - 1 + this.maxCount) % this.maxCount;\r\n                return item;\r\n            }\r\n        };\r\n        /**\r\n         * Returns items contained within the circular array, ordered from \u0027oldest\u0027 to \u0027newest\u0027 -\r\n         * the same order in which the items will be dequeued.\r\n         * @param index\r\n         */\r\n        CircularArray.prototype.item = function (index) {\r\n            if (index \u003e= this.count) {\r\n                throw \"Invalid array index\";\r\n            }\r\n            var mappedIndex = (this.currentTail + index) % this.maxCount;\r\n            return this.circle[mappedIndex];\r\n        };\r\n        CircularArray.DEFAULT_ARRAY_SIZE = 5;\r\n        return CircularArray;\r\n    }());\r\n    var ContextTracker = /** @class */ (function (_super) {\r\n        __extends(ContextTracker, _super);\r\n        function ContextTracker() {\r\n            return _super !== null \u0026\u0026 _super.apply(this, arguments) || this;\r\n        }\r\n        ContextTracker.attemptMatchContext = function (tokenizedContext, matchState, transformDistribution) {\r\n            // Map the previous tokenized state to an edit-distance friendly version.\r\n            var matchContext = matchState.toRawTokenization();\r\n            // Inverted order, since \u0027match\u0027 existed before our new context.\r\n            var mapping = correction.ClassicalDistanceCalculation.computeDistance(matchContext.map(function (value) { return ({ key: value }); }), tokenizedContext.map(function (value) { return ({ key: value }); }), 1);\r\n            var editPath = mapping.editPath();\r\n            var poppedHead = false;\r\n            var pushedTail = false;\r\n            // Matters greatly when starting from a nil context.\r\n            if (editPath.length \u003e 1) {\r\n                // First entry:  may not be an \u0027insert\u0027 or a \u0027transpose\u0027 op.\r\n                // \u0027insert\u0027 allowed if the next token is \u0027substitute\u0027, as this may occur with an edit path of length 2.\r\n                if ((editPath[0] == \u0027insert\u0027 \u0026\u0026 !(editPath[1] == \u0027substitute\u0027 \u0026\u0026 editPath.length == 2)) || editPath[0].indexOf(\u0027transpose\u0027) \u003e= 0) {\r\n                    return null;\r\n                }\r\n                else if (editPath[0] == \u0027delete\u0027) {\r\n                    poppedHead = true; // a token from the previous state has been wholly removed.\r\n                }\r\n            }\r\n            // Last entry:  may not be a \u0027delete\u0027 or a \u0027transpose\u0027 op.\r\n            var tailIndex = editPath.length - 1;\r\n            var ignorePenultimateMatch = false;\r\n            if (editPath[tailIndex] == \u0027delete\u0027 || editPath[0].indexOf(\u0027transpose\u0027) \u003e= 0) {\r\n                return null;\r\n            }\r\n            else if (editPath[tailIndex] == \u0027insert\u0027) {\r\n                pushedTail = true;\r\n            }\r\n            else if (tailIndex \u003e 0 \u0026\u0026 editPath[tailIndex - 1] == \u0027insert\u0027 \u0026\u0026 editPath[tailIndex] == \u0027substitute\u0027) {\r\n                // Tends to happen when accepting suggestions.\r\n                pushedTail = true;\r\n                ignorePenultimateMatch = true;\r\n            }\r\n            // Can happen for the first text input after backspace deletes a wordbreaking character,\r\n            // thus the new input continues a previous word while dropping the empty word after \r\n            // that prior wordbreaking character.\r\n            //\r\n            // We can\u0027t handle it reliably from this match state, but a previous entry (without the empty token)\r\n            // should still be in the cache and will be reliable for this example case.\r\n            if (tailIndex \u003e 0 \u0026\u0026 editPath[tailIndex - 1] == \u0027delete\u0027 \u0026\u0026 editPath[tailIndex] == \u0027substitute\u0027) {\r\n                return null;\r\n            }\r\n            // Now to check everything in-between:  should be exclusively \u0027match\u0027es.\r\n            for (var index = 1; index \u003c editPath.length - (ignorePenultimateMatch ? 2 : 1); index++) {\r\n                if (editPath[index] != \u0027match\u0027) {\r\n                    return null;\r\n                }\r\n            }\r\n            // If we\u0027ve made it here... success!  We have a context match!\r\n            var state;\r\n            if (pushedTail) {\r\n                // On suggestion acceptance, we should update the previous final token.\r\n                // We do it first so that the acceptance is replicated in the new TrackedContextState\r\n                // as well.\r\n                if (ignorePenultimateMatch) {\r\n                    // For this case, we were likely called by ModelCompositor.acceptSuggestion(), which\r\n                    // would have marked the accepted suggestion.\r\n                    matchState.tail.replacementText = tokenizedContext[tokenizedContext.length - 2];\r\n                }\r\n                state = new TrackedContextState(matchState);\r\n            }\r\n            else {\r\n                // Since we\u0027re continuing a previously-cached context, we can reuse the same SearchSpace\r\n                // to continue making predictions.\r\n                state = matchState;\r\n            }\r\n            var hasDistribution = transformDistribution \u0026\u0026 Array.isArray(transformDistribution);\r\n            var primaryInput = hasDistribution ? transformDistribution[0].sample : null;\r\n            if (primaryInput \u0026\u0026 primaryInput.insert == \"\" \u0026\u0026 primaryInput.deleteLeft == 0 \u0026\u0026 !primaryInput.deleteRight) {\r\n                primaryInput = null;\r\n            }\r\n            var isBackspace = primaryInput \u0026\u0026 primaryInput.insert == \"\" \u0026\u0026 primaryInput.deleteLeft \u003e 0 \u0026\u0026 !primaryInput.deleteRight;\r\n            var finalToken = tokenizedContext[tokenizedContext.length - 1];\r\n            /* Assumption:  This is an adequate check for its two sub-branches.\r\n             *\r\n             * Basis:\r\n             * - Assumption: one keystroke may only cause a single token to rotate out of context.\r\n             *   - That is, no \"reasonable\" keystroke would emit enough code points to \u0027bump\u0027 two words simultaneously.\r\n             *   - ... This one may need to be loosened a bit... but it should be enough for initial correction testing as-is.\r\n             * - Assumption:  one keystroke may only cause a single token to be appended to the context\r\n             *   - That is, no \"reasonable\" keystroke would emit a Transform adding two separate word tokens\r\n             *     - For languages using whitespace to word-break, said keystroke would have to include said whitespace to break the assumption.\r\n             */\r\n            // If there is/was more than one context token available...\r\n            if (editPath.length \u003e 1) {\r\n                // We\u0027re removing a context token, but at least one remains.\r\n                if (poppedHead) {\r\n                    state.popHead();\r\n                }\r\n                // We\u0027re adding an additional context token.\r\n                if (pushedTail) {\r\n                    // ASSUMPTION:  any transform that triggers this case is a pure-whitespace Transform, as we\r\n                    //              need a word-break before beginning a new word\u0027s context.\r\n                    //              Worth note:  when invalid, the lm-layer already has problems in other aspects too.\r\n                    state.pushWhitespaceToTail(transformDistribution);\r\n                    var emptyToken = new TrackedContextToken();\r\n                    emptyToken.raw = \u0027\u0027;\r\n                    // Continuing the earlier assumption, that \u0027pure-whitespace Transform\u0027 does not emit any initial characters\r\n                    // for the new word (token), so the input keystrokes do not correspond to the new text token.\r\n                    emptyToken.transformDistributions = [];\r\n                    state.pushTail(emptyToken);\r\n                }\r\n                else { // We\u0027re editing the final context token.\r\n                    // TODO:  Assumption:  we didn\u0027t \u0027miss\u0027 any inputs somehow.\r\n                    //        As is, may be prone to fragility should the lm-layer\u0027s tracked context \u0027desync\u0027 from its host\u0027s.\r\n                    if (isBackspace) {\r\n                        state.replaceTailForBackspace(finalToken, primaryInput.id);\r\n                    }\r\n                    else {\r\n                        state.updateTail(primaryInput ? transformDistribution : null, finalToken);\r\n                    }\r\n                }\r\n                // There is only one word in the context.\r\n            }\r\n            else {\r\n                // TODO:  Assumption:  we didn\u0027t \u0027miss\u0027 any inputs somehow.\r\n                //        As is, may be prone to fragility should the lm-layer\u0027s tracked context \u0027desync\u0027 from its host\u0027s.\r\n                if (editPath[tailIndex] == \u0027insert\u0027) {\r\n                    // Construct appropriate initial token.\r\n                    var token = new TrackedContextToken();\r\n                    token.raw = tokenizedContext[0];\r\n                    token.transformDistributions = [transformDistribution];\r\n                    state.pushTail(token);\r\n                }\r\n                else { // Edit the lone context token.\r\n                    // Consider backspace entry for this case?\r\n                    if (isBackspace) {\r\n                        state.replaceTailForBackspace(finalToken, primaryInput.id);\r\n                    }\r\n                    else {\r\n                        state.updateTail(primaryInput ? transformDistribution : null, finalToken);\r\n                    }\r\n                }\r\n            }\r\n            return state;\r\n        };\r\n        ContextTracker.modelContextState = function (tokenizedContext, lexicalModel) {\r\n            var baseTokens = tokenizedContext.map(function (entry) {\r\n                var token = new TrackedContextToken();\r\n                token.raw = entry;\r\n                if (token.raw) {\r\n                    token.transformDistributions = textToCharTransforms(token.raw).map(function (transform) {\r\n                        return [{ sample: transform, p: 1.0 }];\r\n                    });\r\n                }\r\n                else {\r\n                    // Helps model context-final wordbreaks.\r\n                    token.transformDistributions = [];\r\n                }\r\n                return token;\r\n            });\r\n            // And now build the final context state object, which includes whitespace \u0027tokens\u0027.\r\n            var state = new TrackedContextState(lexicalModel);\r\n            if (baseTokens.length \u003e 0) {\r\n                state.pushTail(baseTokens.splice(0, 1)[0]);\r\n            }\r\n            while (baseTokens.length \u003e 0) {\r\n                state.pushWhitespaceToTail();\r\n                state.pushTail(baseTokens.splice(0, 1)[0]);\r\n            }\r\n            if (state.tokens.length == 0) {\r\n                var token = new TrackedContextToken();\r\n                token.raw = \u0027\u0027;\r\n                state.pushTail(token);\r\n            }\r\n            return state;\r\n        };\r\n        /**\r\n         * Compares the current, post-input context against the most recently-seen contexts from previous prediction calls, returning\r\n         * the most information-rich `TrackedContextState` possible.  If a match is found, the state will be annotated with the\r\n         * input information provided to previous prediction calls and persisted correction-search calculations for re-use.\r\n         *\r\n         * @param model\r\n         * @param context\r\n         * @param mainTransform\r\n         * @param transformDistribution\r\n         */\r\n        ContextTracker.prototype.analyzeState = function (model, context, transformDistribution) {\r\n            if (!model.traverseFromRoot) {\r\n                // Assumption:  LexicalModel provides a valid traverseFromRoot function.  (Is technically optional)\r\n                // Without it, no \u0027corrections\u0027 may be made; the model can only be used to predict, not correct.\r\n                throw \"This lexical model does not provide adequate data for correction algorithms and context reuse\";\r\n            }\r\n            var tokenizedContext = models.tokenize(model.wordbreaker || wordBreakers.default, context);\r\n            if (tokenizedContext.left.length \u003e 0) {\r\n                for (var i = this.count - 1; i \u003e= 0; i--) {\r\n                    var resultState = ContextTracker.attemptMatchContext(tokenizedContext.left, this.item(i), transformDistribution);\r\n                    if (resultState) {\r\n                        resultState.taggedContext = context;\r\n                        if (resultState != this.item(i)) {\r\n                            this.enqueue(resultState);\r\n                        }\r\n                        return resultState;\r\n                    }\r\n                }\r\n            }\r\n            // Else:  either empty OR we\u0027ve detected a \u0027new context\u0027.  Initialize from scratch; no prior input information is\r\n            // available.  Only the results of the prior inputs are known.\r\n            //\r\n            // Assumption:  as a caret needs to move to context before any actual transform distributions occur,\r\n            // this state is only reached on caret moves; thus, transformDistribution is actually just a single null transform.\r\n            var state = ContextTracker.modelContextState(tokenizedContext.left, model);\r\n            state.taggedContext = context;\r\n            this.enqueue(state);\r\n            return state;\r\n        };\r\n        return ContextTracker;\r\n    }(CircularArray));\r\n    correction.ContextTracker = ContextTracker;\r\n})(correction || (correction = {}));\r\n/// \u003creference path=\"correction/context-tracker.ts\" /\u003e\r\nvar __assign = (this \u0026\u0026 this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i \u003c n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar ModelCompositor = /** @class */ (function () {\r\n    function ModelCompositor(lexicalModel) {\r\n        this.SUGGESTION_ID_SEED = 0;\r\n        this.lexicalModel = lexicalModel;\r\n        if (lexicalModel.traverseFromRoot) {\r\n            this.contextTracker = new correction.ContextTracker();\r\n        }\r\n        this.punctuation = ModelCompositor.determinePunctuationFromModel(lexicalModel);\r\n    }\r\n    ModelCompositor.prototype.isWhitespace = function (transform) {\r\n        // Matches prefixed text + any instance of a character with Unicode general property Z* or the following: CR, LF, and Tab.\r\n        var whitespaceRemover = /.*[\\u0009\\u000A\\u000D\\u0020\\u00a0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u200b\\u2028\\u2029\\u202f\\u205f\\u3000]/i;\r\n        // Filter out null-inserts; their high probability can cause issues.\r\n        if (transform.insert == \u0027\u0027) { // Can actually register as \u0027whitespace\u0027.\r\n            return false;\r\n        }\r\n        var insert = transform.insert;\r\n        insert = insert.replace(whitespaceRemover, \u0027\u0027);\r\n        return insert == \u0027\u0027;\r\n    };\r\n    ModelCompositor.prototype.isBackspace = function (transform) {\r\n        return transform.insert == \"\" \u0026\u0026 transform.deleteLeft \u003e 0;\r\n    };\r\n    ModelCompositor.prototype.isEmpty = function (transform) {\r\n        return transform.insert == \u0027\u0027 \u0026\u0026 transform.deleteLeft == 0;\r\n    };\r\n    ModelCompositor.prototype.predictFromCorrections = function (corrections, context) {\r\n        var e_7, _a;\r\n        var returnedPredictions = [];\r\n        var _loop_2 = function (correction_1) {\r\n            var predictions = this_2.lexicalModel.predict(correction_1.sample, context);\r\n            var predictionSet = predictions.map(function (pair) {\r\n                var transform = correction_1.sample;\r\n                var inputProb = correction_1.p;\r\n                // Let\u0027s not rely on the model to copy transform IDs.\r\n                // Only bother is there IS an ID to copy.\r\n                if (transform.id !== undefined) {\r\n                    pair.sample.transformId = transform.id;\r\n                }\r\n                var prediction = { sample: pair.sample, p: pair.p * inputProb };\r\n                return prediction;\r\n            }, this_2);\r\n            returnedPredictions = returnedPredictions.concat(predictionSet);\r\n        };\r\n        var this_2 = this;\r\n        try {\r\n            for (var corrections_1 = __values(corrections), corrections_1_1 = corrections_1.next(); !corrections_1_1.done; corrections_1_1 = corrections_1.next()) {\r\n                var correction_1 = corrections_1_1.value;\r\n                _loop_2(correction_1);\r\n            }\r\n        }\r\n        catch (e_7_1) { e_7 = { error: e_7_1 }; }\r\n        finally {\r\n            try {\r\n                if (corrections_1_1 \u0026\u0026 !corrections_1_1.done \u0026\u0026 (_a = corrections_1.return)) _a.call(corrections_1);\r\n            }\r\n            finally { if (e_7) throw e_7.error; }\r\n        }\r\n        return returnedPredictions;\r\n    };\r\n    ModelCompositor.prototype.predict = function (transformDistribution, context) {\r\n        var e_8, _a, e_9, _b;\r\n        var suggestionDistribution = [];\r\n        var lexicalModel = this.lexicalModel;\r\n        var punctuation = this.punctuation;\r\n        if (!(transformDistribution instanceof Array)) {\r\n            transformDistribution = [{ sample: transformDistribution, p: 1.0 }];\r\n        }\r\n        else if (transformDistribution.length == 0) {\r\n            /*\r\n               Robust stop-gap: if our other filters somehow fail, this fixes the\r\n               zero-length array by making it match the form of the array that\r\n               would result if it were instead called with the other legal\r\n               parameter type - a single Transform.\r\n      \r\n               Unfortunately, the method will lack all data about even\r\n               the original keystroke that resulted in the call... but this way,\r\n               we can at least get some predictions rather than shortcutting\r\n               and producing none whatsoever.\r\n            */\r\n            transformDistribution.push({\r\n                sample: {\r\n                    insert: \u0027\u0027,\r\n                    deleteLeft: 0\r\n                },\r\n                p: 1.0\r\n            });\r\n        }\r\n        var inputTransform = transformDistribution.sort(function (a, b) {\r\n            return b.p - a.p;\r\n        })[0].sample;\r\n        // Only allow new-word suggestions if space was the most likely keypress.\r\n        var allowSpace = this.isWhitespace(inputTransform);\r\n        var allowBksp = this.isBackspace(inputTransform);\r\n        var postContext = models.applyTransform(inputTransform, context);\r\n        var keepOptionText = this.wordbreak(postContext);\r\n        var keepOption = null;\r\n        var rawPredictions = [];\r\n        // Used to restore whitespaces if operations would remove them.\r\n        var prefixTransform;\r\n        var contextState = null;\r\n        // Section 1:  determining \u0027prediction roots\u0027.\r\n        if (!this.contextTracker) {\r\n            var predictionRoots = void 0;\r\n            // Generates raw prediction distributions for each valid input.  Can only \u0027correct\u0027\r\n            // against the final input.\r\n            //\r\n            // This is the old, 12.0-13.0 \u0027correction\u0027 style.\r\n            if (allowSpace) {\r\n                // Detect start of new word; prevent whitespace loss here.\r\n                predictionRoots = [{ sample: inputTransform, p: 1.0 }];\r\n                prefixTransform = inputTransform;\r\n            }\r\n            else {\r\n                predictionRoots = transformDistribution.map(function (alt) {\r\n                    var transform = alt.sample;\r\n                    // Filter out special keys unless they\u0027re expected.\r\n                    if (this.isWhitespace(transform) \u0026\u0026 !allowSpace) {\r\n                        return null;\r\n                    }\r\n                    else if (this.isBackspace(transform) \u0026\u0026 !allowBksp) {\r\n                        return null;\r\n                    }\r\n                    return alt;\r\n                }, this);\r\n            }\r\n            // Remove `null` entries.\r\n            predictionRoots = predictionRoots.filter(function (tuple) { return !!tuple; });\r\n            // Running in bulk over all suggestions, duplicate entries may be possible.\r\n            rawPredictions = this.predictFromCorrections(predictionRoots, context);\r\n        }\r\n        else {\r\n            contextState = this.contextTracker.analyzeState(this.lexicalModel, postContext, !this.isEmpty(inputTransform) ?\r\n                transformDistribution :\r\n                null);\r\n            // TODO:  Should we filter backspaces \u0026 whitespaces out of the transform distribution?\r\n            //        Ideally, the answer (in the future) will be no, but leaving it in right now may pose an issue.\r\n            // Rather than go \"full hog\" and make a priority queue out of the eventual, future competing search spaces...\r\n            // let\u0027s just note that right now, there will only ever be one.\r\n            //\r\n            // The \u0027eventual\u0027 logic will be significantly more complex, though still manageable.\r\n            var searchSpace = contextState.searchSpace[0];\r\n            var newEmptyToken_1 = false;\r\n            // Detect if we\u0027re starting a new context state.\r\n            var contextTokens = contextState.tokens;\r\n            if (contextTokens.length == 0 || contextTokens[contextTokens.length - 1].isNew) {\r\n                if (this.isEmpty(inputTransform) || this.isWhitespace(inputTransform)) {\r\n                    newEmptyToken_1 = true;\r\n                    prefixTransform = inputTransform;\r\n                    context = postContext; // Ensure the whitespace token is preapplied!\r\n                }\r\n            }\r\n            // TODO:  whitespace, backspace filtering.  Do it here.\r\n            //        Whitespace is probably fine, actually.  Less sure about backspace.\r\n            var bestCorrectionCost = void 0;\r\n            try {\r\n                for (var _c = __values(searchSpace.getBestMatches()), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                    var matches = _d.value;\r\n                    // Corrections obtained:  now to predict from them!\r\n                    var predictionRoots = matches.map(function (match) {\r\n                        var correction = match.matchString;\r\n                        // Worth considering:  extend Traversal to allow direct prediction lookups?\r\n                        // let traversal = match.finalTraversal;\r\n                        // Find a proper Transform ID to map the correction to.\r\n                        // Without it, we can\u0027t apply the suggestion.\r\n                        var finalInput;\r\n                        if (match.inputSequence.length \u003e 0) {\r\n                            finalInput = match.inputSequence[match.inputSequence.length - 1].sample;\r\n                        }\r\n                        else {\r\n                            finalInput = inputTransform; // A fallback measure.  Greatly matters for empty contexts.\r\n                        }\r\n                        var deleteLeft = 0;\r\n                        // remove actual token string.  If new token, there should be nothing to delete.\r\n                        if (!newEmptyToken_1) {\r\n                            // If this is triggered from a backspace, make sure to use its results\r\n                            // and also include its left-deletions!  It\u0027s the one post-input context case.\r\n                            if (allowBksp) {\r\n                                deleteLeft = this.wordbreak(postContext).kmwLength() + inputTransform.deleteLeft;\r\n                            }\r\n                            else {\r\n                                // Normal case - use the pre-input context.\r\n                                deleteLeft = this.wordbreak(context).kmwLength();\r\n                            }\r\n                        }\r\n                        // Replace the existing context with the correction.\r\n                        var correctionTransform = {\r\n                            insert: correction,\r\n                            deleteLeft: deleteLeft,\r\n                            id: inputTransform.id // The correction should always be based on the most recent external transform/transcription ID.\r\n                        };\r\n                        return {\r\n                            sample: correctionTransform,\r\n                            p: Math.exp(-match.totalCost)\r\n                        };\r\n                    }, this);\r\n                    // Running in bulk over all suggestions, duplicate entries may be possible.\r\n                    var predictions = this.predictFromCorrections(predictionRoots, context);\r\n                    // Only set \u0027best correction\u0027 cost when a correction ACTUALLY YIELDS predictions.\r\n                    if (predictions.length \u003e 0 \u0026\u0026 bestCorrectionCost === undefined) {\r\n                        bestCorrectionCost = -Math.log(predictionRoots[0].p);\r\n                    }\r\n                    rawPredictions = rawPredictions.concat(predictions);\r\n                    // TODO:  We don\u0027t currently de-duplicate predictions at this point quite yet, so\r\n                    // it\u0027s technically possible that we return too few.\r\n                    var correctionCost = matches[0].totalCost;\r\n                    // Searching a bit longer is permitted when no predictions have been found.\r\n                    if (correctionCost \u003e= bestCorrectionCost + 8) {\r\n                        break;\r\n                        // If enough have been found, we\u0027re safe to terminate earlier.\r\n                    }\r\n                    else if (rawPredictions.length \u003e= ModelCompositor.MAX_SUGGESTIONS) {\r\n                        if (correctionCost \u003e= bestCorrectionCost + 4) { // e^-4 = 0.0183156388.  Allows \"80%\" of an extra edit.\r\n                            // Very useful for stopping \u0027sooner\u0027 when words reach a sufficient length.\r\n                            break;\r\n                        }\r\n                        else {\r\n                            // Sort the prediction list; we need them in descending order for the next check.\r\n                            rawPredictions.sort(function (a, b) {\r\n                                return b.p - a.p;\r\n                            });\r\n                            // If the best suggestion from the search\u0027s current tier fails to beat the worst\r\n                            // pending suggestion from previous tiers, assume all further corrections will\r\n                            // similarly fail to win; terminate the search-loop.\r\n                            if (rawPredictions[ModelCompositor.MAX_SUGGESTIONS - 1].p \u003e Math.exp(-correctionCost)) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e_8_1) { e_8 = { error: e_8_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_d \u0026\u0026 !_d.done \u0026\u0026 (_a = _c.return)) _a.call(_c);\r\n                }\r\n                finally { if (e_8) throw e_8.error; }\r\n            }\r\n        }\r\n        // Section 2 - post-analysis for our generated predictions, managing \u0027keep\u0027.\r\n        // Assumption:  Duplicated \u0027displayAs\u0027 properties indicate duplicated Suggestions.\r\n        // When true, we can use an \u0027associative array\u0027 to de-duplicate everything.\r\n        var suggestionDistribMap = {};\r\n        var currentCasing = null;\r\n        if (lexicalModel.languageUsesCasing) {\r\n            currentCasing = this.detectCurrentCasing(postContext);\r\n        }\r\n        var baseWord = this.wordbreak(context);\r\n        try {\r\n            // Deduplicator + annotator of \u0027keep\u0027 suggestions.\r\n            for (var rawPredictions_1 = __values(rawPredictions), rawPredictions_1_1 = rawPredictions_1.next(); !rawPredictions_1_1.done; rawPredictions_1_1 = rawPredictions_1.next()) {\r\n                var prediction = rawPredictions_1_1.value;\r\n                // Combine duplicate samples.\r\n                var displayText = prediction.sample.displayAs;\r\n                var preserveAsKeep = displayText == keepOptionText;\r\n                // De-duplication should be case-insensitive, but NOT\r\n                // diacritic-insensitive.\r\n                if (this.lexicalModel.languageUsesCasing) {\r\n                    preserveAsKeep = preserveAsKeep || displayText == this.lexicalModel.applyCasing(\u0027lower\u0027, keepOptionText);\r\n                }\r\n                if (preserveAsKeep) {\r\n                    // Preserve the original, pre-keyed version of the text.\r\n                    if (!keepOption) {\r\n                        var baseTransform = prediction.sample.transform;\r\n                        var keepTransform = {\r\n                            insert: keepOptionText,\r\n                            deleteLeft: baseTransform.deleteLeft,\r\n                            deleteRight: baseTransform.deleteRight,\r\n                            id: baseTransform.id\r\n                        };\r\n                        var intermediateKeep = models.transformToSuggestion(keepTransform, prediction.p);\r\n                        keepOption = this.toAnnotatedSuggestion(intermediateKeep, \u0027keep\u0027, models.QuoteBehavior.noQuotes);\r\n                        keepOption.matchesModel = true;\r\n                        // Since we replaced the original Suggestion with a keep-annotated one,\r\n                        // we must manually preserve the transform ID.\r\n                        keepOption.transformId = prediction.sample.transformId;\r\n                    }\r\n                    else if (keepOption.p \u0026\u0026 prediction.p) {\r\n                        keepOption.p += prediction.p;\r\n                    }\r\n                }\r\n                else {\r\n                    // Apply capitalization rules now; facilitates de-duplication of suggestions\r\n                    // that may be caused as a result.\r\n                    //\r\n                    // Example:  \"apple\" and \"Apple\" are separate when \u0027lower\u0027, but identical for \u0027initial\u0027 and \u0027upper\u0027.\r\n                    if (currentCasing \u0026\u0026 currentCasing != \u0027lower\u0027) {\r\n                        this.applySuggestionCasing(prediction.sample, baseWord, currentCasing);\r\n                        // update the mapping string, too.\r\n                        displayText = prediction.sample.displayAs;\r\n                    }\r\n                    var existingSuggestion = suggestionDistribMap[displayText];\r\n                    if (existingSuggestion) {\r\n                        existingSuggestion.p += prediction.p;\r\n                    }\r\n                    else {\r\n                        suggestionDistribMap[displayText] = prediction;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        catch (e_9_1) { e_9 = { error: e_9_1 }; }\r\n        finally {\r\n            try {\r\n                if (rawPredictions_1_1 \u0026\u0026 !rawPredictions_1_1.done \u0026\u0026 (_b = rawPredictions_1.return)) _b.call(rawPredictions_1);\r\n            }\r\n            finally { if (e_9) throw e_9.error; }\r\n        }\r\n        // Generate a default \u0027keep\u0027 option if one was not otherwise produced.\r\n        if (!keepOption \u0026\u0026 keepOptionText != \u0027\u0027) {\r\n            // IMPORTANT:  duplicate the original transform.  Causes nasty side-effects\r\n            // for context-tracking otherwise!\r\n            var keepTransform = __assign({}, inputTransform);\r\n            // 1 is a filler value; goes unused b/c is for a \u0027keep\u0027.\r\n            var keepSuggestion = models.transformToSuggestion(keepTransform, 1);\r\n            // This is the one case where the transform doesn\u0027t insert the full word; we need to override the displayAs param.\r\n            keepSuggestion.displayAs = keepOptionText;\r\n            keepOption = this.toAnnotatedSuggestion(keepSuggestion, \u0027keep\u0027);\r\n            keepOption.matchesModel = false;\r\n        }\r\n        // Section 3:  Finalize suggestions, truncate list to the N (MAX_SUGGESTIONS) most optimal, return.\r\n        // Now that we\u0027ve calculated a unique set of probability masses, time to make them into a proper\r\n        // distribution and prep for return.\r\n        for (var key in suggestionDistribMap) {\r\n            var pair = suggestionDistribMap[key];\r\n            suggestionDistribution.push(pair);\r\n        }\r\n        suggestionDistribution = suggestionDistribution.sort(function (a, b) {\r\n            return b.p - a.p; // Use descending order - we want the largest probabilty suggestions first!\r\n        });\r\n        var suggestions = suggestionDistribution.splice(0, ModelCompositor.MAX_SUGGESTIONS).map(function (value) {\r\n            if (value.sample[\u0027p\u0027]) {\r\n                // For analysis / debugging\r\n                value.sample[\u0027lexical-p\u0027] = value.sample[\u0027p\u0027];\r\n                value.sample[\u0027correction-p\u0027] = value.p / value.sample[\u0027p\u0027];\r\n                // Use of the Trie model always exposed the lexical model\u0027s probability for a word to KMW.\r\n                // It\u0027s useful for debugging right now, so may as well repurpose it as the posterior.\r\n                //\r\n                // We still condition on \u0027p\u0027 existing so that test cases aren\u0027t broken.\r\n                value.sample[\u0027p\u0027] = value.p;\r\n            }\r\n            //\r\n            return value.sample;\r\n        });\r\n        if (keepOption) {\r\n            suggestions = [keepOption].concat(suggestions);\r\n        }\r\n        // Apply \u0027after word\u0027 punctuation and casing (when applicable).  Also, set suggestion IDs.\r\n        // We delay until now so that utility functions relying on the unmodified Transform may execute properly.\r\n        var compositor = this;\r\n        suggestions.forEach(function (suggestion) {\r\n            // Valid \u0027keep\u0027 suggestions may have zero length; we still need to evaluate the following code\r\n            // for such cases.\r\n            // Do we need to manipulate the suggestion\u0027s transform based on the current state of the context?\r\n            if (!context.right) {\r\n                suggestion.transform.insert += punctuation.insertAfterWord;\r\n            }\r\n            else {\r\n                // If we\u0027re mid-word, delete its original post-caret text.\r\n                var tokenization = compositor.tokenize(context);\r\n                if (tokenization \u0026\u0026 tokenization.caretSplitsToken) {\r\n                    // While we wait on the ability to provide a more \u0027ideal\u0027 solution, let\u0027s at least\r\n                    // go with a more stable, if slightly less ideal, solution for now.\r\n                    //\r\n                    // A predictive text default (on iOS, at least) - immediately wordbreak\r\n                    // on suggestions accepted mid-word.\r\n                    suggestion.transform.insert += punctuation.insertAfterWord;\r\n                }\r\n            }\r\n            // If this is a suggestion after wordbreak input, make sure we preserve the wordbreak transform!\r\n            if (prefixTransform) {\r\n                var mergedTransform = models.buildMergedTransform(prefixTransform, suggestion.transform);\r\n                mergedTransform.id = suggestion.transformId;\r\n                // Temporarily and locally drops \u0027readonly\u0027 semantics so that we can reassign the transform.\r\n                // See https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-8.html#improved-control-over-mapped-type-modifiers\r\n                var mutableSuggestion = suggestion;\r\n                // Assignment via by-reference behavior, as suggestion is an object\r\n                mutableSuggestion.transform = mergedTransform;\r\n            }\r\n            suggestion.id = compositor.SUGGESTION_ID_SEED;\r\n            compositor.SUGGESTION_ID_SEED++;\r\n        });\r\n        // Store the suggestions on the final token of the current context state (if it exists).\r\n        // Or, once phrase-level suggestions are possible, on whichever token serves as each prediction\u0027s root.\r\n        if (contextState) {\r\n            contextState.tail.replacements = suggestions.map(function (suggestion) {\r\n                return {\r\n                    suggestion: suggestion,\r\n                    tokenWidth: 1\r\n                };\r\n            });\r\n        }\r\n        return suggestions;\r\n    };\r\n    // Responsible for applying casing rules to suggestions.\r\n    ModelCompositor.prototype.applySuggestionCasing = function (suggestion, baseWord, casingForm) {\r\n        // Step 1:  does the suggestion replace the whole word?  If not, we should extend the suggestion to do so.\r\n        var unchangedLength = baseWord.kmwLength() - suggestion.transform.deleteLeft;\r\n        if (unchangedLength \u003e 0) {\r\n            suggestion.transform.deleteLeft += unchangedLength;\r\n            suggestion.transform.insert = baseWord.kmwSubstr(0, unchangedLength) + suggestion.transform.insert;\r\n        }\r\n        // Step 2: Now that the transform affects the whole word, we may safely apply casing rules.\r\n        suggestion.transform.insert = this.lexicalModel.applyCasing(casingForm, suggestion.transform.insert);\r\n        suggestion.displayAs = this.lexicalModel.applyCasing(casingForm, suggestion.displayAs);\r\n    };\r\n    ModelCompositor.prototype.toAnnotatedSuggestion = function (suggestion, annotationType, quoteBehavior) {\r\n        if (quoteBehavior === void 0) { quoteBehavior = models.QuoteBehavior.default; }\r\n        // A method-internal \u0027import\u0027 of the enum.\r\n        var QuoteBehavior = models.QuoteBehavior;\r\n        var defaultQuoteBehavior = QuoteBehavior.noQuotes;\r\n        if (annotationType == \u0027keep\u0027 || annotationType == \u0027revert\u0027) {\r\n            defaultQuoteBehavior = QuoteBehavior.useQuotes;\r\n        }\r\n        return {\r\n            transform: suggestion.transform,\r\n            transformId: suggestion.transformId,\r\n            displayAs: QuoteBehavior.apply(quoteBehavior, suggestion.displayAs, this.punctuation, defaultQuoteBehavior),\r\n            tag: annotationType,\r\n            p: suggestion.p\r\n        };\r\n    };\r\n    /**\r\n     * Returns the punctuation used for this model, filling out unspecified fields\r\n     */\r\n    ModelCompositor.determinePunctuationFromModel = function (model) {\r\n        var defaults = DEFAULT_PUNCTUATION;\r\n        // Use the defaults of the model does not provide any punctuation at all.\r\n        if (!model.punctuation)\r\n            return defaults;\r\n        var specifiedPunctuation = model.punctuation;\r\n        var insertAfterWord = specifiedPunctuation.insertAfterWord;\r\n        if (insertAfterWord !== \u0027\u0027 \u0026\u0026 !insertAfterWord) {\r\n            insertAfterWord = defaults.insertAfterWord;\r\n        }\r\n        var quotesForKeepSuggestion = specifiedPunctuation.quotesForKeepSuggestion;\r\n        if (!quotesForKeepSuggestion) {\r\n            quotesForKeepSuggestion = defaults.quotesForKeepSuggestion;\r\n        }\r\n        var isRTL = specifiedPunctuation.isRTL;\r\n        // Default:  false / undefined, so no need to directly specify it.\r\n        return {\r\n            insertAfterWord: insertAfterWord,\r\n            quotesForKeepSuggestion: quotesForKeepSuggestion,\r\n            isRTL: isRTL\r\n        };\r\n    };\r\n    ModelCompositor.prototype.acceptSuggestion = function (suggestion, context, postTransform) {\r\n        // Step 1:  generate and save the reversion\u0027s Transform.\r\n        var sourceTransform = suggestion.transform;\r\n        var deletedLeftChars = context.left.kmwSubstr(-sourceTransform.deleteLeft, sourceTransform.deleteLeft);\r\n        var insertedLength = sourceTransform.insert.kmwLength();\r\n        var reversionTransform = {\r\n            insert: deletedLeftChars,\r\n            deleteLeft: insertedLength\r\n        };\r\n        // Step 2:  building the proper \u0027displayAs\u0027 string for the Reversion\r\n        var postContext = context;\r\n        if (postTransform) {\r\n            // The code above restores the state to the context at the time the `Suggestion` was created.\r\n            // `postTransform` handles any missing context that came later.\r\n            reversionTransform = models.buildMergedTransform(reversionTransform, postTransform);\r\n            // Now that we\u0027ve built the reversion based upon the Suggestion\u0027s original context,\r\n            // we manipulate it in order to get a proper \u0027displayAs\u0027 string.\r\n            postContext = models.applyTransform(postTransform, postContext);\r\n        }\r\n        var revertedPrefix;\r\n        var postContextTokenization = this.tokenize(postContext);\r\n        if (postContextTokenization) {\r\n            // Handles display string for reversions triggered by accepting a suggestion mid-token.\r\n            if (postContextTokenization.left.length \u003e 0) {\r\n                revertedPrefix = postContextTokenization.left[postContextTokenization.left.length - 1];\r\n            }\r\n            else {\r\n                revertedPrefix = \u0027\u0027;\r\n            }\r\n            revertedPrefix += postContextTokenization.caretSplitsToken ? postContextTokenization.right[0] : \u0027\u0027;\r\n        }\r\n        else {\r\n            revertedPrefix = this.wordbreak(postContext);\r\n        }\r\n        var firstConversion = models.transformToSuggestion(reversionTransform);\r\n        firstConversion.displayAs = revertedPrefix;\r\n        // Build the actual Reversion, which is technically an annotated Suggestion.\r\n        // Since we\u0027re outside of the standard `predict` control path, we\u0027ll need to\r\n        // set the Reversion\u0027s ID directly.\r\n        var reversion = this.toAnnotatedSuggestion(firstConversion, \u0027revert\u0027);\r\n        if (suggestion.transformId != null) {\r\n            reversion.transformId = -suggestion.transformId;\r\n        }\r\n        if (suggestion.id != null) {\r\n            // Since a reversion inverts its source suggestion, we set its ID to be the\r\n            // additive inverse of the source suggestion\u0027s ID.  Makes easy mapping /\r\n            // verification later.\r\n            reversion.id = -suggestion.id;\r\n        }\r\n        else {\r\n            reversion.id = -this.SUGGESTION_ID_SEED;\r\n            this.SUGGESTION_ID_SEED++;\r\n        }\r\n        // Step 3:  if we track Contexts, update the tracking data as appropriate.\r\n        if (this.contextTracker) {\r\n            var contextState = this.contextTracker.newest;\r\n            if (!contextState) {\r\n                contextState = this.contextTracker.analyzeState(this.lexicalModel, context);\r\n            }\r\n            contextState.tail.activeReplacementId = suggestion.id;\r\n            var acceptedContext = models.applyTransform(suggestion.transform, context);\r\n            this.contextTracker.analyzeState(this.lexicalModel, acceptedContext);\r\n        }\r\n        return reversion;\r\n    };\r\n    ModelCompositor.prototype.applyReversion = function (reversion, context) {\r\n        // If we are unable to track context (because the model does not support LexiconTraversal),\r\n        // we need a \"fallback\" strategy.\r\n        var compositor = this;\r\n        var fallbackSuggestions = function () {\r\n            var revertedContext = models.applyTransform(reversion.transform, context);\r\n            var suggestions = compositor.predict({ insert: \u0027\u0027, deleteLeft: 0 }, revertedContext);\r\n            suggestions.forEach(function (suggestion) {\r\n                // A reversion\u0027s transform ID is the additive inverse of its original suggestion;\r\n                // we revert to the state of said original suggestion.\r\n                suggestion.transformId = -reversion.transformId;\r\n            });\r\n            return suggestions;\r\n        };\r\n        if (!this.contextTracker) {\r\n            return fallbackSuggestions();\r\n        }\r\n        // When the context is tracked, we prefer the tracked information.\r\n        var contextMatchFound = false;\r\n        for (var c = this.contextTracker.count - 1; c \u003e= 0; c--) {\r\n            var contextState = this.contextTracker.item(c);\r\n            if (contextState.tail.activeReplacementId == -reversion.id) {\r\n                contextMatchFound = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!contextMatchFound) {\r\n            return fallbackSuggestions();\r\n        }\r\n        // Remove all contexts more recent than the one we\u0027re reverting to.\r\n        while (this.contextTracker.newest.tail.activeReplacementId != -reversion.id) {\r\n            this.contextTracker.popNewest();\r\n        }\r\n        this.contextTracker.newest.tail.revert();\r\n        // Will need to be modified a bit if/when phrase-level suggestions are implemented.\r\n        // Those will be tracked on the first token of the phrase, which won\u0027t be the tail\r\n        // if they cover multiple tokens.\r\n        var suggestions = this.contextTracker.newest.tail.replacements.map(function (trackedSuggestion) {\r\n            return trackedSuggestion.suggestion;\r\n        });\r\n        suggestions.forEach(function (suggestion) {\r\n            // A reversion\u0027s transform ID is the additive inverse of its original suggestion;\r\n            // we revert to the state of said original suggestion.\r\n            suggestion.transformId = -reversion.transformId;\r\n        });\r\n        return suggestions;\r\n    };\r\n    ModelCompositor.prototype.wordbreak = function (context) {\r\n        var model = this.lexicalModel;\r\n        if (model.wordbreaker || !model.wordbreak) {\r\n            // We don\u0027t need a 12.0 / 13.0 compatibility mode here.\r\n            // We\u0027re either relying on defaults or on the 14.0+ wordbreaker spec.\r\n            var wordbreaker = model.wordbreaker || wordBreakers.default;\r\n            return models.wordbreak(wordbreaker, context);\r\n        }\r\n        else {\r\n            // 1.  This model does not provide a model following the 14.0+ wordbreaking spec\r\n            // 2.  This model DOES define a custom wordbreaker following the 12.0-13.0 spec.\r\n            // Since the model relies on custom wordbreaking behavior, we need to use the\r\n            // old, deprecated wordbreaking pattern.\r\n            return model.wordbreak(context);\r\n        }\r\n    };\r\n    ModelCompositor.prototype.tokenize = function (context) {\r\n        var model = this.lexicalModel;\r\n        if (model.wordbreaker) {\r\n            return models.tokenize(model.wordbreaker, context);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    ModelCompositor.prototype.resetContext = function (context) {\r\n        // Force-resets the context, throwing out any previous fat-finger data, etc.\r\n        // Designed for use when the caret has been directly moved and/or the context sourced from a different control\r\n        // than before.\r\n        if (this.contextTracker) {\r\n            var tokenizedContext = models.tokenize(this.lexicalModel.wordbreaker || wordBreakers.default, context);\r\n            var contextState = correction.ContextTracker.modelContextState(tokenizedContext.left, this.lexicalModel);\r\n            this.contextTracker.enqueue(contextState);\r\n        }\r\n    };\r\n    ModelCompositor.prototype.detectCurrentCasing = function (context) {\r\n        var _a;\r\n        var model = this.lexicalModel;\r\n        var text = this.wordbreak(context);\r\n        if (!model.languageUsesCasing) {\r\n            throw \"Invalid attempt to detect casing: languageUsesCasing is set to false\";\r\n        }\r\n        if (!model.applyCasing) {\r\n            // The worker should automatically \u0027sub in\u0027 default behavior during the model\u0027s load if that\r\n            // function isn\u0027t defined explicitly as part of the model.\r\n            throw \"Invalid LMLayer state:  languageUsesCasing is set to true, but no applyCasing function exists\";\r\n        }\r\n        // If the user has selected Shift or Caps layer, that overrides our\r\n        // text analysis\r\n        if (context.casingForm == \u0027upper\u0027 || context.casingForm == \u0027initial\u0027) {\r\n            return context.casingForm;\r\n        }\r\n        if (model.applyCasing(\u0027lower\u0027, text) == text) {\r\n            return \u0027lower\u0027;\r\n        }\r\n        else if (model.applyCasing(\u0027upper\u0027, text) == text) {\r\n            // If only a single character has been input, assume we\u0027re in \u0027initial\u0027 mode.\r\n            return text.kmwLength() \u003e 1 ? \u0027upper\u0027 : \u0027initial\u0027;\r\n        }\r\n        else if (model.applyCasing(\u0027initial\u0027, text) == text) {\r\n            // We check \u0027initial\u0027 last, as upper-case input is indistinguishable.\r\n            return \u0027initial\u0027;\r\n        }\r\n        else {\r\n            // If we do not have a casing form given to us by the keyboard, then\r\n            // \u0027null\u0027 is returned when no casing pattern matches the input.\r\n            return (_a = context.casingForm) !== null \u0026\u0026 _a !== void 0 ? _a : null;\r\n        }\r\n    };\r\n    ModelCompositor.MAX_SUGGESTIONS = 12;\r\n    return ModelCompositor;\r\n}());\r\n/**\r\n * The default punctuation and spacing produced by the model.\r\n */\r\nvar DEFAULT_PUNCTUATION = {\r\n    quotesForKeepSuggestion: { open: \"\\u201C\", close: \"\\u201D\" },\r\n    insertAfterWord: \" \",\r\n};\r\n/*\r\n * Copyright (c) 2018 National Research Council Canada (author: Eddie A. Santos)\r\n * Copyright (c) 2018 SIL International\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * @file index.ts\r\n *\r\n * The main LMLayerWorker class, the top-level class within the Web Worker.\r\n * The LMLayerWorker handles the keyboard/worker communication\r\n * protocol, delegating prediction requests to the language\r\n * model implementations.\r\n */\r\n/// \u003creference types=\"@keymanapp/lm-message-types\" /\u003e\r\n/// \u003creference path=\"./models/dummy-model.ts\" /\u003e\r\n/// \u003creference path=\"./model-compositor.ts\" /\u003e\r\n/**\r\n * Encapsulates all the state required for the LMLayer\u0027s worker thread.\r\n *\r\n * Implements the state pattern. There are three states:\r\n *\r\n *  - `unconfigured`  (initial state before configuration)\r\n *  - `modelless`     (state without model loaded)\r\n *  - `ready`         (state with model loaded, accepts prediction requests)\r\n *\r\n * Transitions are initiated by valid messages. Invalid\r\n * messages are errors, and do not lead to transitions.\r\n *\r\n *          +-------------+    load    +---------+\r\n *   config |             |-----------\u003e|         |\r\n *  +-------\u003e  modelless  +            +  ready  +---+\r\n *          |             |\u003c-----------|         |   |\r\n *          +-------------+   unload   +----^----+   | predict\r\n *                                          |        |\r\n *                                          +--------+\r\n *\r\n * The model and the configuration are ONLY relevant in the `ready` state;\r\n * as such, they are NOT direct properties of the LMLayerWorker.\r\n */\r\nvar LMLayerWorker = /** @class */ (function () {\r\n    function LMLayerWorker(options) {\r\n        if (options === void 0) { options = {\r\n            importScripts: null,\r\n            postMessage: null\r\n        }; }\r\n        this._postMessage = options.postMessage || postMessage;\r\n        this._importScripts = options.importScripts || importScripts;\r\n        this.setupConfigState();\r\n    }\r\n    LMLayerWorker.prototype.error = function (message, error) {\r\n        // error isn\u0027t a fan of being cloned across the worker boundary.\r\n        this.cast(\u0027error\u0027, {\r\n            log: message,\r\n            error: (error \u0026\u0026 error.stack) ? error.stack : undefined\r\n        });\r\n    };\r\n    /**\r\n     * A function that can be set as self.onmessage (the Worker\r\n     * message handler).\r\n     * NOTE! You must bind it to a specific instance, e.g.:\r\n     *\r\n     *   // Do this!\r\n     *   self.onmessage = worker.onMessage.bind(worker);\r\n     *\r\n     * Incorrect:\r\n     *\r\n     *   // Don\u0027t do this!\r\n     *   self.onmessage = worker.onMessage;\r\n     *\r\n     * See: .install();\r\n     */\r\n    LMLayerWorker.prototype.onMessage = function (event) {\r\n        var message = event.data.message;\r\n        // Ensure the message is tagged with a valid message tag.\r\n        if (!message) {\r\n            throw new Error(\"Missing required \u0027message\u0027 property: \".concat(event.data));\r\n        }\r\n        // If last load was for this exact model file, squash the message.\r\n        // (Though not if we\u0027ve had an unload since.)\r\n        var im = event.data;\r\n        if (im.message == \u0027load\u0027) {\r\n            var data = im;\r\n            var duplicated = false;\r\n            if (this._currentModelSource \u0026\u0026 data.source.type == this._currentModelSource.type) {\r\n                if (data.source.type == \u0027file\u0027 \u0026\u0026 data.source.file == this._currentModelSource.file) {\r\n                    duplicated = true;\r\n                }\r\n                else if (data.source.type == \u0027raw\u0027 \u0026\u0026 data.source.code == this._currentModelSource.code) {\r\n                    duplicated = true;\r\n                }\r\n            }\r\n            if (duplicated) {\r\n                // Some JS implementations don\u0027t allow web workers access to the console.\r\n                if (typeof console !== \u0027undefined\u0027) {\r\n                    console.warn(\"Duplicate model load message detected - squashing!\");\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                this._currentModelSource = data.source;\r\n            }\r\n        }\r\n        else if (im.message == \u0027unload\u0027) {\r\n            this._currentModelSource = null;\r\n        }\r\n        // We got a message! Delegate to the current state.\r\n        this.state.handleMessage(im);\r\n    };\r\n    /**\r\n     * Sends back a message structured according to the protocol.\r\n     * @param message A message type.\r\n     * @param payload The message\u0027s payload. Can have any properties, except \u0027message\u0027.\r\n     */\r\n    LMLayerWorker.prototype.cast = function (message, payload) {\r\n        // Chrome raises \"TypeError: invalid invocation\" if postMessage is called\r\n        // with any non-default value for `this`, i.e., this won\u0027t work:\r\n        //\r\n        //  this._postMessage({ foo: \u0027bar\u0027 });\r\n        //\r\n        // Yank it postMessage() off of `this` so that it\u0027s called on the\r\n        // \"global\" context, and everything works again.\r\n        var postMessage = this._postMessage;\r\n        postMessage(__assign({ message: message }, payload));\r\n    };\r\n    /**\r\n     * Loads a model by executing the given source code, and\r\n     * passing in the appropriate configuration.\r\n     *\r\n     * @param desc         Type of the model to instantiate and its parameters.\r\n     * @param capabilities Capabilities on offer from the keyboard.\r\n     */\r\n    LMLayerWorker.prototype.loadModel = function (model) {\r\n        // TODO:  pass _platformConfig to model so that it can self-configure to the platform,\r\n        // returning a Configuration.\r\n        /* Note that this function is typically called from within an `importScripts` call.\r\n         * For meaningful error messages to be successfully logged, we must catch what we can here\r\n         * and pass a message to outside the worker - otherwise a generic \"Script error\" occurs.\r\n         */\r\n        try {\r\n            var configuration = model.configure(this._platformCapabilities);\r\n            // Handle deprecations.\r\n            if (!configuration.leftContextCodePoints) {\r\n                configuration.leftContextCodePoints = configuration.leftContextCodeUnits;\r\n            }\r\n            if (!configuration.rightContextCodePoints) {\r\n                configuration.rightContextCodePoints = configuration.rightContextCodeUnits;\r\n            }\r\n            // Set reasonable defaults for the configuration.\r\n            if (!configuration.leftContextCodePoints) {\r\n                configuration.leftContextCodePoints = this._platformCapabilities.maxLeftContextCodePoints;\r\n            }\r\n            if (!configuration.rightContextCodePoints) {\r\n                configuration.rightContextCodePoints = this._platformCapabilities.maxRightContextCodePoints || 0;\r\n            }\r\n            // Ensures that default casing rules exist for custom models that request casing rules but don\u0027t define them.\r\n            if (model.languageUsesCasing \u0026\u0026 !model.applyCasing) {\r\n                model.applyCasing = models.defaultApplyCasing;\r\n            }\r\n            var compositor = this.transitionToReadyState(model);\r\n            // This test allows models to directly specify the property without it being auto-overridden by\r\n            // this default.\r\n            if (configuration.wordbreaksAfterSuggestions === undefined) {\r\n                configuration.wordbreaksAfterSuggestions = (compositor.punctuation.insertAfterWord != \u0027\u0027);\r\n            }\r\n            this.cast(\u0027ready\u0027, { configuration: configuration });\r\n        }\r\n        catch (err) {\r\n            this.error(\"loadModel failed!\", err);\r\n        }\r\n    };\r\n    LMLayerWorker.prototype.loadModelFile = function (url) {\r\n        // The self/global WebWorker method, allowing us to directly import another script file into WebWorker scope.\r\n        // If built correctly, the model\u0027s script file will auto-register the model with loadModel() above.\r\n        try {\r\n            this._importScripts(url);\r\n        }\r\n        catch (err) {\r\n            this.error(\"Error occurred when attempting to load dictionary\", err);\r\n        }\r\n    };\r\n    LMLayerWorker.prototype.unloadModel = function () {\r\n        // Right now, this seems sufficient to clear out the old model.\r\n        // The only existing reference to a loaded model is held by\r\n        // transitionToReadyState\u0027s `handleMessage` closure. (The `model` var)\r\n        this.transitionToLoadingState();\r\n    };\r\n    /**\r\n     * Sets the initial state, i.e., `unconfigured`.\r\n     * This state only handles `config` messages, and will\r\n     * transition to the `modelless` state once it receives\r\n     * the config data from the host platform.\r\n     */\r\n    LMLayerWorker.prototype.setupConfigState = function () {\r\n        var _this_1 = this;\r\n        this.state = {\r\n            name: \u0027unconfigured\u0027,\r\n            handleMessage: function (payload) {\r\n                // ... that message must have been \u0027config\u0027!\r\n                if (payload.message !== \u0027config\u0027) {\r\n                    throw new Error(\"invalid message; expected \u0027config\u0027 but got \".concat(payload.message));\r\n                }\r\n                _this_1._platformCapabilities = payload.capabilities;\r\n                _this_1.transitionToLoadingState();\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * Sets the model-loading state, i.e., `modelless`.\r\n     * This state only handles `load` messages, and will\r\n     * transition to the `ready` state once it receives a model\r\n     * description and capabilities.\r\n     */\r\n    LMLayerWorker.prototype.transitionToLoadingState = function () {\r\n        var _this = this;\r\n        this.state = {\r\n            name: \u0027modelless\u0027,\r\n            handleMessage: function (payload) {\r\n                // ...that message must have been \u0027load\u0027!\r\n                if (payload.message !== \u0027load\u0027) {\r\n                    throw new Error(\"invalid message; expected \u0027load\u0027 but got \".concat(payload.message));\r\n                }\r\n                // TODO: validate configuration?\r\n                if (payload.source.type == \u0027file\u0027) {\r\n                    _this.loadModelFile(payload.source.file);\r\n                }\r\n                else {\r\n                    // Creates a closure capturing all top-level names that the model must be able to reference.\r\n                    // `eval` runs by scope rules; our virtualized worker needs a special scope for this to work.\r\n                    //\r\n                    // Reference: https://stackoverflow.com/a/40108685\r\n                    // Note that we don\u0027t need `this`, but we do need the namespaces seen below.\r\n                    var code_1 = payload.source.code;\r\n                    var evalInContext = function (LMLayerWorker, models, correction, wordBreakers) {\r\n                        eval(code_1);\r\n                    };\r\n                    evalInContext(_this, models, correction, wordBreakers);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * Sets the state to `ready`. This requires a\r\n     * fully-instantiated model. The `ready` state only responds\r\n     * to `predict` message, and is an accepting state.\r\n     *\r\n     * @param model The loaded language model.\r\n     */\r\n    LMLayerWorker.prototype.transitionToReadyState = function (model) {\r\n        var _this_1 = this;\r\n        var compositor = new ModelCompositor(model);\r\n        this.state = {\r\n            name: \u0027ready\u0027,\r\n            handleMessage: function (payload) {\r\n                switch (payload.message) {\r\n                    case \u0027predict\u0027:\r\n                        var transform = payload.transform, context = payload.context;\r\n                        var suggestions = compositor.predict(transform, context);\r\n                        // Now that the suggestions are ready, send them out!\r\n                        _this_1.cast(\u0027suggestions\u0027, {\r\n                            token: payload.token,\r\n                            suggestions: suggestions\r\n                        });\r\n                        break;\r\n                    case \u0027wordbreak\u0027:\r\n                        var brokenWord = models.wordbreak(model.wordbreaker || wordBreakers.default, payload.context);\r\n                        _this_1.cast(\u0027currentword\u0027, {\r\n                            token: payload.token,\r\n                            word: brokenWord\r\n                        });\r\n                        break;\r\n                    case \u0027unload\u0027:\r\n                        _this_1.unloadModel();\r\n                        break;\r\n                    case \u0027accept\u0027:\r\n                        var suggestion = payload.suggestion, context = payload.context, postTransform = payload.postTransform;\r\n                        var reversion = compositor.acceptSuggestion(suggestion, context, postTransform);\r\n                        _this_1.cast(\u0027postaccept\u0027, {\r\n                            token: payload.token,\r\n                            reversion: reversion\r\n                        });\r\n                        break;\r\n                    case \u0027revert\u0027:\r\n                        var reversion = payload.reversion, context = payload.context;\r\n                        var suggestions = compositor.applyReversion(reversion, context);\r\n                        _this_1.cast(\u0027postrevert\u0027, {\r\n                            token: payload.token,\r\n                            suggestions: suggestions\r\n                        });\r\n                        break;\r\n                    case \u0027reset-context\u0027:\r\n                        var context = payload.context;\r\n                        compositor.resetContext(context);\r\n                        break;\r\n                    default:\r\n                        throw new Error(\"invalid message; expected one of {\u0027predict\u0027, \u0027wordbreak\u0027, \u0027accept\u0027, \u0027revert\u0027, \u0027reset-context\u0027, \u0027unload\u0027} but got \".concat(payload.message));\r\n                }\r\n            },\r\n            compositor: compositor\r\n        };\r\n        return compositor;\r\n    };\r\n    /**\r\n     * Creates a new instance of the LMLayerWorker, and installs all its\r\n     * functions within the provided Worker global scope.\r\n     *\r\n     * In production, this is called within the Worker\u0027s scope as:\r\n     *\r\n     *    LMLayerWorker.install(self);\r\n     *\r\n     * ...and this will setup onmessage and postMessage() appropriately.\r\n     *\r\n     * During testing, this method is useful to mock an entire global scope,\r\n     *\r\n     *    var fakeScope = { postMessage: ... };\r\n     *    LMLayerWorker.install(fakeScope);\r\n     *    // now we can spy on methods in fakeScope!\r\n     *\r\n     * @param scope A global scope to install upon.\r\n     */\r\n    LMLayerWorker.install = function (scope) {\r\n        var worker = new LMLayerWorker({ postMessage: scope.postMessage, importScripts: scope.importScripts.bind(scope) });\r\n        scope.onmessage = worker.onMessage.bind(worker);\r\n        worker.self = scope;\r\n        // Ensures that the worker instance is accessible for loaded model scripts.\r\n        // Assists unit-testing.\r\n        scope[\u0027LMLayerWorker\u0027] = worker;\r\n        scope[\u0027models\u0027] = models;\r\n        scope[\u0027correction\u0027] = correction;\r\n        scope[\u0027wordBreakers\u0027] = wordBreakers;\r\n        return worker;\r\n    };\r\n    return LMLayerWorker;\r\n}());\r\n// Let LMLayerWorker be available both in the browser and in Node.\r\nif (typeof module !== \u0027undefined\u0027 \u0026\u0026 typeof module.exports !== \u0027undefined\u0027) {\r\n    module.exports = LMLayerWorker;\r\n    module.exports[\u0027correction\u0027] = correction;\r\n    module.exports[\u0027models\u0027] = models;\r\n    module.exports[\u0027wordBreakers\u0027] = wordBreakers;\r\n    /// XXX: export the ModelCompositor for testing.\r\n    module.exports[\u0027ModelCompositor\u0027] = ModelCompositor;\r\n}\r\nelse if (typeof self !== \u0027undefined\u0027 \u0026\u0026 \u0027postMessage\u0027 in self \u0026\u0026 \u0027importScripts\u0027 in self) {\r\n    // Automatically install if we\u0027re in a Web Worker.\r\n    LMLayerWorker.install(self); // really, \u0027as typeof globalThis\u0027, but we\u0027re currently getting TS errors from use of that.\r\n}\r\nelse {\r\n    //@ts-ignore\r\n    window.LMLayerWorker = LMLayerWorker;\r\n}\r\n/*\r\n * Copyright (c) 2018 National Research Council Canada (author: Eddie A. Santos)\r\n * Copyright (c) 2018 SIL International\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/// \u003creference types=\"@keymanapp/lm-message-types\" /\u003e\r\n//# sourceMappingURL=index.js.map\n}\n// --END:LMLlayerWorkerCode\n","/*\r\n * Copyright (c) 2018 National Research Council Canada (author: Eddie A. Santos)\r\n * Copyright (c) 2018 SIL International\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\n\r\ntype Resolve\u003cT\u003e = (value?: T | PromiseLike\u003cT\u003e) =\u003e void;\r\ntype Reject = (reason?: any) =\u003e void;\r\ninterface PromiseCallbacks\u003cT\u003e {\r\n  resolve: Resolve\u003cT\u003e;\r\n  reject: Reject;\r\n}\r\n\r\nnamespace com.keyman.text.prediction {\r\n  /**\r\n   * Associate tokens with promises.\r\n   *\r\n   * First, .make() a promise -- associate a token with resolve/reject callbacks.\r\n   *\r\n   * You can either .keep() a promise -- resolve() and forget it;\r\n   * Or you may also .break() a promise -- reject() and forget it.\r\n   *\r\n   * \u003cT\u003e is the type of resolved value (value yielded successfully by promise).\r\n   */\r\n  export class PromiseStore\u003cT\u003e {\r\n    // IE11 offers partial support for new Map().\r\n    // Assume only .get(), .set(), .has(), .delete(), and .size work.\r\n    // See: http://kangax.github.io/compat-table/es6/#test-Map\r\n    private _promises: Map\u003cToken, PromiseCallbacks\u003cT\u003e\u003e;\r\n    constructor() {\r\n      this._promises = new Map();\r\n    }\r\n    /**\r\n     * How many promises are currently being tracked?\r\n     */\r\n    get length(): number {\r\n      return this._promises.size;\r\n    }\r\n    /**\r\n     * Associate a token with its respective resolve and reject callbacks.\r\n     */\r\n    make(token: Token, resolve: Resolve\u003cT\u003e, reject: Reject): void {\r\n      if (this._promises.has(token)) {\r\n        return reject(`Existing request with token ${token}`);\r\n      }\r\n      this._promises.set(token, { reject, resolve });\r\n    }\r\n    /**\r\n     * Resolve the promise associated with a token (with a value!).\r\n     * Once the promise is resolved, the token is removed..\r\n     */\r\n    keep(token: Token, value: T) {\r\n      let callbacks = this._promises.get(token);\r\n      if (!callbacks) {\r\n        throw new Error(`No promise associated with token: ${token}`);\r\n      }\r\n      let accept = callbacks.resolve;\r\n      this._promises.delete(token);\r\n      return accept(value);\r\n    }\r\n    /**\r\n     * Instantly reject and forget a promise associated with the token.\r\n     */\r\n    break(token: Token, reason?: any): void {\r\n      let callbacks = this._promises.get(token);\r\n      if (!callbacks) {\r\n        throw new Error(`No promise associated with token: ${token}`);\r\n      }\r\n      this._promises.delete(token);\r\n      callbacks.reject(reason);\r\n    }\r\n  }\r\n}","/*\r\n * Copyright (c) 2018 National Research Council Canada (author: Eddie A. Santos)\r\n * Copyright (c) 2018 SIL International\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\n/// \u003creference path=\"promise-store.ts\" /\u003e\r\n/// \u003creference types=\"@keymanapp/lm-message-types\" /\u003e\r\n/// \u003creference path=\"worker-interface.d.ts\" /\u003e\r\n\r\n/**\r\n * Top-level interface to the Language Modelling layer, or \"LMLayer\" for short.\r\n *\r\n * The Language Modelling layer provides a way for keyboards to offer prediction and\r\n * correction functionalities. The LMLayer proper runs within a Web Worker, however,\r\n * this class is intended to run in the main thread, and automatically spawn a Web\r\n * Worker, capable of offering predictions.\r\n *\r\n * Since the Worker runs in a different thread, the public methods of this class are\r\n * asynchronous. Methods of note include:\r\n *\r\n *  - #loadModel() -- loads a specified model file\r\n *  - #predict() -- ask the LMLayer to offer suggestions (predictions or corrections) for\r\n *                  the input event\r\n *  - #unloadModel() -- unloads the LMLayer\u0027s currently loaded model, preparing it to\r\n *                          receive (load) a new model\r\n *\r\n * The top-level LMLayer will automatically starts up its own Web Worker.\r\n */\r\n\r\nnamespace com.keyman.text.prediction {\r\n  export class LMLayer {\r\n    /**\r\n     * The underlying worker instance. By default, this is the LMLayerWorker.\r\n     */\r\n    private _worker: Worker;\r\n    /** Call this when the LMLayer has sent us the \u0027ready\u0027 message! */\r\n    private _declareLMLayerReady: (conf: Configuration) =\u003e void;\r\n    private _predictPromises: PromiseStore\u003cSuggestion[]\u003e;\r\n    private _wordbreakPromises: PromiseStore\u003cUSVString\u003e;\r\n    private _acceptPromises: PromiseStore\u003cReversion\u003e;\r\n    private _revertPromises: PromiseStore\u003cSuggestion[]\u003e;\r\n    private _nextToken: number;\r\n    private capabilities: Capabilities;\r\n\r\n    /**\r\n     * Construct the top-level LMLayer interface. This also starts the underlying Worker.\r\n     *\r\n     * @param uri URI of the underlying LMLayer worker code. This will usually be a blob:\r\n     *            or file: URI. If uri is not provided, this will start the default Worker.\r\n     */\r\n    constructor(capabilities: Capabilities, worker?: Worker) {\r\n      // Either use the given worker, or instantiate the default worker.\r\n      this._worker = worker || DefaultWorker.constructInstance();\r\n      this._worker.onmessage = this.onMessage.bind(this)\r\n      this._declareLMLayerReady = null;\r\n      this._predictPromises = new PromiseStore();\r\n      this._wordbreakPromises = new PromiseStore();\r\n      this._acceptPromises = new PromiseStore();\r\n      this._revertPromises = new PromiseStore();\r\n      this._nextToken = Number.MIN_SAFE_INTEGER;\r\n\r\n      this.sendConfig(capabilities);\r\n    }\r\n\r\n    /**\r\n     * Initializes the LMLayer worker with the host platform\u0027s capability set.\r\n     *\r\n     * @param capabilities The host platform\u0027s capability spec - a model cannot assume access to more context\r\n     *                     than specified by this parameter.\r\n     */\r\n    private sendConfig(capabilities: Capabilities) {\r\n      this._worker.postMessage({\r\n        message: \u0027config\u0027,\r\n        capabilities: capabilities\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Initializes the LMLayer worker with a path to the desired model file.\r\n     */\r\n    loadModel(modelSource: string, loadType: \u0027file\u0027 | \u0027raw\u0027 = \u0027file\u0027): Promise\u003cConfiguration\u003e {\r\n      return new Promise((resolve, _reject) =\u003e {\r\n        // Sets up so the promise is resolved in the onMessage() callback, when it receives\r\n        // the \u0027ready\u0027 message.\r\n        this._declareLMLayerReady = resolve;\r\n\r\n        let modelSourceSpec: any = {\r\n          type: loadType\r\n        };\r\n\r\n        if(loadType == \u0027file\u0027) {\r\n          modelSourceSpec.file = modelSource;\r\n        } else {\r\n          modelSourceSpec.code = modelSource;\r\n        }\r\n\r\n        this._worker.postMessage({\r\n          message: \u0027load\u0027,\r\n          source: modelSourceSpec\r\n        });\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Unloads the previously-active model from memory, resetting the LMLayer to prep\r\n     * for transition to use of a new model.\r\n     */\r\n    public unloadModel() {\r\n      this._worker.postMessage({\r\n        message: \u0027unload\u0027\r\n      });\r\n    }\r\n\r\n    predict(transform: Transform | Distribution\u003cTransform\u003e, context: Context): Promise\u003cSuggestion[]\u003e {\r\n      let token = this._nextToken++;\r\n      return new Promise((resolve, reject) =\u003e {\r\n        this._predictPromises.make(token, resolve, reject);\r\n        this._worker.postMessage({\r\n          message: \u0027predict\u0027,\r\n          token: token,\r\n          transform: transform,\r\n          context: context,\r\n        });\r\n      });\r\n    }\r\n\r\n    wordbreak(context: Context): Promise\u003cUSVString\u003e {\r\n      let token = this._nextToken++;\r\n      return new Promise((resolve, reject) =\u003e {\r\n        this._wordbreakPromises.make(token, resolve, reject);\r\n        this._worker.postMessage({\r\n          message: \u0027wordbreak\u0027,\r\n          token: token,\r\n          context: context\r\n        })\r\n      });\r\n    }\r\n\r\n    acceptSuggestion(suggestion: Suggestion, context: Context, postTransform: Transform): Promise\u003cReversion\u003e {\r\n      let token = this._nextToken++;\r\n      return new Promise((resolve, reject) =\u003e {\r\n        this._acceptPromises.make(token, resolve, reject);\r\n        this._worker.postMessage({\r\n          message: \u0027accept\u0027,\r\n          token: token,\r\n          suggestion: suggestion,\r\n          context: context,\r\n          postTransform: postTransform\r\n        });\r\n      });\r\n    }\r\n\r\n    revertSuggestion(reversion: Reversion, context: Context): Promise\u003cSuggestion[]\u003e {\r\n      let token = this._nextToken++;\r\n      return new Promise((resolve, reject) =\u003e {\r\n        this._revertPromises.make(token, resolve, reject);\r\n        this._worker.postMessage({\r\n          message: \u0027revert\u0027,\r\n          token: token,\r\n          reversion: reversion,\r\n          context: context\r\n        })\r\n      });\r\n    }\r\n\r\n    resetContext(context: Context) {\r\n      this._worker.postMessage({\r\n        message: \u0027reset-context\u0027,\r\n        context: context\r\n      });\r\n    }\r\n\r\n    // TODO: asynchronous close() method.\r\n    //       Worker code must recognize message and call self.close().\r\n\r\n    private onMessage(event: MessageEvent): void {\r\n      let payload: OutgoingMessage = event.data;\r\n      if (payload.message === \u0027error\u0027) {\r\n        console.error(payload.log);\r\n        if(payload.error) {\r\n          console.error(payload.error);\r\n        }\r\n      }\r\n      else if (payload.message === \u0027ready\u0027) {\r\n        this._declareLMLayerReady(event.data.configuration);\r\n      } else if (payload.message === \u0027suggestions\u0027) {\r\n        this._predictPromises.keep(payload.token, payload.suggestions);\r\n      } else if (payload.message === \u0027currentword\u0027) {\r\n        this._wordbreakPromises.keep(payload.token, payload.word);\r\n      } else if (payload.message === \u0027postaccept\u0027) {\r\n        this._acceptPromises.keep(payload.token, payload.reversion);\r\n      } else if (payload.message === \u0027postrevert\u0027) {\r\n        this._revertPromises.keep(payload.token, payload.suggestions);\r\n      } else {\r\n        // This branch should never execute, but just in case...\r\n        //@ts-ignore\r\n        throw new Error(`Message not implemented: ${payload.message}`);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Clears out any computational resources in use by the LMLayer, including shutting\r\n     * down any internal WebWorkers.\r\n     */\r\n    public shutdown() {\r\n      this._worker.terminate();\r\n    }\r\n\r\n    /**\r\n     * Given a function, this utility returns the source code within it, as a string.\r\n     * This is intended to unwrap the \"wrapped\" source code created in the LMLayerWorker\r\n     * build process.\r\n     *\r\n     * @param fn The function whose body will be returned.\r\n     */\r\n    static unwrap(fn: Function): string {\r\n      let wrapper = fn.toString();\r\n      let match = wrapper.match(/function[^{]+{((?:.|\\r|\\n)+)}[^}]*$/);\r\n      return match[1];\r\n    }\r\n  }\r\n}\r\n\r\n(function () {\r\n  let ns = com.keyman.text.prediction;\r\n\r\n  // Let LMLayer be available both in the browser and in Node.\r\n  if (typeof module !== \u0027undefined\u0027 \u0026\u0026 typeof module.exports !== \u0027undefined\u0027) {\r\n    module.exports = ns.LMLayer;\r\n    //@ts-ignore\r\n    ns.LMLayer.PromiseStore = ns.PromiseStore;\r\n  } else {\r\n    //@ts-ignore\r\n    window.LMLayer = ns.LMLayer;\r\n  }\r\n}());","namespace com.keyman.text.prediction {\r\n  export class DefaultWorker {\r\n    static constructInstance(): Worker {\r\n      return new Worker(this.asBlobURI(LMLayerWorkerCode));\r\n    }\r\n    \r\n    /**\r\n     * Converts the INSIDE of a function into a blob URI that can\r\n     * be passed as a valid URI for a Worker.\r\n     * @param fn Function whose body will be referenced by a URI.\r\n     * \r\n     * This function makes the following possible:\r\n     * \r\n     *    let worker = new Worker(LMLayer.asBlobURI(function myWorkerCode () {\r\n     *      postMessage(\u0027inside Web Worker\u0027)\r\n     *      function onmessage(event) {\r\n     *        // handle message inside Web Worker.\r\n     *      }\r\n     *    }));\r\n     */\r\n    static asBlobURI(fn: Function): string {\r\n      let code = LMLayer.unwrap(fn);\r\n      let blob = new Blob([code], { type: \u0027text/javascript\u0027 });\r\n      return URL.createObjectURL(blob);\r\n    }\r\n  }\r\n}","\u0027use strict\u0027;\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = \u0027~\u0027;\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== \u0027function\u0027) {\n    throw new TypeError(\u0027The listener must be a function\u0027);\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i \u003c l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i \u003c len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i \u003c length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j \u003c len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn \u0026\u0026\n      (!once || listeners.once) \u0026\u0026\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i \u003c length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once \u0026\u0026 !listeners[i].once) ||\n        (context \u0026\u0026 listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif (\u0027undefined\u0027 !== typeof module) {\n  module.exports = EventEmitter;\n}\n","namespace com.keyman.text {\r\n  export class ContextWindow implements Context {\r\n    // Used to limit the range of context replicated for use of keyboard rules within\r\n    // the engine, as used for fat-finger prep / `Alternate` generation.\r\n    public static readonly ENGINE_RULE_WINDOW: Configuration = {\r\n      leftContextCodePoints: 64,\r\n      rightContextCodePoints: 32\r\n    };\r\n\r\n    left: string;\r\n    right?: string;\r\n\r\n    startOfBuffer: boolean;\r\n    endOfBuffer: boolean;\r\n\r\n    casingForm?: CasingForm;\r\n\r\n    constructor(mock: Mock, config: Configuration, layerId: string) {\r\n      this.left = mock.getTextBeforeCaret();\r\n      this.startOfBuffer = this.left._kmwLength() \u003c= config.leftContextCodePoints;\r\n      if(!this.startOfBuffer) {\r\n        // Our custom substring version will return the last n characters if param #1 is given -n.\r\n        this.left = this.left._kmwSubstr(-config.leftContextCodePoints);\r\n      }\r\n\r\n      this.right = mock.getTextAfterCaret();\r\n      this.endOfBuffer = this.right._kmwLength() \u003c= config.rightContextCodePoints;\r\n      if(!this.endOfBuffer) {\r\n        this.right = this.right._kmwSubstr(0, config.rightContextCodePoints);\r\n      }\r\n\r\n      this.casingForm =\r\n        layerId == \u0027shift\u0027 ? \u0027initial\u0027 :\r\n        layerId == \u0027caps\u0027 ? \u0027upper\u0027 :\r\n        null;\r\n    }\r\n\r\n    public toMock(): Mock {\r\n      let caretPos = this.left._kmwLength();\r\n\r\n      return new Mock(this.left + (this.right || \"\"), caretPos);\r\n    }\r\n  }\r\n}","///\u003creference path=\"../../includes/events.ts\" /\u003e\r\n/// \u003creference path=\"../contextWindow.ts\" /\u003e\r\n\r\nnamespace com.keyman.text.prediction {\r\n  export interface ModelSpec {\r\n    /**\r\n     * The model\u0027s unique identifier.\r\n     */\r\n    id: string;\r\n\r\n    /**\r\n     * The list of supported BCP-47 language codes.  Only one language should be supported,\r\n     * although multiple variants based on region code (at min) may be specified.\r\n     */\r\n    languages: string[];\r\n\r\n    /**\r\n     * The path/URL to the file that defines the model.  If both `path` and `raw` are specified,\r\n     * `path` takes precedence.\r\n     */\r\n    path: string;\r\n\r\n    /**\r\n     * The raw JS script defining the model.  Only used if `path` is not specified.\r\n     */\r\n    code: string;\r\n  }\r\n\r\n  /**\r\n   * Corresponds to the \u0027suggestionsready\u0027 LanguageProcessor event.\r\n   */\r\n  export type ReadySuggestionsHandler = (prediction: ReadySuggestions) =\u003e boolean;\r\n\r\n  export type StateChangeEnum = \u0027active\u0027|\u0027configured\u0027|\u0027inactive\u0027;\r\n  /**\r\n   * Corresponds to the \u0027statechange\u0027 LanguageProcessor event.\r\n   */\r\n  export type StateChangeHandler = (state: StateChangeEnum) =\u003e boolean;\r\n\r\n  /**\r\n   * Covers both \u0027tryaccept\u0027 and \u0027tryrevert\u0027 events.\r\n   */\r\n  export type TryUIHandler = (source: string) =\u003e boolean;\r\n\r\n  export type InvalidateSourceEnum = \u0027new\u0027|\u0027context\u0027;\r\n\r\n  /**\r\n   * Corresponds to the \u0027invalidatesuggestions\u0027 LanguageProcessor event.\r\n   */\r\n  export type InvalidateSuggestionsHandler = (source: InvalidateSourceEnum) =\u003e boolean;\r\n\r\n  export class ReadySuggestions {\r\n    suggestions: Suggestion[];\r\n    transcriptionID: number;\r\n\r\n    constructor(suggestions: Suggestion[], id: number) {\r\n      this.suggestions = suggestions;\r\n      this.transcriptionID = id;\r\n    }\r\n  }\r\n\r\n  type SupportedEventNames = \"suggestionsready\" | \"invalidatesuggestions\" | \"statechange\" | \"tryaccept\" | \"tryrevert\";\r\n  type SupportedEventHandler = InvalidateSuggestionsHandler | ReadySuggestionsHandler | StateChangeHandler | TryUIHandler;\r\n\r\n  export class LanguageProcessor extends EventEmitter {\r\n    private lmEngine: LMLayer;\r\n    private currentModel?: ModelSpec;\r\n    private configuration?: Configuration;\r\n    private currentPromise?: Promise\u003cSuggestion[]\u003e;\r\n\r\n    private recentTranscriptions: Transcription[] = [];\r\n\r\n    private _mayPredict: boolean = true;\r\n    private _mayCorrect: boolean = true;\r\n\r\n    private static readonly TRANSCRIPTION_BUFFER: 10 = 10;\r\n\r\n    public init(supportsRightDeletions: boolean = false) {\r\n      // Establishes KMW\u0027s platform \u0027capabilities\u0027, which limit the range of context a LMLayer\r\n      // model may expect.\r\n      let capabilities: Capabilities = {\r\n        maxLeftContextCodePoints: 64,\r\n        // Since the apps don\u0027t yet support right-deletions.\r\n        maxRightContextCodePoints: supportsRightDeletions ? 0 : 64\r\n      }\r\n\r\n      if(!this.canEnable()) {\r\n        return;\r\n      }\r\n\r\n      this.lmEngine = new LMLayer(capabilities);\r\n    }\r\n\r\n    public get activeModel(): ModelSpec {\r\n      return this.currentModel;\r\n    }\r\n\r\n    public unloadModel() {\r\n      this.lmEngine.unloadModel();\r\n      delete this.currentModel;\r\n      delete this.configuration;\r\n\r\n      this.emit(\u0027statechange\u0027, \u0027inactive\u0027);\r\n    }\r\n\r\n    loadModel(model: ModelSpec): Promise\u003cvoid\u003e {\r\n      if(!model) {\r\n        throw new Error(\"Null reference not allowed.\");\r\n      }\r\n\r\n      let specType: \u0027file\u0027|\u0027raw\u0027 = model.path ? \u0027file\u0027 : \u0027raw\u0027;\r\n      let source = specType == \u0027file\u0027 ? model.path : model.code;\r\n      let lp = this;\r\n\r\n      // We pre-emptively emit so that the banner\u0027s DOM elements may update synchronously.\r\n      // Prevents an ugly \"flash of unstyled content\" layout issue during keyboard load\r\n      // on our mobile platforms when embedded.\r\n      lp.currentModel = model;\r\n      if(this.mayPredict) {\r\n        lp.emit(\u0027statechange\u0027, \u0027active\u0027);\r\n      }\r\n\r\n      return this.lmEngine.loadModel(source, specType).then(function(config: Configuration) {\r\n        lp.configuration = config;\r\n        lp.emit(\u0027statechange\u0027, \u0027configured\u0027);\r\n      }).catch(function(error) {\r\n        // Does this provide enough logging information?\r\n        let message: string;\r\n        if(error instanceof Error) {\r\n          message = error.message;\r\n        } else {\r\n          message = String(error);\r\n        }\r\n        console.error(\"Could not load model \u0027\" + model.id + \"\u0027: \" + message);\r\n\r\n        // Since the model couldn\u0027t load, immediately deactivate.  Visually, it\u0027ll look\r\n        // like the banner crashed shortly after load.\r\n        lp.currentModel = null;\r\n        lp.emit(\u0027statechange\u0027, \u0027inactive\u0027);\r\n      });\r\n    }\r\n\r\n    public invalidateContext(outputTarget: OutputTarget, layerId: string) {\r\n      // Signal to any predictive text UI that the context has changed, invalidating recent predictions.\r\n      this.emit(\u0027invalidatesuggestions\u0027, \u0027context\u0027);\r\n\r\n      // If there\u0027s no active model, there can be no predictions.\r\n      // We\u0027ll also be missing important data needed to even properly REQUEST the predictions.\r\n      if(!this.currentModel || !this.configuration) {\r\n        return;\r\n      }\r\n\r\n      // Don\u0027t attempt predictions when disabled!\r\n      // invalidateContext otherwise bypasses .predict()\u0027s check against this.\r\n      if(!this.isActive) {\r\n        return;\r\n      } else if(outputTarget) {\r\n        let transcription = outputTarget.buildTranscriptionFrom(outputTarget, null, false);\r\n        this.predict_internal(transcription, true, layerId);\r\n      } else {\r\n        // Shouldn\u0027t be possible, and we\u0027ll want to know if and when it is.\r\n        console.warn(\"OutputTarget missing during an invalidateContext call\");\r\n      }\r\n    }\r\n\r\n    public wordbreak(target: OutputTarget, layerId: string): Promise\u003cstring\u003e {\r\n      if(!this.isActive) {\r\n        return null;\r\n      }\r\n\r\n      let context = new ContextWindow(Mock.from(target, false), this.configuration, layerId);\r\n      return this.lmEngine.wordbreak(context);\r\n    }\r\n\r\n    public predict(transcription: Transcription, layerId: string): Promise\u003cSuggestion[]\u003e {\r\n      if(!this.isActive) {\r\n        return null;\r\n      }\r\n\r\n      // If there\u0027s no active model, there can be no predictions.\r\n      // We\u0027ll also be missing important data needed to even properly REQUEST the predictions.\r\n      if(!this.currentModel || !this.configuration) {\r\n        return null;\r\n      }\r\n\r\n      // We\u0027ve already invalidated any suggestions resulting from any previously-existing Promise -\r\n      // may as well officially invalidate them via event.\r\n      this.emit(\"invalidatesuggestions\", \u0027new\u0027);\r\n\r\n      return this.predict_internal(transcription, false, layerId);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param suggestion\r\n     * @param outputTarget\r\n     * @param getLayerId      a function that returns the current layerId,\r\n     *                        required because layerid can be changed by PostKeystroke\r\n     * @returns\r\n     */\r\n    public applySuggestion(suggestion: Suggestion, outputTarget: OutputTarget, getLayerId: ()=\u003estring): Promise\u003cReversion\u003e {\r\n      if(!outputTarget) {\r\n        throw \"Accepting suggestions requires a destination OutputTarget instance.\"\r\n      }\r\n\r\n      // Find the state of the context at the time the suggestion was generated.\r\n      // This may refer to the context before an input keystroke or before application\r\n      // of a predictive suggestion.\r\n      let original = this.getPredictionState(suggestion.transformId);\r\n      if(!original) {\r\n        console.warn(\"Could not apply the Suggestion!\");\r\n        return null;\r\n      } else {\r\n        // Apply the Suggestion!\r\n\r\n        // Step 1:  determine the final output text\r\n        let final = text.Mock.from(original.preInput, false);\r\n        final.apply(suggestion.transform);\r\n\r\n        // Step 2:  build a final, master Transform that will produce the desired results from the CURRENT state.\r\n        // In embedded mode, both Android and iOS are best served by calculating this transform and applying its\r\n        // values as needed for use with their IME interfaces.\r\n        let transform = final.buildTransformFrom(outputTarget);\r\n        outputTarget.apply(transform);\r\n\r\n        // Tell the banner that a suggestion was applied, so it can call the\r\n        // keyboard\u0027s PostKeystroke entry point as needed\r\n        this.emit(\u0027suggestionapplied\u0027, outputTarget);\r\n\r\n        // Build a \u0027reversion\u0027 Transcription that can be used to undo this apply() if needed,\r\n        // replacing the suggestion transform with the original input text.\r\n        let preApply = text.Mock.from(original.preInput, false);\r\n        preApply.apply(original.transform);\r\n\r\n        // Builds the reversion option according to the loaded lexical model\u0027s known\r\n        // syntactic properties.\r\n        let suggestionContext = new ContextWindow(original.preInput, this.configuration, getLayerId());\r\n\r\n        // We must accept the Suggestion from its original context, which was before\r\n        // `original.transform` was applied.\r\n        let reversionPromise: Promise\u003cReversion\u003e = this.lmEngine.acceptSuggestion(suggestion, suggestionContext, original.transform);\r\n\r\n        // Also, request new prediction set based on the resulting context.\r\n        let lp = this;\r\n        reversionPromise = reversionPromise.then(function(reversion) {\r\n          let mappedReversion: Reversion = {\r\n            // By mapping back to the original Transcription that generated the Suggestion,\r\n            // the input will be automatically rewound to the preInput state.\r\n            transform: original.transform,\r\n            // The ID part is critical; the reversion can\u0027t be applied without it.\r\n            transformId: -original.token, // reversions use the additive inverse.\r\n            displayAs: reversion.displayAs,  // The real reason we needed to call the LMLayer.\r\n            id: reversion.id,\r\n            tag: reversion.tag\r\n          }\r\n          // // If using the version from lm-layer:\r\n          // let mappedReversion = reversion;\r\n          // mappedReversion.transformId = reversionTranscription.token;\r\n          lp.predictFromTarget(outputTarget, getLayerId());\r\n          return mappedReversion;\r\n        });\r\n\r\n        return reversionPromise;\r\n      }\r\n    }\r\n\r\n    public applyReversion(reversion: Reversion, outputTarget: OutputTarget) {\r\n      if(!outputTarget) {\r\n        throw \"Accepting suggestions requires a destination OutputTarget instance.\"\r\n      }\r\n\r\n      // Find the state of the context at the time the suggestion was generated.\r\n      // This may refer to the context before an input keystroke or before application\r\n      // of a predictive suggestion.\r\n      //\r\n      // Reversions use the additive inverse of the id token of the Transcription being\r\n      // reverted to.\r\n      let original = this.getPredictionState(-reversion.transformId);\r\n      if(!original) {\r\n        console.warn(\"Could not apply the Suggestion!\");\r\n        return;\r\n      }\r\n\r\n      // Apply the Reversion!\r\n\r\n      // Step 1:  determine the final output text\r\n      let final = text.Mock.from(original.preInput, false);\r\n      final.apply(reversion.transform); // Should match original.transform, actually. (See applySuggestion)\r\n\r\n      // Step 2:  build a final, master Transform that will produce the desired results from the CURRENT state.\r\n      // In embedded mode, both Android and iOS are best served by calculating this transform and applying its\r\n      // values as needed for use with their IME interfaces.\r\n      let transform = final.buildTransformFrom(outputTarget);\r\n      outputTarget.apply(transform);\r\n\r\n      // The reason we need to preserve the additive-inverse \u0027transformId\u0027 property on Reversions.\r\n      let promise = this.lmEngine.revertSuggestion(reversion, new ContextWindow(original.preInput, this.configuration, null))\r\n\r\n      let lp = this;\r\n      return promise.then(function(suggestions: Suggestion[]) {\r\n        let result = new ReadySuggestions(suggestions, transform.id);\r\n        lp.emit(\"suggestionsready\", result);\r\n        lp.currentPromise = null;\r\n\r\n        return suggestions;\r\n      });\r\n    }\r\n\r\n    public predictFromTarget(outputTarget: OutputTarget, layerId: string): Promise\u003cSuggestion[]\u003e {\r\n      if(!outputTarget) {\r\n        return null;\r\n      }\r\n\r\n      let transcription = outputTarget.buildTranscriptionFrom(outputTarget, null, false);\r\n      return this.predict(transcription, layerId);\r\n    }\r\n\r\n    /**\r\n     * Called internally to do actual predictions after any relevant \"invalidatesuggestions\" events\r\n     * have been raised.\r\n     * @param transcription The triggering transcription (if it exists)\r\n     */\r\n    private predict_internal(transcription: Transcription, resetContext: boolean, layerId: string): Promise\u003cSuggestion[]\u003e {\r\n      if(!transcription) {\r\n        return null;\r\n      }\r\n\r\n      let context = new ContextWindow(transcription.preInput, this.configuration, layerId);\r\n      this.recordTranscription(transcription);\r\n\r\n      if(resetContext) {\r\n        this.lmEngine.resetContext(context);\r\n      }\r\n\r\n      let alternates = transcription.alternates;\r\n      if(!alternates || alternates.length == 0) {\r\n        alternates = [{\r\n          sample: transcription.transform,\r\n          p: 1.0\r\n        }];\r\n      }\r\n\r\n      let transform = transcription.transform;\r\n      var promise = this.currentPromise = this.lmEngine.predict(alternates, context);\r\n\r\n      let lp = this;\r\n      return promise.then(function(suggestions: Suggestion[]) {\r\n        if(promise == lp.currentPromise) {\r\n          let result = new ReadySuggestions(suggestions, transform.id);\r\n          lp.emit(\"suggestionsready\", result);\r\n          lp.currentPromise = null;\r\n        }\r\n\r\n        return suggestions;\r\n      });\r\n    }\r\n\r\n    private recordTranscription(transcription: Transcription) {\r\n      this.recentTranscriptions.push(transcription);\r\n\r\n      if(this.recentTranscriptions.length \u003e LanguageProcessor.TRANSCRIPTION_BUFFER) {\r\n        this.recentTranscriptions.splice(0, 1);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Retrieves the context and output state of KMW immediately before the prediction with\r\n     * token `id` was generated.  Must correspond to a \u0027recent\u0027 one, as only so many are stored\r\n     * in `ModelManager`\u0027s history buffer.\r\n     * @param id A unique identifier corresponding to a recent `Transcription`.\r\n     * @returns The matching `Transcription`, or `null` none is found.\r\n     */\r\n    public getPredictionState(id: number): Transcription {\r\n      let match = this.recentTranscriptions.filter(function(t: Transcription) {\r\n        return t.token == id;\r\n      })\r\n\r\n      return match.length == 0 ? null : match[0];\r\n    }\r\n\r\n    public shutdown() {\r\n      this.lmEngine.shutdown();\r\n    }\r\n\r\n    public get isActive(): boolean {\r\n      if(!this.canEnable()) {\r\n        this._mayPredict = false;\r\n        return false;\r\n      }\r\n      return (this.activeModel || false) \u0026\u0026 this._mayPredict;\r\n    }\r\n\r\n    public canEnable(): boolean {\r\n      // Is overridden for dom-aware KMW in case of old IE versions.\r\n      return true;\r\n    }\r\n\r\n    public get mayPredict() {\r\n      return this._mayPredict;\r\n    }\r\n\r\n    public set mayPredict(flag: boolean) {\r\n      if(!this.canEnable()) {\r\n        return;\r\n      }\r\n\r\n      let oldVal = this._mayPredict;\r\n      this._mayPredict = flag;\r\n\r\n      if(oldVal != flag) {\r\n        // If there\u0027s no model to be activated and we\u0027ve reached this point,\r\n        // the banner should remain inactive, as it already was.\r\n        // If it there was one and we\u0027ve reached this point, we\u0027re globally\r\n        // deactivating, so we\u0027re fine.\r\n        if(this.activeModel) {\r\n          this.emit(\u0027statechange\u0027, flag ? \u0027active\u0027 : \u0027inactive\u0027);\r\n        }\r\n      }\r\n    }\r\n\r\n    public get mayCorrect() {\r\n      return this._mayCorrect;\r\n    }\r\n\r\n    public set mayCorrect(flag: boolean) {\r\n      this._mayCorrect = flag;\r\n    }\r\n\r\n    public get wordbreaksAfterSuggestions() {\r\n      return this.configuration.wordbreaksAfterSuggestions;\r\n    }\r\n\r\n    public tryAcceptSuggestion(source: string): boolean {\r\n      let returnObj = {shouldSwallow: false};\r\n      this.emit(\u0027tryaccept\u0027, source, returnObj);\r\n\r\n      return returnObj.shouldSwallow;\r\n    }\r\n\r\n    public tryRevertSuggestion(): boolean {\r\n      let returnObj = {shouldSwallow: false};\r\n      this.emit(\u0027tryrevert\u0027, returnObj);\r\n\r\n      return returnObj.shouldSwallow;\r\n    }\r\n  }\r\n}","// Defines a \u0027polyfill\u0027 of sorts for NPM\u0027s events module\r\n/// \u003creference path=\"../includes/events.ts\" /\u003e\r\n/// \u003creference path=\"contextWindow.ts\" /\u003e\r\n/// \u003creference path=\"prediction/languageProcessor.ts\" /\u003e\r\n/// \u003creference types=\"@keymanapp/models-types\" /\u003e\r\n\r\nnamespace com.keyman.text {\r\n  export class InputProcessor {\r\n    public static readonly DEFAULT_OPTIONS: ProcessorInitOptions = {\r\n      baseLayout: \u0027us\u0027\r\n    }\r\n\r\n    private device: utils.DeviceSpec;\r\n    private kbdProcessor: KeyboardProcessor;\r\n    private lngProcessor: prediction.LanguageProcessor;\r\n\r\n    constructor(device: utils.DeviceSpec, options?: ProcessorInitOptions) {\r\n      if(!device) {\r\n        throw new Error(\u0027device must be defined\u0027);\r\n      }\r\n\r\n      if(!options) {\r\n        options = InputProcessor.DEFAULT_OPTIONS;\r\n      }\r\n\r\n      this.device = device;\r\n      this.kbdProcessor = new KeyboardProcessor(device, options);\r\n      this.lngProcessor = new prediction.LanguageProcessor();\r\n    }\r\n\r\n    public get languageProcessor(): prediction.LanguageProcessor {\r\n      return this.lngProcessor;\r\n    }\r\n\r\n    public get keyboardProcessor(): KeyboardProcessor {\r\n      return this.kbdProcessor;\r\n    }\r\n\r\n    public get keyboardInterface(): text.KeyboardInterface {\r\n      return this.keyboardProcessor.keyboardInterface;\r\n    }\r\n\r\n    public get activeKeyboard(): keyboards.Keyboard {\r\n      return this.keyboardInterface.activeKeyboard;\r\n    }\r\n\r\n    public set activeKeyboard(keyboard: keyboards.Keyboard) {\r\n      this.keyboardInterface.activeKeyboard = keyboard;\r\n\r\n      // All old deadkeys and keyboard-specific cache should immediately be invalidated\r\n      // on a keyboard change.\r\n      this.resetContext();\r\n    }\r\n\r\n    public get activeModel(): prediction.ModelSpec {\r\n      return this.languageProcessor.activeModel;\r\n    }\r\n\r\n    /**\r\n     * Tell the currently active keyboard that a new context has been selected,\r\n     * e.g. by focus change, selection change, keyboard change, etc.\r\n     *\r\n     * @param    {Object}   outputTarget  The OutputTarget that has focus\r\n     * @returns  {Object}                 A RuleBehavior object describing the cumulative effects of\r\n     *                                    all matched keyboard rules\r\n     */\r\n     processNewContextEvent(outputTarget: OutputTarget): RuleBehavior {\r\n      const ruleBehavior = this.keyboardProcessor.processNewContextEvent(this.device, outputTarget);\r\n\r\n      if(ruleBehavior) {\r\n        ruleBehavior.finalize(this.keyboardProcessor, outputTarget, true);\r\n      }\r\n      return ruleBehavior;\r\n    }\r\n\r\n    /**\r\n     * Simulate a keystroke according to the touched keyboard button element\r\n     *\r\n     * Handles default output and keyboard processing for both OSK and physical keystrokes.\r\n     *\r\n     * @param       {Object}      keyEvent      The abstracted KeyEvent to use for keystroke processing\r\n     * @param       {Object}      outputTarget  The OutputTarget receiving the KeyEvent\r\n     * @returns     {Object}                    A RuleBehavior object describing the cumulative effects of\r\n     *                                          all matched keyboard rules.\r\n     */\r\n    processKeyEvent(keyEvent: KeyEvent, outputTarget: OutputTarget): RuleBehavior {\r\n      let formFactor = keyEvent.device.formFactor;\r\n      let fromOSK = keyEvent.isSynthetic;\r\n\r\n      // The default OSK layout for desktop devices does not include nextlayer info, relying on modifier detection here.\r\n      // It\u0027s the OSK equivalent to doModifierPress on \u0027desktop\u0027 form factors.\r\n      if((formFactor == utils.FormFactor.Desktop || !this.activeKeyboard || this.activeKeyboard.usesDesktopLayoutOnDevice(keyEvent.device)) \u0026\u0026 fromOSK) {\r\n        // If it\u0027s a desktop OSK style and this triggers a layer change,\r\n        // a modifier key was clicked.  No output expected, so it\u0027s safe to instantly exit.\r\n        if(this.keyboardProcessor.selectLayer(keyEvent)) {\r\n          return new RuleBehavior();\r\n        }\r\n      }\r\n\r\n      // Will handle keystroke-based non-layer change modifier \u0026 state keys, mapping them through the physical keyboard\u0027s version\r\n      // of state management.  `doModifierPress` must always run.\r\n      if(this.keyboardProcessor.doModifierPress(keyEvent, outputTarget, !fromOSK)) {\r\n        // If run on a desktop platform, we know that modifier \u0026 state key presses may not\r\n        // produce output, so we may make an immediate return safely.\r\n        if(!fromOSK) {\r\n          return new RuleBehavior();\r\n        }\r\n      }\r\n\r\n      // If suggestions exist AND space is pressed, accept the suggestion and do not process the keystroke.\r\n      // If a suggestion was just accepted AND backspace is pressed, revert the change and do not process the backspace.\r\n      // We check the first condition here, while the prediction UI handles the second through the try__() methods below.\r\n      if(this.languageProcessor.isActive) {\r\n        // The following code relies on JS\u0027s logical operator \"short-circuit\" properties to prevent unwanted triggering of the second condition.\r\n\r\n        // Can the suggestion UI revert a recent suggestion?  If so, do that and swallow the backspace.\r\n        if((keyEvent.kName == \"K_BKSP\" || keyEvent.Lcode == Codes.keyCodes[\"K_BKSP\"]) \u0026\u0026 this.languageProcessor.tryRevertSuggestion()) {\r\n          return new RuleBehavior();\r\n          // Can the suggestion UI accept an existing suggestion?  If so, do that and swallow the space character.\r\n        } else if((keyEvent.kName == \"K_SPACE\" || keyEvent.Lcode == Codes.keyCodes[\"K_SPACE\"]) \u0026\u0026 this.languageProcessor.tryAcceptSuggestion(\u0027space\u0027)) {\r\n          return new RuleBehavior();\r\n        }\r\n      }\r\n\r\n      // // ...end I3363 (Build 301)\r\n\r\n      // Create a \"mock\" backup of the current outputTarget in its pre-input state.\r\n      // Current, long-existing assumption - it\u0027s DOM-backed.\r\n      let preInputMock = Mock.from(outputTarget, true);\r\n\r\n      const startingLayerId = this.keyboardProcessor.layerId;\r\n\r\n      // We presently need the true keystroke to run on the FULL context.  That index is still\r\n      // needed for some indexing operations when comparing two different output targets.\r\n      let ruleBehavior = this.keyboardProcessor.processKeystroke(keyEvent, outputTarget);\r\n\r\n      // Swap layer as appropriate.\r\n      if(keyEvent.kNextLayer) {\r\n        this.keyboardProcessor.selectLayer(keyEvent);\r\n      }\r\n\r\n      // If it\u0027s a key that we \u0027optimize out\u0027 of our fat-finger correction algorithm,\r\n      // we MUST NOT trigger it for this keystroke.\r\n      let isOnlyLayerSwitchKey = text.Codes.isKnownOSKModifierKey(keyEvent.kName);\r\n\r\n      // Best-guess stopgap for possible custom modifier keys.\r\n      // If a key (1) does not affect the context and (2) shifts the active layer,\r\n      // we assume it\u0027s a modifier key.  (Touch keyboards may define custom modifier keys.)\r\n      //\r\n      // Note:  this will mean we won\u0027t generate alternates in the niche scenario where:\r\n      // 1.  Keypress does not alter the actual context\r\n      // 2.  It DOES emit a deadkey with an earlier processing rule.\r\n      // 3.  The FINAL processing rule does not match.\r\n      // 4.  The key ALSO signals a layer shift.\r\n      // If any of the four above conditions aren\u0027t met - no problem!\r\n      // So it\u0027s a pretty niche scenario.\r\n      if((ruleBehavior?.transcription?.transform as TextTransform)?.isNoOp() \u0026\u0026 keyEvent.kNextLayer) {\r\n        isOnlyLayerSwitchKey = true;\r\n      }\r\n\r\n      const keepRuleBehavior = ruleBehavior != null;\r\n      // Should we swallow any further processing of keystroke events for this keydown-keypress sequence?\r\n      if(keepRuleBehavior) {\r\n        // alternates are our fat-finger alternate outputs. We don\u0027t build these for keys we detect as\r\n        // layer switch keys\r\n        let alternates = isOnlyLayerSwitchKey ? null : this.buildAlternates(ruleBehavior, keyEvent, preInputMock);\r\n\r\n        // Now that we\u0027ve done all the keystroke processing needed, ensure any extra effects triggered\r\n        // by the actual keystroke occur.\r\n        ruleBehavior.finalize(this.keyboardProcessor, outputTarget, false);\r\n\r\n        // -- All keystroke (and \u0027alternate\u0027) processing is now complete.  Time to finalize everything! --\r\n\r\n        // Notify the ModelManager of new input - it\u0027s predictive text time!\r\n        if(alternates \u0026\u0026 alternates.length \u003e 0) {\r\n          ruleBehavior.transcription.alternates = alternates;\r\n        }\r\n      } else {\r\n        // We need a dummy RuleBehavior for keys which have no output (e.g. Shift)\r\n        ruleBehavior = new RuleBehavior();\r\n        ruleBehavior.transcription = outputTarget.buildTranscriptionFrom(outputTarget, null, false);\r\n        ruleBehavior.triggersDefaultCommand = true;\r\n      }\r\n\r\n      // The keyboard may want to take an action after all other keystroke processing is\r\n      // finished, for example to switch layers. This action may not have any output\r\n      // but may change system store or variable store values. Given this, we don\u0027t need to\r\n      // save anything about the post behavior, after finalizing it\r\n\r\n      // We need to tell the keyboard if the layer has been changed, either by a keyboard rule itself,\r\n      // or by the touch layout \u0027nextlayer\u0027 control.\r\n      const hasLayerChanged = ruleBehavior.setStore[KeyboardInterface.TSS_LAYER] || keyEvent.kNextLayer;\r\n      this.keyboardProcessor.newLayerStore.set(hasLayerChanged ? this.keyboardProcessor.layerId : \u0027\u0027);\r\n      this.keyboardProcessor.oldLayerStore.set(hasLayerChanged ? startingLayerId : \u0027\u0027);\r\n\r\n      let postRuleBehavior = this.keyboardProcessor.processPostKeystroke(keyEvent.device, outputTarget);\r\n      if(postRuleBehavior) {\r\n        postRuleBehavior.finalize(this.keyboardProcessor, outputTarget, true);\r\n      }\r\n\r\n      // Yes, even for ruleBehavior.triggersDefaultCommand.  Those tend to change the context.\r\n      ruleBehavior.predictionPromise = this.languageProcessor.predict(ruleBehavior.transcription, this.keyboardProcessor.layerId);\r\n\r\n      // Text did not change (thus, no text \"input\") if we tabbed or merely moved the caret.\r\n      if(!ruleBehavior.triggersDefaultCommand) {\r\n        // For DOM-aware targets, this will trigger a DOM event page designers may listen for.\r\n        outputTarget.doInputEvent();\r\n      }\r\n\r\n      return keepRuleBehavior ? ruleBehavior : null;\r\n    }\r\n\r\n    private buildAlternates(ruleBehavior: RuleBehavior, keyEvent: KeyEvent, preInputMock: Mock): Alternate[] {\r\n      let alternates: Alternate[];\r\n\r\n      // If we\u0027re performing a \u0027default command\u0027, it\u0027s not a standard \u0027typing\u0027 event - don\u0027t do fat-finger stuff.\r\n      // Also, don\u0027t do fat-finger stuff if predictive text isn\u0027t enabled.\r\n      if(this.languageProcessor.isActive \u0026\u0026 !ruleBehavior.triggersDefaultCommand) {\r\n        let keyDistribution = keyEvent.keyDistribution;\r\n\r\n        // We don\u0027t need to track absolute indexing during alternate-generation;\r\n        // only position-relative, so it\u0027s better to use a sliding window for context\r\n        // when making alternates.  (Slightly worse for short text, matters greatly\r\n        // for long text.)\r\n        let contextWindow = new ContextWindow(preInputMock, ContextWindow.ENGINE_RULE_WINDOW, this.keyboardProcessor.layerId);\r\n        let windowedMock = contextWindow.toMock();\r\n\r\n        // Note - we don\u0027t yet do fat-fingering with longpress keys.\r\n        if(keyDistribution \u0026\u0026 keyEvent.kbdLayer) {\r\n          // Tracks a \u0027deadline\u0027 for fat-finger ops, just in case both context is long enough\r\n          // and device is slow enough that the calculation takes too long.\r\n          //\r\n          // Consider use of https://developer.mozilla.org/en-US/docs/Web/API/Performance/now instead?\r\n          // Would allow finer-tuned control.\r\n          let TIMEOUT_THRESHOLD: number = Number.MAX_VALUE;\r\n          let _globalThis = com.keyman.utils.getGlobalObject();\r\n          let timer: () =\u003e number;\r\n\r\n          // Available by default on `window` in browsers, but _not_ on `global` in Node,\r\n          // surprisingly.  Since we can\u0027t use code dependent on `require` statements\r\n          // at present, we have to condition upon it actually existing.\r\n          if(_globalThis[\u0027performance\u0027] \u0026\u0026 _globalThis[\u0027performance\u0027][\u0027now\u0027]) {\r\n            timer = function() {\r\n              return _globalThis[\u0027performance\u0027][\u0027now\u0027]();\r\n            };\r\n\r\n            TIMEOUT_THRESHOLD = timer() + 16; // + 16ms.\r\n          } // else {\r\n            // We _could_ just use Date.now() as a backup... but that (probably) only matters\r\n            // when unit testing.  So... we actually don\u0027t _need_ time thresholding when in\r\n            // a Node environment.\r\n          // }\r\n\r\n          // Tracks a minimum probability for keystroke probability.  Anything less will not be\r\n          // included in alternate calculations.\r\n          //\r\n          // Seek to match SearchSpace.EDIT_DISTANCE_COST_SCALE from the predictive-text engine.\r\n          // Reasoning for the selected value may be seen there.  Short version - keystrokes\r\n          // that _appear_ very precise may otherwise not even consider directly-neighboring keys.\r\n          let KEYSTROKE_EPSILON = Math.exp(-5);\r\n\r\n          // Sort the distribution into probability-descending order.\r\n          keyDistribution.sort((a, b) =\u003e b.p - a.p);\r\n\r\n          let activeLayout = this.activeKeyboard.layout(keyEvent.device.formFactor);\r\n          alternates = [];\r\n\r\n          let totalMass = 0; // Tracks sum of non-error probabilities.\r\n          for(let pair of keyDistribution) {\r\n            if(pair.p \u003c KEYSTROKE_EPSILON) {\r\n              break;\r\n            } else if(timer \u0026\u0026 timer() \u003e= TIMEOUT_THRESHOLD) {\r\n              // Note:  it\u0027s always possible that the thread _executing_ our JS\r\n              // got paused by the OS, even if JS itself is single-threaded.\r\n              //\r\n              // The case where `alternates` is initialized (line 167) but empty\r\n              // (because of net-zero loop iterations) MUST be handled.\r\n              break;\r\n            }\r\n\r\n            let mock = Mock.from(windowedMock, false);\r\n\r\n            let altKey = activeLayout.getLayer(keyEvent.kbdLayer).getKey(pair.keyId);\r\n            if(!altKey) {\r\n              console.warn(\"Potential fat-finger key could not be found in layer!\");\r\n              continue;\r\n            }\r\n\r\n            let altEvent = altKey.constructKeyEvent(this.keyboardProcessor, keyEvent.device);\r\n            let alternateBehavior = this.keyboardProcessor.processKeystroke(altEvent, mock);\r\n\r\n            // If alternateBehavior.beep == true, ignore it.  It\u0027s a disallowed key sequence,\r\n            // so we expect users to never intend their use.\r\n            //\r\n            // Also possible that this set of conditions fail for all evaluated alternates.\r\n            if(alternateBehavior \u0026\u0026 !alternateBehavior.beep \u0026\u0026 pair.p \u003e 0) {\r\n              let transform: Transform = alternateBehavior.transcription.transform;\r\n\r\n              // Ensure that the alternate\u0027s token id matches that of the current keystroke, as we only\r\n              // record the matched rule\u0027s context (since they match)\r\n              transform.id = ruleBehavior.transcription.token;\r\n              alternates.push({sample: transform, \u0027p\u0027: pair.p});\r\n              totalMass += pair.p;\r\n            }\r\n          }\r\n\r\n          // Renormalizes the distribution, as any error (beep) results\r\n          // will result in a distribution that doesn\u0027t sum to 1 otherwise.\r\n          // All `.p` values are strictly positive, so totalMass is\r\n          // guaranteed to be \u003e 0 if the array has entries.\r\n          alternates.forEach(function(alt) {\r\n            alt.p /= totalMass;\r\n          });\r\n        }\r\n      }\r\n      return alternates;\r\n    }\r\n\r\n    public resetContext(outputTarget?: OutputTarget) {\r\n      this.keyboardProcessor.resetContext();\r\n      this.languageProcessor.invalidateContext(outputTarget, this.keyboardProcessor.layerId);\r\n\r\n      // Let the keyboard do its initial group processing\r\n      //console.log(\u0027processNewContextEvent called from resetContext\u0027);\r\n      if(outputTarget) {\r\n        this.processNewContextEvent(outputTarget);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n(function () {\r\n  let ns = com.keyman.text;\r\n\r\n  // Let the InputProcessor be available both in the browser and in Node.\r\n  if (typeof module !== \u0027undefined\u0027 \u0026\u0026 typeof module.exports !== \u0027undefined\u0027) {\r\n    module.exports = ns.InputProcessor;\r\n    //@ts-ignore\r\n    ns.InputProcessor.com = com; // Export the root namespace so that all InputProcessor classes are accessible by unit tests.\r\n  }\r\n}());","namespace com.keyman.text {\r\n  // Defines the base Deadkey-tracking object.\r\n  \r\n  export class Deadkey {\r\n    p: number;  // Position of deadkey\r\n    d: number;  // Numerical id of the deadkey\r\n    o: number;  // Ordinal value of the deadkey (resolves same-place conflicts)\r\n    matched: number;\r\n\r\n    static ordinalSeed: number = 0;\r\n\r\n    constructor(pos: number, id: number) {\r\n      this.p = pos;\r\n      this.d = id;\r\n      this.o = Deadkey.ordinalSeed++;\r\n    }\r\n\r\n    match(p: number, d: number): boolean {\r\n      var result:boolean = (this.p == p \u0026\u0026 this.d == d);\r\n\r\n      return result;\r\n    }\r\n\r\n    set(): void {\r\n      this.matched = 1;\r\n    }\r\n\r\n    reset(): void {\r\n      this.matched = 0;\r\n    }\r\n\r\n    before(other: Deadkey): boolean {\r\n      return this.o \u003c other.o;\r\n    }\r\n\r\n    clone(): Deadkey {\r\n      let dk = new Deadkey(this.p, this.d);\r\n      dk.o = this.o;\r\n\r\n      return dk;\r\n    }\r\n\r\n    /**\r\n     * Sorts the deadkeys in reverse order.\r\n     */\r\n    static sortFunc = function(a: Deadkey, b: Deadkey) {\r\n      // We want descending order, so we want \u0027later\u0027 deadkeys first.\r\n      if(a.p != b.p) {\r\n        return b.p - a.p;\r\n      } else {\r\n        return b.o - a.o;\r\n      }\r\n    };\r\n  }\r\n\r\n  // Object-orients deadkey management.\r\n  export class DeadkeyTracker {\r\n    dks: Deadkey[] = [];\r\n\r\n    toSortedArray(): Deadkey[] {\r\n      this.dks = this.dks.sort(Deadkey.sortFunc);\r\n      return [].concat(this.dks);\r\n    }\r\n\r\n    clone(): DeadkeyTracker {\r\n      let dkt = new DeadkeyTracker();\r\n      let dks = this.toSortedArray();\r\n\r\n      // Make sure to clone the deadkeys themselves - the Deadkey object is mutable.\r\n      dkt.dks = [];\r\n      dks.forEach(function(value: Deadkey) {\r\n        dkt.dks.push(value.clone());\r\n      });\r\n\r\n      return dkt;\r\n    }\r\n  \r\n    /**\r\n     * Function     isMatch      \r\n     * Scope        Public\r\n     * @param       {number}      caretPos  current cursor position\r\n     * @param       {number}      n         expected offset of deadkey from cursor\r\n     * @param       {number}      d         deadkey\r\n     * @return      {boolean}               True if deadkey found selected context matches val\r\n     * Description  Match deadkey at current cursor position\r\n     */\r\n    isMatch(caretPos: number, n: number, d: number): boolean {\r\n      if(this.dks.length == 0) {\r\n        return false; // I3318\r\n      }\r\n\r\n      var sp=caretPos;\r\n      n = sp - n;\r\n      for(var i = 0; i \u003c this.dks.length; i++) {\r\n        // Don\u0027t re-match an already-matched deadkey.  It\u0027s possible to have two identical \r\n        // entries, and they should be kept separately.\r\n        if(this.dks[i].match(n, d) \u0026\u0026 !this.dks[i].matched) {\r\n          this.dks[i].set();\r\n          // Assumption:  since we match the first possible entry in the array, we\r\n          // match the entry with the lower ordinal - the \u0027first\u0027 deadkey in the position.\r\n          return true; // I3318\r\n        }\r\n      }\r\n\r\n      this.resetMatched(); // I3318\r\n\r\n      return false;\r\n    }\r\n\r\n    add(dk: Deadkey) {\r\n      this.dks = this.dks.concat(dk);\r\n    }\r\n\r\n    remove(dk: Deadkey) {\r\n      var index = this.dks.indexOf(dk);\r\n      this.dks.splice(index, 1);\r\n    }\r\n\r\n    clear() {\r\n      this.dks = [];\r\n    }\r\n\r\n    resetMatched() {\r\n      for(let dk of this.dks) {\r\n        dk.reset();\r\n      }\r\n    }\r\n    \r\n    deleteMatched(): void {\r\n      for(var Li = 0; Li \u003c this.dks.length; Li++) {\r\n        if(this.dks[Li].matched) {\r\n          this.dks.splice(Li--, 1); // Don\u0027t forget to decrement!\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Function     adjustPositions (formerly _DeadkeyAdjustPos)\r\n     * Scope        Private\r\n     * @param       {number}      Lstart      start position in context\r\n     * @param       {number}      Ldelta      characters to adjust by   \r\n     * Description  Adjust saved positions of deadkeys in context\r\n     */\r\n    adjustPositions(Lstart: number, Ldelta: number): void {\r\n      if(Ldelta == 0) {\r\n        return;\r\n      }\r\n      \r\n      for(let dk of this.dks) {\r\n        if(dk.p \u003e Lstart) {\r\n          dk.p += Ldelta;\r\n        }\r\n      }\r\n    }\r\n\r\n    count(): number {\r\n      return this.dks.length;\r\n    }\r\n  }\r\n}","/// \u003creference path=\"outputTarget.ts\" /\u003e\r\n\r\nnamespace com.keyman.text {\r\n  // Represents a probability distribution over a keyboard\u0027s keys.\r\n  // Defined here to avoid compilation issues.\r\n  export type KeyDistribution = {keyId: string, p: number}[];\r\n\r\n  /**\r\n   * This class is defined within its own file so that it can be loaded by code outside of KMW without\r\n   * having to actually load the entirety of KMW.\r\n   */\r\n  export class KeyEvent {\r\n    Lcode: number;\r\n    Lstates: number;\r\n    LmodifierChange?: boolean;\r\n    Lmodifiers: number;\r\n    LisVirtualKey: boolean;\r\n    vkCode: number;\r\n    kName: string;\r\n    kLayer?: string;   // The key\u0027s layer property\r\n    kbdLayer?: string; // The virtual keyboard\u0027s active layer\r\n    kNextLayer?: string;\r\n\r\n    // Holds relevant event properties leading to construction of this KeyEvent.\r\n    source?: any; // Technically, KeyEvent|MouseEvent|Touch - but those are DOM types that must be kept out of headless mode.\r\n    // Holds a generated fat-finger distribution (when appropriate)\r\n    keyDistribution?: KeyDistribution;\r\n\r\n    /**\r\n     * The device model for web-core to follow when processing the keystroke.\r\n     */\r\n    device: utils.DeviceSpec;\r\n\r\n    /**\r\n     * `true` if this event was produced by sources other than a DOM-based KeyboardEvent.\r\n     */\r\n    isSynthetic: boolean = true;\r\n\r\n    public static constructNullKeyEvent(device: utils.DeviceSpec): KeyEvent {\r\n      const keyEvent = new KeyEvent();\r\n      keyEvent.Lcode = 0;\r\n      keyEvent.kName = \u0027\u0027;\r\n      keyEvent.device = device;\r\n      return keyEvent;\r\n    }\r\n  };\r\n}","// Defines deadkey management in a manner attachable to each element interface.\r\n///\u003creference path=\"../text/deadkeys.ts\" /\u003e\r\n// Defines the KeyEvent type.\r\n///\u003creference path=\"keyEvent.ts\" /\u003e\r\n///\u003creference types=\"@keymanapp/models-types\" /\u003e\r\n\r\n\r\n// Also relies on string-extensions provided by the web-utils package.\r\n\r\nnamespace com.keyman.text {\r\n  export class TextTransform implements Transform {\r\n    readonly insert: string;\r\n    readonly deleteLeft: number;\r\n    readonly deleteRight?: number;\r\n\r\n    constructor(insert: string, deleteLeft: number, deleteRight?: number) {\r\n      this.insert = insert;\r\n      this.deleteLeft = deleteLeft;\r\n      this.deleteRight = deleteRight || 0;\r\n    }\r\n\r\n    public static readonly nil = new TextTransform(\u0027\u0027, 0, 0);\r\n\r\n    public isNoOp(): boolean {\r\n      return this.insert === \u0027\u0027 \u0026\u0026 this.deleteLeft === 0 \u0026\u0026 this.deleteRight === 0;\r\n    }\r\n  }\r\n\r\n  export class Transcription {\r\n    readonly token: number;\r\n    readonly keystroke: KeyEvent;\r\n    readonly transform: Transform;\r\n    alternates: Alternate[]; // constructed after the rest of the transcription.\r\n    readonly preInput: Mock;\r\n\r\n    private static tokenSeed: number = 0;\r\n\r\n    constructor(keystroke: KeyEvent, transform: Transform, preInput: Mock, alternates?: Alternate[]/*, removedDks: Deadkey[], insertedDks: Deadkey[]*/) {\r\n      let token = this.token = Transcription.tokenSeed++;\r\n\r\n      this.keystroke = keystroke;\r\n      this.transform = transform;\r\n      this.alternates = alternates;\r\n      this.preInput = preInput;\r\n\r\n      this.transform.id = this.token;\r\n\r\n      // Assign the ID to each alternate, as well.\r\n      if(alternates) {\r\n        alternates.forEach(function(alt) {\r\n          alt.sample.id = token;\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  export type Alternate = ProbabilityMass\u003cTransform\u003e;\r\n\r\n  export abstract class OutputTarget {\r\n    private _dks: text.DeadkeyTracker;\r\n\r\n    constructor() {\r\n      this._dks = new text.DeadkeyTracker();\r\n    }\r\n\r\n    /**\r\n     * Signifies that this OutputTarget has no default key processing behaviors.  This should be false\r\n     * for OutputTargets backed by web elements like HTMLInputElement or HTMLTextAreaElement.\r\n     */\r\n    get isSynthetic(): boolean {\r\n      return true;\r\n    }\r\n\r\n    resetContext(): void {\r\n      this.deadkeys().clear();\r\n    }\r\n\r\n    deadkeys(): text.DeadkeyTracker {\r\n      return this._dks;\r\n    }\r\n\r\n    hasDeadkeyMatch(n: number, d: number): boolean {\r\n      return this.deadkeys().isMatch(this.getDeadkeyCaret(), n, d);\r\n    }\r\n\r\n    insertDeadkeyBeforeCaret(d: number) {\r\n      var dk: Deadkey = new Deadkey(this.getDeadkeyCaret(), d);\r\n      this.deadkeys().add(dk);\r\n    }\r\n\r\n    /**\r\n     * Should be called by each output target immediately before text mutation operations occur.\r\n     *\r\n     * Maintains solutions to old issues:  I3318,I3319\r\n     * @param {number} delta  Use negative values if characters were deleted, positive if characters were added.\r\n     */\r\n    protected adjustDeadkeys(delta: number) {\r\n      this.deadkeys().adjustPositions(this.getDeadkeyCaret(), delta);\r\n    }\r\n\r\n    /**\r\n     * Needed to properly clone deadkeys for use with Mock element interfaces toward predictive text purposes.\r\n     * @param {object}  dks   An existing set of deadkeys to deep-copy for use by this element interface.\r\n     */\r\n    protected setDeadkeys(dks: text.DeadkeyTracker) {\r\n      this._dks = dks.clone();\r\n    }\r\n\r\n    /**\r\n     * Determines the basic operations needed to reconstruct the current OutputTarget\u0027s text from the prior state specified\r\n     * by another OutputTarget based on their text and caret positions.\r\n     *\r\n     * This is designed for use as a \"before and after\" comparison to determine the effect of a single keyboard rule at a time.\r\n     * As such, it assumes that the caret is immediately after any inserted text.\r\n     * @param from An output target (preferably a Mock) representing the prior state of the input/output system.\r\n     */\r\n    buildTransformFrom(original: OutputTarget): Transform {\r\n      let to = this.getText();\r\n      let from = original.getText();\r\n\r\n      let fromCaret = original.getDeadkeyCaret();\r\n      let toCaret = this.getDeadkeyCaret();\r\n\r\n      // Step 1:  Determine the number of left-deletions.\r\n      let maxSMPLeftMatch = fromCaret \u003c toCaret ? fromCaret : toCaret;\r\n\r\n      // We need the corresponding non-SMP caret location in order to binary-search efficiently.\r\n      // (Examining code units is much more computationally efficient.)\r\n      let maxLeftMatch = to._kmwCodePointToCodeUnit(maxSMPLeftMatch);\r\n\r\n      // 1.1:  use a non-SMP-aware binary search to determine the divergence point.\r\n      let start = 0;\r\n      let end = maxLeftMatch;  // the index AFTER the last possible matching char.\r\n\r\n      // This search is O(maxLeftMatch).  1/2 + 1/4 + 1/8 + ... converges to = 1.\r\n      while(start \u003c end) {\r\n        let mid = Math.floor((end+start+1) / 2); // round up (compare more)\r\n        let fromLeft = from.substr(start, mid-start);\r\n        let toLeft   = to.substr(start, mid-start);\r\n\r\n        if(fromLeft == toLeft) {\r\n          start = mid;\r\n        } else {\r\n          end = mid - 1;\r\n        }\r\n      }\r\n\r\n      // At the loop\u0027s end:  `end` now holds the non-SMP-aware divergence point.\r\n      // The \u0027caret\u0027 is after the last matching code unit.\r\n\r\n      // 1.2:  detect a possible surrogate-pair split scenario, correcting for it\r\n      //       (by moving the split before the high-surrogate) if detected.\r\n\r\n      // If the split location is precisely on either end of the context, we can\u0027t\r\n      // have split a surrogate pair.\r\n      if(end \u003e 0 \u0026\u0026 end \u003c maxLeftMatch) {\r\n        let potentialHigh    = from.charCodeAt(end-1);\r\n        let potentialFromLow = from.charCodeAt(end);\r\n        let potentialToLow   = to.charCodeAt(end);\r\n\r\n        // if potentialHigh is a possible high surrogate...\r\n        if(potentialHigh \u003e= 0xD800 \u0026\u0026 potentialHigh \u003c= 0xDBFF) {\r\n          // and at least one potential \u0027low\u0027 is a possible low surrogate...\r\n          let flag = potentialFromLow \u003e= 0xDC00 \u0026\u0026 potentialFromLow \u003c= 0xDFFF;\r\n          flag = flag || (potentialToLow \u003e= 0XDC00 \u0026\u0026 potentialToLow \u003c= 0xDFFF);\r\n\r\n          // Correct the split location, moving it \u0027before\u0027 the high surrogate.\r\n          if(flag) {\r\n            end = end - 1;\r\n          }\r\n        }\r\n      }\r\n\r\n      // 1.3:  take substring from start to the split point; determine SMP-aware length.\r\n      //       This yields the SMP-aware divergence index, which gives the number of left-deletes.\r\n      let newCaret = from._kmwCodeUnitToCodePoint(end);\r\n      let deletedLeft = fromCaret - newCaret;\r\n\r\n      // Step 2:  Determine the other properties.\r\n      // Since the \u0027after\u0027 OutputTarget\u0027s caret indicates the end of any inserted text, we\r\n      // can easily calculate the rest.\r\n      let insertedLength = toCaret - newCaret;\r\n      let delta = to._kmwSubstr(newCaret, insertedLength);\r\n\r\n      let undeletedRight = to._kmwLength() - toCaret;\r\n      let originalRight = from._kmwLength() - fromCaret;\r\n      let deletedRight = originalRight - undeletedRight;\r\n\r\n      // May occur when reverting a suggestion that had been applied mid-word.\r\n      if(deletedRight \u003c 0) {\r\n        // Restores deleteRight characters.\r\n        delta = delta + to._kmwSubstr(toCaret, -deletedRight);\r\n        deletedRight = 0;\r\n      }\r\n\r\n      return new TextTransform(delta, deletedLeft, deletedRight);\r\n    }\r\n\r\n    buildTranscriptionFrom(original: OutputTarget, keyEvent: KeyEvent, readonly: boolean, alternates?: Alternate[]): Transcription {\r\n      let transform = this.buildTransformFrom(original);\r\n\r\n      // If we ever decide to re-add deadkey tracking, this is the place for it.\r\n\r\n      return new Transcription(keyEvent, transform, Mock.from(original, readonly), alternates);\r\n    }\r\n\r\n    /**\r\n     * Restores the `OutputTarget` to the indicated state.  Designed for use with `Transcription.preInput`.\r\n     * @param original An `OutputTarget` (usually a `Mock`).\r\n     */\r\n    restoreTo(original: OutputTarget) {\r\n      //\r\n      this.setTextBeforeCaret(original.getTextBeforeCaret());\r\n      this.setTextAfterCaret(original.getTextAfterCaret());\r\n\r\n      // Also, restore the deadkeys!\r\n      this._dks = original._dks.clone();\r\n    }\r\n\r\n    apply(transform: Transform) {\r\n      if(transform.deleteRight) {\r\n        this.setTextAfterCaret(this.getTextAfterCaret()._kmwSubstr(transform.deleteRight));\r\n      }\r\n\r\n      if(transform.deleteLeft) {\r\n        this.deleteCharsBeforeCaret(transform.deleteLeft);\r\n      }\r\n\r\n      if(transform.insert) {\r\n        this.insertTextBeforeCaret(transform.insert);\r\n      }\r\n\r\n      // We assume that all deadkeys are invalidated after applying a Transform, since\r\n      // prediction implies we\u0027ll be completing a word, post-deadkeys.\r\n      this._dks.clear();\r\n    }\r\n\r\n    /**\r\n     * Helper to `restoreTo` - allows directly setting the \u0027before\u0027 context to that of another\r\n     * `OutputTarget`.\r\n     * @param s\r\n     */\r\n    protected setTextBeforeCaret(s: string): void {\r\n      // This one\u0027s easy enough to provide a default implementation for.\r\n      this.deleteCharsBeforeCaret(this.getTextBeforeCaret()._kmwLength());\r\n      this.insertTextBeforeCaret(s);\r\n    }\r\n\r\n    /**\r\n     * Helper to `restoreTo` - allows directly setting the \u0027after\u0027 context to that of another\r\n     * `OutputTarget`.\r\n     * @param s\r\n     */\r\n    protected abstract setTextAfterCaret(s: string): void;\r\n\r\n    /**\r\n     * Clears any selected text within the wrapper\u0027s element(s).\r\n     * Silently does nothing if no such text exists.\r\n     */\r\n    abstract clearSelection(): void;\r\n\r\n    /**\r\n     * Clears any cached selection-related state values.\r\n     */\r\n    abstract invalidateSelection(): void;\r\n\r\n    /**\r\n     * Indicates whether or not the underlying element has its own selection (input, textarea)\r\n     * or is part of (or possesses) the DOM\u0027s active selection. Don\u0027t confuse with isSelectionEmpty().\r\n     *\r\n     * TODO: rename to supportsOwnSelection\r\n     */\r\n    abstract hasSelection(): boolean;\r\n\r\n    /**\r\n     * Returns true if there is no current selection -- that is, the selection range is empty\r\n     */\r\n    abstract isSelectionEmpty(): boolean;\r\n\r\n    /**\r\n     * Returns an index corresponding to the caret\u0027s position for use with deadkeys.\r\n     */\r\n    abstract getDeadkeyCaret(): number;\r\n\r\n    /**\r\n     * Relative to the caret, gets the current context within the wrapper\u0027s element.\r\n     */\r\n    abstract getTextBeforeCaret(): string;\r\n\r\n    /**\r\n     * Relative to the caret (and/or active selection), gets the element\u0027s text after the caret,\r\n     * excluding any actively selected text that would be immediately replaced upon text entry.\r\n     */\r\n    abstract getTextAfterCaret(): string;\r\n\r\n    /**\r\n     * Gets the element\u0027s full text, including any text that is actively selected.\r\n     */\r\n    abstract getText(): string;\r\n\r\n    /**\r\n     * Performs context deletions (from the left of the caret) as needed by the KeymanWeb engine and\r\n     * corrects the location of any affected deadkeys.\r\n     *\r\n     * Does not delete deadkeys (b/c KMW 1 \u0026 2 behavior maintenance).\r\n     * @param dn The number of characters to delete.  If negative, context will be left unchanged.\r\n     */\r\n    abstract deleteCharsBeforeCaret(dn: number): void;\r\n\r\n    /**\r\n     * Inserts text immediately before the caret\u0027s current position, moving the caret after the\r\n     * newly inserted text in the process along with any affected deadkeys.\r\n     *\r\n     * @param s Text to insert before the caret\u0027s current position.\r\n     */\r\n    abstract insertTextBeforeCaret(s: string): void;\r\n\r\n    /**\r\n     * Allows element-specific handling for ENTER key inputs.  Conceptually, this should usually\r\n     * correspond to `insertTextBeforeCaret(\u0027\\n\u0027), but actual implementation will vary greatly among\r\n     * elements.\r\n     */\r\n    abstract handleNewlineAtCaret(): void;\r\n\r\n    /**\r\n     * Saves element-specific state properties prone to mutation, enabling restoration after\r\n     * text-output operations.\r\n     */\r\n    saveProperties() {\r\n      // Most element interfaces won\u0027t need anything here.\r\n    }\r\n\r\n    /**\r\n     * Restores previously-saved element-specific state properties.  Designed for use after text-output\r\n     * ops to facilitate more-seamless web-dev and user interactions.\r\n     */\r\n    restoreProperties(){\r\n      // Most element interfaces won\u0027t need anything here.\r\n    }\r\n\r\n    /**\r\n     * Generates a synthetic event on the underlying element, signalling that its value has changed.\r\n     */\r\n    abstract doInputEvent(): void;\r\n  }\r\n\r\n  // Due to some interesting requirements on compile ordering in TS,\r\n  // this needs to be in the same file as OutputTarget now.\r\n  export class Mock extends OutputTarget {\r\n    text: string;\r\n    caretIndex: number;\r\n\r\n    constructor(text?: string, caretPos?: number) {\r\n      super();\r\n\r\n      this.text = text ? text : \"\";\r\n      var defaultLength = this.text._kmwLength();\r\n      // Ensures that `caretPos == 0` is handled correctly.\r\n      this.caretIndex = typeof caretPos == \"number\" ? caretPos : defaultLength;\r\n    }\r\n\r\n    // Clones the state of an existing EditableElement, creating a Mock version of its state.\r\n    static from(outputTarget: OutputTarget, readonly: boolean) {\r\n      let clone: Mock;\r\n\r\n      if(outputTarget instanceof Mock) {\r\n        // Avoids the need to run expensive kmwstring.ts / `_kmwLength()`\r\n        // calculations when deep-copying Mock instances.\r\n        let priorMock = outputTarget as Mock;\r\n        clone = new Mock(priorMock.text, priorMock.caretIndex);\r\n      } else {\r\n        // If we\u0027re \u0027cloning\u0027 a different OutputTarget type, we don\u0027t have a\r\n        // guaranteed way to more efficiently get these values; these are the\r\n        // best methods specified by the abstraction.\r\n\r\n        if(readonly) {\r\n          // for NewContext and PostOutput, we want the whole text\r\n          let text = outputTarget.getText();\r\n          let afterText = outputTarget.getTextAfterCaret();\r\n          let caretIndex = text._kmwLength() - afterText._kmwLength();\r\n          clone = new Mock(text, caretIndex);\r\n        } else {\r\n          // We choose to ignore (rather, pre-emptively remove) any actively-selected text,\r\n          // as since it\u0027s always removed instantly during any text mutation operations.\r\n          let preText = outputTarget.getTextBeforeCaret();\r\n          let caretIndex = preText._kmwLength();\r\n          clone = new Mock(preText + outputTarget.getTextAfterCaret(), caretIndex);\r\n        }\r\n      }\r\n\r\n      // Also duplicate deadkey state!  (Needed for fat-finger ops.)\r\n      clone.setDeadkeys(outputTarget.deadkeys());\r\n\r\n      return clone;\r\n    }\r\n\r\n    clearSelection(): void {\r\n      return;\r\n    }\r\n\r\n    invalidateSelection(): void {\r\n      return;\r\n    }\r\n\r\n    isSelectionEmpty(): boolean {\r\n      // TODO: consider if we need to maintain selection information in Mocks\r\n      return true;\r\n    }\r\n\r\n    hasSelection(): boolean {\r\n      return true;\r\n    }\r\n\r\n    getDeadkeyCaret(): number {\r\n      return this.caretIndex;\r\n    }\r\n\r\n    setDeadkeyCaret(index: number) {\r\n      if(index \u003c 0 || index \u003e this.text._kmwLength()) {\r\n        throw new Error(\"Provided caret index is out of range.\");\r\n      }\r\n      this.caretIndex = index;\r\n    }\r\n\r\n    getTextBeforeCaret(): string {\r\n      return this.text.kmwSubstr(0, this.caretIndex);\r\n    }\r\n\r\n    getTextAfterCaret(): string {\r\n      return this.text.kmwSubstr(this.caretIndex);\r\n    }\r\n\r\n    getText(): string {\r\n      return this.text;\r\n    }\r\n\r\n    deleteCharsBeforeCaret(dn: number): void {\r\n      if(dn \u003e= 0) {\r\n        if(dn \u003e this.caretIndex) {\r\n          dn = this.caretIndex;\r\n        }\r\n        this.text = this.text.kmwSubstr(0, this.caretIndex - dn) + this.getTextAfterCaret();\r\n        this.caretIndex -= dn;\r\n      }\r\n    }\r\n\r\n    insertTextBeforeCaret(s: string): void {\r\n      this.text = this.getTextBeforeCaret() + s + this.getTextAfterCaret();\r\n      this.caretIndex += s.kmwLength();\r\n    }\r\n\r\n    handleNewlineAtCaret(): void {\r\n      this.insertTextBeforeCaret(\u0027\\n\u0027);\r\n    }\r\n\r\n    protected setTextAfterCaret(s: string): void {\r\n      this.text = this.getTextBeforeCaret() + s;\r\n    }\r\n\r\n    doInputEvent() {\r\n      // Mock isn\u0027t backed by an element, so it won\u0027t have any event listeners.\r\n    }\r\n  }\r\n}","namespace com.keyman.text {\r\n  export var Codes = {\r\n    // Define Keyman Developer modifier bit-flags (exposed for use by other modules)\r\n    // Compare against /core/src/kmx/kmx_file.h.  CTRL+F \"#define LCTRLFLAG\" to find the secton.\r\n    modifierCodes: {\r\n      \"LCTRL\":0x0001,           // LCTRLFLAG\r\n      \"RCTRL\":0x0002,           // RCTRLFLAG\r\n      \"LALT\":0x0004,            // LALTFLAG\r\n      \"RALT\":0x0008,            // RALTFLAG\r\n      \"SHIFT\":0x0010,           // K_SHIFTFLAG\r\n      \"CTRL\":0x0020,            // K_CTRLFLAG\r\n      \"ALT\":0x0040,             // K_ALTFLAG\r\n      // TENTATIVE:  Represents command keys, which some OSes use for shortcuts we don\u0027t\r\n      // want to block.  No rule will ever target a modifier set with this bit set to 1.\r\n      \"META\":0x0080,            // K_METAFLAG\r\n      \"CAPS\":0x0100,            // CAPITALFLAG\r\n      \"NO_CAPS\":0x0200,         // NOTCAPITALFLAG\r\n      \"NUM_LOCK\":0x0400,        // NUMLOCKFLAG\r\n      \"NO_NUM_LOCK\":0x0800,     // NOTNUMLOCKFLAG\r\n      \"SCROLL_LOCK\":0x1000,     // SCROLLFLAG\r\n      \"NO_SCROLL_LOCK\":0x2000,  // NOTSCROLLFLAG\r\n      \"VIRTUAL_KEY\":0x4000,     // ISVIRTUALKEY\r\n      \"VIRTUAL_CHAR_KEY\":0x8000 // VIRTUALCHARKEY // Unused by KMW, but reserved for use by other Keyman engines.\r\n    },\r\n\r\n    modifierBitmasks: {\r\n      \"ALL\":0x007F,\r\n      \"ALT_GR_SIM\": (0x0001 | 0x0004),\r\n      \"CHIRAL\":0x001F,    // The base bitmask for chiral keyboards.  Includes SHIFT, which is non-chiral.\r\n      \"IS_CHIRAL\":0x000F, // Used to test if a bitmask uses a chiral modifier.\r\n      \"NON_CHIRAL\":0x0070 // The default bitmask, for non-chiral keyboards\r\n    },\r\n\r\n    stateBitmasks: {\r\n      \"ALL\":0x3F00,\r\n      \"CAPS\":0x0300,\r\n      \"NUM_LOCK\":0x0C00,\r\n      \"SCROLL_LOCK\":0x3000\r\n    },\r\n\r\n    // Define standard keycode numbers (exposed for use by other modules)\r\n    keyCodes: {\r\n      \"K_BKSP\":8,\"K_TAB\":9,\"K_ENTER\":13,\r\n      \"K_SHIFT\":16,\"K_CONTROL\":17,\"K_ALT\":18,\"K_PAUSE\":19,\"K_CAPS\":20,\r\n      \"K_ESC\":27,\"K_SPACE\":32,\"K_PGUP\":33,\r\n      \"K_PGDN\":34,\"K_END\":35,\"K_HOME\":36,\"K_LEFT\":37,\"K_UP\":38,\r\n      \"K_RIGHT\":39,\"K_DOWN\":40,\"K_SEL\":41,\"K_PRINT\":42,\"K_EXEC\":43,\r\n      \"K_INS\":45,\"K_DEL\":46,\"K_HELP\":47,\"K_0\":48,\r\n      \"K_1\":49,\"K_2\":50,\"K_3\":51,\"K_4\":52,\"K_5\":53,\"K_6\":54,\"K_7\":55,\r\n      \"K_8\":56,\"K_9\":57,\"K_A\":65,\"K_B\":66,\"K_C\":67,\"K_D\":68,\"K_E\":69,\r\n      \"K_F\":70,\"K_G\":71,\"K_H\":72,\"K_I\":73,\"K_J\":74,\"K_K\":75,\"K_L\":76,\r\n      \"K_M\":77,\"K_N\":78,\"K_O\":79,\"K_P\":80,\"K_Q\":81,\"K_R\":82,\"K_S\":83,\r\n      \"K_T\":84,\"K_U\":85,\"K_V\":86,\"K_W\":87,\"K_X\":88,\"K_Y\":89,\"K_Z\":90,\r\n      \"K_NP0\":96,\"K_NP1\":97,\"K_NP2\":98,\r\n      \"K_NP3\":99,\"K_NP4\":100,\"K_NP5\":101,\"K_NP6\":102,\r\n      \"K_NP7\":103,\"K_NP8\":104,\"K_NP9\":105,\"K_NPSTAR\":106,\r\n      \"K_NPPLUS\":107,\"K_SEPARATOR\":108,\"K_NPMINUS\":109,\"K_NPDOT\":110,\r\n      \"K_NPSLASH\":111,\"K_F1\":112,\"K_F2\":113,\"K_F3\":114,\"K_F4\":115,\r\n      \"K_F5\":116,\"K_F6\":117,\"K_F7\":118,\"K_F8\":119,\"K_F9\":120,\r\n      \"K_F10\":121,\"K_F11\":122,\"K_F12\":123,\"K_NUMLOCK\":144,\"K_SCROLL\":145,\r\n      \"K_LSHIFT\":160,\"K_RSHIFT\":161,\"K_LCONTROL\":162,\"K_RCONTROL\":163,\r\n      \"K_LALT\":164,\"K_RALT\":165,\r\n      \"K_COLON\":186,\"K_EQUAL\":187,\"K_COMMA\":188,\"K_HYPHEN\":189,\r\n      \"K_PERIOD\":190,\"K_SLASH\":191,\"K_BKQUOTE\":192,\r\n      \"K_LBRKT\":219,\"K_BKSLASH\":220,\"K_RBRKT\":221,\r\n      \"K_QUOTE\":222,\"K_oE2\":226,\"K_OE2\":226,\r\n      \"K_LOPT\":50001,\"K_ROPT\":50002,\r\n      \"K_NUMERALS\":50003,\"K_SYMBOLS\":50004,\"K_CURRENCIES\":50005,\r\n      \"K_UPPER\":50006,\"K_LOWER\":50007,\"K_ALPHA\":50008,\r\n      \"K_SHIFTED\":50009,\"K_ALTGR\":50010,\r\n      \"K_TABBACK\":50011,\"K_TABFWD\":50012\r\n    },\r\n\r\n    codesUS: [\r\n      [\u00270123456789\u0027,\u0027;=,-./`\u0027, \u0027[\\\\]\\\u0027\u0027],\r\n      [\u0027)!@#$%^\u0026*(\u0027,\u0027:+\u003c_\u003e?~\u0027, \u0027{|}\"\u0027]\r\n    ],\r\n\r\n    isKnownOSKModifierKey(keyID: string): boolean {\r\n      switch(keyID) {\r\n        case \u0027K_SHIFT\u0027:\r\n        case \u0027K_LOPT\u0027:\r\n        case \u0027K_ROPT\u0027:\r\n        case \u0027K_NUMLOCK\u0027: // Often used for numeric layers.\r\n        case \u0027K_CAPS\u0027:\r\n          return true;\r\n        default:\r\n          // Refer to text/codes.ts - these are Keyman-custom \"keycodes\" used for\r\n          // layer shifting keys.  To be safe, we currently let K_TABBACK and\r\n          // K_TABFWD through, though we might be able to drop them too.\r\n          let code = com.keyman.text.Codes[keyID];\r\n          if(code \u003e 50000 \u0026\u0026 code \u003c 50011) {\r\n            return true;\r\n          }\r\n      }\r\n\r\n      return false;\r\n    }\r\n  }\r\n}","namespace com.keyman.text {\r\n  /**\r\n   * Represents the commands and state changes that result from a matched keyboard rule.\r\n   */\r\n  export class RuleBehavior {\r\n    /**\r\n     * The before-and-after Transform from matching a keyboard rule.  May be `null`\r\n     * if no keyboard rules were matched for the keystroke.\r\n     */\r\n    transcription: Transcription = null;\r\n\r\n    /**\r\n     * Indicates whether or not a BEEP command was issued by the matched keyboard rule.\r\n     */\r\n    beep?: boolean;\r\n\r\n    /**\r\n     * A set of changed store values triggered by the matched keyboard rule.\r\n     */\r\n    setStore: {[id: number]: string} = {};\r\n\r\n    /**\r\n     * A set of variable stores with save requests triggered by the matched keyboard rule\r\n     */\r\n    saveStore: {[name: string]: VariableStore} = {};\r\n\r\n    /**\r\n     * A set of variable stores with possible changes to be applied during finalization.\r\n     */\r\n     variableStores: keyboards.VariableStoreDictionary = {};\r\n\r\n    /**\r\n     * Denotes a non-output default behavior; this should be evaluated later, against the true keystroke.\r\n     */\r\n    triggersDefaultCommand: boolean = false;\r\n\r\n    /**\r\n     * Denotes error log messages generated when attempting to generate this behavior.\r\n     */\r\n    errorLog?: string;\r\n\r\n    /**\r\n     * Denotes warning log messages generated when attempting to generate this behavior.\r\n     */\r\n    warningLog?: string;\r\n\r\n    /**\r\n     * If predictive text is active, contains a Promise returning predictive Suggestions.\r\n     */\r\n    predictionPromise?: Promise\u003cSuggestion[]\u003e;\r\n\r\n    /**\r\n     * In reference to https://github.com/keymanapp/keyman/pull/4350#issuecomment-768753852:\r\n     *\r\n     * If the final group processed is a context and keystroke group (using keys),\r\n     * and there is no nomatch rule, and the keystroke is not matched in the group,\r\n     * the keystroke\u0027s default behavior should trigger, regardless of whether or not any\r\n     * rules in prior groups matched.\r\n     */\r\n    triggerKeyDefault?: boolean;\r\n\r\n    finalize(processor: KeyboardProcessor, outputTarget: OutputTarget, readonly: boolean) {\r\n      if(!this.transcription) {\r\n        throw \"Cannot finalize a RuleBehavior with no transcription.\";\r\n      }\r\n\r\n      if(processor.beepHandler \u0026\u0026 this.beep) {\r\n        processor.beepHandler(outputTarget);\r\n      }\r\n\r\n      for(let storeID in this.setStore) {\r\n        let sysStore = processor.keyboardInterface.systemStores[storeID];\r\n        if(sysStore) {\r\n          try {\r\n            sysStore.set(this.setStore[storeID]);\r\n          } catch (error) {\r\n            if(processor.errorLogger) {\r\n              processor.errorLogger(\"Rule attempted to perform illegal operation - \u0027platform\u0027 may not be changed.\");\r\n            }\r\n          }\r\n        } else if(processor.warningLogger) {\r\n          processor.warningLogger(\"Unknown store affected by keyboard rule: \" + storeID);\r\n        }\r\n      }\r\n\r\n      processor.keyboardInterface.applyVariableStores(this.variableStores);\r\n\r\n      if(processor.keyboardInterface.variableStoreSerializer) {\r\n        for(let storeID in this.saveStore) {\r\n          processor.keyboardInterface.variableStoreSerializer.saveStore(processor.activeKeyboard.id, storeID, this.saveStore[storeID]);\r\n        }\r\n      }\r\n\r\n      if(this.triggersDefaultCommand) {\r\n        let keyEvent = this.transcription.keystroke;\r\n        DefaultOutput.applyCommand(keyEvent, outputTarget);\r\n      }\r\n\r\n      if(processor.warningLogger \u0026\u0026 this.warningLog) {\r\n        processor.warningLogger(this.warningLog);\r\n      } else if(processor.errorLogger \u0026\u0026 this.errorLog) {\r\n        processor.errorLogger(this.errorLog);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Merges default-related behaviors from another RuleBehavior into this one.  Assumes that the current instance\r\n     * \"came first\" chronologically.  Both RuleBehaviors must be sourced from the same keystroke.\r\n     *\r\n     * Intended use:  merging rule-based behavior with default key behavior during scenarios like those described\r\n     * at https://github.com/keymanapp/keyman/pull/4350#issuecomment-768753852.\r\n     *\r\n     * This function does not attempt a \"complete\" merge for two fully-constructed RuleBehaviors!  Things\r\n     * WILL break for unintended uses.\r\n     * @param other\r\n     */\r\n    mergeInDefaults(other: RuleBehavior) {\r\n      let keystroke = this.transcription.keystroke;\r\n      let keyFromOther = other.transcription.keystroke;\r\n      if(keystroke.Lcode != keyFromOther.Lcode || keystroke.Lmodifiers != keyFromOther.Lmodifiers) {\r\n        throw \"RuleBehavior default-merge not supported unless keystrokes are identical!\";\r\n      }\r\n\r\n      this.triggersDefaultCommand = this.triggersDefaultCommand || other.triggersDefaultCommand;\r\n\r\n      let mergingMock = Mock.from(this.transcription.preInput, false);\r\n      mergingMock.apply(this.transcription.transform);\r\n      mergingMock.apply(other.transcription.transform);\r\n\r\n      this.transcription = mergingMock.buildTranscriptionFrom(this.transcription.preInput, keystroke, false, this.transcription.alternates);\r\n    }\r\n  }\r\n}","// Establishes key-code definitions.\r\n/// \u003creference path=\"codes.ts\" /\u003e\r\n// Defines our generalized \"KeyEvent\" class.\r\n/// \u003creference path=\"keyEvent.ts\" /\u003e\r\n\r\nnamespace com.keyman.text {\r\n  export enum EmulationKeystrokes {\r\n    Enter = \u0027\\n\u0027,\r\n    Backspace = \u0027\\b\u0027\r\n  }\r\n\r\n  /**\r\n   * Defines a collection of static library functions that define KeymanWeb\u0027s default (implied) keyboard rule behaviors.\r\n   */\r\n  export class DefaultOutput {\r\n    private constructor() {\r\n    }\r\n\r\n    static codeForEvent(Lkc: KeyEvent) {\r\n      return Codes.keyCodes[Lkc.kName] || Lkc.Lcode;;\r\n    }\r\n\r\n    /**\r\n     * Serves as a default keycode lookup table.  This may be referenced safely by mnemonic handling without fear of side-effects.\r\n     * Also used by Processor.defaultRuleBehavior to generate output after filtering for special cases.\r\n     */\r\n    public static forAny(Lkc: KeyEvent, isMnemonic: boolean, ruleBehavior?: RuleBehavior) {\r\n      var char = \u0027\u0027;\r\n\r\n      // A pretty simple table of lookups, corresponding VERY closely to the original defaultKeyOutput.\r\n      if((char = DefaultOutput.forSpecialEmulation(Lkc, ruleBehavior)) != null) {\r\n        return char;\r\n      } else if(!isMnemonic \u0026\u0026 ((char = DefaultOutput.forNumpadKeys(Lkc, ruleBehavior)) != null)) {\r\n        return char;\r\n      } else if((char = DefaultOutput.forUnicodeKeynames(Lkc, ruleBehavior)) != null) {\r\n        return char;\r\n      } else if((char = DefaultOutput.forBaseKeys(Lkc, ruleBehavior)) != null) {\r\n        return char;\r\n      } else {\r\n        // // For headless and embeddded, we may well allow \u0027\\t\u0027.  It\u0027s DOM mode that has other uses.\r\n        // // Not originally defined for text output within defaultKeyOutput.\r\n        // // We can\u0027t enable it yet, as it\u0027ll cause hardware keystrokes in the DOM to output \u0027\\t\u0027 rather\r\n        // // than rely on the browser-default handling.\r\n        let code = DefaultOutput.codeForEvent(Lkc);\r\n        switch(code) {\r\n        //   case Codes.keyCodes[\u0027K_TAB\u0027]:\r\n        //   case Codes.keyCodes[\u0027K_TABBACK\u0027]:\r\n        //   case Codes.keyCodes[\u0027K_TABFWD\u0027]:\r\n        //     return \u0027\\t\u0027;\r\n          default:\r\n           return null;\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * isCommand - returns a boolean indicating if a non-text event should be triggered by the keystroke.\r\n     */\r\n    public static isCommand(Lkc: KeyEvent): boolean {\r\n      let code = DefaultOutput.codeForEvent(Lkc);\r\n\r\n      switch(code) {\r\n        // Should we ever implement them:\r\n        // case Codes.keyCodes[\u0027K_LEFT\u0027]:  // would not output text, but would alter the caret\u0027s position in the context.\r\n        // case Codes.keyCodes[\u0027K_RIGHT\u0027]:\r\n        //   return true;\r\n        default:\r\n          return false;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Used when a RuleBehavior represents a non-text \"command\" within the Engine.  This will generally\r\n     * trigger events that require context reset - often by moving the caret or by moving what OutputTarget\r\n     * the caret is in.  However, we let those events perform the actual context reset.\r\n     *\r\n     * Note:  is extended by DOM-aware KeymanWeb code.\r\n     */\r\n    public static applyCommand(Lkc: KeyEvent, outputTarget: OutputTarget): void {\r\n      // Notes for potential default-handling extensions:\r\n      //\r\n      // switch(code) {\r\n        // // Problem:  clusters, and doing them right.\r\n        // // The commented-out code below should be a decent starting point, but clusters make it complex.\r\n        // // Mostly based on pre-12.0 code, but the general idea should be relatively clear.\r\n        //\r\n        // case Codes.keyCodes[\u0027K_LEFT\u0027]:\r\n        //   if(touchAlias) {\r\n        //     var caretPos = keymanweb.getTextCaret(Lelem);\r\n        //     keymanweb.setTextCaret(Lelem, caretPos - 1 \u003e= 0 ? caretPos - 1 : 0);\r\n        //   }\r\n        //   break;\r\n        // case Codes.keyCodes[\u0027K_RIGHT\u0027]:\r\n        //   if(touchAlias) {\r\n        //     var caretPos = keymanweb.getTextCaret(Lelem);\r\n        //     keymanweb.setTextCaret(Lelem, caretPos + 1);\r\n        //   }\r\n        //   if(code == VisualKeyboard.keyCodes[\u0027K_RIGHT\u0027]) {\r\n        //     break;\r\n        //   }\r\n      // }\r\n      //\r\n      // Note that these would be useful even outside of a DOM context.\r\n    }\r\n\r\n    /**\r\n     * Codes matched here generally have default implementations when in a browser but require emulation\r\n     * for \u0027synthetic\u0027 `OutputTarget`s like `Mock`s, which have no default text handling.\r\n     */\r\n    public static forSpecialEmulation(Lkc: KeyEvent, ruleBehavior?: RuleBehavior): EmulationKeystrokes {\r\n      let code = DefaultOutput.codeForEvent(Lkc);\r\n\r\n      switch(code) {\r\n        case Codes.keyCodes[\u0027K_BKSP\u0027]:\r\n          return EmulationKeystrokes.Backspace;\r\n        case Codes.keyCodes[\u0027K_ENTER\u0027]:\r\n          return EmulationKeystrokes.Enter;\r\n        // case Codes.keyCodes[\u0027K_DEL\u0027]:\r\n        //   return \u0027\\u007f\u0027; // 127, ASCII / Unicode control code for DEL.\r\n        default:\r\n          return null;\r\n      }\r\n    }\r\n\r\n    // Should not be used for mnenomic keyboards.  forAny()\u0027s use of this method checks first.\r\n    public static forNumpadKeys(Lkc: KeyEvent, ruleBehavior?: RuleBehavior) {\r\n      // Translate numpad keystrokes into their non-numpad equivalents\r\n      if(Lkc.Lcode \u003e= Codes.keyCodes[\"K_NP0\"]  \u0026\u0026  Lkc.Lcode \u003c= Codes.keyCodes[\"K_NPSLASH\"]) {\r\n        // Number pad, numlock on\r\n        if(Lkc.Lcode \u003c 106) {\r\n          var Lch = Lkc.Lcode-48;\r\n        } else {\r\n          Lch = Lkc.Lcode-64;\r\n        }\r\n        let ch = String._kmwFromCharCode(Lch); //I3319\r\n        return ch;\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    // Test for fall back to U_xxxxxx key id\r\n    // For this first test, we ignore the keyCode and use the keyName\r\n    public static forUnicodeKeynames(Lkc: KeyEvent, ruleBehavior?: RuleBehavior) {\r\n      const keyName = Lkc.kName;\r\n\r\n      // Test for fall back to U_xxxxxx key id\r\n      // For this first test, we ignore the keyCode and use the keyName\r\n      if(!keyName || keyName.substr(0,2) != \u0027U_\u0027) {\r\n        return null;\r\n      }\r\n\r\n      let result = \u0027\u0027;\r\n      const codePoints = keyName.substr(2).split(\u0027_\u0027);\r\n      for(let codePoint of codePoints) {\r\n        const codePointValue = parseInt(codePoint, 16);\r\n        if (((0x0 \u003c= codePointValue) \u0026\u0026 (codePointValue \u003c= 0x1F)) || ((0x80 \u003c= codePointValue) \u0026\u0026 (codePointValue \u003c= 0x9F))) {\r\n          // Code points [U_0000 - U_001F] and [U_0080 - U_009F] refer to Unicode C0 and C1 control codes.\r\n          // Check the codePoint number and do not allow output of these codes via U_xxxxxx shortcuts.\r\n          if(ruleBehavior) {\r\n            ruleBehavior.errorLog = (\"Suppressing Unicode control code in \" + keyName);\r\n          }\r\n          // We\u0027ll attempt to add valid chars\r\n          continue;\r\n        } else {\r\n          // String.fromCharCode() is inadequate to handle the entire range of Unicode\r\n          // Someday after upgrading to ES2015, can use String.fromCodePoint()\r\n          result += String.kmwFromCharCode(codePointValue);\r\n        }\r\n      }\r\n      return result ? result : null;\r\n    }\r\n\r\n    // Test for otherwise unimplemented keys on the the base default \u0026 shift layers.\r\n    // Those keys must be blocked by keyboard rules if intentionally unimplemented; otherwise, this function will trigger.\r\n    public static forBaseKeys(Lkc: KeyEvent, ruleBehavior?: RuleBehavior) {\r\n      let n = Lkc.Lcode;\r\n      let keyShiftState = Lkc.Lmodifiers;\r\n\r\n      // check if exact match to SHIFT\u0027s code.  Only the \u0027default\u0027 and \u0027shift\u0027 layers should have default key outputs.\r\n      // TODO:  Extend to allow AltGr as well - better mnemonic support.\r\n      if(keyShiftState == Codes.modifierCodes[\u0027SHIFT\u0027]) {\r\n        keyShiftState = 1;\r\n      } else if(keyShiftState != 0) {\r\n        if(ruleBehavior) {\r\n          ruleBehavior.warningLog = \"KMW only defines default key output for the \u0027default\u0027 and \u0027shift\u0027 layers!\";\r\n        }\r\n        return null;\r\n      }\r\n\r\n      // Now that keyShiftState is either 0 or 1, we can use the following structure to determine the default output.\r\n      try {\r\n        if(n == Codes.keyCodes[\u0027K_SPACE\u0027]) {\r\n          return \u0027 \u0027;\r\n        } else if(n \u003e= Codes.keyCodes[\u0027K_0\u0027] \u0026\u0026 n \u003c= Codes.keyCodes[\u0027K_9\u0027]) { // The number keys.\r\n          return Codes.codesUS[keyShiftState][0][n-Codes.keyCodes[\u0027K_0\u0027]];\r\n        } else if(n \u003e= Codes.keyCodes[\u0027K_A\u0027] \u0026\u0026 n \u003c= Codes.keyCodes[\u0027K_Z\u0027]) { // The base letter keys\r\n          return String.fromCharCode(n+(keyShiftState?0:32));  // 32 is the offset from uppercase to lowercase.\r\n        } else if(n \u003e= Codes.keyCodes[\u0027K_COLON\u0027] \u0026\u0026 n \u003c= Codes.keyCodes[\u0027K_BKQUOTE\u0027]) {\r\n          return Codes.codesUS[keyShiftState][1][n-Codes.keyCodes[\u0027K_COLON\u0027]];\r\n        } else if(n \u003e= Codes.keyCodes[\u0027K_LBRKT\u0027] \u0026\u0026 n \u003c= Codes.keyCodes[\u0027K_QUOTE\u0027]) {\r\n          return Codes.codesUS[keyShiftState][2][n-Codes.keyCodes[\u0027K_LBRKT\u0027]];\r\n        }\r\n      } catch (e) {\r\n        if(ruleBehavior) {\r\n          ruleBehavior.errorLog = \"Error detected with default mapping for key:  code = \" + n + \", shift state = \" + (keyShiftState == 1 ? \u0027shift\u0027 : \u0027default\u0027);\r\n        }\r\n      }\r\n\r\n      return null;\r\n    }\r\n  }\r\n}\r\n","/***\r\n   KeymanWeb 10.0\r\n   Copyright 2017 SIL International\r\n***/\r\n\r\n// Relies on web-utils for version and deep-copy functionality.\r\n\r\nnamespace com.keyman.keyboards {\r\n  let Codes = com.keyman.text.Codes;\r\n\r\n  export type KLS = {[layerName: string]: string[]};\r\n\r\n  // The following types provide type definitions for the full JSON format we use for visual keyboard definitions.\r\n  export type ButtonClass = number|\"0\"|\"1\"|\"2\"|\"3\"|\"4\"|\"5\"|\"6\"|\"7\"|\"8\"|\"9\"|\"10\"\r\n\r\n  export type LayoutKey = {\r\n    \"id\"?: string,\r\n    \"text\"?: string,\r\n    \"sp\"?: ButtonClass,\r\n    \"width\"?: string,\r\n    \"layer\"?: string, // Key derives any modifiers from the value set here if specified, not the actual display layer.\r\n    \"nextlayer\"?: string,\r\n    \"pad\"?: string,\r\n    \"sk\"?: LayoutKey[]\r\n  }\r\n\r\n  export type LayoutRow = {\r\n    \"id\": string, // represents a number, though...\r\n    \"key\": LayoutKey[]\r\n  };\r\n\r\n  export type LayoutLayer = {\r\n    \"id\": string,\r\n    \"row\": LayoutRow[],\r\n\r\n    // Post-processing elements.\r\n    shiftKey?: LayoutKey,\r\n    capsKey?: LayoutKey,\r\n    numKey?: LayoutKey,\r\n    scrollKey?: LayoutKey,\r\n    aligned?: boolean\r\n  }\r\n\r\n  export type LayoutFormFactor = {\r\n    \"displayUnderlying\"?: boolean,\r\n    \"font\": string,\r\n    \"layer\": LayoutLayer[],\r\n    isDefault?: boolean\r\n  }\r\n\r\n  export type LayoutSpec = {\r\n    \"desktop\"?: LayoutFormFactor,\r\n    \"phone\"?: LayoutFormFactor,\r\n    \"tablet\"?: LayoutFormFactor\r\n  }\r\n\r\n  // This class manages default layout construction for consumption by OSKs without a specified layout.\r\n  export class Layouts {\r\n    static dfltCodes=[\r\n      \"K_BKQUOTE\",\"K_1\",\"K_2\",\"K_3\",\"K_4\",\"K_5\",\"K_6\",\"K_7\",\"K_8\",\"K_9\",\"K_0\",\r\n      \"K_HYPHEN\",\"K_EQUAL\",\"K_*\",\"K_*\",\"K_*\",\"K_Q\",\"K_W\",\"K_E\",\"K_R\",\"K_T\",\r\n      \"K_Y\",\"K_U\",\"K_I\",\"K_O\",\"K_P\",\"K_LBRKT\",\"K_RBRKT\",\"K_BKSLASH\",\"K_*\",\r\n      \"K_*\",\"K_*\",\"K_A\",\"K_S\",\"K_D\",\"K_F\",\"K_G\",\"K_H\",\"K_J\",\"K_K\",\"K_L\",\r\n      \"K_COLON\",\"K_QUOTE\",\"K_*\",\"K_*\",\"K_*\",\"K_*\",\"K_*\",\"K_oE2\",\r\n      \"K_Z\",\"K_X\",\"K_C\",\"K_V\",\"K_B\",\"K_N\",\"K_M\",\"K_COMMA\",\"K_PERIOD\",\r\n      \"K_SLASH\",\"K_*\",\"K_*\",\"K_*\",\"K_*\",\"K_*\",\"K_SPACE\"\r\n    ];\r\n\r\n    static dfltText=\u0027`1234567890-=\\xA7~~qwertyuiop[]\\\\~~~asdfghjkl;\\\u0027~~~~~?zxcvbnm,./~~~~~ \u0027\r\n      +\u0027~!@#$%^\u0026*()_+\\xA7~~QWERTYUIOP{}\\\\~~~ASDFGHJKL:\"~~~~~?ZXCVBNM\u003c\u003e?~~~~~ \u0027;\r\n\r\n    static readonly DEFAULT_RAW_SPEC = {\u0027F\u0027:\u0027Tahoma\u0027, \u0027BK\u0027: Layouts.dfltText};\r\n\r\n    // Cross-reference with the ids in osk.setButtonClass.\r\n    static buttonClasses: {[name: string]: ButtonClass} = {\r\n      \u0027DEFAULT\u0027:\u00270\u0027,\r\n      \u0027SHIFT\u0027:\u00271\u0027,\r\n      \u0027SHIFT-ON\u0027:\u00272\u0027,\r\n      \u0027SPECIAL\u0027:\u00273\u0027,\r\n      \u0027SPECIAL-ON\u0027:\u00274\u0027,\r\n      \u0027DEADKEY\u0027:\u00278\u0027,\r\n      \u0027BLANK\u0027:\u00279\u0027,\r\n      \u0027HIDDEN\u0027:\u002710\u0027\r\n    };\r\n\r\n    static modifierSpecials = {\r\n      \u0027leftalt\u0027: \u0027*LAlt*\u0027,\r\n      \u0027rightalt\u0027: \u0027*RAlt*\u0027,\r\n      \u0027alt\u0027: \u0027*Alt*\u0027,\r\n      \u0027leftctrl\u0027: \u0027*LCtrl*\u0027,\r\n      \u0027rightctrl\u0027: \u0027*RCtrl*\u0027,\r\n      \u0027ctrl\u0027: \u0027*Ctrl*\u0027,\r\n      \u0027ctrl-alt\u0027: \u0027*AltGr*\u0027,\r\n      \u0027leftctrl-leftalt\u0027: \u0027*LAltCtrl*\u0027,\r\n      \u0027rightctrl-rightalt\u0027: \u0027*RAltCtrl*\u0027,\r\n      \u0027leftctrl-leftalt-shift\u0027: \u0027*LAltCtrlShift*\u0027,\r\n      \u0027rightctrl-rightalt-shift\u0027: \u0027*RAltCtrlShift*\u0027,\r\n      \u0027shift\u0027: \u0027*Shift*\u0027,\r\n      \u0027shift-alt\u0027: \u0027*AltShift*\u0027,\r\n      \u0027shift-ctrl\u0027: \u0027*CtrlShift*\u0027,\r\n      \u0027shift-ctrl-alt\u0027: \u0027*AltCtrlShift*\u0027,\r\n      \u0027leftalt-shift\u0027: \u0027*LAltShift*\u0027,\r\n      \u0027rightalt-shift\u0027: \u0027*RAltShift*\u0027,\r\n      \u0027leftctrl-shift\u0027: \u0027*LCtrlShift*\u0027,\r\n      \u0027rightctrl-shift\u0027: \u0027*RCtrlShift*\u0027\r\n    };\r\n\r\n    /**\r\n    * Build a default layout for keyboards with no explicit layout\r\n    *\r\n    * @param   {Object}  PVK         raw specifications\r\n    * @param   {Keyboard} keyboard   keyboard object (as loaded)\r\n    * @param   {string} formFactor   (really utils.FormFactor)\r\n    * @return  {LayoutFormFactor}\r\n    */\r\n    static buildDefaultLayout(PVK, keyboard: Keyboard, formFactor: string): LayoutFormFactor {\r\n      // Build a layout using the default for the device\r\n      var layoutType=formFactor;\r\n\r\n      if(typeof Layouts.dfltLayout[layoutType] != \u0027object\u0027) {\r\n        layoutType = \u0027desktop\u0027;\r\n      }\r\n\r\n      let kbdBitmask = Codes.modifierBitmasks[\u0027NON_CHIRAL\u0027];\r\n      // An unfortunate dependency there.  Should probably also set a version within web-core for use.\r\n      let kbdDevVersion = utils.Version.CURRENT;\r\n      if(keyboard) {\r\n        kbdBitmask = keyboard.modifierBitmask;\r\n        kbdDevVersion = keyboard.compilerVersion;\r\n      }\r\n\r\n      if(!PVK) {\r\n        PVK = this.DEFAULT_RAW_SPEC;\r\n      }\r\n\r\n      // Clone the default layout object for this device\r\n      var layout: LayoutFormFactor = utils.deepCopy(Layouts.dfltLayout[layoutType]);\r\n\r\n      var n,layers=layout[\u0027layer\u0027], keyLabels: KLS=PVK[\u0027KLS\u0027], key102=PVK[\u0027K102\u0027];\r\n      var i, j, k, m, row, rows: LayoutRow[], key: LayoutKey, keys: LayoutKey[];\r\n      var chiral: boolean = (kbdBitmask \u0026 Codes.modifierBitmasks.IS_CHIRAL) != 0;\r\n\r\n      if(PVK[\u0027F\u0027]) {\r\n        // The KeymanWeb compiler generates a string of the format `[italic ][bold ] 1em \"\u003cfont\u003e\"`\r\n        // We will ignore the bold, italic and font size spec\r\n        let legacyFontSpec = /^(?:(?:italic|bold) )* *[0-9.eE-]+(?:[a-z]+) \"(.+)\"$/.exec(PVK[\u0027F\u0027]);\r\n        if(legacyFontSpec) {\r\n          layout.font = legacyFontSpec[1];\r\n        }\r\n      }\r\n\r\n      var kmw10Plus = !(typeof keyLabels == \u0027undefined\u0027 || !keyLabels);\r\n      if(!kmw10Plus) {\r\n        // Save the processed key label information to the keyboard\u0027s general data.\r\n        // Makes things more efficient elsewhere and for reloading after keyboard swaps.\r\n        keyLabels = PVK[\u0027KLS\u0027] = Layouts.processLegacyDefinitions(PVK[\u0027BK\u0027]);\r\n      }\r\n\r\n      // Identify key labels (e.g. *Shift*) that require the special OSK font\r\n      var specialLabel=/\\*\\w+\\*/;\r\n\r\n      // *** Step 1:  instantiate the layer objects. ***\r\n\r\n      // Get the list of valid layers, enforcing that the \u0027default\u0027 layer must be the first one processed.\r\n      var validIdList = Object.getOwnPropertyNames(keyLabels), invalidIdList = [];\r\n      validIdList.splice(validIdList.indexOf(\u0027default\u0027), 1);\r\n      validIdList = [ \u0027default\u0027 ].concat(validIdList);\r\n\r\n      // Automatic AltGr emulation if the \u0027leftctrl-leftalt\u0027 layer is otherwise undefined.\r\n      if(keyboard \u0026\u0026 keyboard.emulatesAltGr) {\r\n        // We insert only the layers that need to be emulated.\r\n        if((validIdList.indexOf(\u0027leftctrl-leftalt\u0027) == -1) \u0026\u0026 validIdList.indexOf(\u0027rightalt\u0027) != -1) {\r\n          validIdList.push(\u0027leftctrl-leftalt\u0027);\r\n          keyLabels[\u0027leftctrl-leftalt\u0027] = keyLabels[\u0027rightalt\u0027];\r\n        }\r\n\r\n        if((validIdList.indexOf(\u0027leftctrl-leftalt-shift\u0027) == -1) \u0026\u0026 validIdList.indexOf(\u0027rightalt-shift\u0027) != -1) {\r\n          validIdList.push(\u0027leftctrl-leftalt-shift\u0027);\r\n          keyLabels[\u0027leftctrl-leftalt-shift\u0027] = keyLabels[\u0027rightalt-shift\u0027];\r\n        }\r\n      }\r\n\r\n      // If there is no predefined layout, even touch layouts will follow the desktop\u0027s\r\n      // setting for the displayUnderlying flag.  As the desktop layout uses a different\r\n      // format for its layout spec, that\u0027s found at the field referenced below.\r\n      layout[\"displayUnderlying\"] = keyboard ? !!keyboard.scriptObject[\u0027KDU\u0027] : false;\r\n\r\n      // For desktop devices, we must create all layers, even if invalid.\r\n      if(formFactor == \u0027desktop\u0027) {\r\n        invalidIdList = Layouts.generateLayerIds(chiral);\r\n\r\n        // Filter out all ids considered valid.  (We also don\u0027t want duplicates in the following list...)\r\n        for(n=0; n\u003cinvalidIdList.length; n++) {\r\n          if(validIdList.indexOf(invalidIdList[n]) != -1) {\r\n            invalidIdList.splice(n--, 1);\r\n          }\r\n        }\r\n      }\r\n\r\n      // This ensures all \u0027valid\u0027 layers are at the front of the layer array and managed by the main loop below.\r\n      // \u0027invalid\u0027 layers aren\u0027t handled by the loop and thus remain blank after it.\r\n      var idList = validIdList.concat(invalidIdList);\r\n\r\n      if(kmw10Plus \u0026\u0026 formFactor != \u0027desktop\u0027) { // KLS exists, so we know the exact layer set.\r\n        // Find the SHIFT key...\r\n        var shiftKey: LayoutKey = null;\r\n\r\n        rows = layers[0][\u0027row\u0027];\r\n        for(var r=0; r \u003c rows.length; r++) {\r\n          keys = rows[r][\u0027key\u0027];\r\n          for(var c=0; c \u003c keys.length; c++) {\r\n            key = keys[c];\r\n            if(key[\u0027id\u0027] == \u0027K_SHIFT\u0027) {\r\n              shiftKey = key;\r\n            }\r\n          }\r\n        }\r\n\r\n        if(shiftKey) {\r\n          // Erase the legacy shifted subkey array.\r\n          shiftKey[\u0027sk\u0027] = [];\r\n\r\n          for(var layerID in keyLabels) {\r\n            if(layerID == \u0027default\u0027 || layerID == \u0027shift\u0027) {\r\n              // These two are accessible from the layer without subkeys.\r\n              continue;\r\n            }\r\n\r\n            // Create a new subkey for the specified layer so that it will be accessible via OSK.\r\n            var specialChar = Layouts.modifierSpecials[layerID];\r\n            let subkey: LayoutKey = {\r\n              id: \"K_\" + specialChar,\r\n              text: specialChar,\r\n              sp: \"1\",\r\n              nextlayer: layerID\r\n            }\r\n            shiftKey[\u0027sk\u0027].push(subkey);\r\n          }\r\n        } else {\r\n          // Seriously, this should never happen.  It\u0027s here for the debugging log only.\r\n          console.warn(\"Error in default layout - cannot find default Shift key!\");\r\n        }\r\n      }\r\n\r\n      for(n=0; n\u003cidList.length; n++) {\r\n        // Populate non-default (shifted) keygroups\r\n        if(n \u003e 0) {\r\n          layers[n]=utils.deepCopy(layers[0]);\r\n        }\r\n        layers[n][\u0027id\u0027]=idList[n];\r\n        layers[n][\u0027nextlayer\u0027]=idList[n]; // This would only be different for a dynamic keyboard\r\n\r\n        // Extraced into a helper method to improve readability.\r\n        Layouts.formatDefaultLayer(layers[n], chiral, formFactor, !!key102);\r\n      }\r\n\r\n      // *** Step 2: Layer objects now exist; time to fill them with the appropriate key labels and key styles ***\r\n      for(n=0; n\u003clayers.length; n++) {\r\n        var layer=layers[n], kx, shiftKey: LayoutKey = null, nextKey=null, allText=\u0027\u0027;\r\n        var capsKey: LayoutKey = null, numKey: LayoutKey = null, scrollKey: LayoutKey = null;  // null if not in the OSK layout.\r\n        var layerSpec = keyLabels[layer[\u0027id\u0027]];\r\n        var isShift = layer[\u0027id\u0027] == \u0027shift\u0027 ? 1 : 0;\r\n        var isDefault = layer[\u0027id\u0027] == \u0027default\u0027 || isShift ? 1 : 0;\r\n\r\n        rows=layer[\u0027row\u0027];\r\n        for(i=0; i\u003crows.length; i++) {\r\n          keys=rows[i][\u0027key\u0027];\r\n          for(j=0; j\u003ckeys.length; j++) {\r\n            key=keys[j];\r\n            kx=Layouts.dfltCodes.indexOf(key[\u0027id\u0027]);\r\n\r\n            // Only create keys for defined layers.  (\u0027default\u0027 and \u0027shift\u0027 are always defined.)\r\n            if(layerSpec || isDefault) {\r\n              // Get keycap text from visual keyboard array, if defined in keyboard\r\n              if(layerSpec) {\r\n                if(kx \u003e= 0 \u0026\u0026 kx \u003c layerSpec.length) key[\u0027text\u0027]=layerSpec[kx];\r\n              }\r\n\r\n              // Legacy (pre 12.0) behavior:  fall back to US English keycap text as default for the base two layers\r\n              // if a key cap is not otherwise defined. (Any intentional \u0027ghost\u0027 keys must be explicitly defined.)\r\n              if(isDefault \u0026\u0026 kbdDevVersion.precedes(utils.Version.NO_DEFAULT_KEYCAPS)) {\r\n                if(key[\u0027id\u0027] != \u0027K_SPACE\u0027 \u0026\u0026 kx+65 * isShift \u003c Layouts.dfltText.length \u0026\u0026 key[\u0027text\u0027] !== null) {\r\n                  key[\u0027text\u0027] = key[\u0027text\u0027] || Layouts.dfltText[kx+65*isShift];\r\n                }\r\n              }\r\n            }\r\n\r\n            // Leave any unmarked key caps as null strings\r\n            if(key[\u0027text\u0027] !== null) {\r\n              key[\u0027text\u0027] = key[\u0027text\u0027] || \u0027\u0027;\r\n            }\r\n\r\n            // Detect important tracking keys.\r\n            switch(key[\u0027id\u0027]) {\r\n              case \"K_SHIFT\":\r\n                shiftKey=key;\r\n                break;\r\n              case \"K_TAB\":\r\n                nextKey=key;\r\n                break;\r\n              case \"K_CAPS\":\r\n                capsKey=key;\r\n                break;\r\n              case \"K_NUMLOCK\":\r\n                numKey=key;\r\n                break;\r\n              case \"K_SCROLL\":\r\n                scrollKey=key;\r\n                break;\r\n            }\r\n\r\n            // Remove pop-up shift keys referencing invalid layers (Build 349)\r\n            if(key[\u0027sk\u0027] != null) {\r\n              for(k=0; k\u003ckey[\u0027sk\u0027].length; k++) {\r\n                if(validIdList.indexOf(key[\u0027sk\u0027][k][\u0027nextlayer\u0027]) == -1) {\r\n                  key[\u0027sk\u0027].splice(k--, 1);\r\n                }\r\n              }\r\n\r\n              if(key[\u0027sk\u0027].length == 0) {\r\n                key[\u0027sk\u0027]=null;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // We\u0027re done with the layer keys initialization pass.  Time to do post-analysis layer-level init where necessary.\r\n        layer.shiftKey=shiftKey;\r\n        layer.capsKey=capsKey;\r\n        layer.numKey=numKey;\r\n        layer.scrollKey=scrollKey;\r\n\r\n        // Set modifier key appearance and behaviour for non-desktop devices using the default layout\r\n        if(formFactor != \u0027desktop\u0027) {\r\n          if(n \u003e 0 \u0026\u0026 shiftKey != null) {\r\n            shiftKey[\u0027sp\u0027]=Layouts.buttonClasses[\u0027SHIFT-ON\u0027];\r\n            shiftKey[\u0027sk\u0027]=null;\r\n            shiftKey[\u0027text\u0027] = Layouts.modifierSpecials[layers[n].id] ? Layouts.modifierSpecials[layers[n].id] : \"*Shift*\";\r\n          }\r\n        }\r\n      }\r\n\r\n      return layout;\r\n    }\r\n\r\n        /**\r\n     * Function     getLayerId\r\n     * Scope        Private\r\n     * @param       {number}      m     shift modifier code\r\n     * @return      {string}            layer string from shift modifier code (desktop keyboards)\r\n     * Description  Get name of layer from code, where the modifer order is determined by ascending bit-flag value.\r\n     */\r\n    static getLayerId(m: number): string {\r\n      let modifierCodes = Codes.modifierCodes;\r\n\r\n      var s=\u0027\u0027;\r\n      if(m == 0) {\r\n        return \u0027default\u0027;\r\n      } else {\r\n        if(m \u0026 modifierCodes[\u0027LCTRL\u0027]) {\r\n          s = (s.length \u003e 0 ? s + \u0027-\u0027 : \u0027\u0027) + \u0027leftctrl\u0027;\r\n        }\r\n        if(m \u0026 modifierCodes[\u0027RCTRL\u0027]) {\r\n          s = (s.length \u003e 0 ? s + \u0027-\u0027 : \u0027\u0027) + \u0027rightctrl\u0027;\r\n        }\r\n        if(m \u0026 modifierCodes[\u0027LALT\u0027]) {\r\n          s = (s.length \u003e 0 ? s + \u0027-\u0027 : \u0027\u0027) + \u0027leftalt\u0027;\r\n        }\r\n        if(m \u0026 modifierCodes[\u0027RALT\u0027]) {\r\n          s = (s.length \u003e 0 ? s + \u0027-\u0027 : \u0027\u0027) + \u0027rightalt\u0027;\r\n        }\r\n        if(m \u0026 modifierCodes[\u0027SHIFT\u0027]) {\r\n          s = (s.length \u003e 0 ? s + \u0027-\u0027 : \u0027\u0027) + \u0027shift\u0027;\r\n        }\r\n        if(m \u0026 modifierCodes[\u0027CTRL\u0027]) {\r\n          s = (s.length \u003e 0 ? s + \u0027-\u0027 : \u0027\u0027) + \u0027ctrl\u0027;\r\n        }\r\n        if(m \u0026 modifierCodes[\u0027ALT\u0027]) {\r\n          s = (s.length \u003e 0 ? s + \u0027-\u0027 : \u0027\u0027) + \u0027alt\u0027;\r\n        }\r\n        return s;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Generates a list of potential layer ids for the specified chirality mode.\r\n     *\r\n     * @param   {boolean}   chiral    // Does the keyboard use chiral modifiers or not?\r\n     */\r\n    static generateLayerIds(chiral: boolean): string[] {\r\n      var layerCnt, offset;\r\n\r\n      if(chiral) {\r\n        layerCnt=32;\r\n        offset=0x01;\r\n      } else {\r\n        layerCnt=8;\r\n        offset=0x10;\r\n      }\r\n\r\n      var layerIds = [];\r\n\r\n      for(var i=0; i \u003c layerCnt; i++) {\r\n        layerIds.push(Layouts.getLayerId(i * offset));\r\n      }\r\n\r\n      return layerIds;\r\n    }\r\n\r\n    /**\r\n     * Sets a formatting property for the modifier keys when constructing a default layout for a keyboard.\r\n     *\r\n     * @param   {Object}    layer   // One layer specification\r\n     * @param   {boolean}   chiral  // Whether or not the keyboard uses chiral modifier information.\r\n     * @param   {string}    formFactor  // The form factor of the device the layout is being constructed for.\r\n     * @param   {boolean}   key102      // Whether or not the extended key 102 should be hidden.\r\n     */\r\n    static formatDefaultLayer(layer: LayoutLayer, chiral: boolean, formFactor: string, key102: boolean) {\r\n      var layerId = layer[\u0027id\u0027];\r\n      let buttonClasses = Layouts.buttonClasses;\r\n\r\n      // Correct appearance of state-dependent modifier keys according to group\r\n      for(var i=0; i\u003clayer[\u0027row\u0027].length; i++) {\r\n        var row=layer[\u0027row\u0027][i];\r\n        var keys=row[\u0027key\u0027];\r\n        for(var j=0; j\u003ckeys.length; j++) {\r\n          var key=keys[j];\r\n          switch(key[\u0027id\u0027]) {\r\n            case \u0027K_SHIFT\u0027:\r\n            case \u0027K_LSHIFT\u0027:\r\n            case \u0027K_RSHIFT\u0027:\r\n              if(layerId.indexOf(\u0027shift\u0027) != -1) {\r\n                key[\u0027sp\u0027] = buttonClasses[\u0027SHIFT-ON\u0027];\r\n              }\r\n              if(formFactor != \u0027desktop\u0027) {\r\n                if(layerId != \u0027default\u0027) {\r\n                  key[\u0027nextlayer\u0027]=\u0027default\u0027;\r\n                } else {\r\n                  key[\u0027nextlayer\u0027]=\u0027shift\u0027;\r\n                }\r\n              }\r\n              break;\r\n            case \u0027K_LCTRL\u0027:\r\n            case \u0027K_LCONTROL\u0027:\r\n              if(chiral) {\r\n                if(layerId.indexOf(\u0027leftctrl\u0027) != -1) {\r\n                  key[\u0027sp\u0027] = buttonClasses[\u0027SHIFT-ON\u0027];\r\n                }\r\n                break;\r\n              }\r\n            case \u0027K_RCTRL\u0027:\r\n            case \u0027K_RCONTROL\u0027:\r\n              if(chiral) {\r\n                if(layerId.indexOf(\u0027rightctrl\u0027) != -1) {\r\n                  key[\u0027sp\u0027] = buttonClasses[\u0027SHIFT-ON\u0027];\r\n                }\r\n                break;\r\n              }\r\n            case \u0027K_CONTROL\u0027:\r\n              if(layerId.indexOf(\u0027ctrl\u0027) != -1) {\r\n                if(!chiral || (layerId.indexOf(\u0027leftctrl\u0027) != -1 \u0026\u0026 layerId.indexOf(\u0027rightctrl\u0027) != -1)) {\r\n                  key[\u0027sp\u0027] = buttonClasses[\u0027SHIFT-ON\u0027];\r\n                }\r\n              }\r\n              break;\r\n            case \u0027K_LALT\u0027:\r\n              if(chiral) {\r\n                if(layerId.indexOf(\u0027leftalt\u0027) != -1) {\r\n                  key[\u0027sp\u0027] = buttonClasses[\u0027SHIFT-ON\u0027];\r\n                }\r\n                break;\r\n              }\r\n            case \u0027K_RALT\u0027:\r\n              if(chiral) {\r\n                if(layerId.indexOf(\u0027rightalt\u0027) != -1) {\r\n                  key[\u0027sp\u0027] = buttonClasses[\u0027SHIFT-ON\u0027];\r\n                }\r\n                break;\r\n              }\r\n            case \u0027K_ALT\u0027:\r\n              if(layerId.indexOf(\u0027alt\u0027) != -1) {\r\n                if(!chiral || (layerId.indexOf(\u0027leftalt\u0027) != -1 \u0026\u0026 layerId.indexOf(\u0027rightalt\u0027) != -1)) {\r\n                  key[\u0027sp\u0027] = buttonClasses[\u0027SHIFT-ON\u0027];\r\n                }\r\n              }\r\n              break;\r\n            case \u0027K_oE2\u0027:\r\n              if(typeof key102 == \u0027undefined\u0027 || !key102) {\r\n                if(formFactor == \u0027desktop\u0027) {\r\n                  keys.splice(j--, 1);\r\n                  keys[0][\u0027width\u0027]=\u0027200\u0027;\r\n                } else {\r\n                  keys[j][\u0027sp\u0027]=buttonClasses[\u0027HIDDEN\u0027];\r\n                }\r\n              }\r\n              break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Converts the legacy BK property from pre 10.0 into the KLS keyboard layer spec format,\r\n     * sparsifying it as possible to pre-emptively check invalid layers.\r\n     *\r\n     * @param   {Array}   BK      keyboard object (as loaded)\r\n     * @return  {Object}\r\n     */\r\n    static processLegacyDefinitions(BK: string[]): KLS {\r\n      //[\u0027default\u0027,\u0027shift\u0027,\u0027ctrl\u0027,\u0027shiftctrl\u0027,\u0027alt\u0027,\u0027shiftalt\u0027,\u0027ctrlalt\u0027,\u0027shiftctrlalt\u0027];\r\n      var idList=Layouts.generateLayerIds(false); // Non-chiral.\r\n\r\n      var KLS: KLS = {};\r\n\r\n      // The old default:  eight auto-managed layers...\r\n      for(var n=0; n\u003cidList.length; n++) {\r\n        var id = idList[n], arr = [], valid = false;\r\n\r\n        // ... with keycode mappings in blocks of 65.\r\n        for(var k=0; k \u003c 65; k++) {\r\n          var index = k + 65 * n;\r\n          arr.push(BK[index]);\r\n\r\n          // The entry for K_SPACE\u0027s keycode tends to hold \u0027 \u0027 instead of \u0027\u0027, which causes\r\n          // the whole layer to be treated as \u0027valid\u0027 if not included in the conditional.\r\n          if(index \u003c BK.length \u0026\u0026 BK[index] != \u0027\u0027 \u0026\u0026 k != Layouts.dfltCodes.indexOf(\u0027K_SPACE\u0027)) {\r\n            valid = true;\r\n          }\r\n        }\r\n\r\n        if(valid) {\r\n          KLS[id] = arr;\r\n        }\r\n      }\r\n\r\n      // There must always be at least a plain \u0027default\u0027 layer.  Array(65).fill(\u0027\u0027) would be preferable but isn\u0027t supported on IE,\r\n      // but buildDefaultLayer will set the defaults for these layers if no entry exists for them in the array due to length.\r\n      if(typeof KLS[\u0027default\u0027] == \u0027undefined\u0027 || ! KLS[\u0027default\u0027]) {\r\n        KLS[\u0027default\u0027] = [\u0027\u0027];\r\n      }\r\n\r\n      // There must always be at least a plain \u0027shift\u0027 layer.\r\n      if(typeof KLS[\u0027shift\u0027] == \u0027undefined\u0027 || ! KLS[\u0027shift\u0027]) {\r\n        KLS[\u0027shift\u0027] = [\u0027\u0027];\r\n      }\r\n\r\n      return KLS;\r\n    }\r\n\r\n    // Defines the default visual layout for a keyboard.\r\n    static dfltLayout: LayoutSpec = {\r\n        \"desktop\":\r\n        {\r\n            \"font\": \"Tahoma,Helvetica\",\r\n            \"layer\": [\r\n                {\r\n                    \"id\": \"default\",\r\n                    \"row\": [\r\n                        {\r\n                            \"id\": \"1\",\r\n                            \"key\": [\r\n                                { \"id\": \"K_BKQUOTE\" },\r\n                                { \"id\": \"K_1\" },\r\n                                { \"id\": \"K_2\" },\r\n                                { \"id\": \"K_3\" },\r\n                                { \"id\": \"K_4\" },\r\n                                { \"id\": \"K_5\" },\r\n                                { \"id\": \"K_6\" },\r\n                                { \"id\": \"K_7\" },\r\n                                { \"id\": \"K_8\" },\r\n                                { \"id\": \"K_9\" },\r\n                                { \"id\": \"K_0\" },\r\n                                { \"id\": \"K_HYPHEN\" },\r\n                                { \"id\": \"K_EQUAL\" },\r\n                                { \"id\": \"K_BKSP\", \"text\": \"*BkSp*\", \"sp\": \"1\", \"width\": \"130\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"id\": \"2\",\r\n                            \"key\": [\r\n                                { \"id\": \"K_TAB\", \"text\": \"*Tab*\", \"sp\": \"1\", \"width\": \"130\" },\r\n                                { \"id\": \"K_Q\" },\r\n                                { \"id\": \"K_W\" },\r\n                                { \"id\": \"K_E\" },\r\n                                { \"id\": \"K_R\" },\r\n                                { \"id\": \"K_T\" },\r\n                                { \"id\": \"K_Y\" },\r\n                                { \"id\": \"K_U\" },\r\n                                { \"id\": \"K_I\" },\r\n                                { \"id\": \"K_O\" },\r\n                                { \"id\": \"K_P\" },\r\n                                { \"id\": \"K_LBRKT\" },\r\n                                { \"id\": \"K_RBRKT\" },\r\n                                { \"id\": \"K_BKSLASH\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"id\": \"3\",\r\n                            \"key\": [\r\n                                { \"id\": \"K_CAPS\", \"text\": \"*Caps*\", \"sp\": \"1\", \"width\": \"165\" },\r\n                                { \"id\": \"K_A\" },\r\n                                { \"id\": \"K_S\" },\r\n                                { \"id\": \"K_D\" },\r\n                                { \"id\": \"K_F\" },\r\n                                { \"id\": \"K_G\" },\r\n                                { \"id\": \"K_H\" },\r\n                                { \"id\": \"K_J\" },\r\n                                { \"id\": \"K_K\" },\r\n                                { \"id\": \"K_L\" },\r\n                                { \"id\": \"K_COLON\" },\r\n                                { \"id\": \"K_QUOTE\" },\r\n                                { \"id\": \"K_ENTER\", \"text\": \"*Enter*\", \"sp\": \"1\", \"width\": \"165\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"id\": \"4\",\r\n                            \"key\": [\r\n                                { \"id\": \"K_SHIFT\", \"text\": \"*Shift*\", \"sp\": \"1\", \"width\": \"130\" },\r\n                                { \"id\": \"K_oE2\" },\r\n                                { \"id\": \"K_Z\" },\r\n                                { \"id\": \"K_X\" },\r\n                                { \"id\": \"K_C\" },\r\n                                { \"id\": \"K_V\" },\r\n                                { \"id\": \"K_B\" },\r\n                                { \"id\": \"K_N\" },\r\n                                { \"id\": \"K_M\" },\r\n                                { \"id\": \"K_COMMA\" },\r\n                                { \"id\": \"K_PERIOD\" },\r\n                                { \"id\": \"K_SLASH\" },\r\n                                { \"id\": \"K_RSHIFT\", \"text\": \"*Shift*\", \"sp\": \"1\", \"width\": \"130\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"id\": \"5\",\r\n                            \"key\": [\r\n                                { \"id\": \"K_LCONTROL\", \"text\": \"*Ctrl*\", \"sp\": \"1\", \"width\": \"170\" },\r\n                                { \"id\": \"K_LALT\", \"text\": \"*Alt*\", \"sp\": \"1\", \"width\": \"160\" },\r\n                                { \"id\": \"K_SPACE\", \"text\": \"\", \"width\": \"770\" },\r\n                                { \"id\": \"K_RALT\", \"text\": \"*Alt*\", \"sp\": \"1\", \"width\": \"160\" },\r\n                                { \"id\": \"K_RCONTROL\", \"text\": \"*Ctrl*\", \"sp\": \"1\", \"width\": \"170\" }\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        \"tablet\":\r\n        {\r\n            \"font\": \"Tahoma,Helvetica\",\r\n            \"layer\": [\r\n                {\r\n                    \"id\": \"default\",\r\n                    \"row\": [\r\n                        {\r\n                            \"id\": \"0\",\r\n                            \"key\": [\r\n                                { \"id\": \"K_1\" },\r\n                                { \"id\": \"K_2\" },\r\n                                { \"id\": \"K_3\" },\r\n                                { \"id\": \"K_4\" },\r\n                                { \"id\": \"K_5\" },\r\n                                { \"id\": \"K_6\" },\r\n                                { \"id\": \"K_7\" },\r\n                                { \"id\": \"K_8\" },\r\n                                { \"id\": \"K_9\" },\r\n                                { \"id\": \"K_0\" },\r\n                                { \"id\": \"K_HYPHEN\" },\r\n                                { \"id\": \"K_EQUAL\" },\r\n                                { \"sp\": \"10\", \"width\": \"1\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"id\": \"1\",\r\n                            \"key\": [\r\n                                { \"id\": \"K_Q\", \"pad\": \"25\" },\r\n                                { \"id\": \"K_W\" },\r\n                                { \"id\": \"K_E\" },\r\n                                { \"id\": \"K_R\" },\r\n                                { \"id\": \"K_T\" },\r\n                                { \"id\": \"K_Y\" },\r\n                                { \"id\": \"K_U\" },\r\n                                { \"id\": \"K_I\" },\r\n                                { \"id\": \"K_O\" },\r\n                                { \"id\": \"K_P\" },\r\n                                { \"id\": \"K_LBRKT\" },\r\n                                { \"id\": \"K_RBRKT\" },\r\n                                { \"sp\": \"10\", \"width\": \"1\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"id\": \"2\",\r\n                            \"key\": [\r\n                                { \"id\": \"K_A\", \"pad\": \"50\" },\r\n                                { \"id\": \"K_S\" },\r\n                                { \"id\": \"K_D\" },\r\n                                { \"id\": \"K_F\" },\r\n                                { \"id\": \"K_G\" },\r\n                                { \"id\": \"K_H\" },\r\n                                { \"id\": \"K_J\" },\r\n                                { \"id\": \"K_K\" },\r\n                                { \"id\": \"K_L\" },\r\n                                { \"id\": \"K_COLON\" },\r\n                                { \"id\": \"K_QUOTE\" },\r\n                                { \"id\": \"K_BKSLASH\", \"width\": \"90\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"id\": \"3\",\r\n                            \"key\": [\r\n                                { \"id\": \"K_oE2\", \"width\": \"90\" },\r\n                                { \"id\": \"K_Z\" },\r\n                                { \"id\": \"K_X\" },\r\n                                { \"id\": \"K_C\" },\r\n                                { \"id\": \"K_V\" },\r\n                                { \"id\": \"K_B\" },\r\n                                { \"id\": \"K_N\" },\r\n                                { \"id\": \"K_M\" },\r\n                                { \"id\": \"K_COMMA\" },\r\n                                { \"id\": \"K_PERIOD\" },\r\n                                { \"id\": \"K_SLASH\" },\r\n                                { \"id\": \"K_BKQUOTE\" },\r\n                                { \"sp\": \"10\", \"width\": \"1\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"id\": \"4\",\r\n                            \"key\": [\r\n                                {\r\n                                    \"id\": \"K_SHIFT\", \"text\": \"*Shift*\", \"sp\": \"1\", \"width\": \"200\", \"sk\": [\r\n                                        { \"id\": \"K_LCONTROL\", \"text\": \"*Ctrl*\", \"sp\": \"1\", \"width\": \"50\", \"nextlayer\": \"ctrl\" },\r\n                                        { \"id\": \"K_LCONTROL\", \"text\": \"*LCtrl*\", \"sp\": \"1\", \"width\": \"50\", \"nextlayer\": \"leftctrl\" },\r\n                                        { \"id\": \"K_RCONTROL\", \"text\": \"*RCtrl*\", \"sp\": \"1\", \"width\": \"50\", \"nextlayer\": \"rightctrl\" },\r\n                                        { \"id\": \"K_LALT\", \"text\": \"*Alt*\", \"sp\": \"1\", \"width\": \"50\", \"nextlayer\": \"alt\" },\r\n                                        { \"id\": \"K_LALT\", \"text\": \"*LAlt*\", \"sp\": \"1\", \"width\": \"50\", \"nextlayer\": \"leftalt\" },\r\n                                        { \"id\": \"K_RALT\", \"text\": \"*RAlt*\", \"sp\": \"1\", \"width\": \"50\", \"nextlayer\": \"rightalt\" },\r\n                                        { \"id\": \"K_ALTGR\", \"text\": \"*AltGr*\", \"sp\": \"1\", \"width\": \"50\", \"nextlayer\": \"ctrl-alt\" }]\r\n                                },\r\n                                { \"id\": \"K_LOPT\", \"text\": \"*Menu*\", \"sp\": \"1\", \"width\": \"150\" },\r\n                                { \"id\": \"K_SPACE\", \"text\": \"\", \"width\": \"570\" },\r\n                                { \"id\": \"K_BKSP\", \"text\": \"*BkSp*\", \"sp\": \"1\", \"width\": \"150\" },\r\n                                { \"id\": \"K_ENTER\", \"text\": \"*Enter*\", \"sp\": \"1\", \"width\": \"200\" }\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        \"phone\":\r\n        {\r\n            \"font\": \"Tahoma,Helvetica\",\r\n            \"layer\": [\r\n                {\r\n                    \"id\": \"default\",\r\n                    \"row\": [\r\n                        {\r\n                            \"id\": \"0\",\r\n                            \"key\": [\r\n                                { \"id\": \"K_1\" },\r\n                                { \"id\": \"K_2\" },\r\n                                { \"id\": \"K_3\" },\r\n                                { \"id\": \"K_4\" },\r\n                                { \"id\": \"K_5\" },\r\n                                { \"id\": \"K_6\" },\r\n                                { \"id\": \"K_7\" },\r\n                                { \"id\": \"K_8\" },\r\n                                { \"id\": \"K_9\" },\r\n                                { \"id\": \"K_0\" },\r\n                                { \"id\": \"K_HYPHEN\" },\r\n                                { \"id\": \"K_EQUAL\" },\r\n                                { \"sp\": \"10\", \"width\": \"1\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"id\": \"1\",\r\n                            \"key\": [\r\n                                { \"id\": \"K_Q\", \"pad\": \"25\" },\r\n                                { \"id\": \"K_W\" },\r\n                                { \"id\": \"K_E\" },\r\n                                { \"id\": \"K_R\" },\r\n                                { \"id\": \"K_T\" },\r\n                                { \"id\": \"K_Y\" },\r\n                                { \"id\": \"K_U\" },\r\n                                { \"id\": \"K_I\" },\r\n                                { \"id\": \"K_O\" },\r\n                                { \"id\": \"K_P\" },\r\n                                { \"id\": \"K_LBRKT\" },\r\n                                { \"id\": \"K_RBRKT\" },\r\n                                { \"sp\": \"10\", \"width\": \"1\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"id\": \"2\",\r\n                            \"key\": [\r\n                                { \"id\": \"K_A\", \"pad\": \"50\" },\r\n                                { \"id\": \"K_S\" },\r\n                                { \"id\": \"K_D\" },\r\n                                { \"id\": \"K_F\" },\r\n                                { \"id\": \"K_G\" },\r\n                                { \"id\": \"K_H\" },\r\n                                { \"id\": \"K_J\" },\r\n                                { \"id\": \"K_K\" },\r\n                                { \"id\": \"K_L\" },\r\n                                { \"id\": \"K_COLON\" },\r\n                                { \"id\": \"K_QUOTE\" },\r\n                                { \"id\": \"K_BKSLASH\", \"width\": \"90\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"id\": \"3\",\r\n                            \"key\": [\r\n                                { \"id\": \"K_oE2\", \"width\": \"90\" },\r\n                                { \"id\": \"K_Z\" },\r\n                                { \"id\": \"K_X\" },\r\n                                { \"id\": \"K_C\" },\r\n                                { \"id\": \"K_V\" },\r\n                                { \"id\": \"K_B\" },\r\n                                { \"id\": \"K_N\" },\r\n                                { \"id\": \"K_M\" },\r\n                                { \"id\": \"K_COMMA\" },\r\n                                { \"id\": \"K_PERIOD\" },\r\n                                { \"id\": \"K_SLASH\" },\r\n                                { \"id\": \"K_BKQUOTE\" },\r\n                                { \"sp\": \"10\", \"width\": \"1\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"id\": \"4\",\r\n                            \"key\": [\r\n                                {\r\n                                    \"id\": \"K_SHIFT\", \"text\": \"*Shift*\", \"sp\": \"1\", \"width\": \"200\", \"sk\": [\r\n                                        { \"id\": \"K_LCONTROL\", \"text\": \"*Ctrl*\", \"sp\": \"1\", \"width\": \"50\", \"nextlayer\": \"ctrl\" },\r\n                                        { \"id\": \"K_LCONTROL\", \"text\": \"*LCtrl*\", \"sp\": \"1\", \"width\": \"50\", \"nextlayer\": \"leftctrl\" },\r\n                                        { \"id\": \"K_RCONTROL\", \"text\": \"*RCtrl*\", \"sp\": \"1\", \"width\": \"50\", \"nextlayer\": \"rightctrl\" },\r\n                                        { \"id\": \"K_LALT\", \"text\": \"*Alt*\", \"sp\": \"1\", \"width\": \"50\", \"nextlayer\": \"alt\" },\r\n                                        { \"id\": \"K_LALT\", \"text\": \"*LAlt*\", \"sp\": \"1\", \"width\": \"50\", \"nextlayer\": \"leftalt\" },\r\n                                        { \"id\": \"K_RALT\", \"text\": \"*RAlt*\", \"sp\": \"1\", \"width\": \"50\", \"nextlayer\": \"rightalt\" },\r\n                                        { \"id\": \"K_ALTGR\", \"text\": \"*AltGr*\", \"sp\": \"1\", \"width\": \"50\", \"nextlayer\": \"ctrl-alt\" }]\r\n                                },\r\n                                { \"id\": \"K_LOPT\", \"text\": \"*Menu*\", \"width\": \"150\", \"sp\": \"1\" },\r\n                                { \"id\": \"K_SPACE\", \"width\": \"570\", \"text\": \"\" },\r\n                                { \"id\": \"K_BKSP\", \"text\": \"*BkSp*\", \"width\": \"150\", \"sp\": \"1\" },\r\n                                { \"id\": \"K_ENTER\", \"text\": \"*Enter*\", \"width\": \"200\", \"sp\": \"1\" }\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    };\r\n  }\r\n}\r\n","namespace com.keyman.keyboards {\r\n  type KeyDistribution = text.KeyDistribution;\r\n\r\n  // TS 3.9 changed behavior of getters to make them\r\n  // non-enumerable by default. This broke our \u0027polyfill\u0027\r\n  // functions which depended on enumeration to copy the\r\n  // relevant props over.\r\n  // https://github.com/microsoft/TypeScript/pull/32264#issuecomment-677718191\r\n  function Enumerable(\r\n    target: unknown,\r\n    propertyKey: string,\r\n    descriptor: PropertyDescriptor\r\n  ) {\r\n      descriptor.enumerable = true;\r\n  };\r\n\r\n  export class ActiveKey implements LayoutKey {\r\n\r\n    static readonly DEFAULT_PAD=15;          // Padding to left of key, in virtual units\r\n    static readonly DEFAULT_RIGHT_MARGIN=15; // Padding to right of right-most key, in virtual units\r\n    static readonly DEFAULT_KEY_WIDTH=100;   // Width of a key, if not specified, in virtual units\r\n\r\n    // Defines key defaults\r\n    static readonly DEFAULT_KEY = {\r\n      text: \u0027\u0027,\r\n      width: ActiveKey.DEFAULT_KEY_WIDTH.toString(),\r\n      sp: \u00270\u0027,\r\n      pad: ActiveKey.DEFAULT_PAD.toString()\r\n    };\r\n\r\n    /** WARNING - DO NOT USE DIRECTLY outside of @keymanapp/keyboard-processor! */\r\n    id?: string;\r\n\r\n    // These are fine.\r\n    width?: string;\r\n    pad?: string;\r\n    layer: string;\r\n    displayLayer: string;\r\n    nextlayer: string;\r\n\r\n    private baseKeyEvent: text.KeyEvent;\r\n    isMnemonic: boolean = false;\r\n\r\n    proportionalPad: number;\r\n    proportionalX: number;\r\n    proportionalWidth: number;\r\n\r\n    sk?: ActiveKey[];\r\n\r\n    // Keeping things simple here, as this was added LATE in 14.0 beta.\r\n    // Could definitely extend in the future to instead return an object\r\n    // that denotes the \u0027nature\u0027 of the key.\r\n    // - isUnicode\r\n    // - isHardwareKey\r\n    // - etc.\r\n\r\n    // Reference for the terminology in the comments below:\r\n    // https://help.keyman.com/developer/current-version/guides/develop/creating-a-touch-keyboard-layout-for-amharic-the-nitty-gritty\r\n\r\n    /**\r\n     * Matches the key code as set within Keyman Developer for the layout.\r\n     * For example, K_R or U_0020.  Denotes either physical keys or virtual keys with custom output,\r\n     * with no additional metadata like layer or active modifiers.\r\n     *\r\n     * Is used to determine the keycode for input events, rule-matching, and keystroke processing.\r\n     */\r\n    @Enumerable\r\n    public get baseKeyID(): string {\r\n      if(typeof this.id === \u0027undefined\u0027) {\r\n        return undefined;\r\n      }\r\n\r\n      return this.id;\r\n    }\r\n\r\n    /**\r\n     * A unique identifier based on both the key ID \u0026 the \u0027desktop layer\u0027 to be used for the key.\r\n     *\r\n     * Allows diambiguation of scenarios where the same key ID is used twice within a layer, but\r\n     * with different innate modifiers.  (Refer to https://github.com/keymanapp/keyman/issues/4617)\r\n     * The \u0027desktop layer\u0027 may be omitted if it matches the key\u0027s display layer.\r\n     *\r\n     * Examples, given a \u0027default\u0027 display layer, matching keys to Keyman keyboard language:\r\n     *\r\n     * ```\r\n     * \"K_Q\"\r\n     * + [K_Q]\r\n     * \"K_Q+shift\"\r\n     * + [K_Q SHIFT]\r\n     * ```\r\n     *\r\n     * Useful when the active layer of an input-event is already known.\r\n     */\r\n    @Enumerable\r\n    public get coreID(): string {\r\n      if(typeof this.id === \u0027undefined\u0027) {\r\n        return undefined;\r\n      }\r\n\r\n      let baseID = this.id || \u0027\u0027;\r\n\r\n      if(this.displayLayer != this.layer) {\r\n        baseID = baseID + \u0027+\u0027 + this.layer;\r\n      }\r\n\r\n      return baseID;\r\n    }\r\n\r\n    /**\r\n     * A keyboard-unique identifier to be used for any display elements representing this key\r\n     * in user interfaces and/or on-screen keyboards.\r\n     *\r\n     * Distinguishes between otherwise-identical keys on different layers of an OSK.\r\n     * Includes identifying information about the key\u0027s display layer.\r\n     *\r\n     * Examples, given a \u0027default\u0027 display layer, matching keys to Keyman keyboard language:\r\n     *\r\n     * ```\r\n     * \"default-K_Q\"\r\n     * + [K_Q]\r\n     * \"default-K_Q+shift\"\r\n     * + [K_Q SHIFT]\r\n     * ```\r\n     *\r\n     * Useful when only the active keyboard is known about an input event.\r\n     */\r\n    @Enumerable\r\n    public get elementID(): string {\r\n      if(typeof this.id === \u0027undefined\u0027) {\r\n        return undefined;\r\n      }\r\n\r\n      return this.displayLayer + \u0027-\u0027 + this.coreID;\r\n    }\r\n\r\n    static polyfill(key: LayoutKey, layout: ActiveLayout, displayLayer: string) {\r\n      // Add class functions to the existing layout object, allowing it to act as an ActiveLayout.\r\n      let dummy = new ActiveKey();\r\n      let proto = Object.getPrototypeOf(dummy);\r\n\r\n      for(let prop in dummy) {\r\n        if(!key.hasOwnProperty(prop)) {\r\n          let descriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n          if(descriptor) {\r\n            // It\u0027s a computed property!  Copy the descriptor onto the key\u0027s object.\r\n            Object.defineProperty(key, prop, descriptor);\r\n          } else {\r\n            key[prop] = dummy[prop];\r\n          }\r\n        }\r\n      }\r\n\r\n      // Ensure subkeys are also properly extended.\r\n      if(key.sk) {\r\n        for(let subkey of key.sk) {\r\n          ActiveKey.polyfill(subkey, layout, displayLayer);\r\n        }\r\n      }\r\n\r\n      let aKey = key as ActiveKey;\r\n      aKey.displayLayer = displayLayer;\r\n      aKey.layer = aKey.layer || displayLayer;\r\n\r\n      // Compute the key\u0027s base KeyEvent properties for use in future event generation\r\n      aKey.constructBaseKeyEvent(layout, displayLayer);\r\n    }\r\n\r\n    private constructBaseKeyEvent(layout: ActiveLayout, displayLayer: string) {\r\n      // Get key name and keyboard shift state (needed only for default layouts and physical keyboard handling)\r\n      // Note - virtual keys should be treated case-insensitive, so we force uppercasing here.\r\n      let layer = this.layer || displayLayer || \u0027\u0027;\r\n      let keyName= this.id ? this.id.toUpperCase() : null;\r\n\r\n      // Start:  mirrors _GetKeyEventProperties\r\n\r\n\r\n      // First check the virtual key, and process shift, control, alt or function keys\r\n      var Lkc: text.KeyEvent = {\r\n        // Override key shift state if specified for key in layout (corrected for popup keys KMEW-93)\r\n        Lmodifiers: text.KeyboardProcessor.getModifierState(layer),\r\n        Lstates: text.KeyboardProcessor.getStateFromLayer(layer),\r\n        Lcode: keyName ? text.Codes.keyCodes[keyName] : 0,\r\n        LisVirtualKey: true,\r\n        vkCode: 0,\r\n        kName: keyName,\r\n        kLayer: layer,\r\n        kbdLayer: displayLayer,\r\n        kNextLayer: this.nextlayer,\r\n        device: null,\r\n        isSynthetic: true\r\n      };\r\n\r\n      if(layout.keyboard) {\r\n        let keyboard = layout.keyboard;\r\n\r\n        // Include *limited* support for mnemonic keyboards (Sept 2012)\r\n        // If a touch layout has been defined for a mnemonic keyout, do not perform mnemonic mapping for rules on touch devices.\r\n        if(keyboard.isMnemonic \u0026\u0026 !(layout.isDefault \u0026\u0026 layout.formFactor != \u0027desktop\u0027)) {\r\n          if(Lkc.Lcode != text.Codes.keyCodes[\u0027K_SPACE\u0027]) { // exception required, March 2013\r\n            // Jan 2019 - interesting that \u0027K_SPACE\u0027 also affects the caps-state check...\r\n            Lkc.vkCode = Lkc.Lcode;\r\n            this.isMnemonic = true;\r\n          }\r\n        } else {\r\n          Lkc.vkCode=Lkc.Lcode;\r\n        }\r\n\r\n        // Support version 1.0 KeymanWeb keyboards that do not define positional vs mnemonic\r\n        if(!keyboard.definesPositionalOrMnemonic) {\r\n          // Not the best pattern, but currently safe - we don\u0027t look up any properties of any of the\r\n          // arguments in this use case, and the object\u0027s scope is extremely limited.\r\n          Lkc.Lcode = KeyMapping._USKeyCodeToCharCode(this.constructKeyEvent(null, null));\r\n          Lkc.LisVirtualKey=false;\r\n        }\r\n      }\r\n\r\n      this.baseKeyEvent = Lkc;\r\n    }\r\n\r\n    constructKeyEvent(keyboardProcessor: text.KeyboardProcessor, device: utils.DeviceSpec): text.KeyEvent {\r\n      // Make a deep copy of our preconstructed key event, filling it out from there.\r\n      let Lkc = utils.deepCopy(this.baseKeyEvent);\r\n      Lkc.device = device;\r\n\r\n      if(this.isMnemonic) {\r\n        text.KeyboardProcessor.setMnemonicCode(Lkc, this.layer.indexOf(\u0027shift\u0027) != -1, keyboardProcessor ? keyboardProcessor.stateKeys[\u0027K_CAPS\u0027] : false);\r\n      }\r\n\r\n      // Performs common pre-analysis for both \u0027native\u0027 and \u0027embedded\u0027 OSK key \u0026 subkey input events.\r\n      // This part depends on the keyboard processor\u0027s active state.\r\n      if(keyboardProcessor) {\r\n        keyboardProcessor.setSyntheticEventDefaults(Lkc);\r\n\r\n        // If it\u0027s a state key modifier, trigger its effects as part of the\r\n        // keystroke.\r\n        const bitmap = {\r\n          \u0027K_CAPS\u0027: text.Codes.stateBitmasks.CAPS,\r\n          \u0027K_NUMLOCK\u0027: text.Codes.stateBitmasks.NUM_LOCK,\r\n          \u0027K_SCROLL\u0027: text.Codes.stateBitmasks.SCROLL_LOCK\r\n        };\r\n        const bitmask = bitmap[Lkc.kName];\r\n\r\n        if(bitmask) {\r\n          Lkc.Lstates ^= bitmask;\r\n          Lkc.LmodifierChange = true;\r\n        }\r\n      }\r\n\r\n      return Lkc;\r\n    }\r\n\r\n    public getSubkey(coreID: string): ActiveKey {\r\n      if(this.sk) {\r\n        for(let key of this.sk) {\r\n          if(key.coreID == coreID) {\r\n            return key;\r\n          }\r\n        }\r\n      }\r\n\r\n      return null;\r\n    }\r\n  }\r\n\r\n  export class ActiveRow implements LayoutRow {\r\n    // Identify key labels (e.g. *Shift*) that require the special OSK font\r\n    static readonly SPECIAL_LABEL=/\\*\\w+\\*/;\r\n\r\n    id: string;\r\n    key: ActiveKey[];\r\n\r\n    /**\r\n     * Used for calculating fat-fingering offsets.\r\n     */\r\n    proportionalY: number;\r\n\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    static polyfill(row: LayoutRow, layout: ActiveLayout, displayLayer: string, totalWidth: number, proportionalY: number) {\r\n      // Apply defaults, setting the width and other undefined properties for each key\r\n      let keys=row[\u0027key\u0027];\r\n      for(let j=0; j\u003ckeys.length; j++) {\r\n        let key=keys[j];\r\n        for(var tp in ActiveKey.DEFAULT_KEY) {\r\n          if(typeof key[tp] != \u0027string\u0027) {\r\n            key[tp]=ActiveKey.DEFAULT_KEY[tp];\r\n          }\r\n        }\r\n\r\n        // Modify the key type for special keys with non-standard labels\r\n        // to allow the keyboard font to ovveride the SpecialOSK font.\r\n        // Blank keys are no longer reclassed - can use before/after CSS to add text\r\n        switch(key[\u0027sp\u0027]) {\r\n          case \u00271\u0027:\r\n            if(!ActiveRow.SPECIAL_LABEL.test(key[\u0027text\u0027]) \u0026\u0026 key[\u0027text\u0027] != \u0027\u0027) {\r\n              key[\u0027sp\u0027]=\u00273\u0027;\r\n            }\r\n            break;\r\n          case \u00272\u0027:\r\n            if(!ActiveRow.SPECIAL_LABEL.test(key[\u0027text\u0027]) \u0026\u0026 key[\u0027text\u0027] != \u0027\u0027) {\r\n              key[\u0027sp\u0027]=\u00274\u0027;\r\n            }\r\n            break;\r\n        }\r\n\r\n        ActiveKey.polyfill(key, layout, displayLayer);\r\n      }\r\n\r\n      /* The calculations here are effectively \u0027virtualized\u0027.  When used with the OSK, the VisualKeyboard\r\n       * will overwrite these values with their true runtime geometry.\r\n       *\r\n       * These calculations approximate those of the actual OSK (without fitting to a specific resolution)\r\n       * and are intended for use with layout testing (while headless) in the future.\r\n       */\r\n\r\n      let setProportions = function(key: ActiveKey, padPc: number, keyPc: number, totalPc: number) {\r\n        key.proportionalPad   = padPc;\r\n        key.proportionalWidth = keyPc;\r\n        key.proportionalX     = (totalPc + padPc + (keyPc/2));\r\n      }\r\n\r\n      // Calculate percentage-based scalings by summing defined widths and scaling each key to %.\r\n      // Save each percentage key width as a separate member (do *not* overwrite layout specified width!)\r\n      var keyPercent: number, padPercent: number, totalPercent=0;\r\n      for(let j=0; j\u003ckeys.length-1; j++) {\r\n        keyPercent=parseInt(keys[j][\u0027width\u0027],10)/totalWidth;\r\n        keys[j][\u0027widthpc\u0027]=keyPercent;\r\n        padPercent=parseInt(keys[j][\u0027pad\u0027],10)/totalWidth;\r\n        keys[j][\u0027padpc\u0027]=padPercent;\r\n\r\n        // compute center\u0027s default x-coord (used in headless modes)\r\n        setProportions(keys[j] as ActiveKey, padPercent, keyPercent, totalPercent);\r\n        totalPercent += padPercent+keyPercent;\r\n      }\r\n\r\n      // Allow for right OSK margin (15 layout units)\r\n      let rightMargin = ActiveKey.DEFAULT_RIGHT_MARGIN/totalWidth;\r\n      totalPercent += rightMargin;\r\n\r\n      // If a single key, and padding is negative, add padding to right align the key\r\n      if(keys.length == 1 \u0026\u0026 parseInt(keys[0][\u0027pad\u0027],10) \u003c 0) {\r\n        keyPercent=parseInt(keys[0][\u0027width\u0027],10)/totalWidth;\r\n        keys[0][\u0027widthpc\u0027]=keyPercent;\r\n        totalPercent += keyPercent;\r\n        keys[0][\u0027padpc\u0027]=1-totalPercent;\r\n\r\n        // compute center\u0027s default x-coord (used in headless modes)\r\n        setProportions(keys[0] as ActiveKey, padPercent, keyPercent, totalPercent);\r\n      } else if(keys.length \u003e 0) {\r\n        let j=keys.length-1;\r\n        padPercent=parseInt(keys[j][\u0027pad\u0027],10)/totalWidth;\r\n        keys[j][\u0027padpc\u0027]=padPercent;\r\n        totalPercent += padPercent;\r\n        keys[j][\u0027widthpc\u0027] = keyPercent = 1-totalPercent;\r\n\r\n        // compute center\u0027s default x-coord (used in headless modes)\r\n        setProportions(keys[j] as ActiveKey, padPercent, keyPercent, totalPercent);\r\n      }\r\n\r\n      // Add class functions to the existing layout object, allowing it to act as an ActiveLayout.\r\n      let dummy = new ActiveRow();\r\n      for(let key in dummy) {\r\n        if(!row.hasOwnProperty(key)) {\r\n          row[key] = dummy[key];\r\n        }\r\n      }\r\n\r\n      let aRow = row as ActiveRow;\r\n      aRow.proportionalY = proportionalY;\r\n    }\r\n\r\n    populateKeyMap(map: {[keyId: string]: ActiveKey}) {\r\n      this.key.forEach(function(key: ActiveKey) {\r\n        if(key.coreID) {\r\n          map[key.coreID] = key;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  export class ActiveLayer implements LayoutLayer {\r\n    row: ActiveRow[];\r\n    id: string;\r\n\r\n    // These already exist on the objects, pre-polyfill...\r\n    // but they still need to be proactively declared on this type.\r\n    capsKey?: ActiveKey;\r\n    numKey?: ActiveKey;\r\n    scrollKey?: ActiveKey;\r\n\r\n    totalWidth: number;\r\n\r\n    defaultKeyProportionalWidth: number;\r\n    rowProportionalHeight: number;\r\n\r\n    /**\r\n     * Facilitates mapping key id strings to their specification objects.\r\n     */\r\n    keyMap: {[keyId: string]: ActiveKey};\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    static polyfill(layer: LayoutLayer, layout: ActiveLayout) {\r\n      layer.aligned=false;\r\n\r\n      // Create a DIV for each row of the group\r\n      let rows=layer[\u0027row\u0027];\r\n\r\n      // Calculate the maximum row width (in layout units)\r\n      var totalWidth=0;\r\n      for(let i=0; i\u003clayer[\u0027row\u0027].length; i++) {\r\n        var width=0;\r\n        let row=rows[i];\r\n        let keys=row[\u0027key\u0027];\r\n        for(let j=0; j\u003ckeys.length; j++) {\r\n          let key=keys[j];\r\n\r\n          // Test for a trailing comma included in spec, added as null object by IE\r\n          if(key == null) {\r\n            keys.length = keys.length-1;\r\n          } else {\r\n            var kw, kp;\r\n            kw = (typeof key[\u0027width\u0027] == \u0027string\u0027 \u0026\u0026 key[\u0027width\u0027] != \u0027\u0027) ? parseInt(key[\u0027width\u0027],10) : ActiveKey.DEFAULT_KEY_WIDTH;\r\n            if(isNaN(kw) || kw == 0) kw = ActiveKey.DEFAULT_KEY_WIDTH;\r\n            key[\u0027width\u0027] = kw.toString();\r\n            kp = (typeof key[\u0027pad\u0027] == \u0027string\u0027 \u0026\u0026 key[\u0027pad\u0027] != \u0027\u0027) ? parseInt(key[\u0027pad\u0027],10) : ActiveKey.DEFAULT_PAD;\r\n            if(isNaN(kp) || kp == 0) kp = ActiveKey.DEFAULT_PAD;  // KMEW-119\r\n            key[\u0027pad\u0027] = kp.toString();\r\n            width += kw + kp;\r\n            //if(typeof key[\u0027width\u0027] == \u0027string\u0027 \u0026\u0026 key[\u0027width\u0027] != \u0027\u0027) width += parseInt(key[\u0027width\u0027],10); else width += DEFAULT_KEY_WIDTH;\r\n            //if(typeof key[\u0027pad\u0027] == \u0027string\u0027 \u0026\u0026 key[\u0027pad\u0027] != \u0027\u0027) width += parseInt(key[\u0027pad\u0027],10); else width += 5;\r\n          }\r\n        }\r\n        if(width \u003e totalWidth) {\r\n          totalWidth = width;\r\n        }\r\n      }\r\n\r\n      // Add default right margin\r\n      if(layout.formFactor == \u0027desktop\u0027) {\r\n        totalWidth += 5; // TODO: resolve difference between touch and desktop; why don\u0027t we use ActiveKey.DEFAULT_RIGHT_MARGIN?\r\n      } else {\r\n        totalWidth += ActiveKey.DEFAULT_RIGHT_MARGIN;\r\n      }\r\n\r\n      let rowCount = layer.row.length;\r\n      for(let i=0; i\u003crowCount; i++) {\r\n        // Calculate proportional y-coord of row.  0 is at top with highest y-coord.\r\n        let rowProportionalY = (i + 0.5) / rowCount;\r\n        ActiveRow.polyfill(layer.row[i], layout, layer.id, totalWidth, rowProportionalY);\r\n      }\r\n\r\n      // Add class functions and properties to the existing layout object, allowing it to act as an ActiveLayout.\r\n      let dummy = new ActiveLayer();\r\n      for(let key in dummy) {\r\n        if(!layer.hasOwnProperty(key)) {\r\n          layer[key] = dummy[key];\r\n        }\r\n      }\r\n\r\n      let aLayer = layer as ActiveLayer;\r\n      aLayer.totalWidth = totalWidth;\r\n      aLayer.defaultKeyProportionalWidth = parseInt(ActiveKey.DEFAULT_KEY.width, 10) / totalWidth;\r\n      aLayer.rowProportionalHeight = 1.0 / rowCount;\r\n      aLayer.keyMap = aLayer.constructKeyMap();\r\n    }\r\n\r\n    private constructKeyMap(): {[keyId: string]: ActiveKey} {\r\n      let map: {[keyId: string]: ActiveKey} = {};\r\n      this.row.forEach(function(row: ActiveRow) {\r\n        row.populateKeyMap(map);\r\n      });\r\n\r\n      return map;\r\n    }\r\n\r\n    /**\r\n     * Builds a sorted-order array of most likely keys to be intended for a given touch.\r\n     * @param touchCoords A proportional (x, y) coordinate of the touch within the keyboard\u0027s geometry.\r\n     *                           Should be within [0, 0] to [1, 1].\r\n     * @param kbdScaleRatio The ratio of the keyboard\u0027s horizontal scale to its vertical scale.\r\n     *                           For a 400 x 200 keyboard, should be 2.\r\n     */\r\n    getTouchProbabilities(touchCoords: {x: number, y: number}, kbdScaleRatio: number): KeyDistribution {\r\n      let distribution = this.simpleTouchDistribution(touchCoords, kbdScaleRatio);\r\n      let list: {keyId: string, p: number}[] = [];\r\n\r\n      for(let key in distribution) {\r\n        list.push({keyId: key, p: distribution[key]});\r\n      }\r\n\r\n      return list.sort(function(a, b) {\r\n        return b.p - a.p; // Largest probability keys should be listed first.\r\n      })\r\n    }\r\n\r\n    /**\r\n     * Computes a probability distribution regarding the likelihood of a touch command being intended\r\n     * for each of the layout\u0027s keys.\r\n     * @param touchCoords A proportional (x, y) coordinate of the touch within the keyboard\u0027s geometry.\r\n     *                           Should be within [0, 0] to [1, 1].\r\n     * @param kbdScaleRatio The ratio of the keyboard\u0027s horizontal scale to its vertical scale.\r\n     *                           For a 400 x 200 keyboard, should be 2.\r\n     */\r\n    simpleTouchDistribution(touchCoords: {x: number, y: number}, kbdScaleRatio: number): {[keyId: string]: number} {\r\n      let keyDists = this.keyTouchDistances(touchCoords, kbdScaleRatio);\r\n      let keyProbs: {[keyId: string]: number} = {};\r\n\r\n      let totalMass = 0;\r\n\r\n      // Should we wish to allow multiple different transforms for distance -\u003e probability, use a function parameter in place\r\n      // of the formula in the loop below.\r\n      for(let key in keyDists) {\r\n        totalMass += keyProbs[key] = 1 / (keyDists[key] + 1e-6); // Prevent div-by-0 errors.\r\n      }\r\n\r\n      for(let key in keyProbs) {\r\n        keyProbs[key] /= totalMass;\r\n      }\r\n\r\n      return keyProbs;\r\n    }\r\n\r\n    /**\r\n     * Computes a squared \u0027pseudo-distance\u0027 for the touch from each key.  (Not a proper metric.)\r\n     * Intended for use in generating a probability distribution over the keys based on the touch input.\r\n     * @param touchCoords A proportional (x, y) coordinate of the touch within the keyboard\u0027s geometry.\r\n     *                           Should be within [0, 0] to [1, 1].\r\n     * @param kbdScaleRatio The ratio of the keyboard\u0027s horizontal scale to its vertical scale.\r\n     *                           For a 400 x 200 keyboard, should be 2.\r\n     */\r\n    private keyTouchDistances(touchCoords: {x: number, y: number}, kbdScaleRatio: number): {[keyId: string]: number} {\r\n      let layer = this;\r\n\r\n      let keyDists: {[keyId: string]: number} = {};\r\n\r\n      // This double-nested loop computes a pseudo-distance for the touch from each key.  Quite useful for\r\n      // generating a probability distribution.\r\n      this.row.forEach(function(row: ActiveRow): void {\r\n        row.key.forEach(function(key: ActiveKey): void {\r\n          // If the key lacks an ID, just skip it.  Sometimes used for padding.\r\n          if(!key.baseKeyID) {\r\n            return;\r\n          } else {\r\n            // Attempt to filter out known non-output keys.\r\n            // Results in a more optimized distribution.\r\n            if(text.Codes.isKnownOSKModifierKey(key.baseKeyID)) {\r\n              return;\r\n            }\r\n          }\r\n          // These represent the within-key distance of the touch from the key\u0027s center.\r\n          // Both should be on the interval [0, 0.5].\r\n          let dx = Math.abs(touchCoords.x - key.proportionalX);\r\n          let dy = Math.abs(touchCoords.y - row.proportionalY);\r\n\r\n          // If the touch isn\u0027t within the key, these store the out-of-key distance\r\n          // from the closest point on the key being checked.\r\n          let distX: number, distY: number;\r\n\r\n          if(dx \u003e 0.5 * key.proportionalWidth) {\r\n            distX = (dx - 0.5 * key.proportionalWidth);\r\n            dx = 0.5;\r\n          } else {\r\n            distX = 0;\r\n            dx /= key.proportionalWidth;\r\n          }\r\n\r\n          if(dy \u003e 0.5 * layer.rowProportionalHeight) {\r\n            distY = (dy - 0.5 * layer.rowProportionalHeight);\r\n            dy = 0.5;\r\n          } else {\r\n            distY = 0;\r\n            dy /= layer.rowProportionalHeight;\r\n          }\r\n\r\n          // Now that the differentials are computed, it\u0027s time to do distance scaling.\r\n          //\r\n          // For out-of-key distance, we scale the X component by the keyboard\u0027s aspect ratio\r\n          // to get the actual out-of-key distance rather than proportional.\r\n          distX *= kbdScaleRatio;\r\n\r\n          // While the keys are rarely perfect squares, we map all within-key distance\r\n          // to a square shape.  (ALT/CMD should seem as close to SPACE as a \u0027B\u0027.)\r\n          //\r\n          // For that square, we take the rowHeight as its edge lengths.\r\n          distX += dx * layer.rowProportionalHeight;\r\n          distY += dy * layer.rowProportionalHeight;\r\n\r\n          let distance = distX * distX + distY * distY;\r\n          keyDists[key.coreID] = distance;\r\n        });\r\n      });\r\n\r\n      return keyDists;\r\n    }\r\n\r\n    getKey(keyId: string) {\r\n      // Keys usually are specified in a \"long form\" prefixed with their layer\u0027s ID.\r\n      if(keyId.indexOf(this.id + \u0027-\u0027) == 0) {\r\n        keyId = keyId.replace(this.id + \u0027-\u0027, \u0027\u0027);\r\n      }\r\n\r\n      let idComponents = keyId.split(\u0027::\u0027);\r\n      if(idComponents.length \u003e 1) {\r\n        let baseKey = this.keyMap[idComponents[0]];\r\n        return baseKey.getSubkey(idComponents[1]);\r\n      } else {\r\n        return this.keyMap[keyId];\r\n      }\r\n    }\r\n  }\r\n\r\n  export class ActiveLayout implements LayoutFormFactor{\r\n    layer: ActiveLayer[];\r\n    font: string;\r\n    keyLabels: boolean;\r\n    isDefault?: boolean;\r\n    keyboard: Keyboard;\r\n    formFactor: utils.FormFactor;\r\n\r\n    /**\r\n     * Facilitates mapping layer id strings to their specification objects.\r\n     */\r\n    layerMap: {[layerId: string]: ActiveLayer};\r\n\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    getLayer(layerId: string): ActiveLayer {\r\n      return this.layerMap[layerId];\r\n    }\r\n\r\n    /**\r\n     * Refer to https://github.com/keymanapp/keyman/issues/254, which mentions\r\n     * KD-11 from a prior issue-tracking system from the closed-source days that\r\n     * resulted in an unintended extra empty row.\r\n     *\r\n     * It\u0027ll be pretty rare to see a keyboard affected by the bug, but we don\u0027t\r\n     * 100% control all keyboards out there, so it\u0027s best we make sure the edge\r\n     * case is covered.\r\n     *\r\n     * @param layers The layer group to be loaded for the form factor.  Will be\r\n     *               mutated by this operation.\r\n     */\r\n    static correctLayerEmptyRowBug(layers: LayoutLayer[]) {\r\n      for(let n=0; n\u003clayers.length; n++) {\r\n        let layer=layers[n];\r\n        let rows=layer[\u0027row\u0027];\r\n        let i: number;\r\n        for(i=rows.length-1; i\u003e=0; i--) {\r\n          if(!Array.isArray(rows[i][\u0027key\u0027]) || rows[i][\u0027key\u0027].length == 0) {\r\n            rows.splice(i, 1)\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param layout\r\n     * @param formFactor\r\n     */\r\n    static polyfill(layout: LayoutFormFactor, keyboard: Keyboard, formFactor: utils.FormFactor): ActiveLayout {\r\n      if(layout == null) {\r\n        throw new Error(\"Cannot build an ActiveLayout for a null specification.\");\r\n      }\r\n\r\n      // Create a separate OSK div for each OSK layer, only one of which will ever be visible\r\n      var n: number;\r\n      let layerMap: {[layerId: string]: ActiveLayer} = {};\r\n\r\n      let layers=layout[\u0027layer\u0027];\r\n      ActiveLayout.correctLayerEmptyRowBug(layers);\r\n\r\n      // Add class functions to the existing layout object, allowing it to act as an ActiveLayout.\r\n      let dummy = new ActiveLayout();\r\n      for(let key in dummy) {\r\n        if(!layout.hasOwnProperty(key)) {\r\n          layout[key] = dummy[key];\r\n        }\r\n      }\r\n\r\n      let aLayout = layout as ActiveLayout;\r\n      aLayout.keyboard = keyboard;\r\n      aLayout.formFactor = formFactor;\r\n\r\n      for(n=0; n\u003clayers.length; n++) {\r\n        ActiveLayer.polyfill(layers[n], aLayout);\r\n        layerMap[layers[n].id] = layers[n] as ActiveLayer;\r\n      }\r\n\r\n      aLayout.layerMap = layerMap;\r\n\r\n      return aLayout;\r\n    }\r\n  }\r\n}\r\n","namespace com.keyman.text {\r\n  /**\r\n   * Defines common behaviors associated with system stores.\r\n   */\r\n  export abstract class SystemStore {\r\n    public readonly id: number;\r\n\r\n    constructor(id: number) {\r\n      this.id = id;\r\n    }\r\n\r\n    abstract matches(value: string): boolean;\r\n\r\n    set(value: string): void {\r\n      throw new Error(\"System store with ID \" + this.id + \" may not be directly set.\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A handler designed to receive feedback whenever a system store\u0027s value is changed.\r\n   * @param source    The system store being mutated, before the value change occurs.\r\n   * @param newValue  The new value being set\r\n   * @returns         `false` / `undefined` to allow the change, `true` to block the change.\r\n   */\r\n  export type SystemStoreMutationHandler = (source: MutableSystemStore, newValue: string) =\u003e boolean;\r\n\r\n  export class MutableSystemStore extends SystemStore {\r\n    private _value: string;\r\n    handler?: SystemStoreMutationHandler = null;\r\n\r\n    constructor(id: number, defaultValue: string) {\r\n      super(id);\r\n      this._value = defaultValue;\r\n    }\r\n\r\n    get value() {\r\n      return this._value;\r\n    }\r\n\r\n    matches(value: string) {\r\n      return this._value == value;\r\n    }\r\n\r\n    set(value: string) {\r\n      if(this.handler) {\r\n        if(this.handler(this, value)) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      this._value = value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles checks against the current platform.\r\n   */\r\n  export class PlatformSystemStore extends SystemStore {\r\n    private readonly kbdInterface: KeyboardInterface;\r\n\r\n    constructor(keyboardInterface: KeyboardInterface) {\r\n      super(KeyboardInterface.TSS_PLATFORM);\r\n\r\n      this.kbdInterface = keyboardInterface;\r\n    }\r\n\r\n    matches(value: string) {\r\n      var i,constraint,constraints=value.split(\u0027 \u0027);\r\n      let device = this.kbdInterface.activeDevice;\r\n\r\n      for(i=0; i\u003cconstraints.length; i++) {\r\n        constraint=constraints[i].toLowerCase();\r\n        switch(constraint) {\r\n          case \u0027touch\u0027:\r\n          case \u0027hardware\u0027:\r\n            if(device.touchable != (constraint == \u0027touch\u0027)) {\r\n              return false;\r\n            }\r\n            break;\r\n\r\n          case \u0027macos\u0027:\r\n          case \u0027mac\u0027:\r\n            constraint = \u0027macosx\u0027;\r\n            // fall through\r\n          case \u0027macosx\u0027:\r\n          case \u0027windows\u0027:\r\n          case \u0027android\u0027:\r\n          case \u0027ios\u0027:\r\n          case \u0027linux\u0027:\r\n            if(device.OS != constraint) {\r\n              return false;\r\n            }\r\n            break;\r\n\r\n          case \u0027tablet\u0027:\r\n          case \u0027phone\u0027:\r\n          case \u0027desktop\u0027:\r\n            if(device.formFactor != constraint) {\r\n              return false;\r\n            }\r\n            break;\r\n\r\n          case \u0027web\u0027:\r\n            if(device.browser == \u0027native\u0027) {\r\n              return false; // web matches anything other than \u0027native\u0027\r\n            }\r\n            break;\r\n            \r\n          case \u0027native\u0027:\r\n            // This will return true for embedded KeymanWeb\r\n          case \u0027chrome\u0027:\r\n          case \u0027firefox\u0027:\r\n          case \u0027safari\u0027:\r\n          case \u0027edge\u0027:\r\n          case \u0027opera\u0027:\r\n            if(device.browser != constraint) {\r\n              return false;\r\n            }\r\n            break;\r\n            \r\n          default:\r\n            return false;\r\n        }\r\n      }\r\n\r\n      // Everything we checked against was valid and had matches - it\u0027s a match!\r\n      return true;\r\n    }\r\n  }\r\n}","/// \u003creference path=\"deadkeys.ts\" /\u003e\r\n/// \u003creference path=\"ruleBehavior.ts\" /\u003e\r\n\r\n// Defines classes for handling system stores\r\n/// \u003creference path=\"systemStores.ts\" /\u003e\r\n\r\n/***\r\n   KeymanWeb 11.0\r\n   Copyright 2019 SIL International\r\n***/\r\n\r\nnamespace com.keyman.text {\r\n  //#region Helper type definitions\r\n\r\n  export class KeyInformation {\r\n    vk: boolean;\r\n    code: number;\r\n    modifiers: number;\r\n  }\r\n\r\n  /*\r\n  * Type alias definitions to reflect the parameters of the fullContextMatch() callback (KMW 10+).\r\n  * No constructors or methods since keyboards will not utilize the same backing prototype, and\r\n  * property names are shorthanded to promote minification.\r\n  */\r\n  type PlainKeyboardStore = string;\r\n\r\n  export type KeyboardStoreElement = (string|StoreNonCharEntry);\r\n  export type ComplexKeyboardStore = KeyboardStoreElement[];\r\n\r\n  type KeyboardStore = PlainKeyboardStore | ComplexKeyboardStore;\r\n\r\n  export type VariableStore = {[name: string]: string};\r\n\r\n  type RuleChar = string;\r\n\r\n  class RuleDeadkey {\r\n    /** Discriminant field - \u0027d\u0027 for Deadkey.\r\n     */\r\n    [\u0027t\u0027]: \u0027d\u0027;\r\n\r\n    /**\r\n     * Value:  the deadkey\u0027s ID.\r\n     */\r\n    [\u0027d\u0027]: number; // For \u0027d\u0027eadkey; also reflects the Deadkey class\u0027s \u0027d\u0027 property.\r\n  }\r\n\r\n  class ContextAny {\r\n    /** Discriminant field - \u0027a\u0027 for `any()`.\r\n     */\r\n    [\u0027t\u0027]: \u0027a\u0027;\r\n\r\n    /**\r\n     * Value:  the store to search.\r\n     */\r\n    [\u0027a\u0027]: KeyboardStore; // For \u0027a\u0027ny statement.\r\n\r\n    /**\r\n     * If set to true, negates the \u0027any\u0027.\r\n     */\r\n    [\u0027n\u0027]: boolean|0|1;\r\n  }\r\n\r\n  class RuleIndex {\r\n    /** Discriminant field - \u0027i\u0027 for `index()`.\r\n     */\r\n    [\u0027t\u0027]: \u0027i\u0027;\r\n\r\n    /**\r\n     * Value: the Store from which to output\r\n     */\r\n    [\u0027i\u0027]: KeyboardStore;\r\n\r\n    /**\r\n     * Offset: the offset in context for the corresponding `any()`.\r\n     */\r\n    [\u0027o\u0027]: number;\r\n  }\r\n\r\n  class ContextEx {\r\n    /** Discriminant field - \u0027c\u0027 for `context()`.\r\n     */\r\n    [\u0027t\u0027]: \u0027c\u0027;\r\n\r\n    /**\r\n     * Value:  The offset into the current rule\u0027s context to be matched.\r\n     */\r\n    [\u0027c\u0027]: number; // For \u0027c\u0027ontext statement.\r\n  }\r\n\r\n  class ContextNul {\r\n    /** Discriminant field - \u0027n\u0027 for `nul`\r\n     */\r\n    [\u0027t\u0027]: \u0027n\u0027;\r\n  }\r\n\r\n  class StoreBeep {\r\n    /** Discriminant field - \u0027b\u0027 for `beep`\r\n     */\r\n    [\u0027t\u0027]: \u0027b\u0027;\r\n  }\r\n\r\n  type ContextNonCharEntry = RuleDeadkey | ContextAny | RuleIndex | ContextEx | ContextNul;\r\n  type ContextEntry = RuleChar | ContextNonCharEntry;\r\n\r\n  type StoreNonCharEntry = RuleDeadkey | StoreBeep;\r\n\r\n  /**\r\n   * Cache of context storing and retrieving return values from KC\r\n   * Must be reset prior to each keystroke and after any text changes\r\n   * MCD 3/1/14\r\n   **/\r\n  class CachedContext {\r\n    _cache: string[][];\r\n\r\n    reset(): void {\r\n      this._cache = [];\r\n    }\r\n\r\n    get(n: number, ln: number): string {\r\n      // return null; // uncomment this line to disable context caching\r\n      if(typeof this._cache[n] == \u0027undefined\u0027) {\r\n        return null;\r\n      } else if(typeof this._cache[n][ln] == \u0027undefined\u0027) {\r\n        return null;\r\n      }\r\n      return this._cache[n][ln];\r\n    }\r\n\r\n    set(n: number, ln: number, val: string): void {\r\n      if(typeof this._cache[n] == \u0027undefined\u0027) {\r\n        this._cache[n] = [];\r\n      }\r\n      this._cache[n][ln] = val;\r\n    }\r\n  };\r\n\r\n  type CachedExEntry = {valContext: (string|number)[], deadContext: text.Deadkey[]};\r\n  /**\r\n   * An extended version of cached context storing designed to work with\r\n   * `fullContextMatch` and its helper functions.\r\n   */\r\n  class CachedContextEx {\r\n    _cache: CachedExEntry[][];\r\n\r\n    reset(): void {\r\n      this._cache = [];\r\n    }\r\n\r\n    get(n: number, ln: number): CachedExEntry {\r\n      // return null; // uncomment this line to disable context caching\r\n      if(typeof this._cache[n] == \u0027undefined\u0027) {\r\n        return null;\r\n      } else if(typeof this._cache[n][ln] == \u0027undefined\u0027) {\r\n        return null;\r\n      }\r\n      return this._cache[n][ln];\r\n    }\r\n\r\n    set(n: number, ln: number, val: CachedExEntry): void {\r\n      if(typeof this._cache[n] == \u0027undefined\u0027) {\r\n        this._cache[n] = [];\r\n      }\r\n      this._cache[n][ln] = val;\r\n    }\r\n\r\n    clone(): CachedContextEx {\r\n      let r = new CachedContextEx();\r\n      r._cache = this._cache;\r\n      return r;\r\n    }\r\n  };\r\n\r\n  //#endregion\r\n\r\n  export class KeyboardInterface {\r\n    static readonly GLOBAL_NAME = \u0027KeymanWeb\u0027;\r\n\r\n    cachedContext: CachedContext = new CachedContext();\r\n    cachedContextEx: CachedContextEx = new CachedContextEx();\r\n    ruleContextEx: CachedContextEx;\r\n\r\n    activeTargetOutput: OutputTarget;\r\n    ruleBehavior: RuleBehavior;\r\n\r\n    static readonly TSS_LAYER:    number = 33;\r\n    static readonly TSS_PLATFORM: number = 31;\r\n    static readonly TSS_NEWLAYER: number = 42;\r\n    static readonly TSS_OLDLAYER: number = 43;\r\n\r\n    systemStores: {[storeID: number]: SystemStore};\r\n\r\n    _AnyIndices:  number[] = [];    // AnyIndex - array of any/index match indices\r\n\r\n    // Must be accessible to some of the keyboard API methods.\r\n    activeKeyboard: keyboards.Keyboard;\r\n    activeDevice: utils.DeviceSpec;\r\n\r\n    variableStoreSerializer?: VariableStoreSerializer;\r\n\r\n    constructor(variableStoreSerializer: VariableStoreSerializer = null) {\r\n      this.systemStores = {};\r\n\r\n      this.systemStores[KeyboardInterface.TSS_PLATFORM] = new PlatformSystemStore(this);\r\n      this.systemStores[KeyboardInterface.TSS_LAYER] = new MutableSystemStore(KeyboardInterface.TSS_LAYER, \u0027default\u0027);\r\n      this.systemStores[KeyboardInterface.TSS_NEWLAYER] = new MutableSystemStore(KeyboardInterface.TSS_NEWLAYER, \u0027\u0027);\r\n      this.systemStores[KeyboardInterface.TSS_OLDLAYER] = new MutableSystemStore(KeyboardInterface.TSS_OLDLAYER, \u0027\u0027);\r\n\r\n      this.variableStoreSerializer = variableStoreSerializer;\r\n    }\r\n\r\n    /**\r\n     * Function     KSF\r\n     * Scope        Public\r\n     *\r\n     * Saves the document\u0027s current focus settings on behalf of the keyboard.  Often paired with insertText.\r\n     */\r\n    saveFocus(): void { }\r\n\r\n    /**\r\n     * A text-insertion method used by custom OSKs for helpHTML interaction, like with sil_euro_latin.\r\n     *\r\n     * This function currently bypasses web-core\u0027s standard text handling control path and all predictive text processing.\r\n     * It also has DOM-dependencies that help ensure KMW\u0027s active OutputTarget retains focus during use.\r\n     */\r\n    insertText?: (Ptext: string, PdeadKey: number) =\u003e boolean;\r\n\r\n    /**\r\n     * Function     registerKeyboard  KR\r\n     * Scope        Public\r\n     * @param       {Object}      Pk      Keyboard  object\r\n     * Description  Registers a keyboard with KeymanWeb once its script has fully loaded.\r\n     *\r\n     *              In web-core, this also activates the keyboard; in other modules, this method\r\n     *              may be replaced with other implementations.\r\n     */\r\n    registerKeyboard(Pk): void {\r\n      // NOTE:  This implementation is web-core specific and is intentionally replaced, whole-sale,\r\n      //        by DOM-aware code.\r\n      let keyboard = new keyboards.Keyboard(Pk);\r\n      this.activeKeyboard = keyboard;\r\n    }\r\n\r\n    /**\r\n     * Used by DOM-aware KeymanWeb to add keyboard stubs, used by the `KeyboardManager` type\r\n     * to optimize resource use.\r\n     */\r\n    registerStub?: (Pstub) =\u003e number;\r\n\r\n    /**\r\n     * Get *cached or uncached* keyboard context for a specified range, relative to caret\r\n     *\r\n     * @param       {number}      n       Number of characters to move back from caret\r\n     * @param       {number}      ln      Number of characters to return\r\n     * @param       {Object}      Pelem   Element to work with (must be currently focused element)\r\n     * @return      {string}              Context string\r\n     *\r\n     * Example     [abcdef|ghi] as INPUT, with the caret position marked by |:\r\n     *             KC(2,1,Pelem) == \"e\"\r\n     *             KC(3,3,Pelem) == \"def\"\r\n     *             KC(10,10,Pelem) == \"abcdef\"  i.e. return as much as possible of the requested string\r\n     */\r\n\r\n    context(n: number, ln: number, outputTarget: OutputTarget): string {\r\n      var v = this.cachedContext.get(n, ln);\r\n      if(v !== null) {\r\n        return v;\r\n      }\r\n\r\n      var r = this.KC_(n, ln, outputTarget);\r\n      this.cachedContext.set(n, ln, r);\r\n      return r;\r\n    }\r\n\r\n    /**\r\n     * Get (uncached) keyboard context for a specified range, relative to caret\r\n     *\r\n     * @param       {number}      n       Number of characters to move back from caret\r\n     * @param       {number}      ln      Number of characters to return\r\n     * @param       {Object}      Pelem   Element to work with (must be currently focused element)\r\n     * @return      {string}              Context string\r\n     *\r\n     * Example     [abcdef|ghi] as INPUT, with the caret position marked by |:\r\n     *             KC(2,1,Pelem) == \"e\"\r\n     *             KC(3,3,Pelem) == \"def\"\r\n     *             KC(10,10,Pelem) == \"XXXXabcdef\"  i.e. return as much as possible of the requested string, where X = \\uFFFE\r\n     */\r\n    private KC_(n: number, ln: number, outputTarget: OutputTarget): string {\r\n      var tempContext = \u0027\u0027;\r\n\r\n      // If we have a selection, we have an empty context\r\n      tempContext = outputTarget.isSelectionEmpty() ? outputTarget.getTextBeforeCaret() : \"\";\r\n\r\n      if(tempContext._kmwLength() \u003c n) {\r\n        tempContext = Array(n-tempContext._kmwLength()+1).join(\"\\uFFFE\") + tempContext;\r\n      }\r\n\r\n      return tempContext._kmwSubstr(-n)._kmwSubstr(0,ln);\r\n    }\r\n\r\n    /**\r\n     * Function     nul           KN\r\n     * Scope        Public\r\n     * @param       {number}      n       Length of context to check\r\n     * @param       {Object}      Ptarg   Element to work with (must be currently focused element)\r\n     * @return      {boolean}             True if length of context is less than or equal to n\r\n     * Description  Test length of context, return true if the length of the context is less than or equal to n\r\n     *\r\n     * Example     [abc|def] as INPUT, with the caret position marked by |:\r\n     *             KN(3,Pelem) == TRUE\r\n     *             KN(2,Pelem) == FALSE\r\n     *             KN(4,Pelem) == TRUE\r\n     */\r\n    nul(n: number, outputTarget: OutputTarget): boolean {\r\n      var cx=this.context(n+1, 1, outputTarget);\r\n\r\n      // With #31, the result will be a replacement character if context is empty.\r\n      return cx === \"\\uFFFE\";\r\n    }\r\n\r\n    /**\r\n     * Function     contextMatch  KCM\r\n     * Scope        Public\r\n     * @param       {number}      n       Number of characters to move back from caret\r\n     * @param       {Object}      Ptarg   Focused element\r\n     * @param       {string}      val     String to match\r\n     * @param       {number}      ln      Number of characters to return\r\n     * @return      {boolean}             True if selected context matches val\r\n     * Description  Test keyboard context for match\r\n     */\r\n    contextMatch(n: number, outputTarget: OutputTarget, val: string, ln: number): boolean {\r\n      var cx=this.context(n, ln, outputTarget);\r\n      if(cx === val) {\r\n        return true; // I3318\r\n      }\r\n      outputTarget.deadkeys().resetMatched(); // I3318\r\n      return false;\r\n    }\r\n\r\n    /**\r\n     * Builds the *cached or uncached* keyboard context for a specified range, relative to caret\r\n     *\r\n     * @param       {number}      n       Number of characters to move back from caret\r\n     * @param       {number}      ln      Number of characters to return\r\n     * @param       {Object}      Pelem   Element to work with (must be currently focused element)\r\n     * @return      {Array}               Context array (of strings and numbers)\r\n     */\r\n    private _BuildExtendedContext(n: number, ln: number, outputTarget: OutputTarget): CachedExEntry {\r\n      var cache: CachedExEntry = this.cachedContextEx.get(n, ln);\r\n      if(cache !== null) {\r\n        return cache;\r\n      } else {\r\n        // By far the easiest way to correctly build what we want is to start from the right and work to what we need.\r\n        // We may have done it for a similar cursor position before.\r\n        cache = this.cachedContextEx.get(n, n);\r\n        if(cache === null) {\r\n          // First, let\u0027s make sure we have a cloned, sorted copy of the deadkey array.\r\n          let unmatchedDeadkeys = outputTarget.deadkeys().toSortedArray(); // Is reverse-order sorted for us already.\r\n\r\n          // Time to build from scratch!\r\n          var index = 0;\r\n          cache = { valContext: [], deadContext: []};\r\n          while(cache.valContext.length \u003c n) {\r\n            // As adapted from `deadkeyMatch`.\r\n            var sp = outputTarget.getDeadkeyCaret();\r\n            var deadPos = sp - index;\r\n            if(unmatchedDeadkeys.length \u003e 0 \u0026\u0026 unmatchedDeadkeys[0].p \u003e deadPos) {\r\n              // We have deadkeys at the right-hand side of the caret!  They don\u0027t belong in the context, so pop \u0027em off.\r\n              unmatchedDeadkeys.splice(0, 1);\r\n              continue;\r\n            } else if(unmatchedDeadkeys.length \u003e 0 \u0026\u0026 unmatchedDeadkeys[0].p == deadPos) {\r\n              // Take the deadkey.\r\n              cache.deadContext[n-cache.valContext.length-1] = unmatchedDeadkeys[0];\r\n              cache.valContext = ([unmatchedDeadkeys[0].d] as (string|number)[]).concat(cache.valContext);\r\n              unmatchedDeadkeys.splice(0, 1);\r\n            } else {\r\n              // Take the character.  We get \"\\ufffe\" if it doesn\u0027t exist.\r\n              var kc = this.context(++index, 1, outputTarget);\r\n              cache.valContext = ([kc] as (string|number)[]).concat(cache.valContext);\r\n            }\r\n          }\r\n          this.cachedContextEx.set(n, n, cache);\r\n        }\r\n\r\n        // Now that we have the cache...\r\n        var subCache = cache;\r\n        subCache.valContext = subCache.valContext.slice(0, ln);\r\n        for(var i=0; i \u003c subCache.valContext.length; i++) {\r\n          if(subCache[i] == \u0027\\ufffe\u0027) {\r\n            subCache.valContext.splice(0, 1);\r\n            subCache.deadContext.splice(0, 1);\r\n          }\r\n        }\r\n\r\n        if(subCache.valContext.length == 0) {\r\n          subCache.valContext = [\u0027\\ufffe\u0027];\r\n          subCache.deadContext = [];\r\n        }\r\n\r\n        this.cachedContextEx.set(n, ln, subCache);\r\n\r\n        return subCache;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Function       fullContextMatch    KFCM\r\n     * Scope          Private\r\n     * @param         {number}    n       Number of characters to move back from caret\r\n     * @param         {Object}    Ptarg   Focused element\r\n     * @param         {Array}     rule    An array of ContextEntries to match.\r\n     * @return        {boolean}           True if the fully-specified rule context matches the current KMW state.\r\n     *\r\n     * A KMW 10+ function designed to bring KMW closer to Keyman Desktop functionality,\r\n     * near-directly modeling (externally) the compiled form of Desktop rules\u0027 context section.\r\n     */\r\n    fullContextMatch(n: number, outputTarget: OutputTarget, rule: ContextEntry[]): boolean {\r\n      // Stage one:  build the context index map.\r\n      var fullContext = this._BuildExtendedContext(n, rule.length, outputTarget);\r\n      this.ruleContextEx = this.cachedContextEx.clone();\r\n      var context = fullContext.valContext;\r\n      var deadContext = fullContext.deadContext;\r\n\r\n      var mismatch = false;\r\n\r\n      // This symbol internally indicates lack of context in a position.  (See KC_)\r\n      const NUL_CONTEXT = \"\\uFFFE\";\r\n\r\n      var assertNever = function(x: never): never {\r\n        // Could be accessed by improperly handwritten calls to `fullContextMatch`.\r\n        throw new Error(\"Unexpected object in fullContextMatch specification: \" + x);\r\n      }\r\n\r\n      // Stage two:  time to match against the rule specified.\r\n      for(var i=0; i \u003c rule.length; i++) {\r\n        if(typeof rule[i] == \u0027string\u0027) {\r\n          var str = rule[i] as string;\r\n          if(str !== context[i]) {\r\n            mismatch = true;\r\n            break;\r\n          }\r\n        } else {\r\n          // TypeScript needs a cast to this intermediate type to do its discriminated union magic.\r\n          var r = rule[i] as ContextNonCharEntry;\r\n          switch(r.t) {\r\n            case \u0027d\u0027:\r\n              // We still need to set a flag here;\r\n              if(r[\u0027d\u0027] !== context[i]) {\r\n                mismatch = true;\r\n              } else {\r\n                deadContext[i].set();\r\n              }\r\n              break;\r\n            case \u0027a\u0027:\r\n              var lookup: KeyboardStoreElement;\r\n\r\n              if(typeof context[i] == \u0027string\u0027) {\r\n                lookup = context[i] as string;\r\n              } else {\r\n                lookup = {\u0027t\u0027: \u0027d\u0027, \u0027d\u0027: context[i] as number};\r\n              }\r\n\r\n              var result = this.any(i, lookup, r.a);\r\n\r\n              if(!r.n) { // If it\u0027s a standard \u0027any\u0027...\r\n                if(!result) {\r\n                  mismatch = true;\r\n                } else if(deadContext[i] !== undefined) {\r\n                  // It\u0027s a deadkey match, so indicate that.\r\n                  deadContext[i].set();\r\n                }\r\n                // \u0027n\u0027 for \u0027notany\u0027.\r\n                // - if `result === true`, `any` would match:  this should thus fail.\r\n                // - if `context[i] === NUL_CONTEXT`, `notany` should not match.\r\n              } else if(r.n \u0026\u0026 (result || context[i] === NUL_CONTEXT)) {\r\n                mismatch = true;\r\n              }\r\n              break;\r\n            case \u0027i\u0027:\r\n              // The context will never hold a \u0027beep.\u0027\r\n              var ch = this._Index(r.i, r.o) as string | RuleDeadkey;\r\n\r\n              if(ch !== undefined \u0026\u0026 (typeof(ch) == \u0027string\u0027 ? ch : ch.d) !== context[i]) {\r\n                mismatch = true;\r\n              } else if(deadContext[i] !== undefined) {\r\n                deadContext[i].set();\r\n              }\r\n              break;\r\n            case \u0027c\u0027:\r\n              if(context[r.c - 1] !== context[i]) {\r\n                mismatch = true;\r\n              } else if(deadContext[i] !== undefined) {\r\n                deadContext[i].set();\r\n              }\r\n              break;\r\n            case \u0027n\u0027:\r\n              // \\uFFFE is the internal \u0027no context here sentinel\u0027.\r\n              if(context[i] != NUL_CONTEXT) {\r\n                mismatch = true;\r\n              }\r\n              break;\r\n            default:\r\n              assertNever(r);\r\n          }\r\n        }\r\n      }\r\n\r\n      if(mismatch) {\r\n        // Reset the matched \u0027any\u0027 indices, if any.\r\n        outputTarget.deadkeys().resetMatched();\r\n        this._AnyIndices = [];\r\n      }\r\n\r\n      return !mismatch;\r\n    }\r\n\r\n    /**\r\n     * Function     KIK\r\n     * Scope        Public\r\n     * @param       {Object}  e   keystroke event\r\n     * @return      {boolean}     true if keypress event\r\n     * Description  Test if event as a keypress event\r\n     */\r\n    isKeypress(e: KeyEvent): boolean {\r\n      if(this.activeKeyboard.isMnemonic) {   // I1380 - support KIK for positional layouts\r\n        return !e.LisVirtualKey;             // will now return true for U_xxxx keys, but not for T_xxxx keys\r\n      } else {\r\n        return KeyMapping._USKeyCodeToCharCode(e) ? true : false; // I1380 - support KIK for positional layouts\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Maps a KeyEvent\u0027s modifiers to their appropriate value for key-rule evaluation\r\n     * based on the rule\u0027s specified target modifier set.\r\n     *\r\n     * Mostly used to correct chiral OSK-keys targeting non-chiral rules.\r\n     * @param e The source KeyEvent\r\n     * @returns\r\n     */\r\n    private static matchModifiersToRuleChirality(eventModifiers: number, targetModifierMask: number): number {\r\n      const CHIRAL_ALT  = Codes.modifierCodes[\"LALT\"]  | Codes.modifierCodes[\"RALT\"];\r\n      const CHIRAL_CTRL = Codes.modifierCodes[\"LCTRL\"] | Codes.modifierCodes[\"RCTRL\"];\r\n\r\n      let modifiers = eventModifiers;\r\n\r\n      // If the target rule does not use chiral alt...\r\n      if(!(targetModifierMask \u0026 CHIRAL_ALT)) {\r\n        const altIntersection  = modifiers \u0026 CHIRAL_ALT;\r\n\r\n        if(altIntersection) {\r\n          // Undo the chiral part         and replace with non-chiral.\r\n          modifiers ^= altIntersection  | Codes.modifierCodes[\"ALT\"];\r\n        }\r\n      }\r\n\r\n      // If the target rule does not use chiral ctrl...\r\n      if(!(targetModifierMask \u0026 CHIRAL_CTRL)) {\r\n        const ctrlIntersection = modifiers \u0026 CHIRAL_CTRL;\r\n\r\n        if(ctrlIntersection) {\r\n          // Undo the chiral part         and replace with non-chiral.\r\n          modifiers ^= ctrlIntersection | Codes.modifierCodes[\"CTRL\"];\r\n        }\r\n      }\r\n\r\n      return modifiers;\r\n    }\r\n\r\n    /**\r\n     * Function     keyMatch      KKM\r\n     * Scope        Public\r\n     * @param       {Object}      e           keystroke event\r\n     * @param       {number}      Lruleshift\r\n     * @param       {number}      Lrulekey\r\n     * @return      {boolean}                 True if key matches rule\r\n     * Description  Test keystroke with modifiers against rule\r\n     */\r\n    keyMatch(e: KeyEvent, Lruleshift:number, Lrulekey:number): boolean {\r\n      var retVal = false; // I3318\r\n      var keyCode = (e.Lcode == 173 ? 189 : e.Lcode);  //I3555 (Firefox hyphen issue)\r\n\r\n      let bitmask = this.activeKeyboard.modifierBitmask;\r\n      let Codes = com.keyman.text.Codes;\r\n      var modifierBitmask = bitmask \u0026 Codes.modifierBitmasks[\"ALL\"];\r\n      var stateBitmask = bitmask \u0026 Codes.stateBitmasks[\"ALL\"];\r\n\r\n      const eventModifiers = KeyboardInterface.matchModifiersToRuleChirality(e.Lmodifiers, Lruleshift);\r\n\r\n      if(e.vkCode \u003e 255) {\r\n        keyCode = e.vkCode; // added to support extended (touch-hold) keys for mnemonic layouts\r\n      }\r\n\r\n      if(e.LisVirtualKey || keyCode \u003e 255) {\r\n        if((Lruleshift \u0026 0x4000) == 0x4000 || (keyCode \u003e 255)) { // added keyCode test to support extended keys\r\n          retVal = ((Lrulekey == keyCode) \u0026\u0026 ((Lruleshift \u0026 modifierBitmask) == eventModifiers)); //I3318, I3555\r\n          retVal = retVal \u0026\u0026 this.stateMatch(e, Lruleshift \u0026 stateBitmask);\r\n        }\r\n      } else if((Lruleshift \u0026 0x4000) == 0) {\r\n        retVal = (keyCode == Lrulekey); // I3318, I3555\r\n      }\r\n      if(!retVal) {\r\n        this.activeTargetOutput.deadkeys().resetMatched();  // I3318\r\n      }\r\n      return retVal; // I3318\r\n    };\r\n\r\n    /**\r\n     * Function     stateMatch    KSM\r\n     * Scope        Public\r\n     * @param       {Object}      e       keystroke event\r\n     * @param       {number}      Lstate\r\n     * Description  Test keystroke against state key rules\r\n     */\r\n    stateMatch(e: KeyEvent, Lstate: number) {\r\n      return ((Lstate \u0026 e.Lstates) == Lstate);\r\n    }\r\n\r\n    /**\r\n     * Function     keyInformation  KKI\r\n     * Scope        Public\r\n     * @param       {Object}      e\r\n     * @return      {Object}              Object with event\u0027s virtual key flag, key code, and modifiers\r\n     * Description  Get object with extended key event information\r\n     */\r\n    keyInformation(e: KeyEvent): KeyInformation {\r\n      var ei = new KeyInformation();\r\n      ei[\u0027vk\u0027] = e.LisVirtualKey;\r\n      ei[\u0027code\u0027] = e.Lcode;\r\n      ei[\u0027modifiers\u0027] = e.Lmodifiers;\r\n      return ei;\r\n    };\r\n\r\n    /**\r\n     * Function     deadkeyMatch  KDM\r\n     * Scope        Public\r\n     * @param       {number}      n       offset from current cursor position\r\n     * @param       {Object}      Ptarg   target element\r\n     * @param       {number}      d       deadkey\r\n     * @return      {boolean}             True if deadkey found selected context matches val\r\n     * Description  Match deadkey at current cursor position\r\n     */\r\n    deadkeyMatch(n: number, outputTarget: OutputTarget, d: number): boolean {\r\n      return outputTarget.hasDeadkeyMatch(n, d);\r\n    }\r\n\r\n    /**\r\n     * Function     beep          KB\r\n     * Scope        Public\r\n     * @param       {Object}      Pelem     element to flash\r\n     * Description  Flash body as substitute for audible beep; notify embedded device to vibrate\r\n     */\r\n    beep(outputTarget: OutputTarget): void {\r\n      this.resetContextCache();\r\n\r\n      // Denote as part of the matched rule\u0027s behavior.\r\n      this.ruleBehavior.beep = true;\r\n    }\r\n\r\n    _ExplodeStore(store: KeyboardStore): ComplexKeyboardStore {\r\n      if(typeof(store) == \u0027string\u0027) {\r\n        let cachedStores = this.activeKeyboard.explodedStores;\r\n\r\n        // Is the result cached?\r\n        if(cachedStores[store]) {\r\n          return cachedStores[store];\r\n        }\r\n\r\n        // Nope, so let\u0027s build its cache.\r\n        var result: ComplexKeyboardStore = [];\r\n        for(var i=0; i \u003c store._kmwLength(); i++) {\r\n          result.push(store._kmwCharAt(i));\r\n        }\r\n\r\n        // Cache the result for later!\r\n        cachedStores[store] = result;\r\n        return result;\r\n      } else {\r\n        return store;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Function     any           KA\r\n     * Scope        Public\r\n     * @param       {number}      n     character position (index)\r\n     * @param       {string}      ch    character to find in string\r\n     * @param       {string}      s     \u0027any\u0027 string\r\n     * @return      {boolean}           True if character found in \u0027any\u0027 string, sets index accordingly\r\n     * Description  Test for character matching\r\n     */\r\n    any(n: number, ch: KeyboardStoreElement, s: KeyboardStore): boolean {\r\n      if(ch == \u0027\u0027) {\r\n        return false;\r\n      }\r\n\r\n      s = this._ExplodeStore(s);\r\n      var Lix = -1;\r\n      for(var i=0; i \u003c s.length; i++) {\r\n        if(typeof(s[i]) == \u0027string\u0027) {\r\n          if(s[i] == ch) {\r\n            Lix = i;\r\n            break;\r\n          }\r\n        } else if(s[i][\u0027d\u0027] === ch[\u0027d\u0027]) {\r\n          Lix = i;\r\n          break;\r\n        }\r\n      }\r\n      this._AnyIndices[n] = Lix;\r\n      return Lix \u003e= 0;\r\n    }\r\n\r\n    /**\r\n     * Function     _Index\r\n     * Scope        Public\r\n     * @param       {string}      Ps      string\r\n     * @param       {number}      Pn      index\r\n     * Description  Returns the character from a store string according to the offset in the index array\r\n     */\r\n    _Index(Ps: KeyboardStore, Pn: number): KeyboardStoreElement {\r\n      Ps = this._ExplodeStore(Ps);\r\n\r\n      if(this._AnyIndices[Pn-1] \u003c Ps.length) {   //I3319\r\n        return Ps[this._AnyIndices[Pn-1]];\r\n      } else {\r\n        /* Should not be possible for a compiled keyboard, but may arise\r\n        * during the development of handwritten keyboards.\r\n        */\r\n        console.warn(\"Unmatched contextual index() statement detected in rule with index \" + Pn + \"!\");\r\n        return \"\";\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Function     indexOutput   KIO\r\n     * Scope        Public\r\n     * @param       {number}      Pdn     no of character to overwrite (delete)\r\n     * @param       {string}      Ps      string\r\n     * @param       {number}      Pn      index\r\n     * @param       {Object}      Pelem   element to output to\r\n     * Description  Output a character selected from the string according to the offset in the index array\r\n     */\r\n    indexOutput(Pdn: number, Ps: KeyboardStore, Pn: number, outputTarget: OutputTarget): void {\r\n      this.resetContextCache();\r\n\r\n      var assertNever = function(x: never): never {\r\n        // Could be accessed by improperly handwritten calls to `fullContextMatch`.\r\n        throw new Error(\"Unexpected object in fullContextMatch specification: \" + x);\r\n      }\r\n\r\n      var indexChar = this._Index(Ps, Pn);\r\n      if(indexChar !== \"\") {\r\n        if(typeof indexChar == \u0027string\u0027 ) {\r\n          this.output(Pdn, outputTarget, indexChar);  //I3319\r\n        } else if(indexChar[\u0027t\u0027]) {\r\n          var storeEntry = indexChar as StoreNonCharEntry;\r\n\r\n          switch(storeEntry.t) {\r\n            case \u0027b\u0027: // Beep commands may appear within stores.\r\n              this.beep(outputTarget);\r\n              break;\r\n            case \u0027d\u0027:\r\n              this.deadkeyOutput(Pdn, outputTarget, indexChar[\u0027d\u0027]);\r\n              break;\r\n            default:\r\n              assertNever(storeEntry);\r\n          }\r\n        } else { // For keyboards developed during 10.0\u0027s alpha phase - t:\u0027d\u0027 was assumed.\r\n          this.deadkeyOutput(Pdn, outputTarget, indexChar[\u0027d\u0027]);\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    /**\r\n     * Function     deleteContext KDC\r\n     * Scope        Public\r\n     * @param       {number}      dn      number of context entries to overwrite\r\n     * @param       {Object}      Pelem   element to output to\r\n     * @param       {string}      s       string to output\r\n     * Description  Keyboard output\r\n     */\r\n    deleteContext(dn: number, outputTarget: OutputTarget): void {\r\n      var context: CachedExEntry;\r\n\r\n      // We want to control exactly which deadkeys get removed.\r\n      if(dn \u003e 0) {\r\n        context = this._BuildExtendedContext(dn, dn, outputTarget);\r\n        let nulCount = 0;\r\n\r\n        for(var i=0; i \u003c context.valContext.length; i++) {\r\n          var dk = context.deadContext[i];\r\n\r\n          if(dk) {\r\n            // Remove deadkey in context.\r\n            outputTarget.deadkeys().remove(dk);\r\n\r\n            // Reduce our reported context size.\r\n            dn--;\r\n          } else if(context.valContext[i] == \"\\uFFFE\") {\r\n            // Count any `nul` sentinels that would contribute to our deletion count.\r\n            nulCount++;\r\n          }\r\n        }\r\n\r\n        // Prevent attempts to delete nul sentinels, as they don\u0027t exist in the actual context.\r\n        // (Addresses regression from KMW v 12.0 paired with Developer bug through same version)\r\n        let contextLength = context.valContext.length - nulCount;\r\n        if(dn \u003e contextLength) {\r\n          dn = contextLength;\r\n        }\r\n      }\r\n\r\n      // If a matched deadkey hasn\u0027t been deleted, we don\u0027t WANT to delete it.\r\n      outputTarget.deadkeys().resetMatched();\r\n\r\n      // Why reinvent the wheel?  Delete the remaining characters by \u0027inserting a blank string\u0027.\r\n      this.output(dn, outputTarget, \u0027\u0027);\r\n    }\r\n\r\n    /**\r\n     * Function     output        KO\r\n     * Scope        Public\r\n     * @param       {number}      dn      number of characters to overwrite\r\n     * @param       {Object}      Pelem   element to output to\r\n     * @param       {string}      s       string to output\r\n     * Description  Keyboard output\r\n     */\r\n    output(dn: number, outputTarget: OutputTarget, s:string): void {\r\n      this.resetContextCache();\r\n\r\n      outputTarget.saveProperties();\r\n      outputTarget.clearSelection();\r\n      outputTarget.deadkeys().deleteMatched(); // I3318\r\n      if(dn \u003e= 0) {\r\n        // Automatically manages affected deadkey positions.  Does not delete deadkeys b/c legacy behavior support.\r\n        outputTarget.deleteCharsBeforeCaret(dn);\r\n      }\r\n      // Automatically manages affected deadkey positions.\r\n      outputTarget.insertTextBeforeCaret(s);\r\n      outputTarget.restoreProperties();\r\n    }\r\n\r\n    /**\r\n     * `contextExOutput` function emits the character or object at `contextOffset` from the\r\n     * current matched rule\u0027s context. Introduced in Keyman 14.0, in order to resolve a\r\n     * gap between desktop and web core functionality for context(n) matching on notany().\r\n     * See #917 for additional detail.\r\n     * @alias       KCXO\r\n     * @public\r\n     * @param       {number}        Pdn            number of characters to delete left of cursor\r\n     * @param       {OutputTarget}  outputTarget   target to output to\r\n     * @param       {number}        contextLength  length of current rule context to retrieve\r\n     * @param       {number}        contextOffset  offset from start of current rule context, 1-based\r\n     */\r\n    contextExOutput(Pdn: number, outputTarget: OutputTarget, contextLength: number, contextOffset: number): void {\r\n      this.resetContextCache();\r\n\r\n      if(Pdn \u003e= 0) {\r\n        this.output(Pdn, outputTarget, \"\");\r\n      }\r\n\r\n      const context = this.ruleContextEx.get(contextLength, contextLength);\r\n      const dk = context.deadContext[contextOffset-1], vc = context.valContext[contextOffset-1];\r\n      if(dk) {\r\n        outputTarget.insertDeadkeyBeforeCaret(dk.d);\r\n      } else if(typeof vc == \u0027string\u0027) {\r\n        this.output(-1, outputTarget, vc);\r\n      } else {\r\n        throw new Error(\"contextExOutput: should never be a numeric valContext with no corresponding deadContext\");\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Function     deadkeyOutput KDO\r\n     * Scope        Public\r\n     * @param       {number}      Pdn     no of character to overwrite (delete)\r\n     * @param       {Object}      Pelem   element to output to\r\n     * @param       {number}      Pd      deadkey id\r\n     * Description  Record a deadkey at current cursor position, deleting Pdn characters first\r\n     */\r\n    deadkeyOutput(Pdn: number, outputTarget: OutputTarget, Pd: number): void {\r\n      this.resetContextCache();\r\n\r\n      if(Pdn \u003e= 0) {\r\n        this.output(Pdn, outputTarget,\"\");  //I3318 corrected to \u003e=\r\n      }\r\n\r\n      outputTarget.insertDeadkeyBeforeCaret(Pd);\r\n      //    _DebugDeadKeys(Pelem, \u0027KDeadKeyOutput: dn=\u0027+Pdn+\u0027; deadKey=\u0027+Pd);\r\n    }\r\n\r\n    /**\r\n     * KIFS compares the content of a system store with a string value\r\n     *\r\n     * @param       {number}      systemId    ID of the system store to test (only TSS_LAYER currently supported)\r\n     * @param       {string}      strValue    String value to compare to\r\n     * @param       {Object}      Pelem       Currently active element (may be needed by future tests)\r\n     * @return      {boolean}                 True if the test succeeds\r\n     */\r\n    ifStore(systemId: number, strValue: string, outputTarget: OutputTarget): boolean {\r\n      var result=true;\r\n      let store = this.systemStores[systemId];\r\n      if(store) {\r\n        result = store.matches(strValue);\r\n      }\r\n      return result; //Moved from previous line, now supports layer selection, Build 350\r\n    }\r\n\r\n    /**\r\n     * KSETS sets the value of a system store to a string\r\n     *\r\n     * @param       {number}      systemId    ID of the system store to set (only TSS_LAYER currently supported)\r\n     * @param       {string}      strValue    String to set as the system store content\r\n     * @param       {Object}      Pelem       Currently active element (may be needed in future tests)\r\n     * @return      {boolean}                 True if command succeeds\r\n     *                                        (i.e. for TSS_LAYER, if the layer is successfully selected)\r\n     *\r\n     * Note that option/variable stores are instead set within keyboard script code, as they only\r\n     * affect keyboard behavior.\r\n     */\r\n    setStore(systemId: number, strValue: string, outputTarget: OutputTarget): boolean {\r\n      this.resetContextCache();\r\n      if(systemId == KeyboardInterface.TSS_LAYER) {\r\n        // Denote the changed store as part of the matched rule\u0027s behavior.\r\n        this.ruleBehavior.setStore[systemId] = strValue;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Load an option store value from a cookie or default value\r\n     *\r\n     * @param       {string}      kbdName     keyboard internal name\r\n     * @param       {string}      storeName   store (option) name, embedded in cookie name\r\n     * @param       {string}      dfltValue   default value\r\n     * @return      {string}                  current or default option value\r\n     *\r\n     * This will only ever be called when the keyboard is loaded, as it is used by keyboards\r\n     * to initialize a store value on the keyboard\u0027s script object.\r\n     */\r\n    loadStore(kbdName: string, storeName:string, dfltValue:string): string {\r\n      this.resetContextCache();\r\n      if(this.variableStoreSerializer) {\r\n        let cValue = this.variableStoreSerializer.loadStore(kbdName, storeName);\r\n        return cValue[storeName] || dfltValue;\r\n      } else {\r\n        return dfltValue;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Save an option store value to a cookie\r\n     *\r\n     * @param       {string}      storeName   store (option) name, embedded in cookie name\r\n     * @param       {string}      optValue    option value to save\r\n     * @return      {boolean}                 true if save successful\r\n     *\r\n     * Note that a keyboard will freely manipulate the value of its variable stores on the\r\n     * script object within its own code.  This function\u0027s use is merely to _persist_ that\r\n     * value across sessions, providing a custom user default for later uses of the keyboard.\r\n     */\r\n    saveStore(storeName:string, optValue:string): boolean {\r\n      this.resetContextCache();\r\n      var kbd=this.activeKeyboard;\r\n      if(!kbd || typeof kbd.id == \u0027undefined\u0027 || kbd.id == \u0027\u0027) {\r\n        return false;\r\n      }\r\n\r\n      // And the lookup under that entry looks for the value under the store name, again.\r\n      let valueObj: VariableStore = {};\r\n      valueObj[storeName] = optValue;\r\n\r\n      // Null-check in case of invocation during unit-test\r\n      if(this.ruleBehavior) {\r\n        this.ruleBehavior.saveStore[storeName] = valueObj;\r\n      } else {\r\n        // We\u0027re in a unit-test environment, directly invoking this method from outside of a keyboard.\r\n        // In this case, we should immediately commit the change.\r\n        this.variableStoreSerializer.saveStore(this.activeKeyboard.id, storeName, valueObj);\r\n      }\r\n      return true;\r\n    }\r\n\r\n    resetContextCache(): void {\r\n      this.cachedContext.reset();\r\n      this.cachedContextEx.reset();\r\n    }\r\n\r\n    defaultBackspace(outputTarget: OutputTarget) {\r\n      if(outputTarget.isSelectionEmpty()) {\r\n        // Delete the character left of the caret\r\n        this.output(1, outputTarget, \"\");\r\n      } else {\r\n        // Delete just the selection\r\n        this.output(0, outputTarget, \"\");\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Function     processNewContextEvent\r\n     * Scope        Private\r\n     * @param       {Object}        outputTarget   The target receiving input\r\n     * @param       {Object}        keystroke      The input keystroke (with its properties) to be mapped by the keyboard.\r\n     * Description  Calls the keyboard\u0027s `begin newContext` group\r\n     * @returns     {RuleBehavior}  Record of commands and state changes that result from executing `begin NewContext`\r\n     */\r\n    processNewContextEvent(outputTarget: OutputTarget, keystroke: KeyEvent): RuleBehavior {\r\n      if(!this.activeKeyboard) {\r\n        throw \"No active keyboard for keystroke processing!\";\r\n      }\r\n      return this.process(this.activeKeyboard.processNewContextEvent.bind(this.activeKeyboard), outputTarget, keystroke, true);\r\n    }\r\n\r\n    /**\r\n     * Function     processPostKeystroke\r\n     * Scope        Private\r\n     * @param       {Object}        outputTarget   The target receiving input\r\n     * @param       {Object}        keystroke      The input keystroke with relevant properties to be mapped by the keyboard.\r\n     * Description  Calls the keyboard\u0027s `begin postKeystroke` group\r\n     * @returns     {RuleBehavior}  Record of commands and state changes that result from executing `begin PostKeystroke`\r\n     */\r\n    processPostKeystroke(outputTarget: OutputTarget, keystroke: KeyEvent): RuleBehavior {\r\n      if(!this.activeKeyboard) {\r\n        throw \"No active keyboard for keystroke processing!\";\r\n      }\r\n      return this.process(this.activeKeyboard.processPostKeystroke.bind(this.activeKeyboard), outputTarget, keystroke, true);\r\n    }\r\n\r\n    /**\r\n     * Function     processKeystroke\r\n     * Scope        Private\r\n     * @param       {Object}        outputTarget   The target receiving input\r\n     * @param       {Object}        keystroke   The input keystroke (with its properties) to be mapped by the keyboard.\r\n     * Description  Encapsulates calls to keyboard input processing.\r\n     * @returns     {RuleBehavior}  Record of commands and state changes that result from executing `begin Unicode`\r\n     */\r\n    processKeystroke(outputTarget: OutputTarget, keystroke: KeyEvent): RuleBehavior {\r\n      if(!this.activeKeyboard) {\r\n        throw \"No active keyboard for keystroke processing!\";\r\n      }\r\n      return this.process(this.activeKeyboard.process.bind(this.activeKeyboard), outputTarget, keystroke, false);\r\n    }\r\n\r\n    private process(callee, outputTarget: OutputTarget, keystroke: KeyEvent, readonly: boolean): RuleBehavior {\r\n      // Clear internal state tracking data from prior keystrokes.\r\n      if(!outputTarget) {\r\n        throw \"No target specified for keyboard output!\";\r\n      } else if(!this.activeKeyboard) {\r\n        throw \"No active keyboard for keystroke processing!\";\r\n      } else if(!callee) {\r\n        throw \"No callee for keystroke processing!\";\r\n      }\r\n\r\n      outputTarget.invalidateSelection();\r\n\r\n      outputTarget.deadkeys().resetMatched();       // I3318\r\n      this.resetContextCache();\r\n\r\n      // Capture the initial state of the OutputTarget before any rules are matched.\r\n      let preInput = Mock.from(outputTarget, true);\r\n\r\n      // Capture the initial state of any variable stores\r\n      const cachedVariableStores = this.activeKeyboard.variableStores;\r\n\r\n      // Establishes the results object, allowing corresponding commands to set values here as appropriate.\r\n      this.ruleBehavior = new RuleBehavior();\r\n\r\n      // Ensure the settings are in place so that KIFS/ifState activates and deactivates\r\n      // the appropriate rule(s) for the modeled device.\r\n      this.activeDevice = keystroke.device;\r\n\r\n      // Calls the start-group of the active keyboard.\r\n      this.activeTargetOutput = outputTarget;\r\n      var matched = callee(outputTarget, keystroke);\r\n      this.activeTargetOutput = null;\r\n\r\n      // Finalize the rule\u0027s results.\r\n      this.ruleBehavior.transcription = outputTarget.buildTranscriptionFrom(preInput, keystroke, readonly);\r\n\r\n      // We always backup the changes to variable stores to the RuleBehavior, to\r\n      // be applied during finalization, then restore them to the cached initial\r\n      // values to avoid side-effects with predictive text mocks.\r\n      this.ruleBehavior.variableStores = this.activeKeyboard.variableStores;\r\n      this.activeKeyboard.variableStores = cachedVariableStores;\r\n\r\n      // `matched` refers to whether or not the FINAL rule (from any group) matched, rather than\r\n      // whether or not ANY rule matched.  If the final rule doesn\u0027t match, we trigger the key\u0027s\r\n      // default behavior (if appropriate).\r\n      //\r\n      // See https://github.com/keymanapp/keyman/pull/4350#issuecomment-768753852\r\n      this.ruleBehavior.triggerKeyDefault = !matched;\r\n\r\n      // Clear our result-tracking variable to prevent any possible pollution for future processing.\r\n      let behavior = this.ruleBehavior;\r\n      this.ruleBehavior = null;\r\n\r\n      return behavior;\r\n    }\r\n\r\n    /**\r\n     * Applies the dictionary of variable store values to the active keyboard\r\n     *\r\n     * Has no effect on keyboards compiled with 14.0 or earlier; system store\r\n     * names are not exposed unless compiled with Developer 15.0 or later.\r\n     *\r\n     * @param stores A dictionary of stores which should be found in the\r\n     *               keyboard\r\n     */\r\n    applyVariableStores(stores: com.keyman.keyboards.VariableStoreDictionary): void {\r\n      this.activeKeyboard.variableStores = stores;\r\n    }\r\n\r\n    /**\r\n     * Publishes the KeyboardInterface\u0027s shorthand API names.  As this assigns the current functions\r\n     * held by the longform versions, note that this should be called after replacing any of them via\r\n     * JS method extension.\r\n     *\r\n     * DOM-aware KeymanWeb should call this after its domKbdInterface.ts code is loaded, as it replaces\r\n     * a few.  (This is currently done within its kmwapi.ts.)\r\n     */\r\n    static __publishShorthandAPI() {\r\n      // Keyboard callbacks\r\n      let prototype = this.prototype;\r\n\r\n      var exportKBCallback = function(miniName: string, longName: string) {\r\n        prototype[miniName] = prototype[longName];\r\n      }\r\n\r\n      exportKBCallback(\u0027KSF\u0027, \u0027saveFocus\u0027);\r\n      exportKBCallback(\u0027KBR\u0027, \u0027beepReset\u0027);\r\n      exportKBCallback(\u0027KT\u0027, \u0027insertText\u0027);\r\n      exportKBCallback(\u0027KR\u0027, \u0027registerKeyboard\u0027);\r\n      exportKBCallback(\u0027KRS\u0027, \u0027registerStub\u0027);\r\n      exportKBCallback(\u0027KC\u0027, \u0027context\u0027);\r\n      exportKBCallback(\u0027KN\u0027, \u0027nul\u0027);\r\n      exportKBCallback(\u0027KCM\u0027, \u0027contextMatch\u0027);\r\n      exportKBCallback(\u0027KFCM\u0027, \u0027fullContextMatch\u0027);\r\n      exportKBCallback(\u0027KIK\u0027, \u0027isKeypress\u0027);\r\n      exportKBCallback(\u0027KKM\u0027, \u0027keyMatch\u0027);\r\n      exportKBCallback(\u0027KSM\u0027, \u0027stateMatch\u0027);\r\n      exportKBCallback(\u0027KKI\u0027, \u0027keyInformation\u0027);\r\n      exportKBCallback(\u0027KDM\u0027, \u0027deadkeyMatch\u0027);\r\n      exportKBCallback(\u0027KB\u0027, \u0027beep\u0027);\r\n      exportKBCallback(\u0027KA\u0027, \u0027any\u0027);\r\n      exportKBCallback(\u0027KDC\u0027, \u0027deleteContext\u0027);\r\n      exportKBCallback(\u0027KO\u0027, \u0027output\u0027);\r\n      exportKBCallback(\u0027KDO\u0027, \u0027deadkeyOutput\u0027);\r\n      exportKBCallback(\u0027KCXO\u0027, \u0027contextExOutput\u0027);\r\n      exportKBCallback(\u0027KIO\u0027, \u0027indexOutput\u0027);\r\n      exportKBCallback(\u0027KIFS\u0027, \u0027ifStore\u0027);\r\n      exportKBCallback(\u0027KSETS\u0027, \u0027setStore\u0027);\r\n      exportKBCallback(\u0027KLOAD\u0027, \u0027loadStore\u0027);\r\n      exportKBCallback(\u0027KSAVE\u0027, \u0027saveStore\u0027);\r\n    }\r\n  }\r\n\r\n  (function() {\r\n    // This will be the only call within the keyboard-processor module.\r\n    KeyboardInterface.__publishShorthandAPI();\r\n  }());\r\n}","/// \u003creference path=\"defaultLayouts.ts\" /\u003e\r\n/// \u003creference path=\"activeLayout.ts\" /\u003e\r\n/// \u003creference path=\"../text/kbdInterface.ts\" /\u003e\r\n\r\nnamespace com.keyman.keyboards {\r\n  /**\r\n   * Stores preprocessed properties of a keyboard for quick retrieval later.\r\n   */\r\n  class CacheTag {\r\n    stores: {[storeName: string]: text.ComplexKeyboardStore};\r\n\r\n    constructor() {\r\n      this.stores = {};\r\n    }\r\n  }\r\n\r\n  export enum LayoutState {\r\n    NOT_LOADED = undefined,\r\n    POLYFILLED = 1,\r\n    CALIBRATED = 2\r\n  }\r\n\r\n  export interface VariableStoreDictionary {\r\n    [name: string]: string;\r\n  };\r\n\r\n\r\n  /**\r\n   * Acts as a wrapper class for Keyman keyboards compiled to JS, providing type information\r\n   * and keyboard-centered functionality in an object-oriented way without modifying the\r\n   * wrapped keyboard itself.\r\n   */\r\n  export class Keyboard {\r\n    public static DEFAULT_SCRIPT_OBJECT = {\r\n      \u0027gs\u0027: function(outputTarget, keystroke) { return false; }, // no matching rules; rely on defaultRuleOutput entirely\r\n      \u0027KI\u0027: \u0027\u0027, // The currently-existing default keyboard ID; we already have checks that focus against this.\r\n      \u0027KN\u0027: \u0027\u0027,\r\n      \u0027KV\u0027: Layouts.DEFAULT_RAW_SPEC,\r\n      \u0027KM\u0027: 0 // May not be the best default, but this matches current behavior when there is no activeKeyboard.\r\n    }\r\n\r\n    /**\r\n     * This is the object provided to KeyboardInterface.registerKeyboard - that is, the keyboard\r\n     * being wrapped.\r\n     *\r\n     * TODO:  Make this private instead.  But there are a LOT of references that must be rooted out first.\r\n     */\r\n    public readonly scriptObject: any;\r\n    private layoutStates: {[layout: string]: LayoutState};\r\n\r\n    constructor(keyboardScript: any) {\r\n      if(keyboardScript) {\r\n        this.scriptObject = keyboardScript;\r\n      } else {\r\n        this.scriptObject = Keyboard.DEFAULT_SCRIPT_OBJECT;\r\n      }\r\n      this.layoutStates = {};\r\n    }\r\n\r\n    /**\r\n     * Calls the keyboard\u0027s `gs` function, which represents the keyboard source\u0027s begin Unicode group.\r\n     */\r\n    process(outputTarget: text.OutputTarget, keystroke: text.KeyEvent): boolean {\r\n      return this.scriptObject[\u0027gs\u0027](outputTarget, keystroke);\r\n    }\r\n\r\n    /**\r\n     * Calls the keyboard\u0027s `gn` function, which represents the keyboard source\u0027s begin newContext group.\r\n     */\r\n    processNewContextEvent(outputTarget: text.OutputTarget, keystroke: text.KeyEvent): boolean {\r\n      return this.scriptObject[\u0027gn\u0027] ? this.scriptObject[\u0027gn\u0027](outputTarget, keystroke) : false;\r\n    }\r\n\r\n    /**\r\n     * Calls the keyboard\u0027s `gpk` function, which represents the keyboard source\u0027s begin postKeystroke group.\r\n     */\r\n    processPostKeystroke(outputTarget: text.OutputTarget, keystroke: text.KeyEvent): boolean {\r\n      return this.scriptObject[\u0027gpk\u0027] ? this.scriptObject[\u0027gpk\u0027](outputTarget, keystroke) : false;\r\n    }\r\n\r\n    get isHollow(): boolean {\r\n      return this.scriptObject == Keyboard.DEFAULT_SCRIPT_OBJECT;\r\n    }\r\n\r\n    get id(): string {\r\n      return this.scriptObject[\u0027KI\u0027];\r\n    }\r\n\r\n    get name(): string {\r\n      return this.scriptObject[\u0027KN\u0027];\r\n    }\r\n\r\n    /**\r\n     * Cache variable store values\r\n     *\r\n     * Primarily used for predictive text to prevent variable store\r\n     * values from being changed in \u0027fat finger\u0027 processing.\r\n     *\r\n     * KVS is available in keyboards compiled with Keyman Developer 15\r\n     * and later versions. See #2924.\r\n     *\r\n     * @returns an object with each property referencing a variable store\r\n     */\r\n    get variableStores(): VariableStoreDictionary {\r\n      const storeNames = this.scriptObject[\u0027KVS\u0027];\r\n      let values = {};\r\n      if(Array.isArray(storeNames)) {\r\n        for(let store of storeNames) {\r\n          values[store] = this.scriptObject[store];\r\n        }\r\n      }\r\n      return values;\r\n    }\r\n\r\n    /**\r\n     * Restore variable store values from cache\r\n     *\r\n     * KVS is available in keyboards compiled with Keyman Developer 15\r\n     * and later versions. See #2924.\r\n     *\r\n     * @param values  name-value pairs for each store value\r\n     */\r\n    set variableStores(values: VariableStoreDictionary) {\r\n      const storeNames = this.scriptObject[\u0027KVS\u0027];\r\n      if(Array.isArray(storeNames)) {\r\n        for(let store of storeNames) {\r\n          // If the value is not present in the cache, don\u0027t overwrite it;\r\n          // while this is not used in initial implementation, we could use\r\n          // it in future to update a single variable store value rather than\r\n          // the whole cache.\r\n          if(typeof values[store] == \u0027string\u0027) {\r\n            this.scriptObject[store] = values[store];\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // TODO:  Better typing.\r\n    private get _legacyLayoutSpec(): any {\r\n      return this.scriptObject[\u0027KV\u0027];  // used with buildDefaultLayout; layout must be constructed at runtime.\r\n    }\r\n\r\n    // May return null if no layouts exist or have been initialized.\r\n    private get _layouts(): {[formFactor: string]: LayoutFormFactor} {\r\n      return this.scriptObject[\u0027KVKL\u0027];  // This one is compiled by Developer\u0027s visual keyboard layout editor.\r\n    }\r\n\r\n    private set _layouts(value) {\r\n      this.scriptObject[\u0027KVKL\u0027] = value;\r\n    }\r\n\r\n    get compilerVersion(): utils.Version {\r\n      return new utils.Version(this.scriptObject[\u0027KVER\u0027]);\r\n    }\r\n\r\n    get isMnemonic(): boolean {\r\n      return !!this.scriptObject[\u0027KM\u0027];\r\n    }\r\n\r\n    get definesPositionalOrMnemonic(): boolean {\r\n      return typeof this.scriptObject[\u0027KM\u0027] != \u0027undefined\u0027;\r\n    }\r\n\r\n    /**\r\n     * HTML help text, as specified by either the \u0026kmw_helptext or \u0026kmw_helpfile system stores.\r\n     *\r\n     * Reference: https://help.keyman.com/developer/language/reference/kmw_helptext,\r\n     *            https://help.keyman.com/developer/language/reference/kmw_helpfile\r\n     */\r\n    get helpText(): string {\r\n      return this.scriptObject[\u0027KH\u0027];\r\n    }\r\n\r\n    /**\r\n     * Embedded JS script designed for use with a keyboard\u0027s HTML help text.  Always defined\r\n     * within the file referenced by \u0026kmw_embedjs in a keyboard\u0027s source, though that file\r\n     * may also contain _other_ script definitions as well.  (`KHF` must be explicitly defined\r\n     * within that file.)\r\n     */\r\n    get hasScript(): boolean {\r\n      return !!this.scriptObject[\u0027KHF\u0027];\r\n    }\r\n\r\n    /**\r\n     * Embeds a custom script for use by the OSK, which may be interactive (like with sil_euro_latin).\r\n     * Note:  this must be called AFTER any contents of `helpText` have been inserted into the DOM.\r\n     * (See sil_euro_latin\u0027s source -\u003e sil_euro_latin_js.txt)\r\n     *\r\n     * Reference: https://help.keyman.com/developer/language/reference/kmw_embedjs\r\n     */\r\n    embedScript(e: any) {\r\n      // e:  Expects the OSKManager\u0027s _Box element.  We don\u0027t add type info here b/c it would\r\n      //     reference the DOM.\r\n      this.scriptObject[\u0027KHF\u0027](e);\r\n    }\r\n\r\n    get oskStyling(): string {\r\n      return this.scriptObject[\u0027KCSS\u0027];\r\n    }\r\n\r\n    /**\r\n     * true if this keyboard uses a (legacy) pick list (Chinese, Japanese, Korean, etc.)\r\n     *\r\n     * TODO:  Make a property on keyboards (say, `isPickList` / `KPL`) to signal this when we\r\n     *        get around to better, generalized picker-list support.\r\n     */\r\n    get isCJK(): boolean { // I3363 (Build 301)\r\n      var lg: string;\r\n      if(typeof(this.scriptObject[\u0027KLC\u0027]) != \u0027undefined\u0027) {\r\n        lg = this.scriptObject[\u0027KLC\u0027];\r\n      } else if(typeof(this.scriptObject[\u0027LanguageCode\u0027]) != \u0027undefined\u0027) {\r\n        lg = this.scriptObject[\u0027LanguageCode\u0027];\r\n      }\r\n\r\n      // While some of these aren\u0027t proper BCP-47 language codes, the CJK keyboards predate our use of BCP-47.\r\n      // So, we preserve the old ISO 639-3 codes, as that\u0027s what the keyboards are matching against.\r\n      return ((lg == \u0027cmn\u0027) || (lg == \u0027jpn\u0027) || (lg == \u0027kor\u0027));\r\n    }\r\n\r\n    get isRTL(): boolean {\r\n      return !!this.scriptObject[\u0027KRTL\u0027];\r\n    }\r\n\r\n    /**\r\n     * Obtains the currently-active modifier bitmask for the active keyboard.\r\n     */\r\n    get modifierBitmask(): number {\r\n      // NON_CHIRAL is the default bitmask if KMBM is not defined.\r\n      // We always need a bitmask to compare against, as seen in `isChiral`.\r\n      return this.scriptObject[\u0027KMBM\u0027] || text.Codes.modifierBitmasks[\u0027NON_CHIRAL\u0027];\r\n    }\r\n\r\n    get isChiral(): boolean {\r\n      return !!(this.modifierBitmask \u0026 text.Codes.modifierBitmasks[\u0027IS_CHIRAL\u0027]);\r\n    }\r\n\r\n    get desktopFont(): string {\r\n      if(this.scriptObject[\u0027KV\u0027]) {\r\n        return this.scriptObject[\u0027KV\u0027][\u0027F\u0027];\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    private get cacheTag(): CacheTag {\r\n      let tag = this.scriptObject[\u0027_kmw\u0027];\r\n\r\n      if(!tag) {\r\n        tag = new CacheTag();\r\n        this.scriptObject[\u0027_kmw\u0027] = tag;\r\n      }\r\n\r\n      return tag;\r\n    }\r\n\r\n    get explodedStores(): {[storeName: string]: text.ComplexKeyboardStore} {\r\n      return this.cacheTag.stores;\r\n    }\r\n\r\n    /**\r\n     * Signifies whether or not a layout or OSK should include AltGr / Right-alt emulation for this keyboard.\r\n     * @param   {Object=}   keyLabels\r\n     * @return  {boolean}\r\n     */\r\n    get emulatesAltGr(): boolean {\r\n      let modifierCodes = text.Codes.modifierCodes;\r\n\r\n      // If we\u0027re not chiral, we\u0027re not emulating.\r\n      if(!this.isChiral) {\r\n        return false;\r\n      }\r\n\r\n      if(this._legacyLayoutSpec == null) {\r\n        return false;\r\n      }\r\n\r\n      // Only exists in KMW 10.0+, but before that Web had no chirality support, so... return false.\r\n      let layers = this._legacyLayoutSpec[\u0027KLS\u0027];\r\n      if(!layers) {\r\n        return false;\r\n      }\r\n\r\n      var emulationMask = modifierCodes[\u0027LCTRL\u0027] | modifierCodes[\u0027LALT\u0027];\r\n      var unshiftedEmulationLayer = layers[Layouts.getLayerId(emulationMask)];\r\n      var shiftedEmulationLayer = layers[Layouts.getLayerId(modifierCodes[\u0027SHIFT\u0027] | emulationMask)];\r\n\r\n      // buildDefaultLayout ensures that these are aliased to the original modifier set being emulated.\r\n      // As a result, we can directly test for reference equality.\r\n      //\r\n      // This allows us to still return `true` after creating the layers for emulation; during keyboard\r\n      // construction, the two layers should be null for AltGr emulation to succeed.\r\n      if(unshiftedEmulationLayer != null \u0026\u0026\r\n          unshiftedEmulationLayer != layers[Layouts.getLayerId(modifierCodes[\u0027RALT\u0027])]) {\r\n        return false;\r\n      }\r\n\r\n      if(shiftedEmulationLayer != null \u0026\u0026\r\n          shiftedEmulationLayer != layers[Layouts.getLayerId(modifierCodes[\u0027RALT\u0027] | modifierCodes[\u0027SHIFT\u0027])]) {\r\n        return false;\r\n      }\r\n\r\n      // It\u0027s technically possible for the OSK to not specify anything while allowing chiral input.  A last-ditch catch:\r\n      var bitmask = this.modifierBitmask;\r\n      if((bitmask \u0026 emulationMask) != emulationMask) {\r\n        // At least one of the emulation modifiers is never used by the keyboard!  We can confirm everything\u0027s safe.\r\n        return true;\r\n      }\r\n\r\n      if(unshiftedEmulationLayer == null \u0026\u0026 shiftedEmulationLayer == null) {\r\n        // We\u0027ve run out of things to go on; we can\u0027t detect if chiral AltGr emulation is intended or not.\r\n        // TODO:  handle this again!\r\n        // if(!osk.altGrWarning) {\r\n        //   console.warn(\"Could not detect if AltGr emulation is safe, but defaulting to active emulation!\")\r\n        //   // Avoid spamming the console with warnings on every call of the method.\r\n        //   osk.altGrWarning = true;\r\n        // }\r\n        return true;\r\n      }\r\n      return true;\r\n    }\r\n\r\n    get usesSupplementaryPlaneChars(): boolean {\r\n      let kbd = this.scriptObject;\r\n      // I3319 - SMP extension, I3363 (Build 301)\r\n      return kbd \u0026\u0026 ((kbd[\u0027KS\u0027] \u0026\u0026 kbd[\u0027KS\u0027] == 1) || kbd[\u0027KN\u0027] == \u0027Hieroglyphic\u0027);\r\n    }\r\n\r\n    usesDesktopLayoutOnDevice(device: utils.DeviceSpec) {\r\n      if(this.scriptObject[\u0027KVKL\u0027]) {\r\n        // A custom mobile layout is defined... but are we using it?\r\n        return device.formFactor == utils.FormFactor.Desktop;\r\n      } else {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @param       {number}    _PCommand     event code (16,17,18) or 0\r\n     * @param       {Object}    _PTarget      target element\r\n     * @param       {number}    _PData        1 or 0\r\n     * Notifies keyboard of keystroke or other event\r\n     */\r\n    notify(_PCommand: number, _PTarget: text.OutputTarget, _PData: number) { // I2187\r\n      // Good example use case - the Japanese CJK-picker keyboard\r\n      if(typeof(this.scriptObject[\u0027KNS\u0027]) == \u0027function\u0027) {\r\n        this.scriptObject[\u0027KNS\u0027](_PCommand, _PTarget, _PData);\r\n      }\r\n    }\r\n\r\n    private findOrConstructLayout(formFactor: utils.FormFactor): LayoutFormFactor {\r\n      if(this._layouts) {\r\n        // Search for viable layouts.  `null` is allowed for desktop form factors when help text is available,\r\n        // so we check explicitly against `undefined`.\r\n        if(this._layouts[formFactor] !== undefined) {\r\n          return this._layouts[formFactor];\r\n        } else if(formFactor == utils.FormFactor.Phone \u0026\u0026 this._layouts[utils.FormFactor.Tablet]) {\r\n          return this._layouts[utils.FormFactor.Phone] = this._layouts[utils.FormFactor.Tablet];\r\n        } else if(formFactor == utils.FormFactor.Tablet \u0026\u0026 this._layouts[utils.FormFactor.Phone]) {\r\n          return this._layouts[utils.FormFactor.Tablet] = this._layouts[utils.FormFactor.Phone];\r\n        }\r\n      }\r\n\r\n      // No pre-built layout available; time to start constructing it via defaults.\r\n      // First, if we have non-default keys specified by the [\u0027BK\u0027] array, we\u0027ve got\r\n      // enough to work with to build a default layout.\r\n      let rawSpecifications: any = null;  // TODO:  better typing, same type as this._legacyLayoutSpec.\r\n      if(this._legacyLayoutSpec != null \u0026\u0026 this._legacyLayoutSpec[\u0027KLS\u0027]) { // KLS is only specified whenever there are non-default keys.\r\n        rawSpecifications = this._legacyLayoutSpec;\r\n      } else if(this._legacyLayoutSpec != null \u0026\u0026 this._legacyLayoutSpec[\u0027BK\u0027] != null) {\r\n        var keyCaps=this._legacyLayoutSpec[\u0027BK\u0027];\r\n        for(var i=0; i\u003ckeyCaps.length; i++) {\r\n          if(keyCaps[i].length \u003e 0) {\r\n            rawSpecifications = this._legacyLayoutSpec;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // If we don\u0027t have key definitions to use for a layout but also lack help text or are a touch-based layout,\r\n      // we make a default layout anyway.  We have to show display something usable.\r\n      if(!rawSpecifications \u0026\u0026 (this.helpText == \u0027\u0027 || formFactor != utils.FormFactor.Desktop)) {\r\n        rawSpecifications = {\u0027F\u0027:\u0027Tahoma\u0027, \u0027BK\u0027: Layouts.dfltText};\r\n      }\r\n\r\n      // Regardless of success, we\u0027ll want to initialize the field that backs the property;\r\n      // may as well cache the default layout we just built, or a \u0027null\u0027 if it shouldn\u0027t exist..\r\n      if(!this._layouts) {\r\n        this._layouts = {};\r\n      }\r\n\r\n      // Final check - do we construct a layout, or is this a case where helpText / insertHelpHTML should take over?\r\n      if(rawSpecifications) {\r\n        // Now to generate a layout from our raw specifications.\r\n        let layout = this._layouts[formFactor] = Layouts.buildDefaultLayout(rawSpecifications, this, formFactor);\r\n        layout.isDefault = true;\r\n        return layout;\r\n      } else {\r\n        // The fact that it doesn\u0027t exist will indicate that help text/HTML should be inserted instead.\r\n        this._layouts[formFactor] = null; // provides a cached value for the check at the top of this method.\r\n        return null;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Returns an ActiveLayout object representing the keyboard\u0027s layout for this form factor.  May return null if a custom desktop \"help\" OSK is defined, as with sil_euro_latin.\r\n     *\r\n     * In such cases, please use either `helpText` or `insertHelpHTML` instead.\r\n     * @param formFactor {string} The desired form factor for the layout.\r\n     */\r\n    public layout(formFactor: utils.FormFactor): ActiveLayout {\r\n      let rawLayout = this.findOrConstructLayout(formFactor);\r\n\r\n      if(rawLayout) {\r\n        // Prevents accidentally reprocessing layouts; it\u0027s a simple enough check.\r\n        if(this.layoutStates[formFactor] == LayoutState.NOT_LOADED) {\r\n          rawLayout = ActiveLayout.polyfill(rawLayout, this, formFactor);\r\n          this.layoutStates[formFactor] = LayoutState.POLYFILLED;\r\n        }\r\n\r\n        return rawLayout as ActiveLayout;\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    public refreshLayouts() {\r\n      let formFactors = [ utils.FormFactor.Desktop, utils.FormFactor.Phone, utils.FormFactor.Tablet ];\r\n\r\n      let _this = this;\r\n\r\n      formFactors.forEach(function(form) {\r\n        // Currently doesn\u0027t work if we reset it to POLYFILLED, likely due to how \u0027calibration\u0027\r\n        // currently works.\r\n        _this.layoutStates[form] = LayoutState.NOT_LOADED;\r\n      });\r\n    }\r\n\r\n    public markLayoutCalibrated(formFactor: utils.FormFactor) {\r\n      if(this.layoutStates[formFactor] != LayoutState.NOT_LOADED) {\r\n        this.layoutStates[formFactor] = LayoutState.CALIBRATED;\r\n      }\r\n    }\r\n\r\n    public getLayoutState(formFactor: utils.FormFactor) {\r\n      return this.layoutStates[formFactor];\r\n    }\r\n  }\r\n}","/***\r\n   KeymanWeb 11.0\r\n   Copyright 2019 SIL International\r\n***/\r\nnamespace com.keyman {\r\n\r\n  class KeyMap {\r\n    [keycode: string]: number;\r\n  }\r\n\r\n  class BrowserKeyMaps {\r\n    FF:     KeyMap = new KeyMap();\r\n    Safari: KeyMap = new KeyMap();\r\n    Opera:  KeyMap = new KeyMap();\r\n\r\n    constructor() {\r\n      // All three have been around since at least May 2014 / FF 29.\r\n      // It\u0027d hard to find precise history, but at least that much has been confirmed.\r\n      // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode, on Feb 26 2021.\r\n      this.FF[\u0027k61\u0027] = 187;  // =   // FF 2.0\r\n      this.FF[\u0027k59\u0027] = 186;  // ;\r\n      this.FF[\u0027k173\u0027] = 189; // -/_\r\n    }\r\n  }\r\n\r\n  class LanguageKeyMaps {\r\n    [languageCode: string]: KeyMap;\r\n\r\n    // // Here are some old legacy definitions that were no longer referenced but are likely related:\r\n    // static _BaseLayoutEuro: {[code: string]: string} = {\r\n    //   \u0027se\u0027: \u0027\\u00a71234567890+´~~~QWERTYUIOP\\u00c5\\u00a8\\\u0027~~~ASDFGHJKL\\u00d6\\u00c4~~~~~\u003cZXCVBNM,.-~~~~~ \u0027,  // Swedish\r\n    //   \u0027uk\u0027: \u0027`1234567890-=~~~QWERTYUIOP[]#~~~ASDFGHJKL;\\\u0027~~~~~\\\\ZXCVBNM,./~~~~~ \u0027 // UK\r\n\r\n    constructor() {\r\n      /* I732 START - 13/03/2007 MCD: Swedish: Start mapping of keystroke to US keyboard #2 */\r\n      // Swedish key map\r\n      this[\u0027se\u0027] = new KeyMap();\r\n      this[\u0027se\u0027][\u0027k220\u0027] =  192; // `\r\n      this[\u0027se\u0027][\u0027k187\u0027] =  189; // -\r\n      this[\u0027se\u0027][\u0027k219\u0027] =  187; // =\r\n      this[\u0027se\u0027][\u0027k221\u0027] =  219; // [\r\n      this[\u0027se\u0027][\u0027k186\u0027] =  221; // ]\r\n      this[\u0027se\u0027][\u0027k191\u0027] =  220; // \\\r\n      this[\u0027se\u0027][\u0027k192\u0027] =  186; // ;\r\n      this[\u0027se\u0027][\u0027k189\u0027] =  191; // /\r\n\r\n      this[\u0027uk\u0027] = new KeyMap();  // I1299\r\n      this[\u0027uk\u0027][\u0027k223\u0027] =  192; // // ` U+00AC (logical not) =\u003e  ` ~\r\n      this[\u0027uk\u0027][\u0027k192\u0027] =  222; // \u0027 @  =\u003e  \u0027 \"\r\n      this[\u0027uk\u0027][\u0027k222\u0027] =  226; // # ~  =\u003e K_oE2     // I1504 - UK keyboard mixup #, \\\r\n      this[\u0027uk\u0027][\u0027k220\u0027] =  220; // \\ |  =\u003e \\ |       // I1504 - UK keyboard mixup #, \\\r\n    }\r\n  }\r\n\r\n  export class KeyMapping {\r\n    static readonly browserMap: BrowserKeyMaps = new BrowserKeyMaps();\r\n    static readonly languageMap: LanguageKeyMaps = new LanguageKeyMaps();\r\n\r\n    private static _usCharCodes: KeyMap[];\r\n\r\n    private constructor() {\r\n      // Do not construct this class.\r\n    }\r\n\r\n    private static _usCodeInit() {\r\n      var s0=new KeyMap(),s1=new KeyMap();\r\n\r\n      s0[\u0027k192\u0027] = 96;\r\n      s0[\u0027k49\u0027] = 49;\r\n      s0[\u0027k50\u0027] = 50;\r\n      s0[\u0027k51\u0027] = 51;\r\n      s0[\u0027k52\u0027] = 52;\r\n      s0[\u0027k53\u0027] = 53;\r\n      s0[\u0027k54\u0027] = 54;\r\n      s0[\u0027k55\u0027] = 55;\r\n      s0[\u0027k56\u0027] = 56;\r\n      s0[\u0027k57\u0027] = 57;\r\n      s0[\u0027k48\u0027] = 48;\r\n      s0[\u0027k189\u0027] = 45;\r\n      s0[\u0027k187\u0027] = 61;\r\n      s0[\u0027k81\u0027] = 113;\r\n      s0[\u0027k87\u0027] = 119;\r\n      s0[\u0027k69\u0027] = 101;\r\n      s0[\u0027k82\u0027] = 114;\r\n      s0[\u0027k84\u0027] = 116;\r\n      s0[\u0027k89\u0027] = 121;\r\n      s0[\u0027k85\u0027] = 117;\r\n      s0[\u0027k73\u0027] = 105;\r\n      s0[\u0027k79\u0027] = 111;\r\n      s0[\u0027k80\u0027] = 112;\r\n      s0[\u0027k219\u0027] = 91;\r\n      s0[\u0027k221\u0027] = 93;\r\n      s0[\u0027k220\u0027] = 92;\r\n      s0[\u0027k65\u0027] = 97;\r\n      s0[\u0027k83\u0027] = 115;\r\n      s0[\u0027k68\u0027] = 100;\r\n      s0[\u0027k70\u0027] = 102;\r\n      s0[\u0027k71\u0027] = 103;\r\n      s0[\u0027k72\u0027] = 104;\r\n      s0[\u0027k74\u0027] = 106;\r\n      s0[\u0027k75\u0027] = 107;\r\n      s0[\u0027k76\u0027] = 108;\r\n      s0[\u0027k186\u0027] = 59;\r\n      s0[\u0027k222\u0027] = 39;\r\n      s0[\u0027k90\u0027] = 122;\r\n      s0[\u0027k88\u0027] = 120;\r\n      s0[\u0027k67\u0027] = 99;\r\n      s0[\u0027k86\u0027] = 118;\r\n      s0[\u0027k66\u0027] = 98;\r\n      s0[\u0027k78\u0027] = 110;\r\n      s0[\u0027k77\u0027] = 109;\r\n      s0[\u0027k188\u0027] = 44;\r\n      s0[\u0027k190\u0027] = 46;\r\n      s0[\u0027k191\u0027] = 47;\r\n\r\n      s1[\u0027k192\u0027] = 126;\r\n      s1[\u0027k49\u0027] = 33;\r\n      s1[\u0027k50\u0027] = 64;\r\n      s1[\u0027k51\u0027] = 35;\r\n      s1[\u0027k52\u0027] = 36;\r\n      s1[\u0027k53\u0027] = 37;\r\n      s1[\u0027k54\u0027] = 94;\r\n      s1[\u0027k55\u0027] = 38;\r\n      s1[\u0027k56\u0027] = 42;\r\n      s1[\u0027k57\u0027] = 40;\r\n      s1[\u0027k48\u0027] = 41;\r\n      s1[\u0027k189\u0027] = 95;\r\n      s1[\u0027k187\u0027] = 43;\r\n      s1[\u0027k81\u0027] = 81;\r\n      s1[\u0027k87\u0027] = 87;\r\n      s1[\u0027k69\u0027] = 69;\r\n      s1[\u0027k82\u0027] = 82;\r\n      s1[\u0027k84\u0027] = 84;\r\n      s1[\u0027k89\u0027] = 89;\r\n      s1[\u0027k85\u0027] = 85;\r\n      s1[\u0027k73\u0027] = 73;\r\n      s1[\u0027k79\u0027] = 79;\r\n      s1[\u0027k80\u0027] = 80;\r\n      s1[\u0027k219\u0027] = 123;\r\n      s1[\u0027k221\u0027] = 125;\r\n      s1[\u0027k220\u0027] = 124;\r\n      s1[\u0027k65\u0027] = 65;\r\n      s1[\u0027k83\u0027] = 83;\r\n      s1[\u0027k68\u0027] = 68;\r\n      s1[\u0027k70\u0027] = 70;\r\n      s1[\u0027k71\u0027] = 71;\r\n      s1[\u0027k72\u0027] = 72;\r\n      s1[\u0027k74\u0027] = 74;\r\n      s1[\u0027k75\u0027] = 75;\r\n      s1[\u0027k76\u0027] = 76;\r\n      s1[\u0027k186\u0027] = 58;\r\n      s1[\u0027k222\u0027] = 34;\r\n      s1[\u0027k90\u0027] = 90;\r\n      s1[\u0027k88\u0027] = 88;\r\n      s1[\u0027k67\u0027] = 67;\r\n      s1[\u0027k86\u0027] = 86;\r\n      s1[\u0027k66\u0027] = 66;\r\n      s1[\u0027k78\u0027] = 78;\r\n      s1[\u0027k77\u0027] = 77;\r\n      s1[\u0027k188\u0027] = 60;\r\n      s1[\u0027k190\u0027] = 62;\r\n      s1[\u0027k191\u0027] = 63;\r\n\r\n      KeyMapping._usCharCodes = [s0,s1];\r\n    }\r\n\r\n    /**\r\n     * Function     _USKeyCodeToCharCode\r\n     * Scope        Private\r\n     * @param       {Event}     Levent      KMW event object\r\n     * @return      {number}                Character code \r\n     * Description Translate keyboard codes to standard US layout codes\r\n     */    \r\n    static _USKeyCodeToCharCode(Levent: com.keyman.text.KeyEvent) {\r\n      return KeyMapping.usCharCodes[Levent.Lmodifiers \u0026 0x10 ? 1 : 0][\u0027k\u0027+Levent.Lcode];\r\n    };\r\n\r\n    public static get usCharCodes() {\r\n      if(!KeyMapping._usCharCodes) {\r\n        KeyMapping._usCodeInit();\r\n      }\r\n\r\n      return KeyMapping._usCharCodes;\r\n    }\r\n  }\r\n}","// Establishes key-code definitions.\r\n/// \u003creference path=\"codes.ts\" /\u003e\r\n// Defines our generalized \"KeyEvent\" class.\r\n/// \u003creference path=\"keyEvent.ts\" /\u003e\r\n// Defines the RuleBehavior keyboard-processing return object.\r\n/// \u003creference path=\"ruleBehavior.ts\" /\u003e\r\n// Defines default key handling behaviors.\r\n/// \u003creference path=\"defaultOutput.ts\" /\u003e\r\n// Defines the keyboard wrapper object.\r\n/// \u003creference path=\"../keyboards/keyboard.ts\" /\u003e\r\n// Defines built-in keymapping.\r\n/// \u003creference path=\"keyMapping.ts\" /\u003e\r\n\r\n// Also relies on @keymanapp/web-utils, which is included via tsconfig.json.\r\n\r\nnamespace com.keyman.text {\r\n  export type BeepHandler = (outputTarget: OutputTarget) =\u003e void;\r\n  export type LogMessageHandler = (str: string) =\u003e void;\r\n\r\n  export interface VariableStoreSerializer {\r\n    loadStore(keyboardID: string, storeName: string): VariableStore;\r\n    saveStore(keyboardID: string, storeName: string, storeMap: VariableStore);\r\n  }\r\n\r\n  export interface ProcessorInitOptions {\r\n    baseLayout?: string;\r\n    variableStoreSerializer?: VariableStoreSerializer;\r\n  }\r\n\r\n  export class KeyboardProcessor {\r\n    public static readonly DEFAULT_OPTIONS: ProcessorInitOptions = {\r\n      baseLayout: \u0027us\u0027\r\n    }\r\n\r\n    // Tracks the simulated value for supported state keys, allowing the OSK to mirror a physical keyboard for them.\r\n    // Using the exact keyCode name from the Codes definitions will allow for certain optimizations elsewhere in the code.\r\n    stateKeys = {\r\n      \"K_CAPS\":false,\r\n      \"K_NUMLOCK\":false,\r\n      \"K_SCROLL\":false\r\n    };\r\n\r\n    // Tracks the most recent modifier state information in order to quickly detect changes\r\n    // in keyboard state not otherwise captured by the hosting page in the browser.\r\n    // Needed for AltGr simulation.\r\n    modStateFlags: number = 0;\r\n\r\n    keyboardInterface: KeyboardInterface;\r\n    device: utils.DeviceSpec;\r\n\r\n    baseLayout: string;\r\n\r\n    // Callbacks for various feedback types\r\n    beepHandler?: BeepHandler;\r\n    warningLogger?: LogMessageHandler;\r\n    errorLogger?: LogMessageHandler;\r\n\r\n    constructor(device: utils.DeviceSpec, options?: ProcessorInitOptions) {\r\n      if(!options) {\r\n        options = KeyboardProcessor.DEFAULT_OPTIONS;\r\n      }\r\n\r\n      this.device = device;\r\n\r\n      this.baseLayout = options.baseLayout || KeyboardProcessor.DEFAULT_OPTIONS.baseLayout;\r\n      this.keyboardInterface = new KeyboardInterface(options.variableStoreSerializer);\r\n      this.installInterface();\r\n    }\r\n\r\n    private installInterface() {\r\n      // We must ensure that the keyboard can find the API functions at the expected place.\r\n      let globalThis = utils.getGlobalObject();\r\n      globalThis[KeyboardInterface.GLOBAL_NAME] = this.keyboardInterface;\r\n\r\n      // Ensure that the active keyboard is set on the keyboard interface object.\r\n      if(this.activeKeyboard) {\r\n        this.keyboardInterface.activeKeyboard = this.activeKeyboard;\r\n      }\r\n    }\r\n\r\n    public get activeKeyboard(): keyboards.Keyboard {\r\n      return this.keyboardInterface.activeKeyboard;\r\n    }\r\n\r\n    public set activeKeyboard(keyboard: keyboards.Keyboard) {\r\n      this.keyboardInterface.activeKeyboard = keyboard;\r\n\r\n      // All old deadkeys and keyboard-specific cache should immediately be invalidated\r\n      // on a keyboard change.\r\n      this.resetContext();\r\n    }\r\n\r\n    get layerStore(): MutableSystemStore {\r\n      return this.keyboardInterface.systemStores[KeyboardInterface.TSS_LAYER] as MutableSystemStore;\r\n    }\r\n\r\n    public get newLayerStore(): MutableSystemStore {\r\n      return this.keyboardInterface.systemStores[KeyboardInterface.TSS_NEWLAYER] as MutableSystemStore;\r\n    }\r\n\r\n    public get oldLayerStore(): MutableSystemStore {\r\n      return this.keyboardInterface.systemStores[KeyboardInterface.TSS_OLDLAYER] as MutableSystemStore;\r\n    }\r\n\r\n    public get layerId(): string {\r\n      return this.layerStore.value;\r\n    }\r\n\r\n    // Note:  will trigger an \u0027event\u0027 callback designed to notify the OSK of layer changes.\r\n    public set layerId(value: string) {\r\n      this.layerStore.set(value);\r\n    }\r\n\r\n    /**\r\n     * Get the default RuleBehavior for the specified key, attempting to mimic standard browser defaults\r\n     * where and when appropriate.\r\n     *\r\n     * @param   {object}  Lkc           The pre-analyzed KeyEvent object\r\n     * @param   {boolean} outputTarget  The OutputTarget receiving the KeyEvent\r\n     * @return  {string}\r\n     */\r\n    defaultRuleBehavior(Lkc: KeyEvent, outputTarget: OutputTarget, readonly: boolean): RuleBehavior {\r\n      let preInput = Mock.from(outputTarget, readonly);\r\n      let ruleBehavior = new RuleBehavior();\r\n\r\n      let matched = false;\r\n      var char = \u0027\u0027;\r\n      var special: EmulationKeystrokes;\r\n      if(Lkc.isSynthetic || outputTarget.isSynthetic) {\r\n        matched = true;  // All the conditions below result in matches until the final else, which restores the expected default\r\n                         // if no match occurs.\r\n\r\n        if(DefaultOutput.isCommand(Lkc)) {\r\n          // Note this in the rule behavior, return successfully.  We\u0027ll consider applying it later.\r\n          ruleBehavior.triggersDefaultCommand = true;\r\n\r\n          // We\u0027d rather let the browser handle these keys, but we\u0027re using emulated keystrokes, forcing KMW\r\n          // to emulate default behavior here.\r\n        } else if((special = DefaultOutput.forSpecialEmulation(Lkc)) != null) {\r\n          switch(special) {\r\n            case EmulationKeystrokes.Backspace:\r\n              this.keyboardInterface.defaultBackspace(outputTarget);\r\n              break;\r\n            case EmulationKeystrokes.Enter:\r\n              outputTarget.handleNewlineAtCaret();\r\n              break;\r\n            // case \u0027\\u007f\u0027: // K_DEL\r\n              // // For (possible) future implementation.\r\n              // // Would recommend (conceptually) equaling K_RIGHT + K_BKSP, the former of which would technically be a \u0027command\u0027.\r\n            default:\r\n              // In case we extend the allowed set, but forget to implement its handling case above.\r\n              ruleBehavior.errorLog = \"Unexpected \u0027special emulation\u0027 character (\\\\u\" + (special as String).kmwCharCodeAt(0).toString(16) + \") went unhandled!\";\r\n          }\r\n        } else {\r\n          // Back to the standard default, pending normal matching.\r\n          matched = false;\r\n        }\r\n      }\r\n\r\n      let isMnemonic = this.activeKeyboard \u0026\u0026 this.activeKeyboard.isMnemonic;\r\n\r\n      if(!matched) {\r\n        if((char = DefaultOutput.forAny(Lkc, isMnemonic)) != null) {\r\n          special = DefaultOutput.forSpecialEmulation(Lkc)\r\n          if(special == EmulationKeystrokes.Backspace) {\r\n            // A browser\u0027s default backspace may fail to delete both parts of an SMP character.\r\n            this.keyboardInterface.defaultBackspace(outputTarget);\r\n          } else if(special || DefaultOutput.isCommand(Lkc)) { // Filters out \u0027commands\u0027 like TAB.\r\n            // We only do the \"for special emulation\" cases under the condition above... aside from backspace\r\n            // Let the browser handle those.\r\n            return null;\r\n          } else {\r\n            this.keyboardInterface.output(0, outputTarget, char);\r\n          }\r\n        } else {\r\n          // No match, no default RuleBehavior.\r\n          return null;\r\n        }\r\n      }\r\n\r\n      // Shortcut things immediately if there were issues generating this rule behavior.\r\n      if(ruleBehavior.errorLog) {\r\n        return ruleBehavior;\r\n      }\r\n\r\n      let transcription = outputTarget.buildTranscriptionFrom(preInput, Lkc, readonly);\r\n      ruleBehavior.transcription = transcription;\r\n\r\n      return ruleBehavior;\r\n    }\r\n\r\n    setSyntheticEventDefaults(Lkc: text.KeyEvent) {\r\n      // Set the flags for the state keys - for desktop devices. For touch\r\n      // devices, the only state key in use currently is Caps Lock, which is set\r\n      // when the \u0027caps\u0027 layer is active in ActiveKey::constructBaseKeyEvent.\r\n      if(!Lkc.device.touchable) {\r\n        Lkc.Lstates |= this.stateKeys[\u0027K_CAPS\u0027]    ? Codes.modifierCodes[\u0027CAPS\u0027] : Codes.modifierCodes[\u0027NO_CAPS\u0027];\r\n        Lkc.Lstates |= this.stateKeys[\u0027K_NUMLOCK\u0027] ? Codes.modifierCodes[\u0027NUM_LOCK\u0027] : Codes.modifierCodes[\u0027NO_NUM_LOCK\u0027];\r\n        Lkc.Lstates |= this.stateKeys[\u0027K_SCROLL\u0027]  ? Codes.modifierCodes[\u0027SCROLL_LOCK\u0027] : Codes.modifierCodes[\u0027NO_SCROLL_LOCK\u0027];\r\n      }\r\n\r\n      // Set LisVirtualKey to false to ensure that nomatch rule does fire for U_xxxx keys\r\n      if(Lkc.kName \u0026\u0026 Lkc.kName.substr(0,2) == \u0027U_\u0027) {\r\n        Lkc.LisVirtualKey=false;\r\n      }\r\n\r\n      // Get code for non-physical keys (T_KOKAI, U_05AB etc)\r\n      if(typeof Lkc.Lcode == \u0027undefined\u0027) {\r\n        Lkc.Lcode = this.getVKDictionaryCode(Lkc.kName);// Updated for Build 347\r\n        if(!Lkc.Lcode) {\r\n          // Special case for U_xxxx keys. This vk code will never be used\r\n          // in a keyboard, so we use this to ensure that keystroke processing\r\n          // occurs for the key.\r\n          Lkc.Lcode = 1;\r\n        }\r\n      }\r\n\r\n      // Handles modifier states when the OSK is emulating rightalt through the leftctrl-leftalt layer.\r\n      if((Lkc.Lmodifiers \u0026 Codes.modifierBitmasks[\u0027ALT_GR_SIM\u0027]) == Codes.modifierBitmasks[\u0027ALT_GR_SIM\u0027] \u0026\u0026 this.activeKeyboard.emulatesAltGr) {\r\n        Lkc.Lmodifiers \u0026= ~Codes.modifierBitmasks[\u0027ALT_GR_SIM\u0027];\r\n        Lkc.Lmodifiers |= Codes.modifierCodes[\u0027RALT\u0027];\r\n      }\r\n    }\r\n\r\n    constructNullKeyEvent(device: utils.DeviceSpec): KeyEvent {\r\n      const keyEvent = KeyEvent.constructNullKeyEvent(device);\r\n      this.setSyntheticEventDefaults(keyEvent);\r\n      return keyEvent;\r\n    }\r\n\r\n    processNewContextEvent(device: utils.DeviceSpec, outputTarget: OutputTarget): RuleBehavior {\r\n      return this.activeKeyboard ?\r\n        this.keyboardInterface.processNewContextEvent(outputTarget, this.constructNullKeyEvent(device)) :\r\n        null;\r\n    }\r\n\r\n    processPostKeystroke(device: utils.DeviceSpec, outputTarget: OutputTarget): RuleBehavior {\r\n      return this.activeKeyboard ?\r\n        this.keyboardInterface.processPostKeystroke(outputTarget, this.constructNullKeyEvent(device)) :\r\n        null;\r\n    }\r\n\r\n    processKeystroke(keyEvent: KeyEvent, outputTarget: OutputTarget): RuleBehavior {\r\n      var matchBehavior: RuleBehavior;\r\n\r\n      // Pass this key code and state to the keyboard program\r\n      if(this.activeKeyboard \u0026\u0026 keyEvent.Lcode != 0) {\r\n        /*\r\n         * The `this.installInterface()` call is insurance against something I\u0027ve seen in unit tests when things break a bit.\r\n         *\r\n         * Currently, when a KMW shutdown doesn\u0027t go through properly or completely, sometimes we end up with parallel\r\n         * versions of KMW running, and an old, partially-shutdown one will \"snipe\" a command meant for the most-recent\r\n         * one\u0027s test. So, installing here ensures that the active Processor has its matching KeyboardInterface ready,\r\n         * even should that occur.\r\n         */\r\n        this.installInterface();\r\n        matchBehavior = this.keyboardInterface.processKeystroke(outputTarget, keyEvent);\r\n      }\r\n\r\n      if(!matchBehavior || matchBehavior.triggerKeyDefault) {\r\n        // Restore the virtual key code if a mnemonic keyboard is being used\r\n        // If no vkCode value was stored, maintain the original Lcode value.\r\n        keyEvent.Lcode=keyEvent.vkCode || keyEvent.Lcode;\r\n\r\n        // Handle unmapped keys, including special keys\r\n        // The following is physical layout dependent, so should be avoided if possible.  All keys should be mapped.\r\n        this.keyboardInterface.activeTargetOutput = outputTarget;\r\n\r\n        // Match against the \u0027default keyboard\u0027 - rules to mimic the default string output when typing in a browser.\r\n        // Many keyboards rely upon these \u0027implied rules\u0027.\r\n        let defaultBehavior = this.defaultRuleBehavior(keyEvent, outputTarget, false);\r\n        if(defaultBehavior) {\r\n          if(!matchBehavior) {\r\n            matchBehavior = defaultBehavior;\r\n          } else {\r\n            matchBehavior.mergeInDefaults(defaultBehavior);\r\n          }\r\n          matchBehavior.triggerKeyDefault = false; // We\u0027ve triggered it successfully.\r\n        } // If null, we must rely on something else (like the browser, in DOM-aware code) to fulfill the default.\r\n\r\n        this.keyboardInterface.activeTargetOutput = null;\r\n      }\r\n\r\n      return matchBehavior;\r\n    }\r\n\r\n    // FIXME:  makes some bad assumptions.\r\n    static setMnemonicCode(Lkc: KeyEvent, shifted: boolean, capsActive: boolean) {\r\n      // K_SPACE is not handled by defaultKeyOutput for physical keystrokes unless using touch-aliased elements.\r\n      // It\u0027s also a \"exception required, March 2013\" for clickKey, so at least they both have this requirement.\r\n      if(Lkc.Lcode != Codes.keyCodes[\u0027K_SPACE\u0027]) {\r\n        // So long as the key name isn\u0027t prefixed with \u0027U_\u0027, we\u0027ll get a default mapping based on the Lcode value.\r\n        // We need to determine the mnemonic base character - for example, SHIFT + K_PERIOD needs to map to \u0027\u003e\u0027.\r\n        let mappingEvent: KeyEvent = new KeyEvent();\r\n        for(var key in Lkc) {\r\n          mappingEvent[key] = Lkc[key];\r\n        }\r\n\r\n        // To facilitate storing relevant commands, we should probably reverse-lookup\r\n        // the actual keyname instead.\r\n        mappingEvent.kName = \u0027K_xxxx\u0027;\r\n        mappingEvent.Lmodifiers = (shifted ? 0x10 : 0);  // mnemonic lookups only exist for default \u0026 shift layers.\r\n        var mappedChar: string = DefaultOutput.forAny(mappingEvent, true);\r\n\r\n        /* First, save a backup of the original code.  This one won\u0027t needlessly trigger keyboard\r\n         * rules, but allows us to replicate/emulate commands after rule processing if needed.\r\n         * (Like backspaces)\r\n         */\r\n        Lkc.vkCode = Lkc.Lcode;\r\n        if(mappedChar) {\r\n          // Will return 96 for \u0027a\u0027, which is a keycode corresponding to Codes.keyCodes(\u0027K_NP1\u0027) - a numpad key.\r\n          // That stated, we\u0027re in mnemonic mode - this keyboard\u0027s rules are based on the char codes.\r\n          Lkc.Lcode = mappedChar.charCodeAt(0);\r\n        } else {\r\n          // Don\u0027t let command-type keys (like K_DEL, which will output \u0027.\u0027 otherwise!)\r\n          // trigger keyboard rules.\r\n          //\r\n          // However, DO make sure modifier keys pass through safely.\r\n          // (https://github.com/keymanapp/keyman/issues/3744)\r\n          if(!KeyboardProcessor.isModifier(Lkc)) {\r\n            delete Lkc.Lcode;\r\n          }\r\n        }\r\n      }\r\n\r\n      if(capsActive) {\r\n        // TODO:  Needs fixing - does not properly mirror physical keystrokes, as Lcode range 96-111 corresponds\r\n        // to numpad keys!  (Physical keyboard section has its own issues here.)\r\n        if((Lkc.Lcode \u003e= 65 \u0026\u0026 Lkc.Lcode \u003c= 90) /* \u0027A\u0027 - \u0027Z\u0027 */ || (Lkc.Lcode \u003e= 97 \u0026\u0026 Lkc.Lcode \u003c= 122) /* \u0027a\u0027 - \u0027z\u0027 */) {\r\n          Lkc.Lmodifiers ^= 0x10;  // Flip the \u0027shifted\u0027 bit, so it\u0027ll act as the opposite key.\r\n          Lkc.Lcode ^= 0x20; // Flips the \u0027upper\u0027 vs \u0027lower\u0027 bit for the base \u0027a\u0027-\u0027z\u0027 ASCII alphabetics.\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Get modifier key state from layer id\r\n     *\r\n     * @param       {string}      layerId       layer id (e.g. ctrlshift)\r\n     * @return      {number}                    modifier key state (desktop keyboards)\r\n     */\r\n    static getModifierState(layerId: string): number {\r\n      var modifier=0;\r\n      if(layerId.indexOf(\u0027shift\u0027) \u003e= 0) {\r\n        modifier |= Codes.modifierCodes[\u0027SHIFT\u0027];\r\n      }\r\n\r\n      // The chiral checks must not be directly exclusive due each other to visual OSK feedback.\r\n      var ctrlMatched=false;\r\n      if(layerId.indexOf(\u0027leftctrl\u0027) \u003e= 0) {\r\n        modifier |= Codes.modifierCodes[\u0027LCTRL\u0027];\r\n        ctrlMatched=true;\r\n      }\r\n      if(layerId.indexOf(\u0027rightctrl\u0027) \u003e= 0) {\r\n        modifier |= Codes.modifierCodes[\u0027RCTRL\u0027];\r\n        ctrlMatched=true;\r\n      }\r\n      if(layerId.indexOf(\u0027ctrl\u0027)  \u003e= 0 \u0026\u0026 !ctrlMatched) {\r\n        modifier |= Codes.modifierCodes[\u0027CTRL\u0027];\r\n      }\r\n\r\n      var altMatched=false;\r\n      if(layerId.indexOf(\u0027leftalt\u0027) \u003e= 0) {\r\n        modifier |= Codes.modifierCodes[\u0027LALT\u0027];\r\n        altMatched=true;\r\n      }\r\n      if(layerId.indexOf(\u0027rightalt\u0027) \u003e= 0) {\r\n        modifier |= Codes.modifierCodes[\u0027RALT\u0027];\r\n        altMatched=true;\r\n      }\r\n      if(layerId.indexOf(\u0027alt\u0027)  \u003e= 0 \u0026\u0026 !altMatched) {\r\n        modifier |= Codes.modifierCodes[\u0027ALT\u0027];\r\n      }\r\n\r\n      return modifier;\r\n    }\r\n\r\n    /**\r\n     * Get state key state from layer id\r\n     *\r\n     * @param       {string}      layerId       layer id (e.g. caps)\r\n     * @return      {number}                    modifier key state (desktop keyboards)\r\n     */\r\n     static getStateFromLayer(layerId: string): number {\r\n      var modifier=0;\r\n\r\n      if(layerId.indexOf(\u0027caps\u0027) \u003e= 0) {\r\n        modifier |= Codes.modifierCodes[\u0027CAPS\u0027];\r\n      } else {\r\n        modifier |= Codes.modifierCodes[\u0027NO_CAPS\u0027];\r\n      }\r\n\r\n      return modifier;\r\n    }\r\n\r\n    /**\r\n     * @summary Look up a custom virtual key code in the virtual key code dictionary KVKD.  On first run, will build the dictionary.\r\n     *\r\n     * `VKDictionary` is constructed from the keyboard\u0027s `KVKD` member. This list is constructed\r\n     * at compile-time and is a list of \u0027additional\u0027 virtual key codes, starting at 256 (i.e.\r\n     * outside the range of standard virtual key codes). These additional codes are both\r\n     * `[T_xxx]` and `[U_xxxx]` custom key codes from the Keyman keyboard language. However,\r\n     * `[U_xxxx]` keys only generate an entry in `KVKD` if there is a corresponding rule that\r\n     * is associated with them in the keyboard rules. If the `[U_xxxx]` key code is only\r\n     * referenced as the id of a key in the touch layout, then it does not get an entry in\r\n     * the `KVKD` property.\r\n     *\r\n     * @private\r\n     * @param       {string}      keyName   custom virtual key code to lookup in the dictionary\r\n     * @return      {number}                key code \u003e 255 on success, or 0 if not found\r\n     */\r\n    getVKDictionaryCode(keyName: string) {\r\n      var activeKeyboard = this.activeKeyboard;\r\n      if(!activeKeyboard.scriptObject[\u0027VKDictionary\u0027]) {\r\n        var a=[];\r\n        if(typeof activeKeyboard.scriptObject[\u0027KVKD\u0027] == \u0027string\u0027) {\r\n          // Build the VK dictionary\r\n          // TODO: Move the dictionary build into the compiler -- so compiler generates code such as following.\r\n          // Makes the VKDictionary member unnecessary.\r\n          //       this.KVKD={\"K_ABC\":256,\"K_DEF\":257,...};\r\n          var s=activeKeyboard.scriptObject[\u0027KVKD\u0027].split(\u0027 \u0027);\r\n          for(var i=0; i\u003cs.length; i++) {\r\n            a[s[i].toUpperCase()]=i+256; // We force upper-case since virtual keys should be case-insensitive.\r\n          }\r\n        }\r\n        activeKeyboard.scriptObject[\u0027VKDictionary\u0027]=a;\r\n      }\r\n\r\n      var res=activeKeyboard.scriptObject[\u0027VKDictionary\u0027][keyName.toUpperCase()];\r\n      return res ? res : 0;\r\n    }\r\n\r\n    /**\r\n     * Function     _UpdateVKShift\r\n     * Scope        Private\r\n     * @param       {Object}            e     OSK event\r\n     * @return      {boolean}                 Always true\r\n     * Description  Updates the current shift state within KMW, updating the OSK\u0027s visualization thereof.\r\n     */\r\n    _UpdateVKShift(e: KeyEvent): boolean {\r\n      let keyShiftState=0;\r\n\r\n      const lockNames  = [\u0027CAPS\u0027, \u0027NUM_LOCK\u0027, \u0027SCROLL_LOCK\u0027];\r\n      const lockKeys   = [\u0027K_CAPS\u0027, \u0027K_NUMLOCK\u0027, \u0027K_SCROLL\u0027];\r\n\r\n      if(!this.activeKeyboard) {\r\n        return true;\r\n      }\r\n\r\n      if(e) {\r\n        // read shift states from Pevent\r\n        keyShiftState = e.Lmodifiers;\r\n\r\n        // Are we simulating AltGr?  If it\u0027s a simulation and not real, time to un-simulate for the OSK.\r\n        if(this.activeKeyboard.isChiral \u0026\u0026 (this.activeKeyboard.emulatesAltGr) \u0026\u0026\r\n            (this.modStateFlags \u0026 Codes.modifierBitmasks[\u0027ALT_GR_SIM\u0027]) == Codes.modifierBitmasks[\u0027ALT_GR_SIM\u0027]) {\r\n          keyShiftState |= Codes.modifierBitmasks[\u0027ALT_GR_SIM\u0027];\r\n          keyShiftState \u0026= ~Codes.modifierCodes[\u0027RALT\u0027];\r\n        }\r\n\r\n        // Set stateKeys where corresponding value is passed in e.Lstates\r\n        for(let i=0; i \u003c lockNames.length; i++) {\r\n          if(e.Lstates \u0026 Codes.stateBitmasks[lockNames[i]]) {\r\n            this.stateKeys[lockKeys[i]] = !!(e.Lstates \u0026 Codes.modifierCodes[lockNames[i]]);\r\n          }\r\n        }\r\n      }\r\n\r\n      this.updateStates();\r\n\r\n      if(this.activeKeyboard.isMnemonic \u0026\u0026 this.stateKeys[\u0027K_CAPS\u0027]) {\r\n        // Modifier keypresses doesn\u0027t trigger mnemonic manipulation of modifier state.\r\n        // Only an output key does; active use of Caps will also flip the SHIFT flag.\r\n        if(!e || !KeyboardProcessor.isModifier(e)) {\r\n          // Mnemonic keystrokes manipulate the SHIFT property based on CAPS state.\r\n          // We need to unflip them when tracking the OSK layer.\r\n          keyShiftState ^= Codes.modifierCodes[\u0027SHIFT\u0027];\r\n        }\r\n      }\r\n\r\n      this.layerId = this.getLayerId(keyShiftState);\r\n      return true;\r\n    }\r\n\r\n    private updateStates(): void {\r\n      var lockNames  = [\u0027CAPS\u0027, \u0027NUM_LOCK\u0027, \u0027SCROLL_LOCK\u0027];\r\n      var lockKeys   = [\u0027K_CAPS\u0027, \u0027K_NUMLOCK\u0027, \u0027K_SCROLL\u0027];\r\n\r\n      for(let i=0; i \u003c lockKeys.length; i++) {\r\n        const key = lockKeys[i];\r\n        const flag = this.stateKeys[key];\r\n        const onBit = lockNames[i];\r\n        const offBit = \u0027NO_\u0027 + lockNames[i];\r\n\r\n        // Ensures that the current mod-state info properly matches the currently-simulated\r\n        // state key states.\r\n        if(flag) {\r\n          this.modStateFlags |= Codes.modifierCodes[onBit];\r\n          this.modStateFlags \u0026= ~Codes.modifierCodes[offBit];\r\n        } else {\r\n          this.modStateFlags \u0026= ~Codes.modifierCodes[onBit];\r\n          this.modStateFlags |= Codes.modifierCodes[offBit];\r\n        }\r\n      }\r\n    }\r\n\r\n    getLayerId(modifier: number): string {\r\n      return keyboards.Layouts.getLayerId(modifier);\r\n    }\r\n\r\n    /**\r\n     * Select the OSK\u0027s next keyboard layer based upon layer switching keys as a default\r\n     * The next layer will be determined from the key name unless otherwise specifed\r\n     *\r\n     *  @param  {string}                    keyName     key identifier\r\n     *  @return {boolean}                               return true if keyboard layer changed\r\n     */\r\n    selectLayer(keyEvent: KeyEvent): boolean {\r\n      let keyName = keyEvent.kName;\r\n      var nextLayer = keyEvent.kNextLayer;\r\n      var isChiral = this.activeKeyboard \u0026\u0026 this.activeKeyboard.isChiral;\r\n\r\n      // Layer must be identified by name, not number (27/08/2015)\r\n      if(typeof nextLayer == \u0027number\u0027) {\r\n        nextLayer = this.getLayerId(nextLayer * 0x10);\r\n      }\r\n\r\n      // Identify next layer, if required by key\r\n      if(!nextLayer) {\r\n        switch(keyName) {\r\n          case \u0027K_LSHIFT\u0027:\r\n          case \u0027K_RSHIFT\u0027:\r\n          case \u0027K_SHIFT\u0027:\r\n            nextLayer = \u0027shift\u0027;\r\n            break;\r\n          case \u0027K_LCONTROL\u0027:\r\n          case \u0027K_LCTRL\u0027:\r\n            if(isChiral) {\r\n              nextLayer = \u0027leftctrl\u0027;\r\n              break;\r\n            }\r\n          case \u0027K_RCONTROL\u0027:\r\n          case \u0027K_RCTRL\u0027:\r\n            if(isChiral) {\r\n              nextLayer = \u0027rightctrl\u0027;\r\n              break;\r\n            }\r\n          case \u0027K_CTRL\u0027:\r\n            nextLayer = \u0027ctrl\u0027;\r\n            break;\r\n          case \u0027K_LMENU\u0027:\r\n          case \u0027K_LALT\u0027:\r\n            if(isChiral) {\r\n              nextLayer = \u0027leftalt\u0027;\r\n              break;\r\n            }\r\n          case \u0027K_RMENU\u0027:\r\n          case \u0027K_RALT\u0027:\r\n            if(isChiral) {\r\n              nextLayer = \u0027rightalt\u0027;\r\n              break;\r\n            }\r\n          case \u0027K_ALT\u0027:\r\n            nextLayer = \u0027alt\u0027;\r\n            break;\r\n          case \u0027K_ALTGR\u0027:\r\n            if(isChiral) {\r\n              nextLayer = \u0027leftctrl-rightalt\u0027;\r\n            } else {\r\n              nextLayer = \u0027ctrl-alt\u0027;\r\n            }\r\n            break;\r\n          case \u0027K_CURRENCIES\u0027:\r\n          case \u0027K_NUMERALS\u0027:\r\n          case \u0027K_SHIFTED\u0027:\r\n          case \u0027K_UPPER\u0027:\r\n          case \u0027K_LOWER\u0027:\r\n          case \u0027K_SYMBOLS\u0027:\r\n            nextLayer = \u0027default\u0027;\r\n            break;\r\n        }\r\n      }\r\n\r\n      // If no key corresponding to a layer transition is pressed, maintain the current layer.\r\n      if(!nextLayer) {\r\n        return false;\r\n      }\r\n\r\n      // Change layer and refresh OSK\r\n      this.updateLayer(keyEvent, nextLayer);\r\n\r\n      return true;\r\n    }\r\n\r\n    /**\r\n     * Sets the new layer id, allowing for toggling shift/ctrl/alt while preserving the remainder\r\n     * of the modifiers represented by the current layer id (where applicable)\r\n     *\r\n     * @param       {string}      id      layer id (e.g. ctrlshift)\r\n     */\r\n    updateLayer(keyEvent: KeyEvent, id: string) {\r\n      let activeLayer = this.layerId;\r\n      var s = activeLayer;\r\n\r\n      // Do not change layer unless needed (27/08/2015)\r\n      if(id == activeLayer \u0026\u0026 keyEvent.device.formFactor != utils.FormFactor.Desktop) {\r\n        return false;\r\n      }\r\n\r\n      var idx=id;\r\n      var i;\r\n\r\n      if(keyEvent.device.formFactor == utils.FormFactor.Desktop) {\r\n        // Need to test if target layer is a standard layer (based on the plain \u0027default\u0027)\r\n        var replacements= [\u0027leftctrl\u0027, \u0027rightctrl\u0027, \u0027ctrl\u0027, \u0027leftalt\u0027, \u0027rightalt\u0027, \u0027alt\u0027, \u0027shift\u0027];\r\n\r\n        for(i=0; i \u003c replacements.length; i++) {\r\n          // Don\u0027t forget to remove the kebab-case hyphens!\r\n          idx=idx.replace(replacements[i] + \u0027-\u0027, \u0027\u0027);\r\n          idx=idx.replace(replacements[i],\u0027\u0027);\r\n        }\r\n\r\n        // If we are presently on the default layer, drop the \u0027default\u0027 and go straight to the shifted mode.\r\n        // If on a common symbolic layer, drop out of symbolic mode and go straight to the shifted mode.\r\n        if(activeLayer == \u0027default\u0027 || activeLayer == \u0027numeric\u0027 || activeLayer == \u0027symbol\u0027 || activeLayer == \u0027currency\u0027 || idx != \u0027\u0027) {\r\n          s = id;\r\n        }\r\n        // Otherwise, we are based upon a layer that accepts modifier variations.\r\n        // Modify the layer according to the current state and key pressed.\r\n        //\r\n        // TODO:  Consider:  should this ever be allowed for a base layer other than \u0027default\u0027?  If not,\r\n        // if(idx == \u0027\u0027) with accompanying if-else structural shift would be a far better test here.\r\n        else {\r\n          // Save our current modifier state.\r\n          var modifier=KeyboardProcessor.getModifierState(s);\r\n\r\n          // Strip down to the base modifiable layer.\r\n          for(i=0; i \u003c replacements.length; i++) {\r\n            // Don\u0027t forget to remove the kebab-case hyphens!\r\n            s=s.replace(replacements[i] + \u0027-\u0027, \u0027\u0027);\r\n            s=s.replace(replacements[i],\u0027\u0027);\r\n          }\r\n\r\n          // Toggle the modifier represented by our input argument.\r\n          switch(id) {\r\n            case \u0027shift\u0027:\r\n              modifier ^= Codes.modifierCodes[\u0027SHIFT\u0027];\r\n              break;\r\n            case \u0027leftctrl\u0027:\r\n              modifier ^= Codes.modifierCodes[\u0027LCTRL\u0027];\r\n              break;\r\n            case \u0027rightctrl\u0027:\r\n              modifier ^= Codes.modifierCodes[\u0027RCTRL\u0027];\r\n              break;\r\n            case \u0027ctrl\u0027:\r\n              modifier ^= Codes.modifierCodes[\u0027CTRL\u0027];\r\n              break;\r\n            case \u0027leftalt\u0027:\r\n              modifier ^= Codes.modifierCodes[\u0027LALT\u0027];\r\n              break;\r\n            case \u0027rightalt\u0027:\r\n              modifier ^= Codes.modifierCodes[\u0027RALT\u0027];\r\n              break;\r\n            case \u0027alt\u0027:\r\n              modifier ^= Codes.modifierCodes[\u0027ALT\u0027];\r\n              break;\r\n            default:\r\n              s = id;\r\n          }\r\n\r\n          // Combine our base modifiable layer and attach the new modifier variation info to obtain our destination layer.\r\n          if(s != \u0027default\u0027) {\r\n            if(s == \u0027\u0027) {\r\n              s = this.getLayerId(modifier);\r\n            } else {\r\n              s = this.getLayerId(modifier) + \u0027-\u0027 + s;\r\n            }\r\n          }\r\n        }\r\n\r\n        if(s == \u0027\u0027) {\r\n          s = \u0027default\u0027;\r\n        }\r\n      } else {\r\n        // Mobile form-factor.  Either the layout is specified by a keyboard developer with direct layer name references\r\n        // or all layers are accessed via subkey of a single layer-shifting key - no need for modifier-combining logic.\r\n        s = id;\r\n      }\r\n\r\n      let layout = this.activeKeyboard.layout(keyEvent.device.formFactor);\r\n      if(layout.getLayer(s)) {\r\n        this.layerId = s;\r\n      } else {\r\n        this.layerId = \u0027default\u0027;\r\n      }\r\n\r\n      let baseModifierState = text.KeyboardProcessor.getModifierState(this.layerId);\r\n      this.modStateFlags = baseModifierState | keyEvent.Lstates;\r\n    }\r\n\r\n    static isModifier(Levent: KeyEvent): boolean {\r\n      switch(Levent.Lcode) {\r\n        case 16: //\"K_SHIFT\":16,\"K_CONTROL\":17,\"K_ALT\":18\r\n        case 17:\r\n        case 18:\r\n        case 20: //\"K_CAPS\":20, \"K_NUMLOCK\":144,\"K_SCROLL\":145\r\n        case 144:\r\n        case 145:\r\n          return true;\r\n        default:\r\n          return false;\r\n      }\r\n    }\r\n\r\n    // Returns true if the key event is a modifier press, allowing keyPress to return selectively\r\n    // in those cases.\r\n    doModifierPress(Levent: KeyEvent, outputTarget: OutputTarget, isKeyDown: boolean): boolean {\r\n      if(!this.activeKeyboard) {\r\n        return false;\r\n      }\r\n\r\n      if(Levent.Lcode == 8) {\r\n        // I3318 (always clear deadkeys after backspace)\r\n        outputTarget.deadkeys().clear();\r\n      } else if(KeyboardProcessor.isModifier(Levent)) {\r\n        this.activeKeyboard.notify(Levent.Lcode, outputTarget, isKeyDown ? 1 : 0);\r\n        // For eventual integration - we bypass an OSK update for physical keystrokes when in touch mode.\r\n        if(!Levent.device.touchable) {\r\n          return this._UpdateVKShift(Levent); // I2187\r\n        } else {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      if(Levent.LmodifierChange) {\r\n        this.activeKeyboard.notify(0, outputTarget, 1);\r\n        this._UpdateVKShift(Levent);\r\n      }\r\n\r\n      // No modifier keypresses detected.\r\n      return false;\r\n    }\r\n\r\n    resetContext() {\r\n      this.layerId = \u0027default\u0027;\r\n      this.keyboardInterface.resetContextCache();\r\n      this._UpdateVKShift(null);\r\n    };\r\n\r\n    setNumericLayer(device: utils.DeviceSpec) {\r\n      if (this.activeKeyboard) {\r\n        let layout = this.activeKeyboard.layout(device.formFactor);\r\n        if(layout.getLayer(\u0027numeric\u0027)) {\r\n          this.layerId = \u0027numeric\u0027;\r\n        }\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\n(function () {\r\n  let ns = com.keyman.text;\r\n\r\n  // Let the Keyboard Processor be available both in the browser and in Node.\r\n  if (typeof module !== \u0027undefined\u0027 \u0026\u0026 typeof module.exports !== \u0027undefined\u0027) {\r\n    module.exports = ns.KeyboardProcessor;\r\n    //@ts-ignore\r\n    ns.KeyboardProcessor.com = com; // Export the root namespace so that all KeyboardProcessor classes are accessible by unit tests.\r\n  }\r\n}());\r\n","namespace com.keyman {\r\n  export class AttachmentInfo {\r\n    /**\r\n     * Provides the core interface between the DOM and the actual keyboard.\r\n     */\r\n    interface:      dom.targets.OutputTarget;\r\n\r\n    /**\r\n     * Tracks the control\u0027s independent keyboard selection, when applicable.\r\n     */\r\n    keyboard:       string;\r\n\r\n    /**\r\n     * Tracks the language code corresponding to the `keyboard` field.\r\n     */\r\n    languageCode:   string;\r\n\r\n    /**\r\n     * Tracks if the control has an aliased control for touch functionality.\r\n     * \r\n     * Future note - could be changed to track the DOMEventHandler instance used by this control;\r\n     *               this may be useful for an eventual hybrid touch/non-touch implementation.\r\n     */\r\n    touchEnabled:   boolean;\r\n\r\n    constructor(eleInterface: dom.targets.OutputTarget, kbd: string, touch?: boolean) {\r\n      this.interface = eleInterface;\r\n      this.keyboard = kbd;\r\n      this.touchEnabled = touch || false;\r\n    }\r\n  }\r\n}","// By referencing this file first, before any other Keyman class definitions,\r\n// a globally-usable \u0027singleton\u0027 reference to KeymanWeb can be established.\r\n\r\nnamespace com.keyman {\r\n  export var singleton: KeymanBase;\r\n}","/*\r\n * This file defines DOM-specific keyboard API that is not available in headless mode, extending web-core\u0027s\r\n * base KeyboardInterface offerings.\r\n */\r\nnamespace com.keyman.text {\r\n  /**\r\n   * Function     registerKeyboard  KR\r\n   * Scope        Public\r\n   * @param       {Object}      Pk      Keyboard  object\r\n   * Description  Register and load the keyboard.  This implementation overwrites web-core\u0027s intentionally,\r\n   *              as web-core lacks access to the `KeyboardManager` object and class.\r\n   */\r\n  KeyboardInterface.prototype.registerKeyboard = function(Pk): void {\r\n    let keyman = com.keyman.singleton;\r\n    keyman.keyboardManager._registerKeyboard(Pk);\r\n  }\r\n\r\n  /**\r\n   * Add the basic keyboard parameters (keyboard stub) to the array of keyboard stubs\r\n   * If no language code is specified in a keyboard it cannot be registered,\r\n   * and a keyboard stub must be registered before the keyboard is loaded\r\n   * for the keyboard to be usable.\r\n   *\r\n   * @param       {Object}      Pstub     Keyboard stub object\r\n   * @return      {?number}               1 if already registered, else null\r\n   */\r\n  KeyboardInterface.prototype.registerStub = function(Pstub): number {\r\n    let keyboardManager = com.keyman.singleton.keyboardManager;\r\n    if (keyboardManager.keymanweb.initialized) {\r\n      // If language code already defined (or not specified in stub), check to see if stub already registered\r\n      for(let Lk=0; Lk \u003c keyboardManager.keyboardStubs.length; Lk++) {\r\n        if(keyboardManager.keyboardStubs[Lk][\u0027KI\u0027] == Pstub[\u0027KI\u0027]) {\r\n          if(Pstub[\u0027KLC\u0027] == \u0027\u0027 || (keyboardManager.keyboardStubs[Lk][\u0027KLC\u0027] == Pstub[\u0027KLC\u0027])) {\r\n            return 1; // no need to register\r\n          }\r\n        }\r\n      }\r\n    }\r\n    keyboardManager._registerStub(Pstub);\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Function     KT\r\n   * Scope        Public\r\n   * @param       {string}      Ptext     Text to insert\r\n   * @param       {?number}     PdeadKey  Dead key number, if any (???)\r\n   * @return      {boolean}               true if inserted\r\n   * Description  Insert text into active control.  Is utilized by keyboards with custom help HTML and requires\r\n   *              special DOM handling.\r\n   */\r\n  KeyboardInterface.prototype.insertText = function(Ptext: string, PdeadKey:number): boolean {\r\n    let keyman = com.keyman.singleton;\r\n    this.resetContextCache();\r\n\r\n    // Find the correct output target to manipulate.\r\n    let outputTarget: OutputTarget = this.activeTargetOutput ? this.activeTargetOutput : dom.Utils.getOutputTarget();\r\n\r\n    if(outputTarget != null) {\r\n      // Required for the `sil_euro_latin` keyboard\u0027s desktop OSK/table to function properly.\r\n      keyman.uiManager.setActivatingUI(true);\r\n      dom.DOMEventHandlers.states._IgnoreNextSelChange = 100;\r\n      keyman.domManager.focusLastActiveElement();\r\n      dom.DOMEventHandlers.states._IgnoreNextSelChange = 0;\r\n\r\n      if(Ptext!=null) {\r\n        this.output(0, outputTarget, Ptext);\r\n      }\r\n\r\n      if((typeof(PdeadKey)!==\u0027undefined\u0027) \u0026\u0026 (PdeadKey !== null)) {\r\n        this.deadkeyOutput(0, outputTarget, PdeadKey);\r\n      }\r\n\r\n      outputTarget.invalidateSelection();\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Function     KSF\r\n   * Scope        Public\r\n   * Description  Save keyboard focus\r\n   */\r\n  KeyboardInterface.prototype.saveFocus = function(): void {\r\n    dom.DOMEventHandlers.states._IgnoreNextSelChange = 1;\r\n  }\r\n\r\n  /**\r\n   * Legacy entry points (non-standard names)- included only to allow existing IME keyboards to continue to be used\r\n   */\r\n  KeyboardInterface.prototype[\u0027getLastActiveElement\u0027] = function(): OutputTarget {\r\n    return dom.Utils.getOutputTarget();\r\n  }\r\n\r\n  KeyboardInterface.prototype[\u0027focusLastActiveElement\u0027] = function(): void {\r\n    let keyman = com.keyman.singleton;\r\n    keyman.domManager.focusLastActiveElement();\r\n  }\r\n\r\n  //The following entry points are defined but should not normally be used in a keyboard, as OSK display is no longer determined by the keyboard\r\n  KeyboardInterface.prototype[\u0027hideHelp\u0027] = function(): void {\r\n    let keyman = com.keyman.singleton;\r\n    keyman.osk.startHide(true);\r\n  }\r\n\r\n  KeyboardInterface.prototype[\u0027showHelp\u0027] = function(Px: number, Py: number): void {\r\n    let keyman = com.keyman.singleton;\r\n    if(keyman.osk instanceof osk.FloatingOSKView) {\r\n      keyman.osk.presentAtPosition(Px,Py);\r\n    } else {\r\n      keyman.osk.present();\r\n    }\r\n  }\r\n\r\n  KeyboardInterface.prototype[\u0027showPinnedHelp\u0027] = function(): void {\r\n    let keyman = com.keyman.singleton;\r\n    if(keyman.osk instanceof osk.FloatingOSKView) {\r\n      // An old KMW bug previously auto-unset the affected field when this function was\r\n      // used by CJK keyboards during rule processing.  As a result, we need to condition\r\n      // on whether or not:\r\n      // 1.  The active keyboard is CJK\r\n      // 2.  A keyboard rule is actively processing.\r\n      //\r\n      // If BOTH are true, we do NOT mutate keyman.osk.userPositioned.\r\n      // Otherwise, not all conditions are met, so we still allow OSK pinning.\r\n      if(!keyman.core.activeKeyboard.isCJK || !this.ruleBehavior) {\r\n        keyman.osk.userPositioned=true;\r\n      }\r\n    }\r\n    // Automatically reuses previously-set positioning.\r\n    // Other OSK API functions must have previously been used to set the\r\n    // pinned position.\r\n    keyman.osk.present();\r\n  }\r\n\r\n  // Also needed for some legacy CJK keyboards.\r\n  KeyboardInterface.prototype[\u0027GetLastActiveElement\u0027] = KeyboardInterface.prototype[\u0027getLastActiveElement\u0027];\r\n  KeyboardInterface.prototype[\u0027FocusLastActiveElement\u0027] = KeyboardInterface.prototype[\u0027focusLastActiveElement\u0027];\r\n  KeyboardInterface.prototype[\u0027HideHelp\u0027] = KeyboardInterface.prototype[\u0027hideHelp\u0027];\r\n  KeyboardInterface.prototype[\u0027ShowHelp\u0027] = KeyboardInterface.prototype[\u0027showHelp\u0027];\r\n  KeyboardInterface.prototype[\u0027ShowPinnedHelp\u0027] = KeyboardInterface.prototype[\u0027showPinnedHelp\u0027];\r\n}","// Includes Device definitions, which may play a role in constant logic.\r\n///\u003creference path=\"../kmwdevice.ts\" /\u003e\r\n\r\n/*\r\n * This file is intended for CSS-styling constants that see use with the OSK.\r\n */\r\n\r\nnamespace com.keyman.utils {\r\n  /**\r\n   * Defines device-level constants used for CSS styling.\r\n   */\r\n  export class StyleConstants {\r\n    constructor(device: com.keyman.utils.DeviceSpec) {\r\n      // popupCanvasBackgroundColor\r\n      if(device.OS == utils.OperatingSystem.Android) {\r\n        this.popupCanvasBackgroundColor = \u0027#999\u0027;\r\n      } else {\r\n        this.popupCanvasBackgroundColor = StyleConstants.prefersDarkMode() ? \u0027#0f1319\u0027 : \u0027#ffffff\u0027;\r\n      }  \r\n    }\r\n\r\n    /**\r\n     * Checks is a user\u0027s browser is in dark mode, if the feature is supported.  Returns false otherwise.\r\n     * \r\n     * Thanks to https://stackoverflow.com/a/57795518 for this code.\r\n     */\r\n     static prefersDarkMode(): boolean {\r\n      // Ensure the detector exists (otherwise, returns false)\r\n      return window.matchMedia \u0026\u0026 window.matchMedia(\u0027(prefers-color-scheme: dark)\u0027).matches;\r\n    }\r\n\r\n    public readonly popupCanvasBackgroundColor: string;\r\n  }\r\n}","// Includes version-related functionality\r\n///\u003creference path=\"utils/styleConstants.ts\" /\u003e\r\n\r\n// The Device object definition -------------------------------------------------\r\n\r\nnamespace com.keyman {\r\n  export class Device {\r\n    touchable: boolean;\r\n    OS: string;\r\n    formFactor: string;\r\n    dyPortrait: number;\r\n    dyLandscape: number;\r\n    version: string;\r\n    orientation: string|number;\r\n    browser: string;\r\n    colorScheme: \u0027light\u0027 | \u0027dark\u0027;\r\n\r\n    private detected: boolean = false;\r\n    private _styles: utils.StyleConstants;\r\n\r\n    // Generates a default Device value.\r\n    constructor() {\r\n      this.touchable = !!(\u0027ontouchstart\u0027 in window);\r\n      this.OS = \u0027\u0027;\r\n      this.formFactor=\u0027desktop\u0027;\r\n      this.dyPortrait=0;\r\n      this.dyLandscape=0;\r\n      this.version=\u00270\u0027;\r\n      this.orientation=window.orientation;\r\n      this.browser=\u0027\u0027;\r\n    }\r\n\r\n    /**\r\n     * Get device horizontal DPI for touch devices, to set actual size of active regions\r\n     * Note that the actual physical DPI may be somewhat different.\r\n     *\r\n     * @return      {number}\r\n     */\r\n    getDPI(): number {\r\n      var t=document.createElement(\u0027DIV\u0027) ,s=t.style,dpi=96;\r\n      if(document.readyState !== \u0027complete\u0027) {\r\n        return dpi;\r\n      }\r\n\r\n      t.id=\u0027calculateDPI\u0027;\r\n      s.position=\u0027absolute\u0027; s.display=\u0027block\u0027;s.visibility=\u0027hidden\u0027;\r\n      s.left=\u002710px\u0027; s.top=\u002710px\u0027; s.width=\u00271in\u0027; s.height=\u002710px\u0027;\r\n      document.body.appendChild(t);\r\n      dpi=(typeof window.devicePixelRatio == \u0027undefined\u0027) ? t.offsetWidth : t.offsetWidth * window.devicePixelRatio;\r\n      document.body.removeChild(t);\r\n      return dpi;\r\n    }\r\n\r\n    detect() : void {\r\n      var possMacSpoof = false;\r\n\r\n      if(navigator \u0026\u0026 navigator.userAgent) {\r\n        var agent=navigator.userAgent;\r\n\r\n        if(agent.indexOf(\u0027iPad\u0027) \u003e= 0) {\r\n          this.OS=\u0027iOS\u0027;\r\n          this.formFactor=\u0027tablet\u0027;\r\n          this.dyPortrait=this.dyLandscape=0;\r\n        } else if(agent.indexOf(\u0027iPhone\u0027) \u003e= 0) {\r\n          this.OS=\u0027iOS\u0027;\r\n          this.formFactor=\u0027phone\u0027;\r\n          this.dyPortrait=this.dyLandscape=25;\r\n        } else if(agent.indexOf(\u0027Android\u0027) \u003e= 0) {\r\n          this.OS=\u0027Android\u0027;\r\n          this.formFactor=\u0027phone\u0027;    // form factor may be redefined on initialization\r\n          this.dyPortrait=75;\r\n          this.dyLandscape=25;\r\n          try {\r\n            var rx=new RegExp(\"(?:Android\\\\s+)(\\\\d+\\\\.\\\\d+\\\\.\\\\d+)\");\r\n            this.version=agent.match(rx)[1];\r\n          } catch(ex) {}\r\n        } else if(agent.indexOf(\u0027Linux\u0027) \u003e= 0) {\r\n          this.OS=\u0027Linux\u0027;\r\n        } else if(agent.indexOf(\u0027Macintosh\u0027) \u003e= 0) {\r\n          // Starting with 13.1, \"Macintosh\" can reflect iPads (by default) or iPhones\r\n          // (by user setting); a new \"Request Desktop Website\" setting for Safari will\r\n          // change the user agent string to match a desktop Mac.\r\n          //\r\n          // Firefox uses \u0027.\u0027 between version components, while Chrome and Safari use\r\n          // \u0027_\u0027 instead.  So, we have to check for both.  Yay.\r\n          let regex = /Intel Mac OS X (\\d+(?:[_\\.]\\d+)+)/i;\r\n          let results = regex.exec(agent);\r\n\r\n          // Match result:  a version string with components separated by underscores.\r\n          if(!results) {\r\n            console.warn(\"KMW could not properly parse the user agent string.\"\r\n              + \"A suboptimal keyboard layout may result.\");\r\n            this.OS=\u0027MacOSX\u0027;\r\n          } else if(results.length \u003e 1 \u0026\u0026 results[1]) {\r\n            // Convert version string into a usable form.\r\n            let versionString = results[1].replace(\u0027_\u0027, \u0027.\u0027);\r\n            let version = new utils.Version(versionString);\r\n\r\n            possMacSpoof = utils.Version.MAC_POSSIBLE_IPAD_ALIAS.compareTo(version) \u003c= 0;\r\n            this.OS=\u0027MacOSX\u0027;\r\n          }\r\n        } else if(agent.indexOf(\u0027Windows NT\u0027) \u003e= 0) {\r\n          this.OS=\u0027Windows\u0027;\r\n          if(agent.indexOf(\u0027Touch\u0027) \u003e= 0) {\r\n            this.formFactor=\u0027phone\u0027;   // will be redefined as tablet if resolution high enough\r\n          }\r\n\r\n          // Windows Phone and Tablet PC\r\n          if(typeof (\u003cany\u003enavigator).msMaxTouchPoints == \u0027number\u0027 \u0026\u0026 (\u003cany\u003enavigator).msMaxTouchPoints \u003e 0) {\r\n            this.touchable=true;\r\n          }\r\n        }\r\n      }\r\n\r\n      // We look at the screen resolution for Android, because we can\u0027t tell from\r\n      // the user agent string whether or not this is supposed to be a tablet.\r\n      // It seems that there are a handful of older phones out there that report a\r\n      // higher resolution than 700px*___px, but it is proving hard to test these,\r\n      // and the majority have an aspect ratio \u003c= 0.5625 anyway.\r\n      // But we trust what iOS tells us for phone vs tablet.\r\n\r\n      const dimMin = Math.min(screen.width,screen.height), dimMax = Math.max(screen.width,screen.height);\r\n      const aspect = dimMin / dimMax;\r\n\r\n      if(this.OS != \u0027iOS\u0027 \u0026\u0026\r\n          this.formFactor == \u0027phone\u0027 \u0026\u0026\r\n          ((dimMin \u003e= 600 \u0026\u0026 aspect \u003e 0.5625) || // 0.5625 -\u003e 1920x1080 is common phone res\r\n          (aspect \u003e= 0.625)) // all reported devices with aspect \u003e= 0.625 are tablets per https://screensiz.es/\r\n        ) {\r\n        this.formFactor=\u0027tablet\u0027;\r\n      }\r\n\r\n      // Test for potential Chrome emulation on Windows or macOS X (used only in next if-check)\r\n      let possibleChromeEmulation = navigator.platform == \u0027Win32\u0027 || navigator.platform == \u0027MacIntel\u0027\r\n\r\n      //                           alert(sxx+\u0027-\u003e\u0027+device.formFactor);\r\n      // Check for phony iOS devices (but don\u0027t undo for Chrome emulation used during development)\r\n      if(this.OS == \u0027iOS\u0027 \u0026\u0026 !(\u0027ongesturestart\u0027 in window) \u0026\u0026 !possibleChromeEmulation) {\r\n        this.OS=\u0027Android\u0027;\r\n      }\r\n\r\n      // Determine application or browser\r\n      this.browser=\u0027web\u0027;\r\n      if(this.OS == \u0027iOS\u0027 || this.OS.toLowerCase() == \u0027macosx\u0027) {\r\n        this.browser=\u0027safari\u0027;\r\n      }\r\n\r\n      var bMatch=/Firefox|Chrome|OPR|Safari|Edge/;\r\n      if(bMatch.test(navigator.userAgent)) {\r\n        if((navigator.userAgent.indexOf(\u0027Firefox\u0027) \u003e= 0) \u0026\u0026 (\u0027onmozorientationchange\u0027 in screen)) {\r\n          this.browser=\u0027firefox\u0027;\r\n        } else if(navigator.userAgent.indexOf(\u0027OPR\u0027) \u003e= 0) {\r\n          this.browser=\u0027opera\u0027;\r\n        } else if(navigator.userAgent.indexOf(\u0027 Edge/\u0027) \u003e= 0) {\r\n          // Edge is too common a word, so test for Edge/ :)\r\n          // Must come before Chrome and Safari test because\r\n          // Edge pretends to be both\r\n          this.browser=\u0027edge\u0027;\r\n        } else if(navigator.userAgent.indexOf(\u0027Chrome\u0027) \u003e= 0) {\r\n          // This test must come before Safari test because on macOS,\r\n          // Chrome also reports \"Safari\"\r\n          this.browser=\u0027chrome\u0027;\r\n        } else if(navigator.userAgent.indexOf(\u0027Safari\u0027) \u003e= 0) {\r\n          this.browser=\u0027safari\u0027;\r\n        }\r\n      }\r\n\r\n      if(possMacSpoof \u0026\u0026 this.browser == \u0027safari\u0027) {\r\n        // Indistinguishable user agent string!  We need a different test; fortunately, true macOS\r\n        // Safari doesn\u0027t support TouchEvents.  (Chrome does, though!  Hence the filter above.)\r\n        if(window[\u0027TouchEvent\u0027]) {\r\n          this.OS=\u0027iOS\u0027;\r\n          this.formFactor=\u0027tablet\u0027;\r\n          this.dyPortrait=this.dyLandscape=0;\r\n\r\n          // It\u0027s currently impossible to differentiate between iPhone and iPad here\r\n          // except for by screen dimensions.\r\n          let aspectRatio = screen.height / screen.width;\r\n          if(aspectRatio \u003c 1) {\r\n            aspectRatio = 1 / aspectRatio;\r\n          }\r\n\r\n          // iPhones usually have a ratio of 16:9 (or 1.778) or higher, while iPads use 4:3 (or 1.333)\r\n          if(aspectRatio \u003e 1.6) {\r\n            // Override - we\u0027ll treat this device as an iPhone.\r\n            this.formFactor = \u0027phone\u0027;\r\n            this.dyPortrait=this.dyLandscape=25;\r\n          }\r\n        }\r\n      }\r\n\r\n      this.colorScheme = utils.StyleConstants.prefersDarkMode() ? \u0027dark\u0027 : \u0027light\u0027;\r\n      this.detected = true;\r\n    }\r\n\r\n    /**\r\n     * Returns a slimmer, web-core compatible version of this object.\r\n     */\r\n    public get coreSpec(): utils.DeviceSpec {\r\n      return new utils.DeviceSpec(this.browser, this.formFactor, this.OS, this.touchable);\r\n    }\r\n  }\r\n}","namespace com.keyman.dom {\r\n\r\n  // Defines DOM-related utility functions that are not reliant on KMW\u0027s internal state.\r\n  export class Utils {\r\n    /**\r\n     * Finds the `OutputTarget` associated with the specified element, or the currently-active element if not specified.\r\n     * @param Lelem The element corresponding to the desired `OutputTarget`\r\n     */\r\n    static getOutputTarget(Lelem?: HTMLElement): dom.targets.OutputTarget {\r\n      if(!Lelem) {\r\n        // Since this may be used to test modularly, we can\u0027t depend on the existence of the KMW global.\r\n        let keyman = com.keyman[\u0027singleton\u0027];\r\n        if(keyman) {\r\n          Lelem = keyman.domManager.lastActiveElement;\r\n        }\r\n        \r\n        if(!Lelem) {\r\n          // If we\u0027re trying to find an active target but one doesn\u0027t exist, just return null.\r\n          return null;\r\n        }\r\n      }\r\n\r\n      // If we were provided an element or found an active element but it\u0027s improperly attached, that should cause an error.\r\n      if(Lelem._kmwAttachment \u0026\u0026 Lelem._kmwAttachment.interface) {\r\n        return Lelem._kmwAttachment.interface;\r\n      } else {\r\n        throw new Error(\"OSK could not find element output target data!\");\r\n      }\r\n    }\r\n    \r\n    /**\r\n     * Function     getAbsoluteX\r\n     * Scope        Public\r\n     * @param       {Object}    Pobj        HTML element\r\n     * @return      {number}               \r\n     * Description  Returns x-coordinate of Pobj element absolute position with respect to page\r\n     */\r\n    static getAbsoluteX(Pobj: HTMLElement): number { // I1476 - Handle SELECT overlapping END\r\n      var Lobj: HTMLElement\r\n\r\n      if(!Pobj) {\r\n        return 0;\r\n      }\r\n      \r\n      var Lcurleft = Pobj.offsetLeft ? Pobj.offsetLeft : 0;\r\n      Lobj = Pobj;   \t// I2404 - Support for IFRAMEs\r\n\r\n      if (Lobj.offsetParent) {\r\n        while (Lobj.offsetParent) {\r\n          Lobj = Lobj.offsetParent as HTMLElement;\r\n          Lcurleft += Lobj.offsetLeft;\r\n        }\r\n\r\n        // On mobile devices, the OSK uses \u0027fixed\u0027 - this requires some extra offset work to handle.\r\n        let Ldoc = Lobj.ownerDocument;\r\n        if(Lobj.style.position == \u0027fixed\u0027 \u0026\u0026 Ldoc \u0026\u0026 Ldoc.scrollingElement) {\r\n          Lcurleft += Ldoc.scrollingElement.scrollLeft;\r\n        }\r\n      }\r\n      // Correct position if element is within a frame (but not if the controller is in document within that frame)\r\n      // We used to reference a KMW state variable `this.keyman._MasterDocument`, but it was only ever set to `window.document`.\r\n      if(Lobj \u0026\u0026 Lobj.ownerDocument \u0026\u0026 (Pobj.ownerDocument != window.document)) {\r\n        var Ldoc=Lobj.ownerDocument;   // I2404 - Support for IFRAMEs\r\n\r\n        if(Ldoc \u0026\u0026 Ldoc.defaultView \u0026\u0026 Ldoc.defaultView.frameElement) {\r\n          return Lcurleft + Utils.getAbsoluteX(\u003cHTMLElement\u003eLdoc.defaultView.frameElement) - Ldoc.documentElement.scrollLeft;\r\n        }\r\n      }\r\n      return Lcurleft;\r\n    }\r\n\r\n    /**\r\n     * Function     getAbsoluteY\r\n     * Scope        Public\r\n     * @param       {Object}    Pobj        HTML element\r\n     * @return      {number}               \r\n     * Description  Returns y-coordinate of Pobj element absolute position with respect to page\r\n     */  \r\n    static getAbsoluteY(Pobj: HTMLElement): number {\r\n      var Lobj: HTMLElement\r\n\r\n      if(!Pobj) {\r\n        return 0;\r\n      }\r\n      var Lcurtop = Pobj.offsetTop ? Pobj.offsetTop : 0;\r\n      Lobj = Pobj;  // I2404 - Support for IFRAMEs\r\n\r\n      if (Lobj.ownerDocument \u0026\u0026 Lobj instanceof Lobj.ownerDocument.defaultView.HTMLElement) {\r\n        while (Lobj.offsetParent) {\r\n          Lobj = Lobj.offsetParent as HTMLElement;\r\n          Lcurtop += Lobj.offsetTop;\r\n        }\r\n\r\n        // On mobile devices, the OSK uses \u0027fixed\u0027 - this requires some extra offset work to handle.\r\n        let Ldoc = Lobj.ownerDocument;\r\n        if(Lobj.style.position == \u0027fixed\u0027 \u0026\u0026 Ldoc \u0026\u0026 Ldoc.scrollingElement) {\r\n          Lcurtop += Ldoc.scrollingElement.scrollTop;\r\n        }\r\n      }\r\n\r\n      // Correct position if element is within a frame (but not if the controller is in document within that frame)\r\n      // We used to reference a KMW state variable `this.keyman._MasterDocument`, but it was only ever set to `window.document`.\r\n      if(Lobj \u0026\u0026 Lobj.ownerDocument \u0026\u0026 (Pobj.ownerDocument != window.document)) {\r\n        var Ldoc=Lobj.ownerDocument;   // I2404 - Support for IFRAMEs\r\n\r\n        if(Ldoc \u0026\u0026 Ldoc.defaultView \u0026\u0026 Ldoc.defaultView.frameElement) {\r\n          return Lcurtop + Utils.getAbsoluteY(\u003cHTMLElement\u003eLdoc.defaultView.frameElement);\r\n        }\r\n      }\r\n      return Lcurtop;\r\n    }\r\n\r\n    /**\r\n     * Checks the type of an input DOM-related object while ensuring that it is checked against the correct prototype,\r\n     * as class prototypes are (by specification) scoped upon the owning Window.\r\n     * \r\n     * See https://stackoverflow.com/questions/43587286/why-does-instanceof-return-false-on-chrome-safari-and-edge-and-true-on-firefox\r\n     * for more details.\r\n     * \r\n     * @param {Element|Event}   Pelem       An element of the web page or one of its IFrame-based subdocuments.\r\n     * @param {string}          className   The plain-text name of the expected Element type.\r\n     * @return {boolean}\r\n     */\r\n    static instanceof(Pelem: Event|EventTarget, className: string): boolean {\r\n      // We must write special checks for our custom-defined element types!\r\n      if(className == \"TouchAliasElement\") {\r\n        if(this.instanceof(Pelem, \"HTMLDivElement\")) {\r\n          let div = \u003cHTMLDivElement\u003e Pelem;\r\n\r\n          // We should probably implement a slightly more robust check, but this should get us started well enough.\r\n          return div[\u0027base\u0027] !== undefined;\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      var scopedClass;\r\n\r\n      if(!Pelem) {\r\n        // If we\u0027re bothering to check something\u0027s type, null references don\u0027t match\r\n        // what we\u0027re looking for. \r\n        return false;\r\n      }\r\n      if (Pelem[\u0027Window\u0027]) { // Window objects contain the class definitions for types held within them.  So, we can check for those.\r\n        return className == \u0027Window\u0027;\r\n      } else if (Pelem[\u0027defaultView\u0027]) { // Covers Document.\r\n        scopedClass = Pelem[\u0027defaultView\u0027][className];\r\n      } else if(Pelem[\u0027ownerDocument\u0027]) {\r\n        scopedClass = (Pelem as Node).ownerDocument.defaultView[className];\r\n      } else if(Pelem[\u0027target\u0027]) {\r\n        var event = Pelem as Event;\r\n\r\n        if(this.instanceof(event.target, \u0027Window\u0027)) {\r\n          scopedClass = event.target[className]; \r\n        } else if(this.instanceof(event.target, \u0027Document\u0027)) {\r\n          scopedClass = (event.target as Document).defaultView[className];\r\n        } else if(this.instanceof(event.target, \u0027HTMLElement\u0027)) {\r\n          scopedClass = (event.target as HTMLElement).ownerDocument.defaultView[className];\r\n        }\r\n      }\r\n\r\n      if(scopedClass) {\r\n        return Pelem instanceof scopedClass;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    static forceScroll(element: HTMLInputElement | HTMLTextAreaElement) {\r\n      // Needed to allow ./build_dev_resources.sh to complete;\r\n      // only executes when com.keyman.DOMEventHandlers is defined.\r\n      //\r\n      // We also bypass this whenever operating in the embedded format.\r\n      if(com \u0026\u0026 com.keyman \u0026\u0026 com.keyman[\u0027DOMEventHandlers\u0027] \u0026\u0026 !com.keyman[\u0027singleton\u0027][\u0027isEmbedded\u0027]) {\r\n        let DOMEventHandlers = com.keyman[\u0027DOMEventHandlers\u0027];\r\n\r\n        let selectionStart = element.selectionStart;\r\n        let selectionEnd = element.selectionEnd;\r\n\r\n        DOMEventHandlers.states._IgnoreBlurFocus = true;\r\n        //Forces scrolling; the re-focus triggers the scroll, at least.\r\n        element.blur();\r\n        element.focus();\r\n        DOMEventHandlers.states._IgnoreBlurFocus = false;\r\n\r\n        // On Edge, it appears that the blur/focus combination will reset the caret position\r\n        // under certain scenarios during unit tests.  So, we re-set it afterward.\r\n        element.selectionStart = selectionStart;\r\n        element.selectionEnd = selectionEnd;\r\n      }\r\n    }\r\n  }\r\n}","// References extra HTML definitions not included by default in TS.\r\n/// \u003creference path=\"../kmwexthtml.ts\" /\u003e\r\n// References device-specific code checks (separable module from KMW)\r\n/// \u003creference path=\"../kmwdevice.ts\" /\u003e\r\n// References common DOM utility functions (separate module from KMW)\r\n/// \u003creference path=\"utils.ts\" /\u003e\r\n\r\nnamespace com.keyman.dom {\r\n  /**\r\n   * As our touch-alias elements have historically been based on \u003cdiv\u003es, this\r\n   * defines the root element of touch-aliases as a merger type with HTMLDivElements.\r\n   *\r\n   */\r\n  export type TouchAliasElement = HTMLDivElement \u0026 TouchAliasData;\r\n\r\n  // Many thanks to https://www.typescriptlang.org/docs/handbook/advanced-types.html for this.\r\n  function link(elem: HTMLDivElement, data: TouchAliasData): TouchAliasElement {\r\n    let e = \u003cTouchAliasElement\u003e elem;\r\n\r\n    // Merges all properties and methods of KeyData onto the underlying HTMLDivElement, creating a merged class.\r\n    for(let id in data) {\r\n      if(!e.hasOwnProperty(id)) {\r\n        (\u003cany\u003ee)[id] = (\u003cany\u003edata)[id];\r\n      }\r\n    }\r\n\r\n    return e;\r\n  }\r\n\r\n  // If the specified HTMLElement is either a TouchAliasElement or one of its children elements,\r\n  // this method will return the root TouchAliasElement.\r\n  export function findTouchAliasTarget(target: HTMLElement): TouchAliasElement {\r\n    // The scrollable container element for the before \u0026 after text spans \u0026 the caret.\r\n    // Not to be confused with the simulated scrollbar.\r\n    let scroller: HTMLElement;\r\n\r\n    // Identify the scroller element\r\n    if(target \u0026\u0026 dom.Utils.instanceof(target, \"HTMLSpanElement\")) {\r\n      scroller=target.parentNode as HTMLElement;\r\n    } else if(target \u0026\u0026 (target.className != null \u0026\u0026 target.className.indexOf(\u0027keymanweb-input\u0027) \u003e= 0)) {\r\n      scroller=target.firstChild as HTMLElement;\r\n    } else if(target \u0026\u0026 dom.Utils.instanceof(target, \"HTMLDivElement\")) {\r\n      // Three possibilities:  the scroller, the scrollbar, \u0026 the blinking DIV of the caret.\r\n      // A direct click CAN trigger events on the blinking element itself if well-timed.\r\n      scroller=target;\r\n\r\n      // Ensures we land on the scroller, not the caret.\r\n      if(scroller.parentElement \u0026\u0026 scroller.parentElement.className.indexOf(\u0027keymanweb-input\u0027) \u003c 0) {\r\n        scroller = scroller.parentElement;\r\n      }\r\n\r\n      // scroller is now either the actual scroller or the scrollbar element.\r\n      // We don\u0027t return either of these, and they both have the same parent element.\r\n    } else if(target[\u0027kmw_ip\u0027]) { // In case it\u0027s called on a TouchAliasElement\u0027s base (aliased) element.\r\n      return target[\u0027kmw_ip\u0027] as TouchAliasElement;\r\n    } else {\r\n      // If it\u0027s not in any way related to a TouchAliasElement, simply return null.\r\n      return null;\r\n    }\r\n\r\n    // And the actual target element\r\n    let root = scroller.parentNode;\r\n    if(root[\u0027base\u0027] !== undefined) {\r\n      return root as TouchAliasElement;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  export function constructTouchAlias(base?: HTMLElement): TouchAliasElement {\r\n    let div = document.createElement(\"div\");\r\n    let ele = link(div, new TouchAliasData());\r\n\r\n    if(base) {\r\n      ele.initWithBase(base);\r\n    } else {\r\n      ele.init();\r\n    }\r\n\r\n    return ele;\r\n  }\r\n\r\n  /**\r\n   * The core definition for touch-alias \u0027subclassing\u0027 of HTMLDivElement.\r\n   * It\u0027s \u0027merged\u0027 with HTMLDivElement to avoid issues with DOM inheritance and DOM element creation.\r\n   */\r\n  class TouchAliasData {\r\n    [\u0027base\u0027]: HTMLElement = null; // NOT undefined; we can use this distinction for \u0027type-checking\u0027.\r\n    __preCaret:  HTMLSpanElement;\r\n    __postCaret: HTMLSpanElement;\r\n    __scrollDiv: HTMLDivElement;\r\n    __scrollBar: HTMLDivElement;\r\n\r\n    __caretSpan: HTMLSpanElement;\r\n    __caretDiv: HTMLDivElement;\r\n    __caretTimerId: number;\r\n    __activeCaret: boolean = false;\r\n\r\n    __executingCaretSearch: boolean = false;\r\n\r\n    __resizeHandler: () =\u003e void;\r\n\r\n    // The number of pixels a touch may lie within the \u0027next\u0027 character before we\r\n    // bump the caret AFTER that next character.\r\n    static readonly X_SNAP_LENIENCY_PIXELS: number = 5;\r\n\r\n    private static device: Device;\r\n\r\n    private static getDevice(): Device {\r\n      if(!TouchAliasData.device) {\r\n        let device = new com.keyman.Device();\r\n        device.detect();\r\n\r\n        TouchAliasData.device = device;\r\n      }\r\n\r\n      return TouchAliasData.device;\r\n    }\r\n\r\n    private static getOS(): string {\r\n      return this.getDevice().OS;\r\n    }\r\n\r\n    isMultiline(): boolean {\r\n      return this[\u0027base\u0027] \u0026\u0026 this[\u0027base\u0027].nodeName == \"TEXTAREA\";\r\n    }\r\n\r\n    initCaret(): void {\r\n      /**\r\n       * Create a caret to be appended to the scroller of the focussed input field.\r\n       * The caret is appended to the scroller so that it will automatically be clipped\r\n       * when the user manually scrolls it outside the element boundaries.\r\n       * It is positioned exactly over the hidden span (__caretSpan) that is inserted\r\n       * between the text spans before and after the insertion point.\r\n       */\r\n      this.__caretDiv = \u003cHTMLDivElement\u003e document.createElement(\u0027DIV\u0027);\r\n      var cs=this.__caretDiv.style;\r\n      cs.position=\u0027absolute\u0027;\r\n      cs.height=\u002716px\u0027;           // default height, actual height set from element properties\r\n      cs.width=\u00272px\u0027;\r\n      cs.backgroundColor=\u0027blue\u0027;\r\n      cs.border=\u0027none\u0027;\r\n      cs.left=cs.top=\u00270px\u0027;           // actual position set relative to parent when displayed\r\n      cs.display=\u0027block\u0027;\r\n      cs.visibility=\u0027hidden\u0027;\r\n      cs.zIndex=\u00279998\u0027;           // immediately below the OSK\r\n\r\n      // Start the caret flash timer\r\n      this.__caretTimerId = window.setInterval(this.flashCaret.bind(this), 500);\r\n    }\r\n\r\n    init() {\r\n      // Remember, this type exists to be merged into HTMLDivElements, so this will work.\r\n      // We have to trick TS a bit to make it happy, though.\r\n      let divThis = \u003cTouchAliasElement\u003e (\u003cany\u003e this);\r\n      divThis.className=\u0027keymanweb-input\u0027;\r\n\r\n      // Add a scrollable interior div\r\n      let d = this.__scrollDiv = document.createElement\u003c\u0027div\u0027\u003e(\u0027div\u0027);\r\n      let xs = divThis.style;\r\n      xs.overflow=\u0027hidden\u0027;\r\n      xs.position=\u0027absolute\u0027;\r\n      //xs.border=\u00271px solid gray\u0027;\r\n      xs.border=\u0027hidden\u0027;      // hide when element empty - KMW-3\r\n      xs.border=\u0027none\u0027;\r\n      xs.borderRadius=\u00275px\u0027;\r\n\r\n      // Add a scroll bar (horizontal for INPUT elements, vertical for TEXTAREA elements)\r\n      var sb = this.__scrollBar = document.createElement\u003c\u0027div\u0027\u003e(\u0027div\u0027), sbs=sb.style;\r\n      sbs.position=\u0027absolute\u0027;\r\n      sbs.height=sbs.width=\u00274px\u0027;\r\n      sbs.left=sbs.top=\u00270\u0027;\r\n      sbs.display=\u0027block\u0027;\r\n      sbs.visibility=\u0027hidden\u0027;\r\n      sbs.backgroundColor=\u0027#808080\u0027;\r\n      sbs.borderRadius=\u00272px\u0027;\r\n\r\n      // And add two spans for the text content before and after the caret, and a caret span\r\n      this.__preCaret=document.createElement\u003c\u0027span\u0027\u003e(\u0027span\u0027);\r\n      this.__postCaret=document.createElement\u003c\u0027span\u0027\u003e(\u0027span\u0027);\r\n      this.__caretSpan=document.createElement\u003c\u0027span\u0027\u003e(\u0027span\u0027);\r\n      this.__preCaret.innerHTML = this.__postCaret.innerHTML = this.__caretSpan.innerHTML=\u0027\u0027;\r\n      this.__preCaret.className = this.__postCaret.className = this.__caretSpan.className=\u0027keymanweb-font\u0027;\r\n\r\n      d.appendChild(this.__preCaret);\r\n      d.appendChild(this.__caretSpan);\r\n      d.appendChild(this.__postCaret);\r\n      divThis.appendChild(d);\r\n      divThis.appendChild(sb);\r\n\r\n      let ds=d.style;\r\n      ds.position=\u0027relative\u0027;\r\n\r\n      let preCaretStyle = this.__preCaret.style;\r\n      let postCaretStyle = this.__postCaret.style;\r\n      let styleCaret = this.__caretSpan.style;\r\n      preCaretStyle.border=postCaretStyle.border=\u0027none\u0027;\r\n      //preCaretStyle.backgroundColor=\u0027rgb(220,220,255)\u0027;\r\n      //postCaretStyle.backgroundColor=\u0027rgb(220,255,220)\u0027; //only for testing\r\n      preCaretStyle.height=postCaretStyle.height=\u0027100%\u0027;\r\n\r\n      // The invisible caret-positioning span must have a border to ensure that\r\n      // it remains in the layout, but colour doesn\u0027t matter, as it is never visible.\r\n      // Span margins are adjusted to compensate for the border and maintain text positioning.\r\n      styleCaret.border=\u00271px solid red\u0027;\r\n      styleCaret.visibility=\u0027hidden\u0027;\r\n      styleCaret.marginLeft=styleCaret.marginRight=\u0027-1px\u0027;\r\n\r\n      ds.left=\u00270px\u0027;\r\n      ds.top=\u00270px\u0027;\r\n      ds.padding=\u00270\u0027;\r\n      ds.border=\u0027none\u0027;\r\n\r\n      // Set the outer element padding *after* appending the element,\r\n      // otherwise Firefox misaligns the two elements\r\n      xs.padding=\u00278px\u0027;\r\n\r\n      // Set the tabindex to 0 to allow a DIV to accept focus and keyboard input\r\n      // c.f. http://www.w3.org/WAI/GL/WCAG20/WD-WCAG20-TECHS/SCR29.html\r\n      divThis.tabIndex=0;\r\n\r\n      ds.minWidth=xs.width;\r\n      ds.height=xs.height;\r\n\r\n      this.initCaret();\r\n    }\r\n\r\n    initWithBase(base: HTMLElement) {\r\n      this[\u0027base\u0027] = base;\r\n      this.init();\r\n\r\n      let divThis = \u003cTouchAliasElement\u003e (\u003cany\u003e this);\r\n\r\n      // There\u0027s quite a bit of setup for touch-alias elements that only occurs if it has an associated base.\r\n      this[\u0027base\u0027][\u0027kmw_ip\u0027] = divThis;\r\n      base.disabled = true;\r\n\r\n      let baseStyle = window.getComputedStyle(base, null);\r\n      let scrollDivStyle = this.__scrollDiv.style;\r\n      let preCaretStyle  = this.__preCaret.style;\r\n      let postCaretStyle = this.__postCaret.style;\r\n\r\n      divThis.dir = base.dir;\r\n\r\n      preCaretStyle.fontFamily = postCaretStyle.fontFamily = scrollDivStyle.fontFamily = baseStyle.fontFamily;\r\n\r\n      // Set vertical centering for input elements\r\n      if(base.nodeName.toLowerCase() == \u0027input\u0027) {\r\n        if(!isNaN(parseInt(baseStyle.height,10))) {\r\n          preCaretStyle.lineHeight = postCaretStyle.lineHeight = baseStyle.height;\r\n        }\r\n      }\r\n\r\n      if(TouchAliasData.getOS() == \u0027Android\u0027 \u0026\u0026 baseStyle.backgroundColor == \u0027transparent\u0027) {\r\n        scrollDivStyle.backgroundColor = \u0027#fff\u0027;\r\n      } else {\r\n        scrollDivStyle.backgroundColor = baseStyle.backgroundColor;\r\n      }\r\n\r\n      if(divThis.base.nodeName.toLowerCase() == \u0027textarea\u0027) {\r\n        preCaretStyle.whiteSpace=postCaretStyle.whiteSpace=\u0027pre-wrap\u0027; //scroll vertically\r\n      } else {\r\n        preCaretStyle.whiteSpace=postCaretStyle.whiteSpace=\u0027pre\u0027;      //scroll horizontally\r\n      }\r\n\r\n      divThis.base.parentNode.appendChild(divThis);\r\n      divThis.updateInput();\r\n\r\n      let style = divThis.style;\r\n      style.color=baseStyle.color;\r\n      //style.backgroundColor=bs.backgroundColor;\r\n      style.fontFamily=baseStyle.fontFamily;\r\n      style.fontSize=baseStyle.fontSize;\r\n      style.fontWeight=baseStyle.fontWeight;\r\n      style.textDecoration=baseStyle.textDecoration;\r\n      style.padding=baseStyle.padding;\r\n      style.margin=baseStyle.margin;\r\n      style.border=baseStyle.border;\r\n      style.borderRadius=baseStyle.borderRadius;\r\n\r\n      //xs.color=\u0027red\u0027;  //use only for checking alignment\r\n\r\n      // Prevent highlighting of underlying element (Android)\r\n      if(\u0027webkitTapHighlightColor\u0027 in style) {\r\n        (\u003cany\u003estyle).webkitTapHighlightColor=\u0027rgba(0,0,0,0)\u0027;\r\n      }\r\n\r\n      if(base instanceof base.ownerDocument.defaultView.HTMLTextAreaElement) {\r\n        // Correct rows value if defaulted and box height set by CSS\r\n        // The rows value is used when setting the caret vertically\r\n\r\n        if(base.rows == 2) { // 2 is default value\r\n          var h=parseFloat(baseStyle.height)-parseFloat(baseStyle.paddingTop)-parseFloat(baseStyle.paddingBottom),\r\n            dh=parseFloat(baseStyle.fontSize), calcRows=Math.round(h/dh);\r\n          if(calcRows \u003e base.rows+1) {\r\n            base.rows=calcRows;\r\n          }\r\n        }\r\n        scrollDivStyle.width=style.width;\r\n        scrollDivStyle.minHeight=style.height;\r\n      } else {\r\n        scrollDivStyle.minWidth=style.width;\r\n        scrollDivStyle.height=style.height;\r\n      }\r\n      base.style.visibility=\u0027hidden\u0027; // hide by default: KMW-3\r\n\r\n      // Add an explicit event listener to allow the duplicated input element\r\n      // to be adjusted for any changes in base element location or size\r\n      // This will be called for each element after any rotation, as well as after user-initiated changes\r\n      // It has to be wrapped in an anonymous function to preserve scope and be applied to each element.\r\n      (function(xx: TouchAliasElement){\r\n        xx.__resizeHandler = function(){\r\n          /* A timeout is needed to let the base element complete its resizing before our\r\n          * simulated element can properly resize itself.\r\n          *\r\n          * Not doing this causes errors if the input elements are resized for whatever reason, such as\r\n          * changing languages to a text with greater height.\r\n          */\r\n          window.setTimeout(function (){\r\n            xx.updateInput();\r\n          }, 1);\r\n        };\r\n\r\n        xx.base.addEventListener(\u0027resize\u0027, xx.__resizeHandler, false);\r\n        xx.base.addEventListener(\u0027orientationchange\u0027, xx.__resizeHandler, false);\r\n      })(divThis);\r\n\r\n      var textValue: string;\r\n\r\n      if(base instanceof base.ownerDocument.defaultView.HTMLTextAreaElement\r\n        || base instanceof base.ownerDocument.defaultView.HTMLInputElement) {\r\n        textValue = base.value;\r\n      } else {\r\n        textValue = base.textContent;\r\n      }\r\n\r\n      // And copy the text content\r\n      this.setText(textValue, null);\r\n    }\r\n\r\n    setText(t?: string, cp?: number): void {\r\n      var tLen=0;\r\n      var t1: string, t2: string;\r\n\r\n      // Read current text if null passed (for caret positioning)\r\n      if(t === null) {\r\n        t1 = this.__preCaret.textContent;\r\n        t2 = this.__postCaret.textContent;\r\n        t  = t1 + t2;\r\n      }\r\n\r\n      if(cp \u003c 0) {\r\n        cp = 0;    //if(typeof t._kmwLength == \u0027undefined\u0027) return;\r\n      }\r\n\r\n      tLen=t._kmwLength();\r\n\r\n      if(cp === null || cp === undefined || cp \u003e tLen) {\r\n        cp=tLen;\r\n      }\r\n      t1=t._kmwSubstr(0,cp);\r\n      t2=t._kmwSubstr(cp);\r\n\r\n      this.__preCaret.textContent=t1;\r\n      this.__postCaret.textContent=t2;\r\n\r\n      // Disable if a caret search is operational; no need to alter page layout or scroll just yet.\r\n      if(!this.__executingCaretSearch) {\r\n        this.updateBaseElement(); // KMW-3, KMW-29\r\n      }\r\n    }\r\n\r\n    getTextBeforeCaret() {\r\n      return this.__preCaret.textContent;\r\n    }\r\n\r\n    getTextAfterCaret() {\r\n      return this.__postCaret.textContent;\r\n    }\r\n\r\n    setTextBeforeCaret(t: string): void {\r\n      var tLen=0;\r\n\r\n      // Collapse (trailing) whitespace to a single space for INPUT fields (also prevents wrapping)\r\n      if(!this.isMultiline()) {\r\n        t=t.replace(/\\s+$/,\u0027 \u0027);\r\n      }\r\n      this.__preCaret.textContent=t;\r\n      // Test total length in order to control base element visibility\r\n      tLen=t.length;\r\n      tLen=tLen+this.__postCaret.textContent.length;\r\n\r\n      if(!this.__executingCaretSearch) {\r\n        this.finalizeCaret();\r\n      }\r\n    }\r\n\r\n    getTextCaret(): number {\r\n      return this.getTextBeforeCaret()._kmwLength();\r\n    }\r\n\r\n    setTextCaret(cp: number): void {\r\n      this.setText(null,cp);\r\n      this.showCaret();\r\n    }\r\n\r\n    /**\r\n     * An outer wrapper for the caret position update function.  Disables unnecessary DOM-manipulation\r\n     * (\u0026 layout-triggering) operations during the search while guaranteeing that normal caret updates\r\n     * resume after the search, whether or not an error occurs.\r\n    *\r\n     * Some layout-triggering is still needed for the search to work, but the quantity is greatly reduced.\r\n     * @param touchPageX  The target .pageX value for the caret\r\n     * @param touchPageY  The target .pageY value for the caret\r\n     */\r\n    executeCaretSearch(touchPageX: number, touchPageY: number) {\r\n      this.__executingCaretSearch = true;\r\n      try {\r\n        this.performCaretSearch(touchPageX, touchPageY);\r\n      } finally {\r\n        this.__executingCaretSearch = false;\r\n        this.finalizeCaret();\r\n      }\r\n    }\r\n\r\n    /**\r\n     * The core functionality for efficiently determining the intended caret placement within\r\n     * the text form of the context given the page coordinate of a `TouchEvent`.  Takes great\r\n     * care to remain O(log N); some layout-triggering operations are required, making O(N)\r\n     * unacceptable.\r\n     *\r\n     * Even a few thousand characters is enough to become unacceptably laggy if O(N).\r\n     * @param touchPageX  The target .pageX value for the caret\r\n     * @param touchPageY  The target .pageY value for the caret\r\n     */\r\n    private performCaretSearch(touchX: number, touchY: number) {\r\n      const dy=document.body.scrollTop;\r\n      const contextLength = this.getText()._kmwLength();\r\n      let cpMin=0;\r\n      let cpMax=contextLength;\r\n      let cp=this.getTextCaret();\r\n\r\n      // Vertical scrolling\r\n      // instanceof this.base.[...] in case the element lies within an iframe.\r\n      if(this.base instanceof this.base.ownerDocument.defaultView.HTMLTextAreaElement) {\r\n        // Approximates the height of a row.\r\n        const yRow=Math.round(this.base.offsetHeight/(this.base as HTMLTextAreaElement).rows);\r\n        const maxY = touchY;\r\n        const minY = touchY - yRow;\r\n\r\n        // Performs a binary search for a valid caret based on the y-position.\r\n        // cp:  the previously-set caret position.\r\n\r\n        // Break the binary search if our final search window is extremely small.\r\n        while(cpMax - cpMin \u003e 1) {\r\n\r\n          const y=dom.Utils.getAbsoluteY(this.__caretSpan)-dy;  //top of caret\r\n\r\n          if(y \u003e maxY \u0026\u0026 cp \u003e cpMin) {\r\n            // If caret\u0027s prior placement is below (after) the touch\u0027s y-pos...\r\n            cpMax=cp;  // new max position\r\n            cp=Math.round((cp+cpMin)/2); // guess the halfway mark\r\n          } else if(y \u003c minY \u0026\u0026 cp \u003c cpMax) {\r\n            // If caret\u0027s prior placement is above (before) the touch\u0027s y-pos - 1 row height...\r\n            cpMin=cp; // new min posiiton\r\n            cp=Math.round((cp+cpMax)/2); // guess the halfway mark\r\n          } else {\r\n            // Great guess:  the y-position lines up, so cp is within the target row.\r\n            // At this point, the only thing that matters is that we\u0027ve found ONE caret\r\n            // position that matches the target line.\r\n            break;\r\n          }\r\n          // Actively set our caret to the determined matching y-position.\r\n          this.setTextCaret(cp);  // mutates `caret`\u0027s position\r\n        }\r\n\r\n        // Tweak slightly if the caret position still falls out of bounds, but only enough to get in-bounds.\r\n        // Since our final window is small, we only need single-position shifts here (if needed at all).\r\n        if(dom.Utils.getAbsoluteY(this.__caretSpan)-dy \u003e maxY \u0026\u0026 cp \u003e cpMin) {\r\n          this.setTextCaret(--cp); // mutates `caret`\u0027s position\r\n        }\r\n\r\n        if(dom.Utils.getAbsoluteY(this.__caretSpan)-dy \u003c minY \u0026\u0026 cp \u003c cpMax) {\r\n          this.setTextCaret(++cp); // mutates `caret`\u0027s position\r\n        }\r\n\r\n        // Guarantees:  cp is \u0027close\u0027 to both bounds, as it lies within the target row.\r\n        // Therefore, it caps the search interval for the x-coordinate versions of both cpMin and cpMax.\r\n        //\r\n        // Now to meet the pre-condition for the x-coord search later in the function:\r\n        // we need those bounds to be [cpMin, cpMax] === [start of row, end of row], both within the same line.\r\n\r\n        // Determine minimum caret position on the target row; prep the x-coord cpMin.\r\n        // cpMin is guaranteed to lie strictly before the target row unless at the start of the first row.\r\n        // It is neither guaranteed to have changed since its initialization nor to be close to the target row.\r\n        let minCpMin = cpMin;\r\n        let maxCpMin = cp;\r\n        while(maxCpMin != minCpMin) {\r\n          // Our logic will auto-increment if too low, so favor the lower index.\r\n          const searchPt = Math.floor((maxCpMin+minCpMin)/2);\r\n          this.setTextCaret(searchPt);\r\n\r\n          const y=dom.Utils.getAbsoluteY(this.__caretSpan)-dy;  //top of caret\r\n          if(y \u003c minY) {\r\n            // We already know it\u0027s not on this row, so the minimum possible index should be increased.\r\n            cpMin = minCpMin = searchPt+1;\r\n          } else {\r\n            // Still in the same row, so the boundary can only be at or before this point.\r\n            cpMin = maxCpMin = searchPt;\r\n          }\r\n        }\r\n\r\n        // Determine maximum caret position on the target row; prep the x-coord cpMax.\r\n        // cpMax is guaranteed to lie strictly after the target row unless at the end of the final row.\r\n        // It is neither guaranteed to have changed since its initialization nor to be close to the target row.\r\n        let minCpMax = cp;\r\n        let maxCpMax = cpMax;\r\n        while(maxCpMax != minCpMax) {\r\n          // Our logic will auto-decrement if too high, so favor the higher index.\r\n          const searchPt = Math.round((maxCpMax+minCpMax)/2);\r\n          this.setTextCaret(searchPt);\r\n\r\n          const y=dom.Utils.getAbsoluteY(this.__caretSpan)-dy;  //top of caret\r\n          if(y \u003e maxY) {\r\n            // We already know it\u0027s not on this row, so the maximum possible index should be decreased.\r\n            cpMax = maxCpMax = searchPt-1;\r\n          } else {\r\n            // Still in the same row, so the boundary can only be at or after this point.\r\n            cpMax = minCpMax = searchPt;\r\n          }\r\n        }\r\n\r\n        // Set the potential caret in the middle of the range.\r\n        cp = Math.round((cpMin + cpMax)/2);\r\n        this.setTextCaret(cp);\r\n      }\r\n\r\n      // Caret repositioning for horizontal scrolling of RTL text\r\n\r\n      // snapOrder - \u0027snaps\u0027 the touch location in a manner corresponding to the \u0027ltr\u0027 vs \u0027rtl\u0027 orientation.\r\n      // Think of it as performing a floor() function, but the floor depends on the origin\u0027s direction.\r\n      const isRTL = (this as unknown as HTMLElement).dir == \u0027rtl\u0027;\r\n      const snapOrder = isRTL ? (a, b) =\u003e a \u003c b : (a, b) =\u003e a \u003e b;\r\n\r\n      // Used to signify a few pixels of leniency in the \u0027rtl\u0027-appropriate direction for final\r\n      // caret placement.\r\n      const snapLeniency = isRTL ? -TouchAliasData.X_SNAP_LENIENCY_PIXELS : TouchAliasData.X_SNAP_LENIENCY_PIXELS;\r\n\r\n      // Now to binary-search the x-coordinate.\r\n      // Pre-condition:  [cpMin, cpMax] === [start of row, end of row], both within the same line.\r\n      // Automatically met for `\u003cinput`\u003e-based instances.\r\n      // Break the binary search if our final search window is extremely small.\r\n      while(cpMax - cpMin \u003e 1) {\r\n        const x=dom.Utils.getAbsoluteX(this.__caretSpan);  //left of caret\r\n\r\n        if(snapOrder(x, touchX) \u0026\u0026 cp \u003e cpMin) {\r\n          cpMax=cp;\r\n          cp=Math.round((cp+cpMin)/2);\r\n        } else if(!snapOrder(x, touchX) \u0026\u0026 cp \u003c cpMax) {\r\n          cpMin=cp;\r\n          cp=Math.round((cp+cpMax)/2);\r\n        } else {\r\n          break;\r\n        }\r\n        this.setTextCaret(cp);\r\n      }\r\n\r\n      // LTR:  if caret x-pos \u003e touchPosition, push caret earlier.\r\n      if(snapOrder(dom.Utils.getAbsoluteX(this.__caretSpan), touchX) \u0026\u0026 cp \u003e cpMin) {\r\n        this.setTextCaret(--cp);\r\n      }\r\n\r\n      // LTR:  if caret x-pos + leniency \u003c= touchPosition, push caret later.\r\n      // Allows the touch to \"bleed over\" a couple pixels into the next char without\r\n      // bumping it later.\r\n      if(!snapOrder(dom.Utils.getAbsoluteX(this.__caretSpan) + snapLeniency, touchX) \u0026\u0026 cp \u003c cpMax) {\r\n        this.setTextCaret(++cp);\r\n      }\r\n    }\r\n\r\n    private finalizeCaret() {\r\n      // Update the base element then scroll into view if necessary\r\n      this.updateBaseElement(); //KMW-3, KMW-29\r\n      this.scrollInput();\r\n    }\r\n\r\n    /**\r\n     * Set content, visibility, background and borders of input and base elements (KMW-3,KMW-29)\r\n     */\r\n    updateBaseElement() {\r\n      let e = \u003cTouchAliasElement\u003e (\u003cany\u003e this);\r\n\r\n      // Only proceed if we actually have a base element.\r\n      if(!e[\u0027base\u0027]) {\r\n        return;\r\n      }\r\n\r\n      var Ldv = e.base.ownerDocument.defaultView;\r\n      if(e.base instanceof Ldv.HTMLInputElement || e.base instanceof Ldv.HTMLTextAreaElement) {\r\n        e.base.value = this.getText(); //KMW-29\r\n      } else {\r\n        e.base.textContent = this.getText();\r\n      }\r\n\r\n      let n = this.getText()._kmwLength();\r\n\r\n      e.style.backgroundColor = (n==0 ? \u0027transparent\u0027 : window.getComputedStyle(e.base, null).backgroundColor);\r\n\r\n      if(TouchAliasData.getOS() == \u0027iOS\u0027) {\r\n        e.base.style.visibility=(n==0?\u0027visible\u0027:\u0027hidden\u0027);\r\n      }\r\n    }\r\n\r\n    flashCaret(): void {\r\n      // Significant change - each element manages its own caret, and its activation is managed through show/hideCaret()\r\n      // without referencing core KMW code.  (KMW must thus check if the active element is a TouchAliasElement, then use these\r\n      // methods as appropriate.)\r\n      if(this.__activeCaret) {\r\n        var cs=this.__caretDiv.style;\r\n        cs.visibility = cs.visibility != \u0027visible\u0027 ? \u0027visible\u0027 : \u0027hidden\u0027;\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Position the caret at the start of the second span within the scroller\r\n     */\r\n    showCaret() {\r\n      var scroller=this.__scrollDiv, cs=this.__caretDiv.style, sp2=this.__caretSpan;\r\n\r\n      // Attach the caret to this scroller and position it over the caret span\r\n      if(this.__caretDiv.parentNode != \u003cNode\u003escroller) {\r\n        scroller.appendChild(this.__caretDiv);\r\n      }\r\n\r\n      cs.left=sp2.offsetLeft+\u0027px\u0027;\r\n      cs.top=sp2.offsetTop+\u0027px\u0027;\r\n      cs.height=(sp2.offsetHeight-1)+\u0027px\u0027;\r\n      cs.visibility=\u0027hidden\u0027;   // best to wait for timer to display caret\r\n      this.__activeCaret = true;\r\n\r\n      // Disable if a caret search is operational; no need to alter page layout or scroll just yet.\r\n      if(!this.__executingCaretSearch) {\r\n        // Scroll into view if required\r\n        this.scrollBody();\r\n\r\n        // Display and position the scrollbar if necessary\r\n        this.setScrollBar();\r\n      }\r\n    }\r\n\r\n    hideCaret() {\r\n      var e= \u003cTouchAliasElement\u003e (\u003cany\u003e this);\r\n\r\n      // Always copy text back to underlying field on blur\r\n      if(e.base instanceof e.base.ownerDocument.defaultView.HTMLTextAreaElement\r\n          || e.base instanceof e.base.ownerDocument.defaultView.HTMLInputElement) {\r\n        e.base.value = this.getText();\r\n      }\r\n\r\n      // And set the scroller caret to the end of the element content (null preserves text)\r\n      this.setText(null, 100000);\r\n\r\n      // Set the element scroll to zero (or max for RTL INPUT)\r\n      var ss=this.__scrollDiv.style;\r\n      if(e.isMultiline()) {\r\n        ss.top=\u00270\u0027;\r\n      } else {\r\n        if(e.base.dir == \u0027rtl\u0027) {\r\n          ss.left=(e.offsetWidth - this.__scrollDiv.offsetWidth-8)+\u0027px\u0027;\r\n        } else {\r\n          ss.left=\u00270\u0027;\r\n        }\r\n      }\r\n\r\n\r\n      // And hide the caret and scrollbar\r\n      if(this.__caretDiv.parentNode) {\r\n        this.__caretDiv.parentNode.removeChild(this.__caretDiv);\r\n      }\r\n\r\n      this.__caretDiv.style.visibility=\u0027hidden\u0027;\r\n      this.__scrollBar.style.visibility=\u0027hidden\u0027;\r\n\r\n      this.__activeCaret = false;\r\n    }\r\n\r\n    getText(): string {\r\n      return (\u003cTouchAliasElement\u003e (\u003cany\u003e this)).textContent;\r\n    }\r\n\r\n    updateInput() {\r\n      if(this[\u0027base\u0027]) {\r\n        let divThis = (\u003cTouchAliasElement\u003e (\u003cany\u003e this));\r\n\r\n        var xs=divThis.style, b=divThis.base,\r\n            s=window.getComputedStyle(b,null),\r\n            mLeft=parseFloat(s.marginLeft),\r\n            mTop=parseFloat(s.marginTop),\r\n            x1=Utils.getAbsoluteX(b), y1=Utils.getAbsoluteY(b);\r\n\r\n        var p=divThis.offsetParent as HTMLElement;\r\n        if(p) {\r\n          x1=x1-Utils.getAbsoluteX(p);\r\n          y1=y1-Utils.getAbsoluteY(p);\r\n        }\r\n\r\n        if(isNaN(mLeft)) {\r\n          mLeft=0;\r\n        }\r\n        if(isNaN(mTop)) {\r\n          mTop=0;\r\n        }\r\n\r\n        xs.left=(x1-mLeft)+\u0027px\u0027;\r\n        xs.top=(y1-mTop)+\u0027px\u0027;\r\n\r\n        var w=b.offsetWidth, h=b.offsetHeight,\r\n            pLeft=parseFloat(s.paddingLeft), pRight=parseFloat(s.paddingRight),\r\n            pTop=parseFloat(s.paddingTop), pBottom=parseFloat(s.paddingBottom),\r\n            bLeft=parseFloat(s.borderLeft), bRight=parseFloat(s.borderRight),\r\n            bTop=parseFloat(s.borderTop), bBottom=parseFloat(s.borderBottom);\r\n\r\n        // If using content-box model, must subtract the padding and border,\r\n        // but *not* for border-box (as for WordPress PlugIn)\r\n        var boxSizing=\u0027undefined\u0027;\r\n        if(typeof(s.boxSizing) != \u0027undefined\u0027) {\r\n          boxSizing=s.boxSizing;\r\n        } else if(typeof(s.MozBoxSizing) != \u0027undefined\u0027) {\r\n          boxSizing=s.MozBoxSizing;\r\n        }\r\n\r\n        if(boxSizing == \u0027content-box\u0027) {\r\n          if(!isNaN(pLeft)) w -= pLeft;\r\n          if(!isNaN(pRight)) w -= pRight;\r\n          if(!isNaN(bLeft)) w -= bLeft;\r\n          if(!isNaN(bRight)) w -= bRight;\r\n\r\n          if(!isNaN(pTop)) h -= pTop;\r\n          if(!isNaN(pBottom)) h -= pBottom;\r\n          if(!isNaN(bTop)) h -= bTop;\r\n          if(!isNaN(bBottom)) h -= bBottom;\r\n        }\r\n\r\n        if(TouchAliasData.getOS() == \u0027Android\u0027) {\r\n          w++;\r\n          h++;\r\n        }\r\n\r\n        xs.width=w+\u0027px\u0027;\r\n        xs.height=h+\u0027px\u0027;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Scroll the input field horizontally (INPUT base element) or\r\n     * vertically (TEXTAREA base element) to bring the caret into view\r\n     * as text is entered or deleted form an element\r\n     */\r\n    scrollInput() {\r\n      var scroller=this.__scrollDiv;\r\n      let divThis = \u003cTouchAliasElement\u003e (\u003cany\u003e this);\r\n\r\n      // Get the actual absolute position of the caret and the element\r\n      var s2=this.__caretSpan,\r\n        cx=dom.Utils.getAbsoluteX(s2),cy=dom.Utils.getAbsoluteY(s2),\r\n        ex=dom.Utils.getAbsoluteX(divThis),ey=dom.Utils.getAbsoluteY(divThis),\r\n        x=parseInt(scroller.style.left,10),\r\n        y=parseInt(scroller.style.top,10),\r\n        dx=0,dy=0;\r\n\r\n      // Scroller offsets must default to zero\r\n      if(isNaN(x)) x=0; if(isNaN(y)) y=0;\r\n\r\n      // Scroll input field vertically if necessary\r\n      if(divThis.isMultiline()) {\r\n        var rowHeight=Math.round(divThis.offsetHeight/(\u003cHTMLTextAreaElement\u003e divThis.base).rows);\r\n        if(cy \u003c ey) {\r\n          dy=cy-ey;\r\n        }\r\n        if(cy \u003e ey+divThis.offsetHeight-rowHeight) {\r\n          dy=cy-ey-divThis.offsetHeight+rowHeight;\r\n        }\r\n        if(dy != 0){\r\n          scroller.style.top=(y\u003cdy?y-dy:0)+\u0027px\u0027;\r\n        }\r\n      } else { // or scroll horizontally if needed\r\n        if(cx \u003c ex+8) {\r\n          dx=cx-ex-12;\r\n        }\r\n        if(cx \u003e ex+divThis.offsetWidth-12) {\r\n          dx=cx-ex-divThis.offsetWidth+12;\r\n        }\r\n        if(dx != 0) {\r\n          scroller.style.left=(x\u003cdx?x-dx:0)+\u0027px\u0027;\r\n        }\r\n      }\r\n\r\n      // Display the caret (and scroll into view if necessary)\r\n      this.showCaret();\r\n    }\r\n\r\n    /**\r\n     * Scroll the document body vertically to bring the active input into view\r\n     */\r\n    scrollBody(): void {\r\n      // Note the deliberate lack of typing; we don\u0027t want to include KMW\u0027s core in isolated\r\n      // element interface testing, so we can\u0027t use it here.\r\n      var oskHeight: number = 0;\r\n\r\n      if(window[\u0027keyman\u0027]) {\r\n        var osk = window[\u0027keyman\u0027].osk;\r\n        if(osk \u0026\u0026 osk._Box) {\r\n          oskHeight = osk._Box.offsetHeight;\r\n        }\r\n      }\r\n\r\n      // Get the absolute position of the caret\r\n      var s2=this.__caretSpan, y=dom.Utils.getAbsoluteY(s2), t=window.pageYOffset,dy=0;\r\n      if(y \u003c t) {\r\n        dy=y-t;\r\n      } else {\r\n        dy=y-t-(window.innerHeight - oskHeight - s2.offsetHeight - 2);\r\n        if(dy \u003c 0) {\r\n          dy=0;\r\n        }\r\n      }\r\n      // Hide OSK, then scroll, then re-anchor OSK with absolute position (on end of scroll event)\r\n      if(dy != 0) {\r\n        window.scrollTo(0,dy+window.pageYOffset);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Display and position a scrollbar in the input field if needed\r\n     */\r\n    setScrollBar() {\r\n      let e = \u003cTouchAliasElement\u003e (\u003cany\u003e this);\r\n\r\n      // Display the scrollbar if necessary.  Added isMultiline condition to correct rotation issue KMW-5.  Fixed for 310 beta.\r\n      var scroller=this.__scrollDiv, sbs=this.__scrollBar.style;\r\n      if((scroller.offsetWidth \u003e e.offsetWidth || scroller.offsetLeft \u003c 0) \u0026\u0026 !e.isMultiline()) {\r\n        sbs.height=\u00274px\u0027;\r\n        sbs.width=100*(e.offsetWidth/scroller.offsetWidth)+\u0027%\u0027;\r\n        sbs.left=100*(-scroller.offsetLeft/scroller.offsetWidth)+\u0027%\u0027;\r\n        sbs.top=\u00270\u0027;\r\n        sbs.visibility=\u0027visible\u0027;\r\n      } else if(scroller.offsetHeight \u003e e.offsetHeight || scroller.offsetTop \u003c 0) {\r\n        sbs.width=\u00274px\u0027;\r\n        sbs.height=100*(e.offsetHeight/scroller.offsetHeight)+\u0027%\u0027;\r\n        sbs.top=100*(-scroller.offsetTop/scroller.offsetHeight)+\u0027%\u0027;\r\n        sbs.left=\u00270\u0027;\r\n        sbs.visibility=\u0027visible\u0027;\r\n      } else {\r\n        sbs.visibility=\u0027hidden\u0027;\r\n      }\r\n    }\r\n  }\r\n}","namespace com.keyman.dom {\r\n  export class PreProcessor {\r\n    /**\r\n     * Function     _GetEventKeyCode\r\n     * Scope        Private\r\n     * @param       {Event}       e         Event object\r\n     * Description  Finds the key code represented by the event.\r\n     */\r\n    static _GetEventKeyCode(e: KeyboardEvent) {\r\n      if (e.keyCode) {\r\n        return e.keyCode;\r\n      } else if (e.which) {\r\n        return e.which;\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Function     _GetKeyEventProperties\r\n     * Scope        Private\r\n     * @param       {Event}       e         Event object\r\n     * @param       {boolean=}    keyState  true if call results from a keyDown event, false if keyUp, undefined if keyPress\r\n     * @return      {Object.\u003cstring,*\u003e}     KMW keyboard event object:\r\n     * Description  Get object with target element, key code, shift state, virtual key state\r\n     *                Lcode=keyCode\r\n     *                Lmodifiers=shiftState\r\n     *                LisVirtualKeyCode e.g. ctrl/alt key\r\n     *                LisVirtualKey     e.g. Virtual key or non-keypress event\r\n     */\r\n    static _GetKeyEventProperties(e: KeyboardEvent, keyState?: boolean): text.KeyEvent {\r\n      let keyman = com.keyman.singleton;\r\n      let core = keyman.core;\r\n      var s = new text.KeyEvent();\r\n\r\n      if(e.cancelBubble === true) {\r\n        return null; // I2457 - Facebook meta-event generation mess -- two events generated for a keydown in Facebook contentEditable divs\r\n      }\r\n\r\n      s.Lcode = this._GetEventKeyCode(e);\r\n      if (s.Lcode == null) {\r\n        return null;\r\n      }\r\n\r\n      // Stage 1 - track the true state of the keyboard\u0027s modifiers.\r\n      var prevModState = core.keyboardProcessor.modStateFlags, curModState = 0x0000;\r\n      var ctrlEvent = false, altEvent = false;\r\n\r\n      let keyCodes = text.Codes.keyCodes;\r\n      switch(s.Lcode) {\r\n        case keyCodes[\u0027K_CTRL\u0027]:      // The 3 shorter \"K_*CTRL\" entries exist in some legacy keyboards.\r\n        case keyCodes[\u0027K_LCTRL\u0027]:\r\n        case keyCodes[\u0027K_RCTRL\u0027]:\r\n        case keyCodes[\u0027K_CONTROL\u0027]:\r\n        case keyCodes[\u0027K_LCONTROL\u0027]:\r\n        case keyCodes[\u0027K_RCONTROL\u0027]:\r\n          ctrlEvent = true;\r\n          break;\r\n        case keyCodes[\u0027K_LMENU\u0027]:     // The 2 \"K_*MENU\" entries exist in some legacy keyboards.\r\n        case keyCodes[\u0027K_RMENU\u0027]:\r\n        case keyCodes[\u0027K_ALT\u0027]:\r\n        case keyCodes[\u0027K_LALT\u0027]:\r\n        case keyCodes[\u0027K_RALT\u0027]:\r\n          altEvent = true;\r\n          break;\r\n      }\r\n\r\n      /**\r\n       * Two separate conditions exist that should trigger chiral modifier detection.  Examples below use CTRL but also work for ALT.\r\n       *\r\n       * 1.  The user literally just pressed CTRL, so the event has a valid `location` property we can utilize.\r\n       *     Problem: its layer isn\u0027t presently activated within the OSK.\r\n       *\r\n       * 2.  CTRL has been held a while, so the OSK layer is valid, but the key event doesn\u0027t tell us the chirality of the active CTRL press.\r\n       *     Bonus issue:  RAlt simulation may cause erasure of this location property, but it should ONLY be empty if pressed in this case.\r\n       *     We default to the \u0027left\u0027 variants since they\u0027re more likely to exist and cause less issues with RAlt simulation handling.\r\n       *\r\n       * In either case, `e.getModifierState(\"Control\")` is set to true, but as a result does nothing to tell us which case is active.\r\n       *\r\n       * `e.location != 0` if true matches condition 1 and matches condition 2 if false.\r\n       */\r\n\r\n      curModState |= (e.getModifierState(\"Shift\") ? 0x10 : 0);\r\n\r\n      let modifierCodes = text.Codes.modifierCodes;\r\n      if(e.getModifierState(\"Control\")) {\r\n        curModState |= ((e.location != 0 \u0026\u0026 ctrlEvent) ?\r\n          (e.location == 1 ? modifierCodes[\u0027LCTRL\u0027] : modifierCodes[\u0027RCTRL\u0027]) : // Condition 1\r\n          prevModState \u0026 0x0003);                                                       // Condition 2\r\n      }\r\n      if(e.getModifierState(\"Alt\")) {\r\n        curModState |= ((e.location != 0 \u0026\u0026 altEvent) ?\r\n          (e.location == 1 ? modifierCodes[\u0027LALT\u0027] : modifierCodes[\u0027RALT\u0027]) :   // Condition 1\r\n          prevModState \u0026 0x000C);                                                       // Condition 2\r\n      }\r\n\r\n      // Stage 2 - detect state key information.  It can be looked up per keypress with no issue.\r\n      s.Lstates = 0;\r\n\r\n      s.Lstates |= e.getModifierState(\u0027CapsLock\u0027) ? modifierCodes[\u0027CAPS\u0027] : modifierCodes[\u0027NO_CAPS\u0027];\r\n      s.Lstates |= e.getModifierState(\u0027NumLock\u0027) ? modifierCodes[\u0027NUM_LOCK\u0027] : modifierCodes[\u0027NO_NUM_LOCK\u0027];\r\n      s.Lstates |= (e.getModifierState(\u0027ScrollLock\u0027))\r\n        ? modifierCodes[\u0027SCROLL_LOCK\u0027] : modifierCodes[\u0027NO_SCROLL_LOCK\u0027];\r\n\r\n      // We need these states to be tracked as well for proper OSK updates.\r\n      curModState |= s.Lstates;\r\n\r\n      // Stage 3 - Set our modifier state tracking variable and perform basic AltGr-related management.\r\n      s.LmodifierChange = core.keyboardProcessor.modStateFlags != curModState;\r\n      core.keyboardProcessor.modStateFlags = curModState;\r\n\r\n      // For European keyboards, not all browsers properly send both key-up events for the AltGr combo.\r\n      var altGrMask = modifierCodes[\u0027RALT\u0027] | modifierCodes[\u0027LCTRL\u0027];\r\n      if((prevModState \u0026 altGrMask) == altGrMask \u0026\u0026 (curModState \u0026 altGrMask) != altGrMask) {\r\n        // We just released AltGr - make sure it\u0027s all released.\r\n        curModState \u0026= ~ altGrMask;\r\n      }\r\n      // Perform basic filtering for Windows-based ALT_GR emulation on European keyboards.\r\n      if(curModState \u0026 modifierCodes[\u0027RALT\u0027]) {\r\n        curModState \u0026= ~modifierCodes[\u0027LCTRL\u0027];\r\n      }\r\n\r\n      let modifierBitmasks = text.Codes.modifierBitmasks;\r\n      // Stage 4 - map the modifier set to the appropriate keystroke\u0027s modifiers.\r\n      var activeKeyboard = core.activeKeyboard;\r\n      if(activeKeyboard \u0026\u0026 activeKeyboard.isChiral) {\r\n        s.Lmodifiers = curModState \u0026 modifierBitmasks.CHIRAL;\r\n\r\n        // Note for future - embedding a kill switch here would facilitate disabling AltGr / Right-alt simulation.\r\n        if(activeKeyboard.emulatesAltGr \u0026\u0026 (s.Lmodifiers \u0026 modifierBitmasks[\u0027ALT_GR_SIM\u0027]) == modifierBitmasks[\u0027ALT_GR_SIM\u0027]) {\r\n          s.Lmodifiers ^= modifierBitmasks[\u0027ALT_GR_SIM\u0027];\r\n          s.Lmodifiers |= modifierCodes[\u0027RALT\u0027];\r\n        }\r\n      } else {\r\n        // No need to sim AltGr here; we don\u0027t need chiral ALTs.\r\n        s.Lmodifiers =\r\n          (curModState \u0026 0x10) | // SHIFT\r\n          ((curModState \u0026 (modifierCodes[\u0027LCTRL\u0027] | modifierCodes[\u0027RCTRL\u0027])) ? 0x20 : 0) |\r\n          ((curModState \u0026 (modifierCodes[\u0027LALT\u0027] | modifierCodes[\u0027RALT\u0027]))   ? 0x40 : 0);\r\n      }\r\n\r\n\r\n      /* Tweak the modifiers if an OS meta key is detected; this will allow meta-key-based\r\n       * hotkeys to bypass Keyman processing.  We do this AFTER the chiral modifier filtering\r\n       * because some keyboards specify their own modifierBitmask, which won\u0027t include it.\r\n       * We don\u0027t currently use that reference in this method, but that may change in the future.\r\n       */\r\n      s.Lmodifiers |= (e.metaKey ? modifierCodes[\u0027META\u0027]: 0);\r\n\r\n      // Physically-typed keys require use of a \u0027desktop\u0027 form factor and thus are based on a virtual \"physical\" Device.\r\n      s.device = keyman.util.physicalDevice.coreSpec;\r\n\r\n      // Perform any browser-specific key remapping before other remaps and mnemonic transforms.\r\n      // (See https://github.com/keymanapp/keyman/issues/1125.)\r\n      if(!keyman.isEmbedded \u0026\u0026 s.device.browser == utils.Browser.Firefox) {\r\n      // Browser key identifiers are not completely consistent; Firefox has a few (for US punctuation)\r\n      // that differ from the norm.  Refer to https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode.\r\n        if(KeyMapping.browserMap.FF[\u0027k\u0027+s.Lcode]) {\r\n          s.Lcode = KeyMapping.browserMap.FF[\u0027k\u0027+s.Lcode];\r\n        }\r\n      }\r\n\r\n      // Mnemonic handling.\r\n      if(activeKeyboard \u0026\u0026 activeKeyboard.isMnemonic) {\r\n        // The following will never set a code corresponding to a modifier key, so it\u0027s fine to do this,\r\n        // which may change the value of Lcode, here.\r\n        text.KeyboardProcessor.setMnemonicCode(s, e.getModifierState(\"Shift\"), e.getModifierState(\"CapsLock\"));\r\n      }\r\n\r\n      // The 0x6F used to be 0x60 - this adjustment now includes the chiral alt and ctrl modifiers in that check.\r\n      var LisVirtualKeyCode = (typeof e.charCode != \u0027undefined\u0027 \u0026\u0026 e.charCode != null  \u0026\u0026  (e.charCode == 0 || (s.Lmodifiers \u0026 0x6F) != 0));\r\n      s.LisVirtualKey = LisVirtualKeyCode || e.type != \u0027keypress\u0027;\r\n\r\n      // This is based on a KeyboardEvent, so it\u0027s not considered \u0027synthetic\u0027 within web-core.\r\n      s.isSynthetic = false;\r\n\r\n      // Other minor physical-keyboard adjustments\r\n      if(activeKeyboard \u0026\u0026 !activeKeyboard.isMnemonic) {\r\n        // Positional Layout\r\n\r\n        /* 13/03/2007 MCD: Swedish: Start mapping of keystroke to US keyboard */\r\n        var Lbase = KeyMapping.languageMap[core.keyboardProcessor.baseLayout];\r\n        if(Lbase \u0026\u0026 Lbase[\u0027k\u0027+s.Lcode]) {\r\n          s.Lcode=Lbase[\u0027k\u0027+s.Lcode];\r\n        }\r\n        /* 13/03/2007 MCD: Swedish: End mapping of keystroke to US keyboard */\r\n\r\n        if(!activeKeyboard.definesPositionalOrMnemonic \u0026\u0026 !(s.Lmodifiers \u0026 0x60)) {\r\n          // Support version 1.0 KeymanWeb keyboards that do not define positional vs mnemonic\r\n          s = {\r\n            Lcode: KeyMapping._USKeyCodeToCharCode(s),\r\n            Lmodifiers: 0,\r\n            LisVirtualKey: false,\r\n            vkCode: s.Lcode, // Helps to merge OSK and physical keystroke control paths.\r\n            Lstates: s.Lstates,\r\n            kName: \u0027\u0027,\r\n            device: keyman.util.physicalDevice.coreSpec,\r\n            isSynthetic: false\r\n          };\r\n        }\r\n      }\r\n\r\n      return s;\r\n    }\r\n\r\n    public static getEventOutputTarget(e: Event): text.OutputTarget {\r\n      let keyman = com.keyman.singleton;\r\n      let target = keyman.util.eventTarget(e) as HTMLElement;\r\n      if (target == null) {\r\n        return null;\r\n      } else if (target.nodeType == 3) {// defeat Safari bug\r\n        target = target.parentNode as HTMLElement;\r\n      }\r\n\r\n      return dom.Utils.getOutputTarget(target);\r\n    }\r\n\r\n    /**\r\n     * Function     keyDown\r\n     * Scope        Public\r\n     * Description  Processes keydown event and passes data to keyboard.\r\n     *\r\n     * Note that the test-case oriented \u0027recorder\u0027 stubs this method to facilitate keystroke\r\n     * recording for use in test cases.  If changing this function, please ensure the recorder is\r\n     * not affected.\r\n     */\r\n    static keyDown(e: KeyboardEvent): boolean {\r\n      let core = com.keyman.singleton.core;\r\n      DOMEventHandlers.states.swallowKeypress = false;\r\n\r\n      // Get event properties\r\n      var Levent = this._GetKeyEventProperties(e, true);\r\n      if(Levent == null) {\r\n        return true;\r\n      }\r\n\r\n      let outputTarget = PreProcessor.getEventOutputTarget(e);\r\n      const ruleBehavior = core.processKeyEvent(Levent, outputTarget);\r\n      const LeventMatched = ruleBehavior \u0026\u0026 !ruleBehavior.triggerKeyDefault;\r\n\r\n      if(LeventMatched) {\r\n        if(e  \u0026\u0026  e.preventDefault) {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n        }\r\n\r\n        DOMEventHandlers.states.swallowKeypress = !!Levent.Lcode;\r\n        // Don\u0027t swallow backspaces on keypresses; this allows physical BKSP presses to repeat.\r\n        if(Levent.Lcode == 8) {\r\n          DOMEventHandlers.states.swallowKeypress = false;\r\n        }\r\n      } else {\r\n        DOMEventHandlers.states.swallowKeypress = false;\r\n      }\r\n\r\n      return !LeventMatched;\r\n    }\r\n\r\n    // KeyUp basically exists for two purposes:\r\n    // 1)  To detect browser form submissions (handled in kmwdomevents.ts)\r\n    // 2)  To detect modifier state changes.\r\n    static keyUp(e: KeyboardEvent): boolean {\r\n      let core = com.keyman.singleton.core;\r\n      var Levent = this._GetKeyEventProperties(e, false);\r\n      if(Levent == null) {\r\n        return true;\r\n      }\r\n\r\n      let outputTarget = PreProcessor.getEventOutputTarget(e);\r\n      return core.keyboardProcessor.doModifierPress(Levent, outputTarget, false);\r\n    }\r\n\r\n    static keyPress(e: KeyboardEvent): boolean {\r\n      let keyman = com.keyman.singleton;\r\n      let core = keyman.core;\r\n\r\n      var Levent = this._GetKeyEventProperties(e);\r\n      if(Levent == null || Levent.LisVirtualKey) {\r\n        return true;\r\n      }\r\n\r\n      // _Debug(\u0027KeyPress code=\u0027+Levent.Lcode+\u0027; Ltarg=\u0027+Levent.Ltarg.tagName+\u0027; LisVirtualKey=\u0027+Levent.LisVirtualKey+\u0027; _KeyPressToSwallow=\u0027+keymanweb._KeyPressToSwallow+\u0027; keyCode=\u0027+(e?e.keyCode:\u0027nothing\u0027));\r\n\r\n      /* I732 START - 13/03/2007 MCD: Swedish: Start positional keyboard layout code: prevent keystroke */\r\n      if(!core.activeKeyboard.isMnemonic) {\r\n        if(!DOMEventHandlers.states.swallowKeypress) {\r\n          return true;\r\n        }\r\n        if(Levent.Lcode \u003c 0x20 || ((\u003cany\u003ekeyman)._BrowserIsSafari  \u0026\u0026  (Levent.Lcode \u003e 0xF700  \u0026\u0026  Levent.Lcode \u003c 0xF900))) {\r\n          return true;\r\n        }\r\n\r\n        return false;\r\n      }\r\n      /* I732 END - 13/03/2007 MCD: Swedish: End positional keyboard layout code */\r\n\r\n      // Only reached if it\u0027s a mnemonic keyboard.\r\n      let outputTarget = PreProcessor.getEventOutputTarget(e);\r\n      if(DOMEventHandlers.states.swallowKeypress || core.keyboardInterface.processKeystroke(outputTarget, Levent)) {\r\n        DOMEventHandlers.states.swallowKeypress = false;\r\n        if(e \u0026\u0026 e.preventDefault) {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n        }\r\n        return false;\r\n      }\r\n\r\n      DOMEventHandlers.states.swallowKeypress = false;\r\n      return true;\r\n    }\r\n  }\r\n}","/// \u003creference path=\"touchAliasElement.ts\" /\u003e\r\n/// \u003creference path=\"preProcessor.ts\" /\u003e\r\n\r\nnamespace com.keyman.dom {\r\n  /*\r\n  * Note that for many of the actual events represented by methods in this file, `this` is replaced\r\n  * automatically by JavaScript\u0027s event handling system.  As such, many \u0027wrapper\u0027 variants of the events\r\n  * exist to restore the object-oriented hierarchy below.\r\n  *\r\n  */\r\n\r\n  export class CommonDOMStates {\r\n    _DisableInput: boolean = false;         // Should input be disabled?\r\n    _IgnoreNextSelChange: number = 0;       // when a visual keyboard key is mouse-down, ignore the next sel change because this stuffs up our history\r\n    _IgnoreBlurFocus: boolean = false;      // Used to temporarily ignore focus changes\r\n    _Selection = null;\r\n    _SelectionControl: any = null;   // Type behavior is as with activeElement and the like.\r\n\r\n    _activeElement: HTMLElement;\r\n    _lastActiveElement: HTMLElement;\r\n\r\n    focusing: boolean;\r\n    focusTimer: number;\r\n\r\n    changed: boolean;         // Tracks if the element has been edited since gaining focus.\r\n    swallowKeypress: boolean; // Notes if a keypress should be swallowed; used when handing mnemonics.\r\n\r\n    /* ----------------------- Static event-related methods ------------------------ */\r\n\r\n    setFocusTimer(): void {\r\n      this.focusing=true;\r\n\r\n      this.focusTimer = window.setTimeout(function() {\r\n        this.focusing=false;\r\n      }.bind(this), 50)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Declares a base, non-touch oriented implementation of all relevant DOM-related event handlers and state functions.\r\n   */\r\n  export class DOMEventHandlers {\r\n    // TODO:  resolve/refactor out!\r\n    protected keyman: KeymanBase;\r\n\r\n    // This is only static within a given initialization of KeymanWeb.  Perhaps it would be best as an initialization\r\n    // parameter and member field?\r\n    static states: CommonDOMStates = new CommonDOMStates();\r\n\r\n    constructor(keyman: KeymanBase) {\r\n      this.keyman = keyman;\r\n    }\r\n\r\n    /**\r\n     * Handle receiving focus by simulated input field\r\n     */\r\n    setFocus: (e?: TouchEvent) =\u003e void = function(e?: TouchEvent): void {\r\n      // Touch-only handler.\r\n    }.bind(this);\r\n\r\n    /**\r\n     * Handles touch-based loss of focus events.\r\n     */\r\n    setBlur: (e: FocusEvent) =\u003e void = function(e: FocusEvent) {\r\n      // Touch-only handler.\r\n    }.bind(this);\r\n\r\n    // End of I3363 (Build 301) additions\r\n\r\n    // Universal DOM event handlers (both desktop + touch)\r\n\r\n    //TODO: add more complete description of what ControlFocus really does\r\n    /**\r\n     * Respond to KeymanWeb-aware input element receiving focus\r\n     */\r\n    _ControlFocus: (e: FocusEvent) =\u003e boolean = function(this: DOMEventHandlers, e: FocusEvent): boolean {\r\n      var Ltarg: HTMLElement;\r\n      var device = this.keyman.util.device;\r\n\r\n      Ltarg = this.keyman.util.eventTarget(e) as HTMLElement;\r\n      if (Ltarg == null) {\r\n        return true;\r\n      }\r\n\r\n      if(Ltarg[\u0027body\u0027]) {\r\n        Ltarg = Ltarg[\u0027body\u0027]; // Occurs in Firefox for design-mode iframes.\r\n      }\r\n\r\n      // Prevent any action if a protected input field\r\n      if(device.touchable \u0026\u0026 (Ltarg.className == null || Ltarg.className.indexOf(\u0027keymanweb-input\u0027) \u003c 0)) {\r\n        return true;\r\n      }\r\n\r\n      // Or if not a remappable input field\r\n      var en=Ltarg.nodeName.toLowerCase();\r\n      if(Ltarg.ownerDocument \u0026\u0026 Ltarg instanceof Ltarg.ownerDocument.defaultView.HTMLInputElement) {\r\n        var et=Ltarg.type.toLowerCase();\r\n        if(!(et == \u0027text\u0027 || et == \u0027search\u0027)) {\r\n          return true;\r\n        }\r\n      } else if(Ltarg.ownerDocument \u0026\u0026 Ltarg.ownerDocument.designMode == \u0027on\u0027) {\r\n        // continue; don\u0027t block this one!\r\n      } else if((device.touchable || !Ltarg.isContentEditable)\r\n          \u0026\u0026 !(Ltarg.ownerDocument \u0026\u0026 Ltarg instanceof Ltarg.ownerDocument.defaultView.HTMLTextAreaElement)) {\r\n        return true;\r\n      }\r\n\r\n      // We condition on \u0027priorElement\u0027 below as a check to allow KMW to set a default active keyboard.\r\n      var priorElement = DOMEventHandlers.states._lastActiveElement;\r\n\r\n      if (Ltarg.nodeType == 3) { // defeat Safari bug\r\n        Ltarg = Ltarg.parentNode as HTMLElement;\r\n      }\r\n\r\n      var LfocusTarg = Ltarg;\r\n\r\n      // Ensure that focussed element is visible above the keyboard\r\n      if(Ltarg.className == null || Ltarg.className.indexOf(\u0027keymanweb-input\u0027) \u003c 0) {\r\n        if(this instanceof DOMTouchHandlers) {\r\n          (this as DOMTouchHandlers).scrollBody(Ltarg);\r\n        }\r\n      }\r\n\r\n      if(Ltarg.ownerDocument \u0026\u0026 Ltarg instanceof Ltarg.ownerDocument.defaultView.HTMLIFrameElement) { //**TODO: check case reference\r\n        this.keyman.domManager._AttachToIframe(Ltarg as HTMLIFrameElement);\r\n        Ltarg=Ltarg.contentWindow.document.body;\r\n      }\r\n\r\n      // Must set before _Blur / _Focus to avoid infinite recursion due to complications\r\n      // in setActiveKeyboard behavior with managed keyboard settings.\r\n      this.keyman.domManager.lastActiveElement = Ltarg;\r\n      this.keyman.domManager.activeElement = Ltarg;  // I3363 (Build 301)\r\n\r\n      if(this.keyman.uiManager.justActivated) {\r\n        this._BlurKeyboardSettings(Ltarg);\r\n      } else {\r\n        this._FocusKeyboardSettings(Ltarg, priorElement ? false : true);\r\n      }\r\n\r\n      // Always do the common focus stuff, instantly returning if we\u0027re in an editable iframe.\r\n      if(this._CommonFocusHelper(Ltarg)) {\r\n        return true;\r\n      };\r\n\r\n      // Set element directionality (but only if element is empty)\r\n      if(Ltarg.ownerDocument \u0026\u0026 Ltarg instanceof Ltarg.ownerDocument.defaultView.HTMLElement) {\r\n        this.keyman.domManager._SetTargDir(Ltarg);\r\n      }\r\n\r\n      //Execute external (UI) code needed on focus if required\r\n      this.doControlFocused(LfocusTarg, this.keyman.domManager.lastActiveElement);\r\n\r\n      return true;\r\n    }.bind(this);\r\n\r\n    /**\r\n     * Function     doControlFocused\r\n     * Scope        Private\r\n     * @param       {Object}            _target         element gaining focus\r\n     * @param       {Object}            _activeControl  currently active control\r\n     * @return      {boolean}\r\n     * Description  Execute external (UI) code needed on focus\r\n     */\r\n    doControlFocused(_target: HTMLElement, _activeControl: HTMLElement): boolean {\r\n      var p={};\r\n      p[\u0027target\u0027]=_target;\r\n      p[\u0027activeControl\u0027]=_activeControl;\r\n\r\n      return this.keyman.util.callEvent(\u0027kmw.controlfocused\u0027,p);\r\n    }\r\n\r\n    /**\r\n     * Respond to KMW losing focus on event\r\n     */\r\n    _ControlBlur: (e: FocusEvent) =\u003e boolean = function(this: DOMEventHandlers, e: FocusEvent): boolean {\r\n      let Ltarg = this.keyman.util.eventTarget(e) as HTMLElement;\r\n      if (Ltarg == null) {\r\n        return true;\r\n      }\r\n\r\n      if(Ltarg[\u0027body\u0027]) {\r\n        Ltarg = Ltarg[\u0027body\u0027]; // Occurs in Firefox for design-mode iframes.\r\n      }\r\n\r\n      // Makes sure we properly detect the TouchAliasElement root,\r\n      // rather than one of its constituent children.\r\n      if(this.keyman.util.device.touchable) {\r\n        Ltarg = findTouchAliasTarget(Ltarg);\r\n\r\n        if(!Ltarg) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      if(DOMEventHandlers.states._IgnoreNextSelChange) {\r\n        // If a keyboard calls saveFocus() (KSF), then ignore the\r\n        // next selection change\r\n        DOMEventHandlers.states._IgnoreNextSelChange--;\r\n        e.cancelBubble = true;\r\n        e.stopPropagation();\r\n        return true;\r\n      }\r\n\r\n      if(DOMEventHandlers.states._IgnoreBlurFocus) {\r\n        // Prevent triggering other blur-handling events (as possible)\r\n        e.cancelBubble = true;\r\n        e.stopPropagation();\r\n        return true;\r\n      }\r\n\r\n      // Hide the touch device input caret, if applicable  I3363 (Build 301)\r\n      if(dom.Utils.instanceof(this.keyman.domManager.activeElement, \"TouchAliasElement\")) {\r\n        let lastAlias = \u003cTouchAliasElement\u003e this.keyman.domManager.activeElement;\r\n        lastAlias.hideCaret();\r\n      }\r\n\r\n      if (Ltarg.nodeType == 3) { // defeat Safari bug\r\n        Ltarg = Ltarg.parentNode as HTMLElement;\r\n      }\r\n\r\n      if(Ltarg.ownerDocument) {\r\n        if(Ltarg instanceof Ltarg.ownerDocument.defaultView.HTMLIFrameElement) {\r\n          Ltarg=Ltarg.contentWindow.frameElement as HTMLElement;\r\n        }\r\n      }\r\n\r\n      ////keymanweb._SelectionControl = null;\r\n      if(this.keyman.domManager.lastActiveElement) {\r\n        this._BlurKeyboardSettings(this.keyman.domManager.lastActiveElement);\r\n      }\r\n\r\n      // Now that we\u0027ve handled all prior-element maintenance, update the active and \u0027last-active element\u0027.\r\n      this.keyman.domManager.activeElement = null; // I3363 (Build 301)\r\n      this.keyman.domManager.lastActiveElement = Ltarg;\r\n\r\n      /* If the KeymanWeb UI is active as a user changes controls, all UI-based effects should be restrained to this control in case\r\n      * the user is manually specifying languages on a per-control basis.\r\n      */\r\n      this.keyman.uiManager.justActivated = false;\r\n\r\n      var isActivating = this.keyman.uiManager.isActivating;\r\n      let activeKeyboard = com.keyman.singleton.core.activeKeyboard;\r\n      if(!isActivating \u0026\u0026 activeKeyboard) {\r\n        activeKeyboard.notify(0, Utils.getOutputTarget(Ltarg as HTMLElement), 0);  // I2187\r\n      }\r\n\r\n      this.doControlBlurred(Ltarg, e, isActivating);\r\n\r\n      this.doChangeEvent(Ltarg);\r\n      this.keyman[\u0027resetContext\u0027]();\r\n\r\n      return true;\r\n    }.bind(this);\r\n\r\n    /**\r\n     * Function     doControlBlurred\r\n     * Scope        Private\r\n     * @param       {Object}            _target       element losing focus\r\n     * @param       {Event}             _event        event object\r\n     * @param       {(boolean|number)}  _isActivating activation state\r\n     * @return      {boolean}\r\n     * Description  Execute external (UI) code needed on blur\r\n     */\r\n    doControlBlurred(_target: HTMLElement, _event: Event, _isActivating: boolean|number): boolean {\r\n      var p={};\r\n      p[\u0027target\u0027]=_target;\r\n      p[\u0027event\u0027]=_event;\r\n      p[\u0027isActivating\u0027]=_isActivating;\r\n\r\n      return this.keyman.util.callEvent(\u0027kmw.controlblurred\u0027,p);\r\n    }\r\n\r\n    /**\r\n     * Function             _BlurKeyboardSettings\r\n     * Description          Stores the last active element\u0027s keyboard settings.  Should be called\r\n     *                      whenever a KMW-enabled page element loses control.\r\n     */\r\n    _BlurKeyboardSettings(lastElem: HTMLElement, PInternalName?: string, PLgCode?: string) {\r\n      var keyboardID = this.keyman.core.activeKeyboard ? this.keyman.core.activeKeyboard.id : \u0027\u0027;\r\n      var langCode = this.keyman.keyboardManager.getActiveLanguage();\r\n\r\n      if(PInternalName !== undefined \u0026\u0026 PLgCode !== undefined) {\r\n        keyboardID = PInternalName;\r\n        langCode = PLgCode;\r\n      }\r\n\r\n      if(lastElem \u0026\u0026 lastElem._kmwAttachment.keyboard != null) {\r\n        lastElem._kmwAttachment.keyboard = keyboardID;\r\n        lastElem._kmwAttachment.languageCode = langCode;\r\n      } else {\r\n        this.keyman.globalKeyboard = keyboardID;\r\n        this.keyman.globalLanguageCode = langCode;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Function             _FocusKeyboardSettings\r\n     * @param   {boolean}   blockGlobalChange   A flag indicating if the global keyboard setting should be ignored for this call.\r\n     * Description          Restores the newly active element\u0027s keyboard settings.  Should be called\r\n     *                      whenever a KMW-enabled page element gains control, but only once the prior\r\n     *                      element\u0027s loss of control is guaranteed.\r\n     */\r\n    _FocusKeyboardSettings(lastElem: HTMLElement, blockGlobalChange: boolean) {\r\n      if(lastElem \u0026\u0026 lastElem._kmwAttachment.keyboard != null) {\r\n        this.keyman.keyboardManager.setActiveKeyboard(lastElem._kmwAttachment.keyboard,\r\n          lastElem._kmwAttachment.languageCode);\r\n      } else if(!blockGlobalChange) {\r\n        this.keyman.keyboardManager.setActiveKeyboard(this.keyman.globalKeyboard, this.keyman.globalLanguageCode);\r\n      }\r\n\r\n       // Now that we\u0027ve fully entered the new context, invalidate the context so we can generate initial predictions from it.\r\n      if(this.keyman.modelManager) {\r\n        let outputTarget = dom.Utils.getOutputTarget(lastElem);\r\n        this.keyman.core.languageProcessor.invalidateContext(outputTarget, this.keyman.core.keyboardProcessor?.layerId);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Function             _CommonFocusHelper\r\n     * @param   {Element}   target\r\n     * @returns {boolean}\r\n     * Description          Performs common state management for the various focus events of KeymanWeb.\r\n     *                      The return value indicates whether (true) or not (false) the calling event handler\r\n     *                      should be terminated immediately after the call.\r\n     */\r\n    _CommonFocusHelper(target: HTMLElement): boolean {\r\n      let keyman = com.keyman.singleton;\r\n      var uiManager = this.keyman.uiManager;\r\n\r\n      if(target.ownerDocument \u0026\u0026 target instanceof target.ownerDocument.defaultView.HTMLIFrameElement) {\r\n        if(!this.keyman.domManager._IsEditableIframe(target, 1)) {\r\n          DOMEventHandlers.states._DisableInput = true;\r\n          return true;\r\n        }\r\n      }\r\n      DOMEventHandlers.states._DisableInput = false;\r\n\r\n      const outputTarget = dom.Utils.getOutputTarget(target);\r\n\r\n      let activeKeyboard = keyman.core.activeKeyboard;\r\n      if(!uiManager.justActivated) {\r\n        if(target \u0026\u0026 outputTarget) {\r\n          outputTarget.deadkeys().clear();\r\n        }\r\n\r\n        if(activeKeyboard) {\r\n          activeKeyboard.notify(0, outputTarget, 1);  // I2187\r\n        }\r\n      }\r\n\r\n      if(!uiManager.justActivated \u0026\u0026 DOMEventHandlers.states._SelectionControl != target) {\r\n        uiManager.isActivating = false;\r\n      }\r\n      uiManager.justActivated = false;\r\n\r\n      DOMEventHandlers.states._SelectionControl = target;\r\n\r\n      if(target \u0026\u0026 outputTarget) {\r\n        // Call the current keyboard\u0027s newContext handler;\r\n        // timeout is required in order to get the current\r\n        // selection, which is not ready at time of focus event,\r\n        // at least on Chrome\r\n        window.setTimeout(() =\u003e {\r\n          //console.log(\u0027processNewContextEvent called from focus\u0027);\r\n          com.keyman.singleton.core.processNewContextEvent(outputTarget);\r\n        });\r\n      }\r\n\r\n      if(keyman.core.languageProcessor.isActive) {\r\n        keyman.core.languageProcessor.predictFromTarget(outputTarget, keyman.core.keyboardProcessor?.layerId);\r\n      }\r\n      return false;\r\n    }\r\n\r\n    /**\r\n     * Function     _KeyDown\r\n     * Scope        Private\r\n     * Description  Processes keydown event and passes data to keyboard.\r\n     *\r\n     * Note that the test-case oriented \u0027recorder\u0027 stubs this method to facilitate keystroke\r\n     * recording for use in test cases.  If changing this function, please ensure the recorder is\r\n     * not affected.\r\n     */\r\n    _KeyDown: (e: KeyboardEvent) =\u003e boolean = function(this: DOMEventHandlers, e: KeyboardEvent): boolean {\r\n      var activeKeyboard = this.keyman.core.activeKeyboard;\r\n      var util = this.keyman.util;\r\n\r\n      if(DOMEventHandlers.states._DisableInput || activeKeyboard == null) {\r\n        return true;\r\n      }\r\n\r\n      // Prevent mapping element is readonly or tagged as kmw-disabled\r\n      var el=util.eventTarget(e) as HTMLElement;\r\n      if(util.device.touchable) {\r\n        if(el \u0026\u0026 typeof el.kmwInput != \u0027undefined\u0027 \u0026\u0026 el.kmwInput == false) {\r\n          return true;\r\n        }\r\n      } else if(el \u0026\u0026 el.className.indexOf(\u0027kmw-disabled\u0027) \u003e= 0) {\r\n        return true;\r\n      }\r\n\r\n      return PreProcessor.keyDown(e);\r\n    }.bind(this);\r\n\r\n    doChangeEvent(_target: HTMLElement) {\r\n      if(DOMEventHandlers.states.changed) {\r\n        let event = new Event(\u0027change\u0027, {\"bubbles\": true, \"cancelable\": false});\r\n        \r\n        // Ensure that touch-aliased elements fire as if from the aliased element.\r\n        if(_target[\u0027base\u0027] \u0026\u0026 _target[\u0027base\u0027][\u0027kmw_ip\u0027]) {\r\n          _target = _target[\u0027base\u0027];\r\n        }\r\n        _target.dispatchEvent(event);\r\n      }\r\n\r\n      DOMEventHandlers.states.changed = false;\r\n    }\r\n\r\n    _Click: (e: MouseEvent) =\u003e boolean = function(this: DOMEventHandlers, e: MouseEvent): boolean {\r\n      let target = e.target as HTMLElement;\r\n      if(target \u0026\u0026 target[\u0027base\u0027]) {\r\n        target = target[\u0027base\u0027];\r\n      }\r\n\r\n      //console.log(\u0027processNewContextEvent called from click\u0027);\r\n      com.keyman.singleton.core.processNewContextEvent(dom.Utils.getOutputTarget(target));\r\n\r\n      return true;\r\n    }.bind(this);\r\n\r\n    /**\r\n     * Function     _KeyPress\r\n     * Scope        Private\r\n     * Description Processes keypress event (does not pass data to keyboard)\r\n     */\r\n    _KeyPress: (e: KeyboardEvent) =\u003e boolean = function(this: DOMEventHandlers, e: KeyboardEvent): boolean {\r\n      if(DOMEventHandlers.states._DisableInput || this.keyman.core.activeKeyboard == null) {\r\n        return true;\r\n      }\r\n\r\n      return PreProcessor.keyPress(e);\r\n    }.bind(this);\r\n\r\n    /**\r\n     * Function     _KeyUp\r\n     * Scope        Private\r\n     * Description Processes keyup event and passes event data to keyboard\r\n     */\r\n    _KeyUp: (e: KeyboardEvent) =\u003e boolean = function(this: DOMEventHandlers, e: KeyboardEvent): boolean {\r\n      var osk = this.keyman.osk;\r\n\r\n      var Levent = PreProcessor._GetKeyEventProperties(e, false);\r\n      if(Levent == null) {\r\n        return true;\r\n      }\r\n\r\n      let outputTarget = PreProcessor.getEventOutputTarget(e) as dom.targets.OutputTarget;\r\n      var inputEle = outputTarget.getElement();\r\n\r\n      // Since this part concerns DOM element + browser interaction management, we preprocess it for\r\n      // browser form commands before passing control to the Processor module.\r\n      if(Levent.Lcode == 13) {\r\n        var ignore = false;\r\n        if(outputTarget instanceof inputEle.ownerDocument.defaultView.HTMLTextAreaElement) {\r\n          ignore = true;\r\n        }\r\n\r\n        if(inputEle.base \u0026\u0026 inputEle.base instanceof inputEle.base.ownerDocument.defaultView.HTMLTextAreaElement) {\r\n          ignore = true;\r\n        }\r\n\r\n        if(!ignore) {\r\n          // For input fields, move to next input element\r\n          if(inputEle instanceof inputEle.ownerDocument.defaultView.HTMLInputElement) {\r\n            if(inputEle.type == \u0027search\u0027 || inputEle.type == \u0027submit\u0027) {\r\n              inputEle.form.submit();\r\n            } else {\r\n              this.keyman.domManager.moveToNext(false);\r\n            }\r\n          }\r\n          return true;\r\n        }\r\n      }\r\n\r\n      return PreProcessor.keyUp(e);\r\n    }.bind(this);\r\n  }\r\n\r\n  // -------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Defines numerous functions for handling and modeling touch-based aliases.\r\n   */\r\n  export class DOMTouchHandlers extends DOMEventHandlers {\r\n    firstTouch: {\r\n      x: number;\r\n      y: number;\r\n    };\r\n\r\n\r\n    constructor(keyman: KeymanBase) {\r\n      super(keyman);\r\n    }\r\n\r\n    private static selectTouch(e: TouchEvent): Touch {\r\n      /*\r\n       * During multi-touch events, it\u0027s possible for one or more touches of said multi-touch\r\n       * to be against irrelevant parts of the page.  We only want to consider touches against\r\n       * valid OutputTargets - against elements of the page that KMW can attach to.\r\n       * With touch active... that\u0027s a TouchAliasElement.\r\n       */\r\n      let isValidTouch = function(touch: Touch, target: EventTarget): boolean {\r\n        return e.target == target \u0026\u0026 !!(findTouchAliasTarget(touch.target as HTMLElement));\r\n      }\r\n\r\n      // The event at least tells us the event\u0027s target, which can be used to help check\r\n      // whether or not individual `Touch`es may be related to this specific event for\r\n      // an ongoing multitouch scenario.\r\n      let target = e.target;\r\n\r\n      // Find the first touch affected by this event that matches the current target.\r\n      for(let i=0; i \u003c e.changedTouches.length; i++) {\r\n        if(isValidTouch(e.changedTouches[i], target)) {\r\n          return e.changedTouches[i];\r\n        }\r\n      }\r\n\r\n      // Shouldn\u0027t be possible.  Just in case, we\u0027d prefer a silent failure that allows\r\n      // callers to silently abort.\r\n      throw new Error(\"Could not select valid Touch for event.\");\r\n    }\r\n\r\n    /**\r\n     * Handle receiving focus by simulated input field\r\n     */\r\n    setFocus: (e?: TouchEvent) =\u003e void = function(this: DOMTouchHandlers, e?: TouchEvent): void {\r\n      DOMEventHandlers.states.setFocusTimer();\r\n\r\n      var tEvent: {\r\n        pageX: number;\r\n        pageY: number;\r\n        target?: EventTarget;\r\n      };\r\n\r\n      if(e \u0026\u0026 dom.Utils.instanceof(e, \"TouchEvent\")) {\r\n        try {\r\n          tEvent=DOMTouchHandlers.selectTouch(e as TouchEvent);\r\n        } catch(err) {\r\n          console.warn(err);\r\n          return;\r\n        }\r\n      } else { // Allow external code to set focus and thus display the OSK on touch devices if required (KMEW-123)\r\n        tEvent={pageX:0, pageY:0}\r\n\r\n        // Will usually be called from setActiveElement, which should define DOMEventHandlers.states.lastActiveElement\r\n        if(this.keyman.domManager.lastActiveElement) {\r\n          tEvent.target = this.keyman.domManager.lastActiveElement;\r\n          // Shouldn\u0027t happen, but... just in case.  Implemented late in 14.0 beta, so\r\n          // this detail was kept, though it\u0027s likely safe to eliminate.\r\n          if(tEvent.target[\u0027kmw_ip\u0027]) {\r\n            tEvent.target = tEvent.target[\u0027kmw_ip\u0027];\r\n          }\r\n        // but will default to first input or text area on page if DOMEventHandlers.states.lastActiveElement is null\r\n        } else {\r\n          tEvent.target = this.keyman.domManager.sortedInputs[0][\u0027kmw_ip\u0027];\r\n        }\r\n      }\r\n\r\n      this.setFocusWithTouch(tEvent);\r\n    }.bind(this);\r\n\r\n    // Also handles initial touch responses.\r\n    setFocusWithTouch(tEvent: {pageX: number, pageY: number, target?: EventTarget}) {\r\n      var touchX=tEvent.pageX,touchY=tEvent.pageY;\r\n\r\n      // Some specifics rely upon which child of the TouchAliasElement received the actual event.\r\n      let tTarg=tEvent.target as HTMLElement;\r\n\r\n      // Determines the actual TouchAliasElement - the part tied to an OutputTarget.\r\n      let target = findTouchAliasTarget(tTarg);\r\n\r\n      if(!target) {\r\n        return;\r\n      }\r\n\r\n      // Some parts rely upon the scroller element.\r\n      let scroller = target.firstChild as HTMLElement;\r\n\r\n      // Move the caret and refocus if necessary\r\n      if(this.keyman.domManager.activeElement != target) {\r\n        // Hide the KMW caret\r\n        let prevTarget = \u003cTouchAliasElement\u003e this.keyman.domManager.activeElement;\r\n\r\n        // We\u0027re not 100% sure whether or not the next line can occur,\r\n        // but it\u0027s a decent failsafe regardless.\r\n        if(prevTarget \u0026\u0026 prevTarget[\u0027kmw_ip\u0027]) {\r\n          prevTarget = prevTarget[\u0027kmw_ip\u0027] as TouchAliasElement;\r\n        }\r\n\r\n        // Make sure that we have the right type so that the expected method exists.\r\n        if(prevTarget \u0026\u0026 dom.Utils.instanceof(prevTarget, \"TouchAliasElement\")) {\r\n          prevTarget.hideCaret();\r\n        }\r\n\r\n        this.keyman.domManager.activeElement = target;\r\n        // The issue here is that touching a DIV does not actually set the focus for iOS, even when enabled to accept focus (by setting tabIndex=0)\r\n        // We must explicitly set the focus in order to remove focus from any non-KMW input\r\n        target.focus();  //Android native browsers may not like this, but it is needed for Chrome, Safari\r\n      }\r\n\r\n      // Correct element directionality if required\r\n      this.keyman.domManager._SetTargDir(target);\r\n\r\n      // If clicked on DIV on the main element, rather than any part of the text representation,\r\n      // set caret to end of text\r\n      if(tTarg \u0026\u0026 tTarg == target) {\r\n        let cp: number;\r\n        let x=dom.Utils.getAbsoluteX(scroller.firstChild as HTMLElement);\r\n        if(target.dir == \u0027rtl\u0027) {\r\n          x += (scroller.firstChild as HTMLElement).offsetWidth;\r\n          cp=(touchX \u003e x ? 0 : 100000);\r\n        } else {\r\n          cp=(touchX\u003cx ? 0 : 100000);\r\n        }\r\n\r\n        target.setTextCaret(cp);\r\n        target.scrollInput();\r\n        // nextSibling - the scrollbar element.\r\n      } else if(tTarg != scroller.nextSibling) {\r\n        // Otherwise, if clicked on text in SPAN, set at touch position\r\n        target.executeCaretSearch(touchX, touchY);\r\n      }\r\n\r\n      /*\r\n       * This event will trigger before keymanweb.setBlur is triggered.  Now that we\u0027re allowing independent keyboard settings\r\n       * for controls, we have to act here to preserve the outgoing control\u0027s keyboard settings.\r\n       *\r\n       * If we \u0027just activated\u0027 the KeymanWeb UI, we need to save the new keyboard change as appropriate.\r\n       */\r\n      if(this.keyman.domManager.lastActiveElement) {\r\n        this._BlurKeyboardSettings(this.keyman.domManager.lastActiveElement);\r\n      }\r\n\r\n      // With the attachment API update, we now directly track the old legacy control behavior.\r\n      this.keyman.domManager.lastActiveElement = target;\r\n      target.showCaret();\r\n\r\n      /*\r\n       * If we \u0027just activated\u0027 the KeymanWeb UI, we need to save the new keyboard change as appropriate.\r\n       * If not, we need to activate the control\u0027s preferred keyboard.\r\n       */\r\n      this._FocusKeyboardSettings(target, false);\r\n\r\n      // Always do the common focus stuff, instantly returning if we\u0027re in an editable iframe.\r\n      // This parallels the if-statement in _ControlFocus - it may be needed as this if-statement in the future,\r\n      // despite its present redundancy.\r\n      if(this._CommonFocusHelper(target)) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Close OSK and remove simulated caret on losing focus\r\n     */\r\n    cancelInput(): void {\r\n      this.keyman.domManager.activeElement = null;\r\n      this.keyman.domManager.lastActiveElement = null;\r\n      this.keyman.osk.hideNow();\r\n    };\r\n\r\n    /**\r\n     * Handle losing focus from simulated input field\r\n     */\r\n    setBlur: (e: FocusEvent) =\u003e void = function(this: DOMTouchHandlers, e: FocusEvent) {\r\n      // This works OK for iOS, but may need something else for other platforms\r\n      var elem: HTMLElement;\r\n\r\n      if((\u0027relatedTarget\u0027 in e) \u0026\u0026 e.relatedTarget) {\r\n        elem = e.relatedTarget as HTMLElement;\r\n      }\r\n\r\n      this.executeBlur(elem);\r\n    }.bind(this);\r\n\r\n    executeBlur(elem: HTMLElement) {\r\n      this.keyman[\u0027resetContext\u0027]();\r\n\r\n      if(elem) {\r\n        this.doChangeEvent(elem);\r\n        if(elem.nodeName != \u0027DIV\u0027 || elem.className.indexOf(\u0027keymanweb-input\u0027) == -1) {\r\n          this.cancelInput();\r\n          return;\r\n        }\r\n      }\r\n\r\n      //Hide the OSK\r\n      if(!DOMEventHandlers.states.focusing \u0026\u0026 !this.keyman.uiManager.justActivated) {\r\n        this.cancelInput();\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Display and position a scrollbar in the input field if needed\r\n     *\r\n     * @param   {Object}  e   input DIV element (copy of INPUT or TEXTAREA)\r\n     */\r\n    setScrollBar(e: HTMLElement) {\r\n      // Display the scrollbar if necessary.  Added TEXTAREA condition to correct rotation issue KMW-5.  Fixed for 310 beta.\r\n      var scroller=\u003cHTMLElement\u003ee.childNodes[0], sbs=(\u003cHTMLElement\u003ee.childNodes[1]).style;\r\n      if((scroller.offsetWidth \u003e e.offsetWidth || scroller.offsetLeft \u003c 0) \u0026\u0026 (e.base.nodeName != \u0027TEXTAREA\u0027)) {\r\n        sbs.height=\u00274px\u0027;\r\n        sbs.width=100*(e.offsetWidth/scroller.offsetWidth)+\u0027%\u0027;\r\n        sbs.left=100*(-scroller.offsetLeft/scroller.offsetWidth)+\u0027%\u0027;\r\n        sbs.top=\u00270\u0027;\r\n        sbs.visibility=\u0027visible\u0027;\r\n      } else if(scroller.offsetHeight \u003e e.offsetHeight || scroller.offsetTop \u003c 0) {\r\n        sbs.width=\u00274px\u0027;\r\n        sbs.height=100*(e.offsetHeight/scroller.offsetHeight)+\u0027%\u0027;\r\n        sbs.top=100*(-scroller.offsetTop/scroller.offsetHeight)+\u0027%\u0027;\r\n        sbs.left=\u00270\u0027;\r\n        sbs.visibility=\u0027visible\u0027;\r\n      } else {\r\n        sbs.visibility=\u0027hidden\u0027;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Handle the touch end event for an input element\r\n     */\r\n    dragEnd: (e: TouchEvent) =\u003e void = function(this: DOMTouchHandlers, e: TouchEvent) {\r\n      e.stopPropagation();\r\n      this.firstTouch = null;\r\n    }.bind(this);\r\n\r\n    /**\r\n     * Handle the touch move event for an input element\r\n     */\r\n    dragInput: (e: TouchEvent) =\u003e void = function(this: DOMTouchHandlers, e: TouchEvent) {\r\n      // Prevent dragging window\r\n      if(e.cancelable) {\r\n        // If a touch-alias element is scrolling, this may be false.\r\n        // Tends to result in a spam of console errors when e.cancelable == false.\r\n        e.preventDefault();\r\n      }\r\n      e.stopPropagation();\r\n\r\n      // Identify the target from the touch list or the event argument (IE 10 only)\r\n      var target: HTMLElement;\r\n      let touch: Touch;\r\n\r\n      if(dom.Utils.instanceof(e, \"TouchEvent\")) {\r\n        try {\r\n          touch=DOMTouchHandlers.selectTouch(e as TouchEvent);\r\n        } catch(err) {\r\n          console.warn(err);\r\n          return;\r\n        }\r\n        target = touch.target as HTMLElement;\r\n      } else {\r\n        target = e.target as HTMLElement;\r\n      }\r\n      if(target == null) {\r\n        return;\r\n      }\r\n\r\n      // Identify the input element from the touch event target (touched element may be contained by input)\r\n      target = findTouchAliasTarget(target);\r\n\r\n      if(!target) {\r\n        return;\r\n      }\r\n\r\n      const x = touch.screenX;\r\n      const y = touch.screenY;\r\n      \r\n      // Allow content of input elements to be dragged horizontally or vertically\r\n      if(typeof this.firstTouch == \u0027undefined\u0027 || this.firstTouch == null) {\r\n        this.firstTouch={x:x,y:y};\r\n      } else {\r\n        var x0=this.firstTouch.x,y0=this.firstTouch.y,\r\n          scroller=target.firstChild as HTMLElement,dx,dy,x1;\r\n\r\n        if(target.base.nodeName == \u0027TEXTAREA\u0027) {\r\n          var yOffset=parseInt(scroller.style.top,10);\r\n          if(isNaN(yOffset)) yOffset=0;\r\n          dy=y0-y;\r\n          if(dy \u003c -4 || dy \u003e 4) {\r\n            scroller.style.top=(yOffset\u003cdy?yOffset-dy:0)+\u0027px\u0027;\r\n            this.firstTouch.y=y;\r\n          }\r\n        } else {\r\n          var xOffset=parseInt(scroller.style.left,10);\r\n          if(isNaN(xOffset)) xOffset=0;\r\n          dx=x0-x;\r\n          if(dx \u003c -4 || dx \u003e 4)\r\n          {\r\n            // Limit dragging beyond the defined text (to avoid dragging the text completely out of view)\r\n            var xMin=0, xMax= dom.Utils.getAbsoluteX(target)+target.offsetWidth-scroller.offsetWidth-32;\r\n            if(target.base.dir == \u0027rtl\u0027)xMin=16; else xMax=xMax-24;\r\n            x1=xOffset-dx;\r\n            if(x1 \u003e xMin) x1=xMin;\r\n            if(x1 \u003c xMax) x1=xMax;\r\n            scroller.style.left=x1+\u0027px\u0027;\r\n            this.firstTouch.x=x;\r\n          }\r\n        }\r\n      }\r\n      // Should refactor to use TouchAliasElement\u0027s version; target is an instance of the class.\r\n      this.setScrollBar(target);\r\n    }.bind(this);\r\n\r\n    /**\r\n     * Scroll the document body vertically to bring the active input into view\r\n     *\r\n     * @param       {Object}      e        simulated input field object being focussed\r\n     */\r\n    scrollBody(e: HTMLElement): void {\r\n      var osk = this.keyman.osk;\r\n\r\n      if(!e || e.className == null || e.className.indexOf(\u0027keymanweb-input\u0027) \u003c 0 || !osk) {\r\n        return;\r\n      }\r\n\r\n      // Get the absolute position of the caret\r\n      var s2=\u003cHTMLElement\u003ee.firstChild.childNodes[1], y=dom.Utils.getAbsoluteY(s2), t=window.pageYOffset,dy=0;\r\n      if(y \u003c t) {\r\n        dy=y-t;\r\n      } else {\r\n        dy=y-t-(window.innerHeight-osk._Box.offsetHeight-s2.offsetHeight-2);\r\n        if(dy \u003c 0) dy=0;\r\n      }\r\n      // Hide OSK, then scroll, then re-anchor OSK with absolute position (on end of scroll event)\r\n      if(dy != 0) {\r\n        window.scrollTo(0,dy+window.pageYOffset);\r\n      }\r\n    }\r\n  }\r\n}\r\n","namespace com.keyman.dom {\r\n  // Basically, these are shorthand imports, only viewable within this file.\r\n  let DefaultOutput = text.DefaultOutput;\r\n  let Codes = text.Codes;\r\n  type KeyEvent = text.KeyEvent;\r\n\r\n  // Now for some classic JS method \"extension\".\r\n  let coreIsCommand = DefaultOutput.isCommand;\r\n  let coreApplyCommand = DefaultOutput.applyCommand;\r\n\r\n  DefaultOutput.isCommand = function(Lkc: KeyEvent): boolean {\r\n    let code = DefaultOutput.codeForEvent(Lkc);\r\n\r\n    switch(code) {\r\n      case Codes.keyCodes[\u0027K_TAB\u0027]:\r\n      case Codes.keyCodes[\u0027K_TABBACK\u0027]:\r\n      case Codes.keyCodes[\u0027K_TABFWD\u0027]:\r\n        return true;\r\n      default:\r\n        return coreIsCommand(Lkc);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * applyCommand - used when a RuleBehavior represents a non-text \"command\" within the Engine.\r\n   */\r\n  DefaultOutput.applyCommand = function(Lkc: KeyEvent, outputTarget: text.OutputTarget): void {\r\n    let code = DefaultOutput.codeForEvent(Lkc);\r\n    let domManager = com.keyman.singleton.domManager;\r\n\r\n    let hideCaret: () =\u003e void;\r\n    if(outputTarget instanceof com.keyman.dom.targets.TouchAlias) {\r\n      hideCaret = function() {\r\n        let target = outputTarget as com.keyman.dom.targets.TouchAlias;\r\n        target.root.hideCaret();\r\n      }\r\n    } else {\r\n      hideCaret = function() {};\r\n    }\r\n\r\n    switch(code) {\r\n      case Codes.keyCodes[\u0027K_TAB\u0027]:\r\n        hideCaret();\r\n        domManager.moveToNext((Lkc.Lmodifiers \u0026 text.Codes.modifierCodes[\u0027SHIFT\u0027]) != 0);\r\n        break;\r\n      case Codes.keyCodes[\u0027K_TABBACK\u0027]:\r\n        hideCaret();\r\n        domManager.moveToNext(true);\r\n        break;\r\n      case Codes.keyCodes[\u0027K_TABFWD\u0027]:\r\n        hideCaret();\r\n        domManager.moveToNext(false);\r\n        break;\r\n    }\r\n\r\n    coreApplyCommand(Lkc, outputTarget);\r\n  }\r\n}","namespace com.keyman.dom {\r\n  text.prediction.LanguageProcessor.prototype.canEnable = function(): boolean {\r\n    if(typeof Worker != \u0027function\u0027) {\r\n      console.warn(\"WebWorkers are not supported by this browser.\");\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  let headlessRuleBehaviorFinalize = text.RuleBehavior.prototype.finalize;\r\n  text.RuleBehavior.prototype.finalize = function(this: text.RuleBehavior, processor: text.KeyboardProcessor, outputTarget: text.OutputTarget, readonly: boolean) {\r\n    let keyman = com.keyman.singleton;\r\n    // Execute the standard baseline stuff first.\r\n    headlessRuleBehaviorFinalize.call(this, processor);\r\n\r\n    // newContext and postKeystroke events cannot emit content\r\n    if(readonly) {\r\n      return;\r\n    }\r\n\r\n    // If the transform isn\u0027t empty, we\u0027ve changed text - which should produce a \u0027changed\u0027 event in the DOM.\r\n    let ruleTransform = this.transcription.transform;\r\n    if(ruleTransform.insert != \"\" || ruleTransform.deleteLeft \u003e 0 || ruleTransform.deleteRight \u003e 0) {\r\n      if(outputTarget instanceof targets.OutputTarget \u0026\u0026 outputTarget.getElement() == keyman.domManager.activeElement) {\r\n        dom.DOMEventHandlers.states.changed = true;\r\n      }\r\n    }\r\n\r\n    // KMEA and KMEI (embedded mode) use direct insertion of the character string\r\n    if(keyman.isEmbedded) {\r\n      // A special embedded callback used to setup direct callbacks to app-native code.\r\n      keyman[\u0027oninserttext\u0027](ruleTransform.deleteLeft, ruleTransform.insert, ruleTransform.deleteRight);\r\n      if(outputTarget instanceof targets.OutputTarget) {\r\n        keyman.refreshElementContent(outputTarget.getElement());\r\n      }\r\n    }\r\n  }\r\n}","namespace com.keyman.dom.targets {\r\n  export abstract class OutputTarget extends text.OutputTarget {\r\n    /**\r\n     * Returns the underlying element / document modeled by the wrapper.\r\n     */\r\n    abstract getElement(): HTMLElement;\r\n\r\n    public focus(): void {\r\n      const ele = this.getElement();\r\n      if(ele.focus) {\r\n        ele.focus();\r\n      }\r\n    }\r\n\r\n    /**\r\n     * A helper method for doInputEvent; creates a simple common event and default dispatching.\r\n     * @param elem \r\n     */\r\n    protected dispatchInputEventOn(elem: HTMLElement) {\r\n      let event: InputEvent;\r\n\r\n      // `undefined` in pre-Chrome Edge and Chrome for Android before version 60.\r\n      if(window[\u0027InputEvent\u0027]) { // can\u0027t condition on the type directly; TS optimizes that out.\r\n        event = new InputEvent(\u0027input\u0027, {\"bubbles\": true, \"cancelable\": false});\r\n      }\r\n\r\n      if(elem \u0026\u0026 event) {\r\n        elem.dispatchEvent(event);\r\n      }\r\n    }\r\n\r\n    apply(transform: Transform) {\r\n      super.apply(transform);\r\n\r\n      // This class has non-integrated unit tests in which the `singleton` object doesn\u0027t exist.\r\n      // Thus, we need to test for this case.\r\n      let keyman = com.keyman[\u0027singleton\u0027];\r\n\r\n      // Signal the necessary text changes to the embedding app, if it exists.\r\n      if(keyman \u0026\u0026 keyman[\u0027oninserttext\u0027] \u0026\u0026 keyman.isEmbedded) {\r\n        keyman[\u0027oninserttext\u0027](transform.deleteLeft, transform.insert, transform.deleteRight);\r\n      }\r\n    }\r\n  }\r\n}","namespace com.keyman.dom.targets {\r\n\r\n  export class Input extends OutputTarget {\r\n    root: HTMLInputElement;\r\n\r\n    /**\r\n     * Tracks the most recently-cached selection start index.\r\n     */\r\n    private _cachedSelectionStart: number\r\n\r\n    /**\r\n     * Tracks the most recently processed, extended-string-based selection start index.\r\n     * When the element\u0027s selectionStart value changes, this should be invalidated.\r\n     */\r\n    private processedSelectionStart: number;\r\n\r\n    /**\r\n     * Tracks the most recently processed, extended-string-based selection end index.\r\n     * When the element\u0027s selectionEnd value changes, this should be invalidated.\r\n     */\r\n    private processedSelectionEnd: number;\r\n\r\n    constructor(ele: HTMLInputElement) {\r\n      super();\r\n\r\n      this.root = ele;\r\n      this._cachedSelectionStart = -1;\r\n    }\r\n\r\n    get isSynthetic(): boolean {\r\n      return false;\r\n    }\r\n\r\n    getElement(): HTMLInputElement {\r\n      return this.root;\r\n    }\r\n\r\n    clearSelection(): void {\r\n      // Processes our codepoint-based variants of selectionStart and selectionEnd.\r\n      this.getCaret(); // updates processedSelectionStart if required\r\n      this.root.value = this.root.value._kmwSubstring(0, this.processedSelectionStart) + this.root.value._kmwSubstring(this.processedSelectionEnd); //I3319\r\n\r\n      this.setCaret(this.processedSelectionStart);\r\n    }\r\n\r\n    isSelectionEmpty(): boolean {\r\n      return this.root.selectionStart == this.root.selectionEnd;\r\n    }\r\n\r\n    hasSelection(): boolean {\r\n      return true;\r\n    }\r\n\r\n    invalidateSelection() {\r\n      // Since .selectionStart will never return this value, we use it to indicate\r\n      // the need to refresh our processed indices.\r\n      this._cachedSelectionStart = -1;\r\n    }\r\n\r\n    getCaret(): number {\r\n      if(this.root.selectionStart != this._cachedSelectionStart) {\r\n        this._cachedSelectionStart = this.root.selectionStart; // KMW-1\r\n        this.processedSelectionStart = this.root.value._kmwCodeUnitToCodePoint(this.root.selectionStart); // I3319\r\n        this.processedSelectionEnd = this.root.value._kmwCodeUnitToCodePoint(this.root.selectionEnd);     // I3319\r\n      }\r\n      return this.root.selectionDirection == \u0027forward\u0027 ? this.processedSelectionEnd : this.processedSelectionStart;\r\n    }\r\n\r\n    getDeadkeyCaret(): number {\r\n      return this.getCaret();\r\n    }\r\n\r\n    setCaret(caret: number) {\r\n      this.setSelection(caret, caret, \"none\");\r\n    }\r\n\r\n    setSelection(start: number, end: number, direction: \"forward\" | \"backward\" | \"none\") {\r\n      let domStart = this.root.value._kmwCodePointToCodeUnit(start);\r\n      let domEnd = this.root.value._kmwCodePointToCodeUnit(end);\r\n      this.root.setSelectionRange(domStart, domEnd, direction);\r\n\r\n      this.processedSelectionStart = start;\r\n      this.processedSelectionEnd = end;\r\n\r\n      Utils.forceScroll(this.root);\r\n    }\r\n\r\n    getSelectionDirection(): \"forward\" | \"backward\" | \"none\" {\r\n      return this.root.selectionDirection;\r\n    }\r\n\r\n    getTextBeforeCaret(): string {\r\n      this.getCaret();\r\n      return this.getText()._kmwSubstring(0, this.processedSelectionStart);\r\n    }\r\n\r\n    setTextBeforeCaret(text: string) {\r\n      this.getCaret();\r\n      let selectionLength = this.processedSelectionEnd - this.processedSelectionStart;\r\n      let direction = this.getSelectionDirection();\r\n      let newCaret = text._kmwLength();\r\n      this.root.value = text + this.getText()._kmwSubstring(this.processedSelectionStart);\r\n\r\n      this.setSelection(newCaret, newCaret + selectionLength, direction);\r\n    }\r\n\r\n    protected setTextAfterCaret(s: string) {\r\n      let c = this.getCaret();\r\n      let direction = this.getSelectionDirection();\r\n\r\n      this.root.value = this.getTextBeforeCaret() + s;\r\n      this.setSelection(this.processedSelectionStart, this.processedSelectionEnd, direction);\r\n    }\r\n\r\n    getTextAfterCaret(): string {\r\n      this.getCaret();\r\n      return this.getText()._kmwSubstring(this.processedSelectionEnd);\r\n    }\r\n\r\n    getText(): string {\r\n      return this.root.value;\r\n    }\r\n\r\n    deleteCharsBeforeCaret(dn: number) {\r\n      if(dn \u003e 0) {\r\n        let curText = this.getTextBeforeCaret();\r\n        let caret = this.processedSelectionStart;\r\n\r\n        if(dn \u003e caret) {\r\n          dn = caret;\r\n        }\r\n\r\n        this.adjustDeadkeys(-dn);\r\n        this.setTextBeforeCaret(curText.kmwSubstring(0, caret - dn));\r\n        this.setCaret(caret - dn);\r\n      }\r\n    }\r\n\r\n    insertTextBeforeCaret(s: string) {\r\n      if(!s) {\r\n        return;\r\n      }\r\n\r\n      let caret = this.getCaret();\r\n      let front = this.getTextBeforeCaret();\r\n      let back = this.getText()._kmwSubstring(this.processedSelectionStart);\r\n\r\n      this.adjustDeadkeys(s._kmwLength());\r\n      this.root.value = front + s + back;\r\n      this.setCaret(caret + s._kmwLength());\r\n    }\r\n\r\n    handleNewlineAtCaret(): void {\r\n      Input.newlineHandler(this.root);\r\n    }\r\n\r\n    static newlineHandler(inputEle: HTMLInputElement) {\r\n      // Can\u0027t occur for Mocks - just Input and TouchAlias types.\r\n      if (inputEle \u0026\u0026 (inputEle.type == \u0027search\u0027 || inputEle.type == \u0027submit\u0027)) {\r\n        inputEle.disabled=false;\r\n        inputEle.form.submit();\r\n      } else {\r\n        // Allows compiling this separately from the main body of KMW.\r\n        // TODO:  rework class to accept a class-static \u0027callback\u0027 from the DOM module that this can call.\r\n        //        Would eliminate the need for this \u0027static\u0027 reference.\r\n        //        Only strongly matters once we better modularize KMW, with web-dom vs web-dom-targets vs web-core, etc.\r\n        if(com.keyman[\"singleton\"]) {\r\n          com.keyman[\"singleton\"].domManager.moveToNext(false);\r\n        }\r\n      }\r\n    }\r\n\r\n    doInputEvent() {\r\n      this.dispatchInputEventOn(this.root);\r\n    }\r\n  }\r\n}","namespace com.keyman.dom.targets {\r\n  export class TextArea extends OutputTarget {\r\n    root: HTMLTextAreaElement;\r\n\r\n    /**\r\n     * Tracks the most recently-cached selection start index.\r\n     */\r\n    private _cachedSelectionStart: number\r\n\r\n    /**\r\n     * Tracks the most recently processed, extended-string-based selection start index.\r\n     * When the element\u0027s selectionStart value changes, this should be invalidated.\r\n     */\r\n    private processedSelectionStart: number;\r\n\r\n    /**\r\n     * Tracks the most recently processed, extended-string-based selection end index.\r\n     * When the element\u0027s selectionEnd value changes, this should be invalidated.\r\n     */\r\n    private processedSelectionEnd: number;\r\n\r\n    /**\r\n     * Used to temporarily store the y-axis scroll coordinate.\r\n     */\r\n    private scrollTop?: number;\r\n\r\n    /**\r\n     * Used to temporarily store the x-axis scroll coordinate.\r\n     */\r\n    private scrollLeft?: number;\r\n\r\n    constructor(ele: HTMLTextAreaElement) {\r\n      super();\r\n\r\n      this.root = ele;\r\n      this._cachedSelectionStart = -1;\r\n    }\r\n\r\n    get isSynthetic(): boolean {\r\n      return false;\r\n    }\r\n\r\n    getElement(): HTMLTextAreaElement {\r\n      return this.root;\r\n    }\r\n\r\n    clearSelection(): void {\r\n      // Processes our codepoint-based variants of selectionStart and selectionEnd.\r\n      this.getCaret(); // updates processedSelectionStart if required\r\n      this.root.value = this.root.value._kmwSubstring(0, this.processedSelectionStart) + this.root.value._kmwSubstring(this.processedSelectionEnd); //I3319\r\n\r\n      this.setCaret(this.processedSelectionStart);\r\n    }\r\n\r\n    isSelectionEmpty(): boolean {\r\n      return this.root.selectionStart == this.root.selectionEnd;\r\n    }\r\n\r\n    hasSelection(): boolean {\r\n      return true;\r\n    }\r\n\r\n    invalidateSelection() {\r\n      // Since .selectionStart will never return this value, we use it to indicate\r\n      // the need to refresh our processed indices.\r\n      this._cachedSelectionStart = -1;\r\n    }\r\n\r\n    getCaret(): number {\r\n      if(this.root.selectionStart != this._cachedSelectionStart) {\r\n        this._cachedSelectionStart = this.root.selectionStart; // KMW-1\r\n        this.processedSelectionStart = this.root.value._kmwCodeUnitToCodePoint(this.root.selectionStart); // I3319\r\n        this.processedSelectionEnd = this.root.value._kmwCodeUnitToCodePoint(this.root.selectionEnd);     // I3319\r\n      }\r\n      return this.root.selectionDirection == \u0027forward\u0027 ? this.processedSelectionEnd : this.processedSelectionStart;\r\n    }\r\n\r\n    getDeadkeyCaret(): number {\r\n      return this.getCaret();\r\n    }\r\n\r\n    setCaret(caret: number) {\r\n      this.setSelection(caret, caret, \"none\");\r\n    }\r\n\r\n    setSelection(start: number, end: number, direction: \"forward\" | \"backward\" | \"none\") {\r\n      let domStart = this.root.value._kmwCodePointToCodeUnit(start);\r\n      let domEnd = this.root.value._kmwCodePointToCodeUnit(end);\r\n      this.root.setSelectionRange(domStart, domEnd, direction);\r\n\r\n      this.processedSelectionStart = start;\r\n      this.processedSelectionEnd = end;\r\n\r\n      Utils.forceScroll(this.root);\r\n    }\r\n\r\n    getSelectionDirection(): \"forward\" | \"backward\" | \"none\" {\r\n      return this.root.selectionDirection;\r\n    }\r\n\r\n    getTextBeforeCaret(): string {\r\n      this.getCaret();\r\n      return this.getText()._kmwSubstring(0, this.processedSelectionStart);\r\n    }\r\n\r\n    setTextBeforeCaret(text: string) {\r\n      this.getCaret();\r\n      let selectionLength = this.processedSelectionEnd - this.processedSelectionStart;\r\n      let direction = this.getSelectionDirection();\r\n      let newCaret = text._kmwLength();\r\n      this.root.value = text + this.getText()._kmwSubstring(this.processedSelectionStart);\r\n\r\n      this.setSelection(newCaret, newCaret + selectionLength, direction);\r\n    }\r\n\r\n    protected setTextAfterCaret(s: string) {\r\n      let c = this.getCaret();\r\n      let direction = this.getSelectionDirection();\r\n\r\n      this.root.value = this.getTextBeforeCaret() + s;\r\n      this.setSelection(this.processedSelectionStart, this.processedSelectionEnd, direction);\r\n    }\r\n\r\n    getTextAfterCaret(): string {\r\n      this.getCaret();\r\n      return this.getText()._kmwSubstring(this.processedSelectionEnd);\r\n    }\r\n\r\n    getText(): string {\r\n      return this.root.value;\r\n    }\r\n\r\n    deleteCharsBeforeCaret(dn: number) {\r\n      if(dn \u003e 0) {\r\n        let curText = this.getTextBeforeCaret();\r\n        let caret = this.processedSelectionStart;\r\n\r\n        if(dn \u003e caret) {\r\n          dn = caret;\r\n        }\r\n\r\n        this.adjustDeadkeys(-dn);\r\n        this.setTextBeforeCaret(curText.kmwSubstring(0, caret - dn));\r\n        this.setCaret(caret - dn);\r\n      }\r\n    }\r\n\r\n    insertTextBeforeCaret(s: string) {\r\n      if(!s) {\r\n        return;\r\n      }\r\n\r\n      let caret = this.getCaret();\r\n      let front = this.getTextBeforeCaret();\r\n      let back = this.getText()._kmwSubstring(this.processedSelectionStart);\r\n\r\n      this.adjustDeadkeys(s._kmwLength());\r\n      this.root.value = front + s + back;\r\n      this.setCaret(caret + s._kmwLength());\r\n    }\r\n\r\n    handleNewlineAtCaret(): void {\r\n      this.insertTextBeforeCaret(\u0027\\n\u0027);\r\n    }\r\n\r\n    doInputEvent() {\r\n      this.dispatchInputEventOn(this.root);\r\n    }\r\n  }\r\n}","namespace com.keyman.dom.targets {\r\n  class SelectionCaret {\r\n    node: Node;\r\n    offset: number;\r\n\r\n    constructor(node, offset) {\r\n      this.node = node;\r\n      this.offset = offset;\r\n    }\r\n  }\r\n\r\n  class SelectionRange {\r\n    start: SelectionCaret;\r\n    end: SelectionCaret;\r\n\r\n    constructor(start, end) {\r\n      this.start = start;\r\n      this.end = end;\r\n    }\r\n  }\r\n\r\n  export class ContentEditable extends OutputTarget {\r\n    root: HTMLElement;\r\n\r\n    constructor(ele: HTMLElement) {\r\n      if(ele.isContentEditable) {\r\n        super();\r\n        this.root = ele;\r\n      } else {\r\n        throw \"Specified element is not already content-editable!\";\r\n      }\r\n    }\r\n\r\n    get isSynthetic(): boolean {\r\n      return false;\r\n    }\r\n\r\n    getElement(): HTMLElement {\r\n      return this.root;\r\n    }\r\n\r\n    isSelectionEmpty(): boolean {\r\n      if(!this.hasSelection()) {\r\n        return true;\r\n      }\r\n\r\n      return this.root.ownerDocument.getSelection().isCollapsed;\r\n    }\r\n\r\n    hasSelection(): boolean {\r\n      let Lsel = this.root.ownerDocument.getSelection();\r\n\r\n      if(this.root != Lsel.anchorNode \u0026\u0026 !this.root.contains(Lsel.anchorNode)) {\r\n        return false;\r\n      }\r\n\r\n      if(this.root != Lsel.focusNode \u0026\u0026 !this.root.contains(Lsel.focusNode)) {\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    clearSelection(): void {\r\n      if(this.hasSelection()) {\r\n        let Lsel = this.root.ownerDocument.getSelection();\r\n\r\n        if(!Lsel.isCollapsed) {\r\n          Lsel.deleteFromDocument();  // I2134, I2192\r\n        }\r\n      } else {\r\n        console.warn(\"Attempted to clear an unowned Selection!\");\r\n      }\r\n    }\r\n\r\n    invalidateSelection(): void { /* No cache maintenance needed here, partly because\r\n                                   * it\u0027s impossible to cache a Selection; it mutates.\r\n                                   */  }\r\n\r\n    getCarets(): SelectionRange {\r\n      let Lsel = this.root.ownerDocument.getSelection();\r\n      let code = Lsel.anchorNode.compareDocumentPosition(Lsel.focusNode);\r\n\r\n      if(Lsel.isCollapsed) {\r\n        let caret = new SelectionCaret(Lsel.anchorNode, Lsel.anchorOffset);\r\n        return new SelectionRange(caret, caret);\r\n      } else {\r\n        let anchor = new SelectionCaret(Lsel.anchorNode, Lsel.anchorOffset);\r\n        let focus = new SelectionCaret(Lsel.focusNode, Lsel.focusOffset);\r\n\r\n        if(anchor.node == focus.node) {\r\n          code = (focus.offset - anchor.offset \u003e 0) ? 2 : 4;\r\n        }\r\n\r\n        if(code \u0026 2) {\r\n          return new SelectionRange(anchor, focus);\r\n        } else { // Default\r\n          // can test against code \u0026 4 to ensure Focus is before anchor, though.\r\n          return new SelectionRange(focus, anchor);\r\n        }\r\n      }\r\n    }\r\n\r\n    getDeadkeyCaret(): number {\r\n      return this.getTextBeforeCaret().kmwLength();\r\n    }\r\n\r\n    getTextBeforeCaret(): string {\r\n      if(!this.hasSelection()) {\r\n        return;\r\n      }\r\n\r\n      let caret = this.getCarets().start;\r\n\r\n      if(caret.node.nodeType != 3) {\r\n        return \u0027\u0027; // Must be a text node to provide a context.\r\n      }\r\n\r\n      return caret.node.textContent.substr(0, caret.offset);\r\n    }\r\n\r\n    getTextAfterCaret(): string {\r\n      if(!this.hasSelection()) {\r\n        return;\r\n      }\r\n\r\n      let caret = this.getCarets().end;\r\n\r\n      if(caret.node.nodeType != 3) {\r\n        return \u0027\u0027; // Must be a text node to provide a context.\r\n      }\r\n\r\n      return caret.node.textContent.substr(caret.offset);\r\n    }\r\n\r\n    getText(): string {\r\n      return this.root.innerText;\r\n    }\r\n\r\n    deleteCharsBeforeCaret(dn: number) {\r\n      if(!this.hasSelection() || dn \u003c= 0) {\r\n        return;\r\n      }\r\n\r\n      let start = this.getCarets().start;\r\n\r\n      // Bounds-check on the number of chars to delete.\r\n      if(dn \u003e start.offset) {\r\n        dn = start.offset;\r\n      }\r\n\r\n      if(start.node.nodeType != 3) {\r\n        console.warn(\"Deletion of characters requested without available context!\");\r\n        return; // No context to delete characters from.\r\n      }\r\n\r\n      let range = this.root.ownerDocument.createRange();\r\n      let dnOffset = start.offset - start.node.nodeValue.substr(0, start.offset)._kmwSubstr(-dn).length;\r\n\r\n      range.setStart(start.node, dnOffset);\r\n      range.setEnd(start.node, start.offset);\r\n\r\n      this.adjustDeadkeys(-dn);\r\n      range.deleteContents();\r\n      // No need to reposition the caret - the DOM will auto-move the selection accordingly, since\r\n      // we didn\u0027t use the selection to delete anything.\r\n    }\r\n\r\n    insertTextBeforeCaret(s: string) {\r\n      if(!this.hasSelection()) {\r\n        return;\r\n      }\r\n\r\n      let start = this.getCarets().start;\r\n      let delta = s._kmwLength();\r\n      let Lsel = this.root.ownerDocument.getSelection();\r\n\r\n      if(delta == 0) {\r\n        return;\r\n      }\r\n\r\n      this.adjustDeadkeys(delta);\r\n\r\n      // While Selection.extend() was really nice for this, IE didn\u0027t support it whatsoever.\r\n      // However, IE (11, at least) DID support setting selections via ranges, so we were still\r\n      // able to manage the caret properly.\r\n      //\r\n      // TODO:  double-check that it was only IE-motivated, re-implement with Selection.extend().\r\n      let finalCaret = this.root.ownerDocument.createRange();\r\n\r\n      if(start.node.nodeType == 3) {\r\n        let textStart = \u003cText\u003e start.node;\r\n        textStart.insertData(start.offset, s);\r\n        finalCaret.setStart(textStart, start.offset + s.length);\r\n      } else {\r\n        // Create a new text node - empty control\r\n        var n = start.node.ownerDocument.createTextNode(s);\r\n\r\n        let range = this.root.ownerDocument.createRange();\r\n        range.setStart(start.node, start.offset);\r\n        range.collapse(true);\r\n        range.insertNode(n);\r\n        finalCaret.setStart(n, s.length);\r\n      }\r\n\r\n      finalCaret.collapse(true);\r\n      Lsel.removeAllRanges();\r\n      try {\r\n        Lsel.addRange(finalCaret);\r\n      } catch(e) {\r\n        // Chrome (through 4.0 at least) throws an exception because it has not synchronised its content with the selection.\r\n        // scrollIntoView synchronises the content for selection\r\n        start.node.parentElement.scrollIntoView();\r\n        Lsel.addRange(finalCaret);\r\n      }\r\n      Lsel.collapseToEnd();\r\n    }\r\n\r\n    handleNewlineAtCaret(): void {\r\n      // TODO:  Implement.\r\n      //\r\n      // As it turns out, we never had an implementation for handling newline inputs from the OSK for this element type.\r\n      // At least this way, it\u0027s more explicit.\r\n      //\r\n      // Note:  consult \"// Create a new text node - empty control\" case in insertTextBeforeCaret -\r\n      // this helps to handle the browser-default implementation of newline handling.  In particular,\r\n      // entry of the first character after a newline.\r\n      //\r\n      // If raw newlines are entered into the HTML, but as with usual HTML, they\u0027re interpreted as excess whitespace and\r\n      // have no effect.  We need to add DOM elements for a functional newline.\r\n    }\r\n\r\n    protected setTextAfterCaret(s: string) {\r\n      if(!this.hasSelection()) {\r\n        return;\r\n      }\r\n\r\n      let caret = this.getCarets().end;\r\n      let delta = s._kmwLength();\r\n      let Lsel = this.root.ownerDocument.getSelection();\r\n\r\n      if(delta == 0) {\r\n        return;\r\n      }\r\n\r\n      // This is designed explicitly for use in direct-setting operations; deadkeys\r\n      // will be handled after this method.\r\n\r\n      if(caret.node.nodeType == 3) {\r\n        let textStart = \u003cText\u003e caret.node;\r\n        textStart.replaceData(caret.offset, textStart.length, s);\r\n      } else {\r\n        // Create a new text node - empty control\r\n        var n = caret.node.ownerDocument.createTextNode(s);\r\n\r\n        let range = this.root.ownerDocument.createRange();\r\n        range.setStart(caret.node, caret.offset);\r\n        range.collapse(true);\r\n        range.insertNode(n);\r\n      }\r\n    }\r\n\r\n    doInputEvent() {\r\n      this.dispatchInputEventOn(this.root);\r\n    }\r\n  }\r\n}","namespace com.keyman.dom.targets {\r\n  class SelectionCaret {\r\n    node: Node;\r\n    offset: number;\r\n\r\n    constructor(node, offset) {\r\n      this.node = node;\r\n      this.offset = offset;\r\n    }\r\n  }\r\n\r\n  class SelectionRange {\r\n    start: SelectionCaret;\r\n    end: SelectionCaret;\r\n\r\n    constructor(start, end) {\r\n      this.start = start;\r\n      this.end = end;\r\n    }\r\n  }\r\n\r\n  class StyleCommand {\r\n    cmd: string;\r\n    stateType: number;\r\n    cache: string|boolean;\r\n\r\n    constructor(c: string, s:number) {\r\n      this.cmd = c;\r\n      this.stateType = s;\r\n    }\r\n  }\r\n\r\n  export class DesignIFrame extends OutputTarget {\r\n    root: HTMLIFrameElement;\r\n    doc: Document;\r\n    docRoot: HTMLElement;\r\n\r\n    commandCache: StyleCommand[];\r\n\r\n    constructor(ele: HTMLIFrameElement) {\r\n      super();\r\n      this.root = ele;\r\n\r\n      if(ele.contentWindow \u0026\u0026 ele.contentWindow.document \u0026\u0026 ele.contentWindow.document.designMode == \u0027on\u0027) {\r\n        this.doc = ele.contentWindow.document;\r\n        this.docRoot = ele.contentWindow.document.documentElement;\r\n      } else {\r\n        throw \"Specified IFrame is not in design-mode!\";\r\n      }\r\n    }\r\n\r\n    get isSynthetic(): boolean {\r\n      return false;\r\n    }\r\n\r\n    getElement(): HTMLIFrameElement {\r\n      return this.root;\r\n    }\r\n\r\n    focus(): void {\r\n      this.doc.defaultView.focus(); // I3363 (Build 301)\r\n    }\r\n\r\n    isSelectionEmpty(): boolean {\r\n      if(!this.hasSelection()) {\r\n        return true;\r\n      }\r\n\r\n      return this.doc.getSelection().isCollapsed;\r\n    }\r\n\r\n    hasSelection(): boolean {\r\n      let Lsel = this.doc.getSelection();\r\n      let outerSel = document.getSelection();\r\n\r\n      // If the outer doc\u0027s selection matches, we\u0027re active.\r\n      if(outerSel.anchorNode == Lsel.anchorNode \u0026\u0026 outerSel.focusNode == Lsel.focusNode) {\r\n        return true;\r\n      } else {\r\n        // Problem:  for testing, we can\u0027t enforce the ideal (ie: first) condition.\r\n        // Technically, the IFrame _will_ always have its own internal selection, though... so... it kinda works?\r\n        return true;\r\n      }\r\n    }\r\n\r\n    clearSelection(): void {\r\n      if(this.hasSelection()) {\r\n        let Lsel = this.doc.getSelection();\r\n\r\n        if(!Lsel.isCollapsed) {\r\n          Lsel.deleteFromDocument();  // I2134, I2192\r\n        }\r\n      } else {\r\n        console.warn(\"Attempted to clear an unowned Selection!\");\r\n      }\r\n    }\r\n\r\n    invalidateSelection(): void { /* No cache maintenance needed here, partly because\r\n                                   * it\u0027s impossible to cache a Selection; it mutates.\r\n                                   */  }\r\n\r\n    getCarets(): SelectionRange {\r\n      let Lsel = this.doc.getSelection();\r\n      let code = Lsel.anchorNode.compareDocumentPosition(Lsel.focusNode);\r\n\r\n      if(Lsel.isCollapsed) {\r\n        let caret = new SelectionCaret(Lsel.anchorNode, Lsel.anchorOffset);\r\n        return new SelectionRange(caret, caret);\r\n      } else {\r\n        let anchor = new SelectionCaret(Lsel.anchorNode, Lsel.anchorOffset);\r\n        let focus = new SelectionCaret(Lsel.focusNode, Lsel.focusOffset);\r\n\r\n        if(anchor.node == focus.node) {\r\n          code = (focus.offset - anchor.offset \u003e 0) ? 2 : 4;\r\n        }\r\n\r\n        if(code \u0026 2) {\r\n          return new SelectionRange(anchor, focus);\r\n        } else { // Default\r\n          // can test against code \u0026 4 to ensure Focus is before anchor, though.\r\n          return new SelectionRange(focus, anchor);\r\n        }\r\n      }\r\n    }\r\n\r\n    getDeadkeyCaret(): number {\r\n      return this.getTextBeforeCaret().kmwLength();\r\n    }\r\n\r\n    getTextBeforeCaret(): string {\r\n      if(!this.hasSelection()) {\r\n        return;\r\n      }\r\n\r\n      let caret = this.getCarets().start;\r\n\r\n      if(caret.node.nodeType != 3) {\r\n        return \u0027\u0027; // Must be a text node to provide a context.\r\n      }\r\n\r\n      return caret.node.textContent.substr(0, caret.offset);\r\n    }\r\n\r\n    getTextAfterCaret(): string {\r\n      if(!this.hasSelection()) {\r\n        return;\r\n      }\r\n\r\n      let caret = this.getCarets().end;\r\n\r\n      if(caret.node.nodeType != 3) {\r\n        return \u0027\u0027; // Must be a text node to provide a context.\r\n      }\r\n\r\n      return caret.node.textContent.substr(caret.offset);\r\n    }\r\n\r\n    getText(): string {\r\n      return this.docRoot.innerText;\r\n    }\r\n\r\n    deleteCharsBeforeCaret(dn: number) {\r\n      if(!this.hasSelection() || dn \u003c= 0) {\r\n        return;\r\n      }\r\n\r\n      let start = this.getCarets().start;\r\n\r\n      // Bounds-check on the number of chars to delete.\r\n      if(dn \u003e start.offset) {\r\n        dn = start.offset;\r\n      }\r\n\r\n      if(start.node.nodeType != 3) {\r\n        console.warn(\"Deletion of characters requested without available context!\");\r\n        return; // No context to delete characters from.\r\n      }\r\n\r\n      let range = this.doc.createRange();\r\n      let dnOffset = start.offset - start.node.nodeValue.substr(0, start.offset)._kmwSubstr(-dn).length;\r\n\r\n      range.setStart(start.node, dnOffset);\r\n      range.setEnd(start.node, start.offset);\r\n\r\n      this.adjustDeadkeys(-dn);\r\n      range.deleteContents();\r\n      // No need to reposition the caret - the DOM will auto-move the selection accordingly, since\r\n      // we didn\u0027t use the selection to delete anything.\r\n    }\r\n\r\n    insertTextBeforeCaret(s: string) {\r\n      if(!this.hasSelection()) {\r\n        return;\r\n      }\r\n\r\n      let start = this.getCarets().start;\r\n      let delta = s._kmwLength();\r\n      let Lsel = this.doc.getSelection();\r\n\r\n      if(delta == 0) {\r\n        return;\r\n      }\r\n\r\n      this.adjustDeadkeys(delta);\r\n\r\n      // While Selection.extend() was really nice for this, IE didn\u0027t support it whatsoever.\r\n      // However, IE (11, at least) DID support setting selections via ranges, so we were still\r\n      // able to manage the caret properly.\r\n      //\r\n      // TODO:  double-check that it was only IE-motivated, re-implement with Selection.extend().\r\n      let finalCaret = this.root.ownerDocument.createRange();\r\n\r\n      if(start.node.nodeType == 3) {\r\n        let textStart = \u003cText\u003e start.node;\r\n        textStart.insertData(start.offset, s);\r\n        finalCaret.setStart(textStart, start.offset + s.length);\r\n      } else {\r\n        // Create a new text node - empty control\r\n        var n = this.doc.createTextNode(s);\r\n\r\n        let range = this.doc.createRange();\r\n        range.setStart(start.node, start.offset);\r\n        range.collapse(true);\r\n        range.insertNode(n);\r\n        finalCaret.setStart(n, s.length);\r\n      }\r\n\r\n      finalCaret.collapse(true);\r\n      Lsel.removeAllRanges();\r\n      try {\r\n        Lsel.addRange(finalCaret);\r\n      } catch(e) {\r\n        // Chrome (through 4.0 at least) throws an exception because it has not synchronised its content with the selection.\r\n        // scrollIntoView synchronises the content for selection\r\n        start.node.parentElement.scrollIntoView();\r\n        Lsel.addRange(finalCaret);\r\n      }\r\n      Lsel.collapseToEnd();\r\n    }\r\n\r\n    handleNewlineAtCaret(): void {\r\n      // TODO:  Implement.\r\n      //\r\n      // As it turns out, we never had an implementation for handling newline inputs from the OSK for this element type.\r\n      // At least this way, it\u0027s more explicit.\r\n      //\r\n      // Note:  consult \"// Create a new text node - empty control\" case in insertTextBeforeCaret -\r\n      // this helps to handle the browser-default implementation of newline handling.  In particular,\r\n      // entry of the first character after a newline.\r\n      //\r\n      // If raw newlines are entered into the HTML, but as with usual HTML, they\u0027re interpreted as excess whitespace and\r\n      // have no effect.  We need to add DOM elements for a functional newline.\r\n    }\r\n\r\n    protected setTextAfterCaret(s: string) {\r\n      if(!this.hasSelection()) {\r\n        return;\r\n      }\r\n\r\n      let caret = this.getCarets().end;\r\n      let delta = s._kmwLength();\r\n      let Lsel = this.doc.getSelection();\r\n\r\n      if(delta == 0) {\r\n        return;\r\n      }\r\n\r\n      // This is designed explicitly for use in direct-setting operations; deadkeys\r\n      // will be handled after this method.\r\n\r\n      if(caret.node.nodeType == 3) {\r\n        let textStart = \u003cText\u003e caret.node;\r\n        textStart.replaceData(caret.offset, textStart.length, s);\r\n      } else {\r\n        // Create a new text node - empty control\r\n        var n = caret.node.ownerDocument.createTextNode(s);\r\n\r\n        let range = this.root.ownerDocument.createRange();\r\n        range.setStart(caret.node, caret.offset);\r\n        range.collapse(true);\r\n        range.insertNode(n);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Function     saveProperties\r\n     * Scope        Private\r\n     * Description  Build and create list of styles that can be applied in iframes\r\n     */\r\n    saveProperties() {\r\n      // Formerly _CacheCommands.\r\n      var _CacheableCommands=[\r\n        new StyleCommand(\u0027backcolor\u0027,1), new StyleCommand(\u0027fontname\u0027,1), new StyleCommand(\u0027fontsize\u0027,1),\r\n        new StyleCommand(\u0027forecolor\u0027,1), new StyleCommand(\u0027bold\u0027,0), new StyleCommand(\u0027italic\u0027,0),\r\n        new StyleCommand(\u0027strikethrough\u0027,0), new StyleCommand(\u0027subscript\u0027,0),\r\n        new StyleCommand(\u0027superscript\u0027,0), new StyleCommand(\u0027underline\u0027,0)\r\n      ];\r\n\r\n      if(this.doc.defaultView) {\r\n        _CacheableCommands.push(new StyleCommand(\u0027hilitecolor\u0027,1));\r\n      }\r\n\r\n      for(var n=0; n \u003c _CacheableCommands.length; n++) { // I1511 - array prototype extended\r\n        let cmd = _CacheableCommands[n];\r\n        //KeymanWeb._Debug(\u0027Command:\u0027+_CacheableCommands[n][0]);\r\n        if(cmd.stateType == 1) {\r\n          cmd.cache = this.doc.queryCommandValue(cmd.cmd);\r\n        } else {\r\n          cmd.cache = this.doc.queryCommandState(cmd.cmd);\r\n        }\r\n      }\r\n      this.commandCache = _CacheableCommands;\r\n    }\r\n\r\n    /**\r\n     * Function     restoreProperties\r\n     * Scope        Private\r\n     * Description  Restore styles in IFRAMEs (??)\r\n     */\r\n    restoreProperties(_func?: () =\u003e void): void {\r\n      // Formerly _CacheCommandsReset.\r\n      if(!this.commandCache) {\r\n        console.error(\"No command cache exists to restore!\");\r\n      }\r\n\r\n      for(var n=0; n \u003c this.commandCache.length; n++) { // I1511 - array prototype extended\r\n        let cmd = this.commandCache[n];\r\n\r\n        //KeymanWeb._Debug(\u0027ResetCacheCommand:\u0027+_CacheableCommands[n][0]+\u0027=\u0027+_CacheableCommands[n][2]);\r\n        if(cmd.stateType == 1) {\r\n          if(this.doc.queryCommandValue(cmd.cmd) != cmd.cache) {\r\n            if(_func) {\r\n              _func();\r\n            }\r\n            this.doc.execCommand(cmd.cmd, false, \u003cstring\u003e cmd.cache);\r\n          }\r\n        } else if(this.doc.queryCommandState(cmd.cmd) != cmd.cache) {\r\n          if(_func) {\r\n            _func();\r\n          }\r\n          //KeymanWeb._Debug(\u0027executing command \u0027+_CacheableCommand[n][0]);\r\n          this.doc.execCommand(cmd.cmd, false, null);\r\n        }\r\n      }\r\n    }\r\n\r\n    doInputEvent() {\r\n      // Root = the iframe, the outermost component and the one we were originally told to attach to.\r\n      this.dispatchInputEventOn(this.root);\r\n    }\r\n  }\r\n}","// Defines the TouchAliasElement merged type.\r\n/// \u003creference path=\"../touchAliasElement.ts\" /\u003e\r\n\r\nnamespace com.keyman.dom.targets {\r\n  export class TouchAlias extends OutputTarget {\r\n    root: TouchAliasElement;\r\n\r\n    constructor(e: TouchAliasElement) {\r\n      super();\r\n      this.root = e;\r\n    }\r\n\r\n    getElement(): HTMLDivElement {\r\n      return this.root;\r\n    }\r\n\r\n    clearSelection(): void {\r\n      // Touch-alias elements do not currently support selections.\r\n      return;\r\n    }\r\n\r\n    invalidateSelection(): void {\r\n      // Touch-alias elements do not currently support selections.\r\n      return;\r\n    }\r\n\r\n    isSelectionEmpty(): boolean {\r\n      // Touch-alias elements do not currently support selections.\r\n      return true;\r\n    }\r\n\r\n    hasSelection(): boolean {\r\n      // Always has an internal caret position.\r\n      return true;\r\n    }\r\n\r\n    getDeadkeyCaret(): number {\r\n      return this.root.getTextCaret();\r\n    }\r\n\r\n    getTextBeforeCaret(): string {\r\n      return this.root.getTextBeforeCaret();\r\n    }\r\n\r\n    getTextAfterCaret(): string {\r\n      return this.root.getTextAfterCaret();\r\n    }\r\n\r\n    getText(): string {\r\n      return this.root.getText();\r\n    }\r\n\r\n    deleteCharsBeforeCaret(dn: number): void {\r\n      if(dn \u003e 0) {\r\n        let curText = this.getTextBeforeCaret();\r\n        if(this.getDeadkeyCaret() \u003c dn) {\r\n          dn = this.getDeadkeyCaret();\r\n        }\r\n        this.adjustDeadkeys(-dn);\r\n        this.root.setTextBeforeCaret(curText.kmwSubstring(0, this.root.getTextCaret() - dn));\r\n      }\r\n    }\r\n\r\n    insertTextBeforeCaret(s: string): void {\r\n      this.adjustDeadkeys(s._kmwLength());\r\n      this.root.setTextBeforeCaret(this.root.getTextBeforeCaret() + s);\r\n    }\r\n\r\n    handleNewlineAtCaret(): void {\r\n      // Insert new line in text area fields\r\n      if(this.root.base.nodeName == \u0027TEXTAREA\u0027) {\r\n        // As the TouchAliasElement was implemented long before OutputTargets, it already has\r\n        // built-in newline handling.\r\n        this.insertTextBeforeCaret(\u0027\\n\u0027);\r\n      } else if(dom.Utils.instanceof(this.root.base, \"HTMLInputElement\")) {\r\n        // HTMLInputElements do not permit newlines; they instead have DOM-specific behaviors.\r\n        this.root.hideCaret();\r\n        Input.newlineHandler(this.root.base as HTMLInputElement);\r\n      } else {\r\n        console.warn(\"TouchAlias OutputTarget cannot output newlines for unexpected base element types!\");\r\n      }\r\n    }\r\n\r\n    protected setTextAfterCaret(s: string) {\r\n      this.root.setText(this.getTextBeforeCaret() + s, this.getTextBeforeCaret()._kmwLength());\r\n    }\r\n\r\n    doInputEvent() {\r\n      // Dispatch the event on the aliased element, not the TouchAliasElement itself.\r\n      this.dispatchInputEventOn(this.root.base);\r\n    }\r\n  }\r\n}","/// \u003creference path=\"outputTarget.ts\" /\u003e\r\n// Defines a basic HTMLInputElement wrapper.\r\n///\u003creference path=\"input.ts\" /\u003e\r\n// Defines a basic HTMLTextAreaElement wrapper.\r\n///\u003creference path=\"textarea.ts\" /\u003e\r\n// Defines a basic content-editable wrapper.\r\n///\u003creference path=\"contentEditable.ts\" /\u003e\r\n// Defines a basic design-mode IFrame wrapper.\r\n///\u003creference path=\"designIFrame.ts\" /\u003e\r\n// Defines a basic touch-alias element wrapper.\r\n///\u003creference path=\"touchAlias.ts\" /\u003e\r\n\r\nnamespace com.keyman.dom.targets {\r\n  export function wrapElement(e: HTMLElement): OutputTarget {\r\n    // Complex type scoping is implemented here so that kmwutils.ts is not a dependency for test compilations.\r\n\r\n    if(Utils.instanceof(e, \"HTMLInputElement\")) {\r\n      return new Input(\u003cHTMLInputElement\u003e e);\r\n    } else if(Utils.instanceof(e, \"HTMLTextAreaElement\")) {\r\n      return new TextArea(\u003cHTMLTextAreaElement\u003e e);\r\n    } else if(Utils.instanceof(e, \"TouchAliasElement\")) {\r\n      return new TouchAlias(\u003cTouchAliasElement\u003e e);\r\n    } else if(Utils.instanceof(e, \"HTMLIFrameElement\")) {\r\n      let iframe = \u003cHTMLIFrameElement\u003e e;\r\n\r\n      if(iframe.contentWindow \u0026\u0026 iframe.contentWindow.document \u0026\u0026 iframe.contentWindow.document.designMode == \"on\") {\r\n        return new DesignIFrame(iframe);\r\n      } else if (e.isContentEditable) {\r\n        // Do content-editable \u003ciframe\u003es make sense?\r\n        return new ContentEditable(e);\r\n      } else {\r\n        return null;\r\n      }\r\n    } else if(e.isContentEditable) {\r\n      return new ContentEditable(e);\r\n    }\r\n    \r\n    return null;\r\n  }\r\n}","namespace com.keyman.dom {\r\n  export class VariableStoreCookieSerializer implements text.VariableStoreSerializer {\r\n    loadStore(keyboardID: string, storeName: string): text.VariableStore {\r\n      var cName=\u0027KeymanWeb_\u0027+keyboardID+\u0027_Option_\u0027+storeName;\r\n      let map = com.keyman.singleton.util.loadCookie(cName) as text.VariableStore;\r\n\r\n      if(typeof map[storeName] != \u0027undefined\u0027) {\r\n        // Since it was stored in a cookie.\r\n        map[storeName] = decodeURIComponent(map[storeName]);\r\n      }\r\n\r\n      return map || {};\r\n    }\r\n    \r\n    saveStore(keyboardID: string, storeName: string, storeMap: text.VariableStore) {\r\n      // The cookie entry includes the store name...\r\n      var cName=\u0027KeymanWeb_\u0027+keyboardID+\u0027_Option_\u0027+storeName;\r\n      storeMap[storeName] = encodeURIComponent(storeMap[storeName]);\r\n\r\n      // And the lookup under that entry looks for the value under the store name, again.\r\n      com.keyman.singleton.util.saveCookie(cName, storeMap);\r\n    }\r\n  }\r\n}","// Includes KMW-added property declaration extensions for HTML elements.\r\n/// \u003creference path=\"../kmwexthtml.ts\" /\u003e\r\n// References the base KMW object.\r\n/// \u003creference path=\"../kmwbase.ts\" /\u003e\r\n// References DOM event handling interfaces and classes.\r\n/// \u003creference path=\"domEventHandlers.ts\" /\u003e\r\n// References DOM-specific output handling.\r\n/// \u003creference path=\"domDefaultOutput.ts\" /\u003e\r\n// References other DOM-specific web-core overrides.\r\n/// \u003creference path=\"domOverrides.ts\" /\u003e\r\n// Defines the touch-alias element structure used for mobile devices.\r\n/// \u003creference path=\"touchAliasElement.ts\" /\u003e\r\n// Defines per-element-type OutputTarget element wrapping.\r\n/// \u003creference path=\"targets/wrapElement.ts\" /\u003e\r\n// Defines cookie-based variable store serialization\r\n/// \u003creference path=\"variableStoreCookieSerializer.ts\" /\u003e\r\n\r\nnamespace com.keyman.dom {\r\n  // Utility object used to handle beep (keyboard error response) operations.\r\n  class BeepData {\r\n    e: HTMLElement;\r\n    c: string;\r\n\r\n    constructor(e: HTMLElement) {\r\n      this.e = e;\r\n      this.c = e.style.backgroundColor;\r\n    }\r\n\r\n    reset(): void {\r\n      this.e.style.backgroundColor = this.c;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This class serves as the intermediary between KeymanWeb and any given web page\u0027s elements.\r\n   */\r\n  export class DOMManager {\r\n    private keyman: KeymanBase;\r\n\r\n    /**\r\n     * Implements the AliasElementHandlers interface for touch interaction.\r\n     */\r\n    touchHandlers?: DOMTouchHandlers;\r\n\r\n    /**\r\n     * Implements stubs for the AliasElementHandlers interface for non-touch interaction.\r\n     */\r\n    nonTouchHandlers: DOMEventHandlers;\r\n\r\n    /**\r\n     * Tracks the attachment MutationObserver.\r\n     */\r\n    attachmentObserver: MutationObserver;\r\n\r\n    /**\r\n     * Tracks the enablement MutationObserver.\r\n     */\r\n    enablementObserver: MutationObserver;\r\n\r\n    /**\r\n     * Tracks a list of event-listening elements.\r\n     *\r\n     * In touch mode, this should contain touch-aliasing DIVs, but will contain other elements in non-touch mode.\r\n     */\r\n    inputList: HTMLElement[] = [];            // List of simulated input divisions for touch-devices   I3363 (Build 301)\r\n\r\n    /**\r\n     * Tracks a visually-sorted list of elements that are KMW-enabled.\r\n     */\r\n    sortedInputs: HTMLElement[] = [];   // List of all INPUT and TEXTAREA elements ordered top to bottom, left to right\r\n\r\n    _BeepObjects: BeepData[] = [];  // BeepObjects - maintains a list of active \u0027beep\u0027 visual feedback elements\r\n    _BeepTimeout: number = 0;       // BeepTimeout - a flag indicating if there is an active \u0027beep\u0027.\r\n                                    // Set to 1 if there is an active \u0027beep\u0027, otherwise leave as \u00270\u0027.\r\n\r\n    // Used for special touch-based page interactions re: element activation on touch devices.\r\n    deactivateOnScroll: boolean = false;\r\n    deactivateOnRelease: boolean = false;\r\n    touchY: number; // For scroll-related aspects on iOS.\r\n\r\n    touchStartActivationHandler: (e: TouchEvent) =\u003e boolean;\r\n    touchMoveActivationHandler:  (e: TouchEvent) =\u003e boolean;\r\n    touchEndActivationHandler:   (e: TouchEvent) =\u003e boolean;\r\n\r\n    constructor(keyman: KeymanBase) {\r\n      this.keyman = keyman;\r\n\r\n      if(keyman.util.device.touchable) {\r\n        this.touchHandlers = new DOMTouchHandlers(keyman);\r\n      }\r\n\r\n      this.nonTouchHandlers = new DOMEventHandlers(keyman);\r\n    }\r\n\r\n    shutdown() {\r\n      // Catch and notify of any shutdown errors, but don\u0027t let errors fail unit tests.\r\n      try {\r\n        if(this.enablementObserver) {\r\n          this.enablementObserver.disconnect();\r\n        }\r\n        if(this.attachmentObserver) {\r\n          this.attachmentObserver.disconnect();\r\n        }\r\n\r\n        for(let input of this.inputList) {\r\n          this.disableInputElement(input);\r\n        }\r\n\r\n        // On shutdown, we remove our general focus-suppression handlers as well.\r\n        this.keyman.util.detachDOMEvent(document.body, \u0027focus\u0027, DOMManager.suppressFocusCheck, true);\r\n        this.keyman.util.detachDOMEvent(document.body, \u0027blur\u0027, DOMManager.suppressFocusCheck, true);\r\n\r\n        // Also, the base-page touch handlers for activation management.\r\n        if(this.touchStartActivationHandler) {\r\n          this.keyman.util.detachDOMEvent(document.body, \u0027touchstart\u0027, this.touchStartActivationHandler, false);\r\n          this.keyman.util.detachDOMEvent(document.body, \u0027touchmove\u0027,  this.touchMoveActivationHandler,  false);\r\n          this.keyman.util.detachDOMEvent(document.body, \u0027touchend\u0027,   this.touchEndActivationHandler,   false);\r\n        }\r\n      } catch (e) {\r\n        console.error(\"Error occurred during shutdown\");\r\n        console.error(e);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Function     beep          KB      (DOM-side implementation)\r\n     * Scope        Public\r\n     * @param       {Object}      Pelem     element to flash\r\n     * Description  Flash body as substitute for audible beep; notify embedded device to vibrate\r\n     */\r\n    doBeep(outputTarget: targets.OutputTarget) {\r\n      // Handles embedded-mode beeps.\r\n      let keyman = com.keyman.singleton;\r\n      if (\u0027beepKeyboard\u0027 in keyman) {\r\n        keyman[\u0027beepKeyboard\u0027]();\r\n        return;\r\n      }\r\n\r\n      if(!(outputTarget instanceof targets.OutputTarget)) {\r\n        return;\r\n      }\r\n\r\n      // All code after this point is DOM-based, triggered by the beep.\r\n      var Pelem: HTMLElement = outputTarget.getElement();\r\n      if(outputTarget instanceof dom.targets.DesignIFrame) {\r\n        Pelem = outputTarget.docRoot; // I1446 - beep sometimes fails to flash when using OSK and rich control\r\n      }\r\n\r\n      if(!Pelem) {\r\n        return; // There\u0027s no way to signal a \u0027beep\u0027 to null, so just cut everything short.\r\n      }\r\n\r\n      if(!Pelem.style || typeof(Pelem.style.backgroundColor)==\u0027undefined\u0027) {\r\n        return;\r\n      }\r\n\r\n      for(var Lbo=0; Lbo\u003cthis._BeepObjects.length; Lbo++) { // I1446 - beep sometimes fails to return background color to normal\r\n                                                                  // I1511 - array prototype extended\r\n        if(this._BeepObjects[Lbo].e == Pelem) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      this._BeepObjects = com.keyman.singleton._push(this._BeepObjects, new BeepData(Pelem));\r\n      // TODO:  This is probably a bad color choice if \"dark mode\" is enabled.  A proper implementation\r\n      //        would probably require some \u0027fun\u0027 CSS work, though.\r\n      Pelem.style.backgroundColor = \u0027#000000\u0027;\r\n      if(this._BeepTimeout == 0) {\r\n        this._BeepTimeout = 1;\r\n        window.setTimeout(this.beepReset.bind(this), 50);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Function     beepReset\r\n     * Scope        Public\r\n     * Description  Reset/terminate beep or flash (not currently used: Aug 2011)\r\n     */\r\n    beepReset(): void {\r\n      com.keyman.singleton.core.keyboardInterface.resetContextCache();\r\n\r\n      var Lbo;\r\n      this._BeepTimeout = 0;\r\n      for(Lbo=0;Lbo\u003cthis._BeepObjects.length;Lbo++) { // I1511 - array prototype extended\r\n        this._BeepObjects[Lbo].reset();\r\n      }\r\n      this._BeepObjects = [];\r\n    }\r\n\r\n    /**\r\n     * Function     getHandlers\r\n     * Scope        Private\r\n     * @param       {Element}   Pelem  An input, textarea, or touch-alias element from the page.\r\n     * @returns     {Object}\r\n     */\r\n    getHandlers(Pelem: HTMLElement): DOMEventHandlers {\r\n      var _attachObj = Pelem.base ? Pelem.base._kmwAttachment : Pelem._kmwAttachment;\r\n\r\n      if(_attachObj) {\r\n        return _attachObj.touchEnabled ? this.touchHandlers : this.nonTouchHandlers;\r\n      } else {\r\n        // Best guess solution.\r\n        return this.keyman.touchAliasing;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Function     enableTouchElement\r\n     * Scope        Private\r\n     * @param       {Element}  Pelem   An input or textarea element from the page.\r\n     * @return      {boolean}  Returns true if it creates a simulated input element for Pelem; false if not.\r\n     * Description  Creates a simulated input element for the specified INPUT or TEXTAREA, comprising:\r\n     *              an outer DIV, matching the position, size and style of the base element\r\n     *              a scrollable DIV within that outer element\r\n     *              two SPAN elements within the scrollable DIV, to hold the text before and after the caret\r\n     *\r\n     *              The left border of the second SPAN is flashed on and off as a visible caret\r\n     *\r\n     *              Also ensures the element is registered on keymanweb\u0027s internal input list.\r\n     */\r\n    enableTouchElement(Pelem: HTMLElement) {\r\n      // Touch doesn\u0027t worry about iframes.\r\n      if(Pelem.tagName.toLowerCase() == \u0027iframe\u0027) {\r\n        return false;\r\n      }\r\n\r\n      if(this.isKMWDisabled(Pelem)) {\r\n        this.setupNonKMWTouchElement(Pelem);\r\n        return false;\r\n      } else {\r\n        // Initialize and protect input elements for touch-screen devices (but never for apps)\r\n        // NB: now set disabled=true rather than readonly, since readonly does not always\r\n        // prevent element from getting focus, e.g. within a LABEL element.\r\n        // c.f. http://kreotekdev.wordpress.com/2007/11/08/disabled-vs-readonly-form-fields/\r\n        Pelem.kmwInput = true;\r\n      }\r\n\r\n      // Remove any handlers for \"NonKMWTouch\" elements, since we\u0027re enabling it here.\r\n      Pelem.removeEventListener(\u0027touchstart\u0027, this.nonKMWTouchHandler);\r\n\r\n      /*\r\n      *  Does this element already have a simulated touch element established?  If so,\r\n      *  just reuse it - if it isn\u0027t still in the input list!\r\n      */\r\n      if(Pelem[\u0027kmw_ip\u0027]) {\r\n\r\n        if(this.inputList.indexOf(Pelem[\u0027kmw_ip\u0027]) != -1) {\r\n          return false;\r\n        }\r\n\r\n        this.inputList.push(Pelem[\u0027kmw_ip\u0027]);\r\n\r\n        console.log(\"Unexpected state - this element\u0027s simulated input DIV should have been removed from the page!\");\r\n\r\n        return true;   // May need setup elsewhere since it\u0027s just been re-added!\r\n      }\r\n\r\n      // The simulated touch element doesn\u0027t already exist?  Time to initialize it.\r\n      let x=dom.constructTouchAlias(Pelem);\r\n      if(this.isAttached(x)) {\r\n        x._kmwAttachment.interface = dom.targets.wrapElement(x);\r\n      } else {\r\n        this.setupElementAttachment(x); // The touch-alias should have its own wrapper.\r\n      }\r\n      Pelem._kmwAttachment = x._kmwAttachment; // It\u0027s an object reference we need to alias.\r\n\r\n      // Set font for base element\r\n      this.enableInputElement(x, true);\r\n\r\n      // Superimpose custom input fields for each input or textarea, unless readonly or disabled\r\n\r\n      // On touch event, reposition the text caret and prepare for OSK input\r\n      // Removed \u0027onfocus=\u0027 as that resulted in handling the event twice (on iOS, anyway)\r\n\r\n      // We know this to be the correct set of handlers because we\u0027re setting up a touch element.\r\n      var touchHandlers = this.touchHandlers;\r\n\r\n      x.addEventListener(\u0027touchstart\u0027, touchHandlers.setFocus);\r\n      x.addEventListener(\u0027touchend\u0027, touchHandlers.dragEnd, false);\r\n\r\n      // Disable internal scroll when input element in focus\r\n      x.addEventListener(\u0027touchmove\u0027, touchHandlers.dragInput, false);\r\n\r\n      // Hide keyboard and caret when losing focus from simulated input field\r\n      x.onblur=touchHandlers.setBlur;\r\n\r\n      // Note that touchend event propagates and is processed by body touchend handler\r\n      // re-setting the first touch point for a drag\r\n\r\n      return true;\r\n    }\r\n\r\n    /**\r\n     * Function     disableTouchElement\r\n     * Scope        Private\r\n     * @param       {Element}  Pelem   An input or textarea element from the page.\r\n     * Description  Destroys the simulated input element for the specified INPUT or TEXTAREA and reverts\r\n     *              back to desktop-style \u0027enablement\u0027 for the base control.\r\n     */\r\n    disableTouchElement(Pelem: HTMLElement) {\r\n      // Do not check for the element being officially disabled - it\u0027s also used for detachment.\r\n\r\n      // Touch doesn\u0027t worry about iframes.\r\n      if(Pelem.tagName.toLowerCase() == \u0027iframe\u0027) {\r\n        return; // If/when we do support this, we\u0027ll need an iframe-level manager for it.\r\n      }\r\n\r\n      if(Pelem[\u0027kmw_ip\u0027]) {\r\n        var index = this.inputList.indexOf(Pelem[\u0027kmw_ip\u0027]);\r\n        if(index != -1) {\r\n          this.inputList.splice(index, 1);\r\n        }\r\n\r\n        Pelem.style.visibility=\u0027visible\u0027; // hide by default: KMW-3\r\n        Pelem.disabled = false;\r\n        Pelem.removeEventListener(\u0027resize\u0027, Pelem[\u0027kmw_ip\u0027]._kmwResizeHandler);\r\n\r\n        // Disable touch-related handling code.\r\n        this.disableInputElement(Pelem[\u0027kmw_ip\u0027]);\r\n        Pelem._kmwAttachment.interface = dom.targets.wrapElement(Pelem);\r\n\r\n        // We get weird repositioning errors if we don\u0027t remove our simulated input element - and permanently.\r\n        if(Pelem.parentNode) {\r\n          Pelem.parentNode.removeChild(Pelem[\u0027kmw_ip\u0027]);\r\n        }\r\n        delete Pelem[\u0027kmw_ip\u0027];\r\n      }\r\n\r\n      this.setupNonKMWTouchElement(Pelem);\r\n    }\r\n\r\n    /**\r\n     * Function     nonKMWTouchHandler\r\n     * Scope        Private\r\n     * Description  A handler for KMW-touch-disabled elements when operating on touch devices.\r\n     */\r\n    nonKMWTouchHandler = function(x) {\r\n      DOMEventHandlers.states.focusing=false;\r\n      clearTimeout(DOMEventHandlers.states.focusTimer);\r\n      this.keyman.osk.hideNow();\r\n    }.bind(this);\r\n\r\n    /**\r\n     * Function     setupNonKMWTouchElement\r\n     * Scope        Private\r\n     * @param       {Element}    x  A child element of document.\r\n     * Description  Performs handling for the specified disabled input element on touch-based systems.\r\n     */\r\n    setupNonKMWTouchElement(x: HTMLElement) {\r\n      this.keyman.util.attachDOMEvent(x, \u0027touchstart\u0027, this.nonKMWTouchHandler, false);\r\n\r\n      // Signify that touch isn\u0027t enabled on the control.\r\n      if(this.isAttached(x)) {\r\n        x._kmwAttachment.touchEnabled = false;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Function     enableInputElement\r\n     * Scope        Private\r\n     * @param       {Element}   Pelem   An element from the document to be enabled with full KMW handling.\r\n     * @param       {boolean=}   isAlias A flag that indicates if the element is a simulated input element for touch.\r\n     * Description  Performs the basic enabling setup for one element and adds it to the inputList if it is an input element.\r\n     *              Note that this method is called for both desktop and touch control routes; the touch route calls it from within\r\n     *              enableTouchElement as it must first establish the simulated touch element to serve as the alias \"input element\" here.\r\n     *              Note that the \u0027kmw-disabled\u0027 property is managed by the MutationObserver and by the surface API calls.\r\n     */\r\n    enableInputElement(Pelem: HTMLElement, isAlias?: boolean) {\r\n      var baseElement = isAlias ? Pelem[\u0027base\u0027] : Pelem;\r\n\r\n      if(!this.isKMWDisabled(baseElement)) {\r\n        if(Pelem instanceof Pelem.ownerDocument.defaultView.HTMLIFrameElement) {\r\n          this._AttachToIframe(Pelem);\r\n        } else {\r\n          if(!isAlias) {\r\n            this.setupElementAttachment(Pelem);\r\n          }\r\n\r\n          baseElement.className = baseElement.className ? baseElement.className + \u0027 keymanweb-font\u0027 : \u0027keymanweb-font\u0027;\r\n          this.inputList.push(Pelem);\r\n\r\n          this.keyman.util.attachDOMEvent(baseElement,\u0027focus\u0027, this.getHandlers(Pelem)._ControlFocus);\r\n          this.keyman.util.attachDOMEvent(baseElement,\u0027blur\u0027, this.getHandlers(Pelem)._ControlBlur);\r\n          this.keyman.util.attachDOMEvent(baseElement,\u0027click\u0027, this.getHandlers(Pelem)._Click);\r\n\r\n          // These need to be on the actual input element, as otherwise the keyboard will disappear on touch.\r\n          Pelem.onkeypress = this.getHandlers(Pelem)._KeyPress;\r\n          Pelem.onkeydown = this.getHandlers(Pelem)._KeyDown;\r\n          Pelem.onkeyup = this.getHandlers(Pelem)._KeyUp;\r\n        }\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Function     disableInputElement\r\n     * Scope        Private\r\n     * @param       {Element}   Pelem   An element from the document to be enabled with full KMW handling.\r\n     * @param       {boolean=}   isAlias A flag that indicates if the element is a simulated input element for touch.\r\n     * Description  Inverts the process of enableInputElement, removing all event-handling from the element.\r\n     *              Note that the \u0027kmw-disabled\u0027 property is managed by the MutationObserver and by the surface API calls.\r\n     */\r\n    disableInputElement(Pelem: HTMLElement, isAlias?: boolean) {\r\n      if(!Pelem) {\r\n        return;\r\n      }\r\n\r\n      var baseElement = isAlias ? Pelem[\u0027base\u0027] : Pelem;\r\n      // Do NOT test for pre-disabledness - we also use this to fully detach without officially \u0027disabling\u0027 via kmw-disabled.\r\n      if((Pelem.ownerDocument.defaultView \u0026\u0026 Pelem instanceof Pelem.ownerDocument.defaultView.HTMLIFrameElement) ||\r\n          Pelem instanceof HTMLIFrameElement) {\r\n        this._DetachFromIframe(Pelem);\r\n      } else {\r\n        var cnIndex = baseElement.className.indexOf(\u0027keymanweb-font\u0027);\r\n        if(cnIndex \u003e 0 \u0026\u0026 !isAlias) { // See note about the alias below.\r\n          baseElement.className = baseElement.className.replace(\u0027keymanweb-font\u0027, \u0027\u0027).trim();\r\n        }\r\n\r\n        // Remove the element from our internal input tracking.\r\n        var index = this.inputList.indexOf(Pelem);\r\n        if(index \u003e -1) {\r\n          this.inputList.splice(index, 1);\r\n        }\r\n\r\n        if(!isAlias) { // See note about the alias below.\r\n          this.keyman.util.detachDOMEvent(baseElement,\u0027focus\u0027, this.getHandlers(Pelem)._ControlFocus);\r\n          this.keyman.util.detachDOMEvent(baseElement,\u0027blur\u0027, this.getHandlers(Pelem)._ControlBlur);\r\n          this.keyman.util.detachDOMEvent(baseElement,\u0027click\u0027, this.getHandlers(Pelem)._Click);\r\n        }\r\n        // These need to be on the actual input element, as otherwise the keyboard will disappear on touch.\r\n        Pelem.onkeypress = null;\r\n        Pelem.onkeydown = null;\r\n        Pelem.onkeyup = null;\r\n      }\r\n\r\n      // If we\u0027re disabling an alias, we should fully enable the base version.  (Thinking ahead to toggleable-touch mode.)\r\n      if(isAlias) {\r\n        this.inputList.push(baseElement);\r\n\r\n        baseElement.onkeypress = this.getHandlers(Pelem)._KeyPress;\r\n        baseElement.onkeydown = this.getHandlers(Pelem)._KeyDown;\r\n        baseElement.onkeyup = this.getHandlers(Pelem)._KeyUp;\r\n      }\r\n\r\n      var lastElem = this.lastActiveElement;\r\n      if(lastElem == Pelem || lastElem == Pelem[\u0027kmw_ip\u0027]) {\r\n        if(this.activeElement == lastElem) {\r\n          this.activeElement = null;\r\n        }\r\n        this.lastActiveElement = null;\r\n        this.keyman.osk.startHide(false);\r\n      }\r\n\r\n      return;\r\n    };\r\n\r\n    /**\r\n     * Function     isKMWDisabled\r\n     * Scope        Private\r\n     * @param       {Element}   x   An element from the page.\r\n     * @return      {boolean}      true if the element\u0027s properties indicate a \u0027disabled\u0027 state.\r\n     * Description  Examines attachable elements to determine their default enablement state.\r\n     */\r\n    isKMWDisabled(x: HTMLElement): boolean {\r\n      var c = x.className;\r\n\r\n      // Exists for some HTMLElements.\r\n      if(x[\u0027readOnly\u0027]) {\r\n        return true;\r\n      } else if(c \u0026\u0026 c.indexOf(\u0027kmw-disabled\u0027) \u003e= 0) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    }\r\n\r\n    /**\r\n     * Function     attachToControl\r\n     * Scope        Public\r\n     * @param       {Element}    Pelem       Element to which KMW will be attached\r\n     * Description  Attaches KMW to control (or IFrame)\r\n     */\r\n    attachToControl(Pelem: HTMLElement) {\r\n      var touchable = this.keyman.util.device.touchable;\r\n\r\n      // Exception for IFrame elements, in case of async loading issues.  (Fixes fun iframe loading bug with Chrome.)\r\n      if(this.isAttached(Pelem) \u0026\u0026 !(Pelem instanceof Pelem.ownerDocument.defaultView.HTMLIFrameElement)) {\r\n        return; // We\u0027re already attached.\r\n      }\r\n\r\n      if(this.isKMWInput(Pelem)) {\r\n        if(!this.isKMWDisabled(Pelem)) {\r\n          if(touchable \u0026\u0026 !this.keyman.isEmbedded) {\r\n            this.enableTouchElement(Pelem);\r\n          } else {\r\n            this.enableInputElement(Pelem);\r\n          }\r\n        } else {\r\n          if(touchable) {\r\n            this.setupNonKMWTouchElement(Pelem);\r\n          }\r\n        }\r\n      } else if(touchable) {\r\n        this.setupNonKMWTouchElement(Pelem);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Function     detachFromControl\r\n     * Scope        Public\r\n     * @param       {Element}    Pelem       Element from which KMW will detach\r\n     * Description  Detaches KMW from a control (or IFrame)\r\n     */\r\n    detachFromControl(Pelem: HTMLElement) {\r\n      if(!(this.isAttached(Pelem) || Pelem instanceof Pelem.ownerDocument.defaultView.HTMLIFrameElement)) {\r\n        return;  // We never were attached.\r\n      }\r\n\r\n      // #1 - if element is enabled, disable it.  But don\u0027t manipulate the \u0027kmw-disabled\u0027 tag.\r\n      if(this.isKMWInput(Pelem)) {\r\n        // Is it already disabled?\r\n        if(!this.isKMWDisabled(Pelem)) {\r\n          this._DisableControl(Pelem);\r\n        }\r\n      }\r\n\r\n      // #2 - clear attachment data.\r\n      this.clearElementAttachment(Pelem);\r\n    }\r\n\r\n    /**\r\n     * Function     isAttached\r\n     * Scope        Private\r\n     * @param       {Element}   x   An element from the page.\r\n     * @return      {boolean}       true if KMW is attached to the element, otherwise false.\r\n     */\r\n    isAttached(x: HTMLElement) {\r\n      return x._kmwAttachment ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Function     isKMWInput\r\n     * Scope        Private\r\n     * @param       {Element}   x   An element from the page.\r\n     * @return      {boolean}      true if the element is viable for KMW attachment.\r\n     * Description  Examines potential input elements to determine whether or not they are viable for KMW attachment.\r\n     *              Also filters elements not supported for touch devices when device.touchable == true.\r\n     */\r\n    isKMWInput(x: HTMLElement): boolean {\r\n      var touchable = this.keyman.util.device.touchable;\r\n\r\n      if(x instanceof x.ownerDocument.defaultView.HTMLTextAreaElement) {\r\n        return true;\r\n      } else if(x instanceof x.ownerDocument.defaultView.HTMLInputElement) {\r\n        if (x.type == \u0027text\u0027 || x.type == \u0027search\u0027) {\r\n          return true;\r\n        }\r\n      } else if(x instanceof x.ownerDocument.defaultView.HTMLIFrameElement \u0026\u0026 !touchable) { // Do not allow iframe attachment if in \u0027touch\u0027 mode.\r\n        try {\r\n          if(x.contentWindow) {\r\n            if(x.contentWindow.document) {  // Only allow attachment if the iframe\u0027s internal document is valid.\r\n              return true;\r\n            }\r\n          } // else nothing?\r\n        }\r\n        catch(err) {\r\n          /* Do not attempt to access iframes outside this site */\r\n          console.warn(\"Error during attachment to / detachment from iframe: \");\r\n          console.warn(err);\r\n        }\r\n      } else if(x.isContentEditable \u0026\u0026 !touchable) { // Only allow contentEditable attachment outside of \u0027touch\u0027 mode.\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    }\r\n\r\n    /**\r\n     * Function     setupElementAttachment\r\n     * Scope        Private\r\n     * @param       {Element}   x   An element from the page valid for KMW attachment\r\n     * Description  Establishes the base KeymanWeb data for newly-attached elements.\r\n     *              Does not establish input hooks, which are instead handled during enablement.\r\n     */\r\n    setupElementAttachment(x: HTMLElement) {\r\n      // The `_kmwAttachment` property tag maintains all relevant KMW-maintained data regarding the element.\r\n      // It is disgarded upon de-attachment.\r\n      if(x._kmwAttachment) {\r\n        return;\r\n      } else {\r\n        // Problem:  tries to wrap IFrames that aren\u0027t design-mode.\r\n        // The elements in the contained document get separately wrapped, so this doesn\u0027t need a proper wrapper.\r\n        //\r\n        // Its attachment process might need some work.\r\n        let eleInterface = dom.targets.wrapElement(x);\r\n        // May should filter better for IFrames.\r\n        if(!(eleInterface || dom.Utils.instanceof(x, \"HTMLIFrameElement\"))) {\r\n          console.warn(\"Could not create processing interface for newly-attached element!\");\r\n        }\r\n\r\n        x._kmwAttachment = new AttachmentInfo(eleInterface, null, this.keyman.util.device.touchable);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Function     clearElementAttachment\r\n     * Scope        Private\r\n     * @param       {Element}   x   An element from the page valid for KMW attachment\r\n     * Description  Establishes the base KeymanWeb data for newly-attached elements.\r\n     *              Does not establish input hooks, which are instead handled during enablement.\r\n     */\r\n    clearElementAttachment(x: HTMLElement) {\r\n      // We need to clear the object when de-attaching; helps prevent memory leaks.\r\n      x._kmwAttachment = null;\r\n    }\r\n\r\n    /**\r\n     * Function     _AttachToIframe\r\n     * Scope        Private\r\n     * @param       {Element}      Pelem       IFrame to which KMW will be attached\r\n     * Description  Attaches KeymanWeb to IFrame\r\n     */\r\n    _AttachToIframe(Pelem: HTMLIFrameElement) {\r\n      var util = this.keyman.util;\r\n\r\n      try {\r\n        var Lelem=Pelem.contentWindow.document;\r\n        /* editable Iframe */\r\n        if(Lelem) {\r\n          if(Lelem.designMode.toLowerCase() == \u0027on\u0027) {\r\n            // I2404 - Attach to IFRAMEs child objects, only editable IFRAMEs here\r\n            if(util.device.browser == \u0027firefox\u0027) {\r\n              util.attachDOMEvent(Lelem,\u0027focus\u0027, this.getHandlers(Pelem)._ControlFocus);\r\n              util.attachDOMEvent(Lelem,\u0027blur\u0027, this.getHandlers(Pelem)._ControlBlur);\r\n            } else { // Chrome, Safari\r\n              util.attachDOMEvent(Lelem.body,\u0027focus\u0027, this.getHandlers(Pelem)._ControlFocus);\r\n              util.attachDOMEvent(Lelem.body,\u0027blur\u0027, this.getHandlers(Pelem)._ControlBlur);\r\n            }\r\n            util.attachDOMEvent(Lelem.body,\u0027keydown\u0027, this.getHandlers(Pelem)._KeyDown);\r\n            util.attachDOMEvent(Lelem.body,\u0027keypress\u0027, this.getHandlers(Pelem)._KeyPress);\r\n            util.attachDOMEvent(Lelem.body,\u0027keyup\u0027, this.getHandlers(Pelem)._KeyUp);\r\n\r\n            // Set up a reference alias; the internal document will need the same attachment info!\r\n            this.setupElementAttachment(Pelem);\r\n            Lelem.body._kmwAttachment = Pelem._kmwAttachment;\r\n          } else {\r\n            // Lelem is the IFrame\u0027s internal document; set \u0027er up!\r\n            this._SetupDocument(Lelem.body);\t   // I2404 - Manage IE events in IFRAMEs\r\n          }\r\n        }\r\n      }\r\n      catch(err)\r\n      {\r\n        // do not attempt to attach to the iframe as it is from another domain - XSS denied!\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Function     _DetachFromIframe\r\n     * Scope        Private\r\n     * @param       {Element}      Pelem       IFrame to which KMW will be attached\r\n     * Description  Detaches KeymanWeb from an IFrame\r\n     */\r\n    _DetachFromIframe(Pelem: HTMLIFrameElement) {\r\n      var util = this.keyman.util;\r\n\r\n      try {\r\n        var Lelem=Pelem.contentWindow.document;\r\n        /* editable Iframe */\r\n        if(Lelem) {\r\n          if(Lelem.designMode.toLowerCase() == \u0027on\u0027) {\r\n            // Mozilla      // I2404 - Attach to  IFRAMEs child objects, only editable IFRAMEs here\r\n            if(util.device.browser == \u0027firefox\u0027) {\r\n              // Firefox won\u0027t handle these events on Lelem.body - only directly on Lelem (the doc) instead.\r\n              util.detachDOMEvent(Lelem,\u0027focus\u0027, this.getHandlers(Pelem)._ControlFocus);\r\n              util.detachDOMEvent(Lelem,\u0027blur\u0027, this.getHandlers(Pelem)._ControlBlur);\r\n            } else { // Chrome, Safari\r\n              util.detachDOMEvent(Lelem.body,\u0027focus\u0027, this.getHandlers(Pelem)._ControlFocus);\r\n              util.detachDOMEvent(Lelem.body,\u0027blur\u0027, this.getHandlers(Pelem)._ControlBlur);\r\n            }\r\n            util.detachDOMEvent(Lelem.body,\u0027keydown\u0027, this.getHandlers(Pelem)._KeyDown);\r\n            util.detachDOMEvent(Lelem.body,\u0027keypress\u0027, this.getHandlers(Pelem)._KeyPress);\r\n            util.detachDOMEvent(Lelem.body,\u0027keyup\u0027, this.getHandlers(Pelem)._KeyUp);\r\n\r\n            // Remove the reference to our prior attachment data!\r\n            Lelem.body._kmwAttachment = null;\r\n          } else {\r\n            // Lelem is the IFrame\u0027s internal document; set \u0027er up!\r\n            this._ClearDocument(Lelem.body);\t   // I2404 - Manage IE events in IFRAMEs\r\n          }\r\n        }\r\n      }\r\n      catch(err)\r\n      {\r\n        // do not attempt to attach to the iframe as it is from another domain - XSS denied!\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Function     _GetDocumentEditables\r\n     * Scope        Private\r\n     * @param       {Element}     Pelem     HTML element\r\n     * @return      {Array\u003cElement\u003e}        A list of potentially-editable controls.  Further filtering [as with isKMWInput() and\r\n     *                                      isKMWDisabled()] is required.\r\n     */\r\n    _GetDocumentEditables(Pelem: HTMLElement): (HTMLElement)[] {\r\n      var util = this.keyman.util;\r\n\r\n      var possibleInputs: (HTMLElement)[] = [];\r\n\r\n      // Document.ownerDocument === null, so we better check that it\u0027s not null before proceeding.\r\n      if(Pelem.ownerDocument \u0026\u0026 Pelem instanceof Pelem.ownerDocument.defaultView.HTMLElement) {\r\n        var dv = Pelem.ownerDocument.defaultView;\r\n\r\n        if(Pelem instanceof dv.HTMLInputElement || Pelem instanceof dv.HTMLTextAreaElement) {\r\n          possibleInputs.push(Pelem);\r\n        } else if(Pelem instanceof dv.HTMLIFrameElement) {\r\n          possibleInputs.push(Pelem);\r\n        }\r\n      }\r\n\r\n      // Constructing it like this also allows for individual element filtering for the auto-attach MutationObserver without errors.\r\n      if(Pelem.getElementsByTagName) {\r\n        /**\r\n         * Function     LiTmp\r\n         * Scope        Private\r\n         * @param       {string}    _colon    type of element\r\n         * @return      {Array\u003cElement\u003e}  array of elements of specified type\r\n         * Description  Local function to get list of editable controls\r\n         */\r\n        var LiTmp = function(_colon: string): HTMLElement[] {\r\n          return util.arrayFromNodeList(Pelem.getElementsByTagName(_colon));\r\n        };\r\n\r\n        // Note that isKMWInput() will block IFRAME elements as necessary for touch-based devices.\r\n        possibleInputs = possibleInputs.concat(LiTmp(\u0027INPUT\u0027), LiTmp(\u0027TEXTAREA\u0027), LiTmp(\u0027IFRAME\u0027));\r\n      }\r\n\r\n      // Not all active browsers may support the method, but only those that do would work with contenteditables anyway.\r\n      if(Pelem.querySelectorAll) {\r\n        possibleInputs = possibleInputs.concat(util.arrayFromNodeList(Pelem.querySelectorAll(\u0027[contenteditable]\u0027)));\r\n      }\r\n\r\n      if(Pelem.ownerDocument \u0026\u0026 Pelem instanceof Pelem.ownerDocument.defaultView.HTMLElement \u0026\u0026 Pelem.isContentEditable) {\r\n        possibleInputs.push(Pelem);\r\n      }\r\n\r\n      return possibleInputs;\r\n    }\r\n\r\n    /**\r\n     * Function     _SetupDocument\r\n     * Scope        Private\r\n     * @param       {Element}     Pelem - the root element of a document, including IFrame documents.\r\n     * Description  Used to automatically attach KMW to editable controls, regardless of control path.\r\n     */\r\n    _SetupDocument(Pelem: HTMLElement) { // I1961\r\n      var possibleInputs = this._GetDocumentEditables(Pelem);\r\n\r\n      for(var Li = 0; Li \u003c possibleInputs.length; Li++) {\r\n        var input = possibleInputs[Li];\r\n\r\n        // It knows how to handle pre-loaded iframes appropriately.\r\n        this.attachToControl(possibleInputs[Li] as HTMLElement);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Function     _ClearDocument\r\n     * Scope        Private\r\n     * @param       {Element}     Pelem - the root element of a document, including IFrame documents.\r\n     * Description  Used to automatically detach KMW from editable controls, regardless of control path.\r\n     *              Mostly used to clear out all controls of a detached IFrame.\r\n     */\r\n    _ClearDocument(Pelem: HTMLElement) { // I1961\r\n      var possibleInputs = this._GetDocumentEditables(Pelem);\r\n\r\n      for(var Li = 0; Li \u003c possibleInputs.length; Li++) {\r\n        var input = possibleInputs[Li];\r\n\r\n        // It knows how to handle pre-loaded iframes appropriately.\r\n        this.detachFromControl(possibleInputs[Li] as HTMLElement);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Set target element text direction (LTR or RTL), but only if the element is empty\r\n     *\r\n     * If the element base directionality is changed after it contains content, unless all the text\r\n     * has the same directionality, text runs will be re-ordered which is confusing and causes\r\n     * incorrect caret positioning\r\n     *\r\n     * @param       {Object}      Ptarg      Target element\r\n     */\r\n    _SetTargDir(Ptarg: HTMLElement) {\r\n      let activeKeyboard = com.keyman.singleton.core.activeKeyboard;\r\n      var elDir=(activeKeyboard \u0026\u0026 activeKeyboard.isRTL) ? \u0027rtl\u0027 : \u0027ltr\u0027;\r\n\r\n      if(Ptarg) {\r\n        if(this.keyman.util.device.touchable) {\r\n          let alias = \u003cdom.TouchAliasElement\u003e Ptarg;\r\n          if(Ptarg.textContent.length == 0) {\r\n            alias.base.dir=alias.dir=elDir;\r\n            alias.setTextCaret(10000);\r\n          }\r\n        } else {\r\n          if(Ptarg instanceof Ptarg.ownerDocument.defaultView.HTMLInputElement\r\n              || Ptarg instanceof Ptarg.ownerDocument.defaultView.HTMLTextAreaElement) {\r\n            if((Ptarg as HTMLInputElement|HTMLTextAreaElement).value.length == 0) {\r\n              Ptarg.dir=elDir;\r\n            }\r\n          } else if(typeof Ptarg.textContent == \"string\" \u0026\u0026 Ptarg.textContent.length == 0) { // As with contenteditable DIVs, for example.\r\n            Ptarg.dir=elDir;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Function     _DisableControl\r\n     * Scope        Private\r\n     * @param       {Element}      Pelem       Element to be disabled\r\n     * Description  Disable KMW control element\r\n     */\r\n    _DisableControl(Pelem: HTMLElement) {\r\n      // Only operate on attached elements!  Non-design-mode IFrames don\u0027t get attachment markers, so we check them specifically instead.\r\n      if(this.isAttached(Pelem) || Pelem instanceof Pelem.ownerDocument.defaultView.HTMLIFrameElement) {\r\n        if(this.keyman.util.device.touchable) {\r\n          this.disableTouchElement(Pelem);\r\n          this.setupNonKMWTouchElement(Pelem);\r\n\r\n          var keyman = this.keyman;\r\n\r\n          // If a touch alias was removed, chances are it\u0027s gonna mess up our touch-based layout scheme, so let\u0027s update the touch elements.\r\n          window.setTimeout(function() {\r\n            this.listInputs();\r\n\r\n            for(var k = 0; k \u003c this.sortedInputs.length; k++) {\r\n              if(this.sortedInputs[k][\u0027kmw_ip\u0027]) {\r\n                this.sortedInputs[k][\u0027kmw_ip\u0027].updateInput(this.sortedInputs[k][\u0027kmw_ip\u0027]);\r\n              }\r\n            }\r\n          }.bind(this), 1);\r\n        } else {\r\n          this.listInputs(); // Fix up our internal input ordering scheme.\r\n        }\r\n\r\n        this.disableInputElement(Pelem);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Function     _EnableControl\r\n     * Scope        Private\r\n     * @param       {Element}    Pelem   Element to be enabled\r\n     * Description  Enable KMW control element\r\n     */\r\n    _EnableControl(Pelem: HTMLElement) {\r\n      if(this.isAttached(Pelem)) { // Only operate on attached elements!\r\n        if(this.keyman.util.device.touchable) {\r\n          this.enableTouchElement(Pelem);\r\n\r\n          var keyman = this.keyman;\r\n\r\n          // If we just added a new input alias, some languages will mess up our touch-based layout scheme\r\n          // if we don\u0027t update the touch elements.\r\n          window.setTimeout(function() {\r\n            keyman.domManager.listInputs();\r\n\r\n            for(var k = 0; k \u003c this.sortedInputs.length; k++) {\r\n              if(this.sortedInputs[k][\u0027kmw_ip\u0027]) {\r\n                this.sortedInputs[k][\u0027kmw_ip\u0027].updateInput(this.sortedInputs[k][\u0027kmw_ip\u0027]);\r\n              }\r\n            }\r\n          }.bind(this), 1);\r\n        } else {\r\n          this.enableInputElement(Pelem);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Create an ordered list of all text and search input elements and textarea elements\r\n    // except any tagged with class \u0027kmw-disabled\u0027\r\n    // TODO: email and url types should perhaps use default keyboard only\r\n    listInputs() {\r\n      var i,eList=[],\r\n        t1=document.getElementsByTagName\u003c\u0027input\u0027\u003e(\u0027input\u0027),\r\n        t2=document.getElementsByTagName\u003c\u0027textarea\u0027\u003e(\u0027textarea\u0027);\r\n\r\n      var util = this.keyman.util;\r\n\r\n      for(i=0; i\u003ct1.length; i++) {\r\n        switch(t1[i].type) {\r\n          case \u0027text\u0027:\r\n          case \u0027search\u0027:\r\n          case \u0027email\u0027:\r\n          case \u0027url\u0027:\r\n            if(t1[i].className.indexOf(\u0027kmw-disabled\u0027) \u003c 0) {\r\n              eList.push({ip:t1[i], x: dom.Utils.getAbsoluteX(t1[i]), y: dom.Utils.getAbsoluteY(t1[i])});\r\n            }\r\n            break;\r\n        }\r\n      }\r\n\r\n      for(i=0; i\u003ct2.length; i++) {\r\n        if(t2[i].className.indexOf(\u0027kmw-disabled\u0027) \u003c 0)\r\n          eList.push({ip:t2[i], x: dom.Utils.getAbsoluteX(t2[i]), y: dom.Utils.getAbsoluteY(t2[i])});\r\n      }\r\n\r\n      /**\r\n       * Local function to sort by screen position\r\n       *\r\n       * @param       {Object}     e1     first object\r\n       * @param       {Object}     e2     second object\r\n       * @return      {number}            y-difference between object positions, or x-difference if y values the same\r\n       */\r\n      var xySort=function(e1,e2)\r\n      {\r\n        if(e1.y != e2.y) return e1.y-e2.y;\r\n        return e1.x-e2.x;\r\n      }\r\n\r\n      // Sort elements by Y then X\r\n      eList.sort(xySort);\r\n\r\n      // Create a new list of sorted elements\r\n      var tList=[];\r\n      for(i=0;i\u003ceList.length;i++)\r\n        tList.push(eList[i].ip);\r\n\r\n      // Return the sorted element list\r\n      this.sortedInputs=tList;\r\n    }\r\n\r\n    _EnablementMutationObserverCore = function(mutations: MutationRecord[]) {\r\n      for(var i=0; i \u003c mutations.length; i++) {\r\n        var mutation = mutations[i];\r\n\r\n        // ( ? : ) needed as a null check.\r\n        var disabledBefore = mutation.oldValue ? mutation.oldValue.indexOf(\u0027kmw-disabled\u0027) \u003e= 0 : false;\r\n        var disabledAfter = (mutation.target as HTMLElement).className.indexOf(\u0027kmw-disabled\u0027) \u003e= 0;\r\n\r\n        if(disabledBefore \u0026\u0026 !disabledAfter) {\r\n          this._EnableControl(mutation.target);\r\n        } else if(!disabledBefore \u0026\u0026 disabledAfter) {\r\n          this._DisableControl(mutation.target);\r\n        }\r\n\r\n        // \u0027readonly\u0027 triggers on whether or not the attribute exists, not its value.\r\n        if(!disabledAfter \u0026\u0026 mutation.attributeName == \"readonly\") {\r\n          var readonlyBefore = mutation.oldValue ? mutation.oldValue != null : false;\r\n          var elem = mutation.target;\r\n\r\n          if(elem instanceof elem.ownerDocument.defaultView.HTMLInputElement\r\n              || elem instanceof elem.ownerDocument.defaultView.HTMLTextAreaElement) {\r\n            var readonlyAfter = elem.readOnly;\r\n\r\n            if(readonlyBefore \u0026\u0026 !readonlyAfter) {\r\n              this._EnableControl(mutation.target);\r\n            } else if(!readonlyBefore \u0026\u0026 readonlyAfter) {\r\n              this._DisableControl(mutation.target);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }.bind(this);\r\n\r\n    _AutoAttachObserverCore = function(mutations: MutationRecord[]) {\r\n      var inputElementAdditions = [];\r\n      var inputElementRemovals = [];\r\n\r\n      for(var i=0; i \u003c mutations.length; i++) {\r\n        var mutation = mutations[i];\r\n\r\n        for(var j=0; j \u003c mutation.addedNodes.length; j++) {\r\n          inputElementAdditions = inputElementAdditions.concat(this._GetDocumentEditables(mutation.addedNodes[j]));\r\n        }\r\n\r\n        for(j = 0; j \u003c mutation.removedNodes.length; j++) {\r\n          inputElementRemovals = inputElementRemovals.concat(this._GetDocumentEditables(mutation.removedNodes[j]));\r\n        }\r\n      }\r\n\r\n      for(var k = 0; k \u003c inputElementAdditions.length; k++) {\r\n        if(this.isKMWInput(inputElementAdditions[k])) { // Apply standard element filtering!\r\n          this._MutationAdditionObserved(inputElementAdditions[k]);\r\n        }\r\n      }\r\n\r\n      for(k = 0; k \u003c inputElementRemovals.length; k++) {\r\n        if(this.isKMWInput(inputElementRemovals[k])) { // Apply standard element filtering!\r\n          this._MutationRemovalObserved(inputElementRemovals[k]);\r\n        }\r\n      }\r\n\r\n      /* After all mutations have been handled, we need to recompile our .sortedInputs array, but only\r\n        * if any have actually occurred.\r\n        */\r\n      if(inputElementAdditions.length || inputElementRemovals.length) {\r\n        if(!this.keyman.util.device.touchable) {\r\n          this.listInputs();\r\n        } else if(this.keyman.util.device.touchable) {   // If something was added or removed, chances are it\u0027s gonna mess up our touch-based layout scheme, so let\u0027s update the touch elements.\r\n          var domManager = this;\r\n          window.setTimeout(function() {\r\n            domManager.listInputs();\r\n\r\n            for(var k = 0; k \u003c this.sortedInputs.length; k++) {\r\n              if(this.sortedInputs[k][\u0027kmw_ip\u0027]) {\r\n                this.sortedInputs[k][\u0027kmw_ip\u0027].updateInput();\r\n              }\r\n            }\r\n          }.bind(this), 1);\r\n        }\r\n      }\r\n    }.bind(this);\r\n\r\n    /**\r\n     * Function     _MutationAdditionObserved\r\n     * Scope        Private\r\n     * @param       {Element}  Pelem     A page input, textarea, or iframe element.\r\n     * Description  Used by the MutationObserver event handler to properly setup any elements dynamically added to the document post-initialization.\r\n     *\r\n     */\r\n    _MutationAdditionObserved = function(Pelem: HTMLElement) {\r\n      if(Pelem instanceof Pelem.ownerDocument.defaultView.HTMLIFrameElement \u0026\u0026 !this.keyman.util.device.touchable) {\r\n        //Problem:  the iframe is loaded asynchronously, and we must wait for it to load fully before hooking in.\r\n\r\n        var domManager = this;\r\n\r\n        var attachFunctor = function() {  // Triggers at the same time as iframe\u0027s onload property, after its internal document loads.\r\n          // Provide a minor delay to allow \u0027load\u0027 event handlers to set the design-mode property.\r\n          window.setTimeout(function() {\r\n            domManager.attachToControl(Pelem);\r\n          }, 1);\r\n        };\r\n\r\n        Pelem.addEventListener(\u0027load\u0027, attachFunctor);\r\n\r\n        // The following block breaks for design-mode iframes, at least in Chrome; a blank document may exist\r\n        // before the load of the desired actual document.\r\n        //\r\n        // /* If the iframe has somehow already loaded, we can\u0027t expect the onload event to be raised.  We ought just\r\n        // * go ahead and perform our callback\u0027s contents.\r\n        // *\r\n        // * keymanweb.domManager.attachToControl() is now idempotent, so even if our call \u0027whiffs\u0027, it won\u0027t cause long-lasting\r\n        // * problems.\r\n        // */\r\n        // if(Pelem.contentDocument.readyState == \u0027complete\u0027) {\r\n        //   window.setTimeout(attachFunctor, 1);\r\n        // }\r\n      } else {\r\n        this.attachToControl(Pelem);\r\n      }\r\n    }\r\n\r\n    // Used by the mutation event handler to properly decouple any elements dynamically removed from the document.\r\n    _MutationRemovalObserved = function(Pelem: HTMLElement) {\r\n      var element = Pelem;\r\n      if(this.keyman.util.device.touchable) {\r\n        this.disableTouchElement(Pelem);\r\n      }\r\n\r\n      this.disableInputElement(Pelem); // Remove all KMW event hooks, styling.\r\n      this.clearElementAttachment(element);  // Memory management \u0026 auto de-attachment upon removal.\r\n    }\r\n\r\n    /**\r\n     * Function     disableControl\r\n     * Scope        Public\r\n     * @param       {Element}      Pelem       Element to be disabled\r\n     * Description  Disables a KMW control element\r\n     */\r\n    disableControl(Pelem: HTMLElement) {\r\n      if(!this.isAttached(Pelem)) {\r\n        console.warn(\"KeymanWeb is not attached to element \" + Pelem);\r\n      }\r\n\r\n      var cn = Pelem.className;\r\n      if(cn.indexOf(\u0027kmw-disabled\u0027) \u003c 0) { // if not already explicitly disabled...\r\n        Pelem.className = cn ? cn + \u0027 kmw-disabled\u0027 : \u0027kmw-disabled\u0027;\r\n      }\r\n\r\n      // The rest is triggered within MutationObserver code.\r\n      // See _EnablementMutationObserverCore.\r\n    }\r\n\r\n    /**\r\n     * Function     enableControl\r\n     * Scope        Public\r\n     * @param       {Element}      Pelem       Element to be disabled\r\n     * Description  Disables a KMW control element\r\n     */\r\n    enableControl = function(Pelem: HTMLElement) {\r\n      if(!this.isAttached(Pelem)) {\r\n        console.warn(\"KeymanWeb is not attached to element \" + Pelem);\r\n      }\r\n\r\n      var cn = Pelem.className;\r\n      var tagIndex = cn.indexOf(\u0027kmw-disabled\u0027);\r\n      if(tagIndex \u003e= 0) { // if already explicitly disabled...\r\n        Pelem.className = cn.replace(\u0027kmw-disabled\u0027, \u0027\u0027).trim();\r\n      }\r\n\r\n      // The rest is triggered within MutationObserver code.\r\n      // See _EnablementMutationObserverCore.\r\n    }\r\n\r\n    /* ------------- Page and document-level management events ------------------ */\r\n\r\n    _WindowLoad: (e: Event) =\u003e void = function(e: Event) {\r\n      //keymanweb.completeInitialization();\r\n      // Always return to top of page after a page reload\r\n      document.body.scrollTop=0;\r\n      if(typeof document.documentElement != \u0027undefined\u0027) {\r\n        document.documentElement.scrollTop=0;\r\n      }\r\n    }.bind(this);\r\n\r\n    /**\r\n     * Function     _WindowUnload\r\n     * Scope        Private\r\n     * Description  Remove handlers before detaching KMW window\r\n     */\r\n    _WindowUnload: () =\u003e void = function(this: DOMManager) {\r\n      // Allow the UI to release its own resources\r\n      this.keyman.uiManager.doUnload();\r\n\r\n      // Allow the OSK to release its own resources\r\n      if(this.keyman.osk) {\r\n        this.keyman.osk.shutdown();\r\n        if(this.keyman.osk[\u0027_Unload\u0027]) {\r\n          this.keyman.osk[\u0027_Unload\u0027](); // I3363 (Build 301)\r\n        }\r\n      }\r\n\r\n      this.lastActiveElement = null;\r\n    }.bind(this);\r\n\r\n    /* ------ Defines independent, per-control keyboard setting behavior for the API. ------ */\r\n\r\n    /**\r\n     * Function     setKeyboardForControl\r\n     * Scope        Public\r\n     * @param       {Element}    Pelem    Control element\r\n     * @param       {string|null=}    Pkbd     Keyboard (Clears the set keyboard if set to null.)\r\n     * @param       {string|null=}     Plc      Language Code\r\n     * Description  Set default keyboard for the control\r\n     */\r\n    setKeyboardForControl(Pelem: HTMLElement, Pkbd?: string, Plc?: string) {\r\n      /* pass null for kbd to specify no default, or \u0027\u0027 to specify the default system keyboard. */\r\n      if(Pkbd !== null \u0026\u0026 Pkbd !== undefined) {\r\n        var index = Pkbd.indexOf(\"Keyboard_\");\r\n        if(index \u003c 0 \u0026\u0026 Pkbd != \u0027\u0027) {\r\n          Pkbd = \"Keyboard_\" + Pkbd;\r\n        }\r\n      } else {\r\n        Plc = null;\r\n      }\r\n\r\n      if(Pelem instanceof Pelem.ownerDocument.defaultView.HTMLIFrameElement) {\r\n        console.warn(\"\u0027keymanweb.setKeyboardForControl\u0027 cannot set keyboard on iframes.\");\r\n        return;\r\n      }\r\n\r\n      if(!this.isAttached(Pelem)) {\r\n        console.error(\"KeymanWeb is not attached to element \" + Pelem);\r\n        return;\r\n      } else {\r\n        Pelem._kmwAttachment.keyboard = Pkbd;\r\n        Pelem._kmwAttachment.languageCode = Plc;\r\n\r\n        // If Pelem is the focused element/active control, we should set the keyboard in place now.\r\n        // \u0027kmw_ip\u0027 is the touch-alias for the original page\u0027s control.\r\n\r\n        var lastElem = this.lastActiveElement;\r\n        if(lastElem \u0026\u0026 (lastElem == Pelem || lastElem == Pelem[\u0027kmw_ip\u0027])) {\r\n\r\n          if(Pkbd != null \u0026\u0026 Plc != null) { // Second part necessary for Closure.\r\n            this.keyman.keyboardManager.setActiveKeyboard(Pkbd, Plc);\r\n          } else {\r\n            this.keyman.keyboardManager.setActiveKeyboard(this.keyman.globalKeyboard, this.keyman.globalLanguageCode);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Function     getKeyboardForControl\r\n     * Scope        Public\r\n     * @param       {Element}    Pelem    Control element\r\n     * @return      {string|null}         The independently-managed keyboard for the control.\r\n     * Description  Returns the keyboard ID of the current independently-managed keyboard for this control.\r\n     *              If it is currently following the global keyboard setting, returns null instead.\r\n     */\r\n    getKeyboardForControl(Pelem: HTMLElement): string {\r\n      if(!this.isAttached(Pelem)) {\r\n        console.error(\"KeymanWeb is not attached to element \" + Pelem);\r\n        return null;\r\n      } else {\r\n        return Pelem._kmwAttachment.keyboard;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Function     getLanguageForControl\r\n     * Scope        Public\r\n     * @param       {Element}    Pelem    Control element\r\n     * @return      {string|null}         The independently-managed keyboard for the control.\r\n     * Description  Returns the language code used with the current independently-managed keyboard for this control.\r\n     *              If it is currently following the global keyboard setting, returns null instead.\r\n     */\r\n    getLanguageForControl(Pelem: HTMLElement): string {\r\n      if(!this.isAttached(Pelem)) {\r\n        console.error(\"KeymanWeb is not attached to element \" + Pelem);\r\n        return null;\r\n      } else {\r\n        return Pelem._kmwAttachment.languageCode;  // Should we have a version for the language code, too?\r\n      }\r\n    }\r\n\r\n    /* ------ End independent, per-control keyboard setting behavior definitions. ------ */\r\n\r\n    /**\r\n     * Set focus to last active target element (browser-dependent)\r\n     */\r\n    focusLastActiveElement() {\r\n      var lastElem = this.lastActiveElement;\r\n      if(!lastElem) {\r\n        return;\r\n      }\r\n\r\n      this.keyman.uiManager.justActivated = true;\r\n\r\n      const target = Utils.getOutputTarget(lastElem);\r\n      target.focus();\r\n    }\r\n\r\n    /**\r\n     * Get the last active target element *before* KMW activated (I1297)\r\n     *\r\n     * @return      {Element}\r\n     */\r\n    get lastActiveElement(): HTMLElement {\r\n      return DOMEventHandlers.states._lastActiveElement;\r\n    }\r\n\r\n    set lastActiveElement(Pelem: HTMLElement) {\r\n      DOMEventHandlers.states._lastActiveElement = Pelem;\r\n\r\n      const osk = this.keyman.osk;\r\n      if(osk) {\r\n        if(this.lastActiveElement == null \u0026\u0026 this.activeElement == null) {\r\n          // Assigning to the property does have side-effects.\r\n          // If the property is already unset, it\u0027s best to not unset it again.\r\n          osk.activeTarget = null;\r\n          this.keyman.osk.hideNow(); // originally from a different one, seemed to serve the same role?\r\n        }\r\n      }\r\n    }\r\n\r\n    get activeElement(): HTMLElement {\r\n      return DOMEventHandlers.states._activeElement;\r\n    }\r\n\r\n    set activeElement(Pelem: HTMLElement) {\r\n      // Ensure that a TouchAliasElement is hidden whenever it is deactivated for input.\r\n      if(this.activeElement) {\r\n        if(Utils.instanceof(this.keyman.domManager.activeElement, \"TouchAliasElement\")) {\r\n          (this.keyman.domManager.activeElement as TouchAliasElement).hideCaret();\r\n        }\r\n      }\r\n\r\n      DOMEventHandlers.states._activeElement = Pelem;\r\n\r\n      var isActivating = this.keyman.uiManager.isActivating;\r\n\r\n      // Hide the OSK when the control is blurred, unless the UI is being temporarily selected\r\n      const osk = this.keyman.osk;\r\n      // const device = this.keyman.util.device;\r\n\r\n      if(osk) {\r\n        const target = Pelem?._kmwAttachment?.interface || null;\r\n        if(osk \u0026\u0026 (target || !isActivating)) {\r\n          // Do not unset the field if the UI is activated.\r\n          osk.activeTarget = target;\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     *  Set the active input element directly optionally setting focus\r\n     *\r\n     *  @param  {Object|string} e         element id or element\r\n     *  @param  {boolean=}      setFocus  optionally set focus  (KMEW-123)\r\n     */\r\n    setActiveElement(e: string|HTMLElement, setFocus?: boolean) {\r\n      if(typeof e == \"string\") { // Can\u0027t instanceof string, and String is a different type.\r\n        e = document.getElementById(e);\r\n      }\r\n\r\n      if(this.keyman.isEmbedded) {\r\n        // If we\u0027re in embedded mode, auto-attach to the element specified by the page.\r\n        if(!this.isAttached(e)) {\r\n          this.attachToControl(e);\r\n        }\r\n        // Non-attached elements cannot be set as active.\r\n      } else if(!this.isAttached(e)) {\r\n        console.warn(\"Cannot set an element KMW is not attached to as the active element.\");\r\n        return;\r\n      }\r\n\r\n      // As this is an API function, someone may pass in the base of a touch element.\r\n      // We need to respond appropriately.\r\n      e = (e[\u0027kmw_ip\u0027] ? e[\u0027kmw_ip\u0027] : e) as HTMLElement;\r\n\r\n      // If we\u0027re changing controls, don\u0027t forget to properly manage the keyboard settings!\r\n      // It\u0027s only an issue on \u0027native\u0027 (non-embedded) code paths.\r\n      if(!this.keyman.isEmbedded) {\r\n        this.keyman.touchAliasing._BlurKeyboardSettings(this.keyman.domManager.lastActiveElement);\r\n      }\r\n\r\n      // No need to reset context if we stay within the same element.\r\n      if(this.activeElement != e) {\r\n        this.keyman[\u0027resetContext\u0027](e as HTMLElement);\r\n      }\r\n\r\n      this.activeElement = this.lastActiveElement = e;\r\n      if(!this.keyman.isEmbedded) {\r\n        this.keyman.touchAliasing._FocusKeyboardSettings(e, false);\r\n      }\r\n\r\n      // Allow external focusing KMEW-123\r\n      if(arguments.length \u003e 1 \u0026\u0026 setFocus) {\r\n        if(this.keyman.util.device.touchable) {\r\n          var tEvent = {\r\n            pageX: 0,\r\n            pageY: 0,\r\n            target: e as HTMLElement\r\n          };\r\n\r\n          // Kinda hacky, but gets the job done.\r\n          (this.keyman.touchAliasing as DOMTouchHandlers).setFocusWithTouch(tEvent);\r\n        } else {\r\n          this.focusLastActiveElement();\r\n        }\r\n      }\r\n\r\n      // Let the keyboard do its initial group processing\r\n      //console.log(\u0027processNewContextEvent [not] called from setActiveElement\u0027);\r\n      com.keyman.singleton.core.processNewContextEvent(dom.Utils.getOutputTarget(e));\r\n    }\r\n\r\n    /** Sets the active input element only if it is presently null.\r\n     *\r\n     * @param  {Element}\r\n     */\r\n    initActiveElement(Lelem: HTMLElement) {\r\n      if(this.activeElement == null) {\r\n        this.activeElement = Lelem;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Move focus to next (or previous) input or text area element on TAB\r\n     *   Uses list of actual input elements\r\n     *\r\n     *   Note that activeElement() on touch devices returns the DIV that overlays\r\n     *   the input element, not the element itself.\r\n     *\r\n     * @param      {number|boolean}  bBack     Direction to move (0 or 1)\r\n     */\r\n    moveToNext(bBack: number|boolean) {\r\n      var i,t=this.sortedInputs, activeBase = this.activeElement;\r\n      var touchable = this.keyman.util.device.touchable;\r\n\r\n      if(t.length == 0) {\r\n        return;\r\n      }\r\n\r\n      // For touchable devices, get the base element of the DIV\r\n      if(touchable) {\r\n        activeBase=activeBase.base;\r\n      }\r\n\r\n      // Identify the active element in the list of inputs ordered by position\r\n      for(i=0; i\u003ct.length; i++) {\r\n        if(t[i] == activeBase) break;\r\n      }\r\n\r\n      // Find the next (or previous) element in the list\r\n      i = bBack ? i-1 : i+1;\r\n      // Treat the list as circular, wrapping the index if necessary.\r\n      i = i \u003e= t.length ? i-t.length : i;\r\n      i = i \u003c 0 ? i+t.length : i;\r\n\r\n      // Move to the selected element\r\n      if(touchable) {\r\n        // Set focusing flag to prevent OSK disappearing\r\n        DOMEventHandlers.states.focusing=true;\r\n        var target=t[i][\u0027kmw_ip\u0027];\r\n\r\n        // Focus if next element is non-mapped\r\n        if(typeof(target) == \u0027undefined\u0027) {\r\n          t[i].focus();\r\n        } else { // Or reposition the caret on the input DIV if mapped\r\n          let alias = \u003cdom.TouchAliasElement\u003e target;\r\n          this.keyman.domManager.setActiveElement(target); // Handles both `lastActive` + `active`.\r\n          alias.setTextCaret(10000); // Safe b/c touchable == true.\r\n          alias.scrollInput();   // mousedown check\r\n          target.focus();\r\n        }\r\n      } else { // Behaviour for desktop browsers\r\n        t[i].focus();\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Move focus to user-specified element\r\n     *\r\n     *  @param  {string|Object}   e   element or element id\r\n     *\r\n     */\r\n    moveToElement(e:string|HTMLElement) {\r\n      var i;\r\n\r\n      if(typeof(e) == \"string\") { // Can\u0027t instanceof string, and String is a different type.\r\n        e=document.getElementById(e);\r\n      }\r\n\r\n      if(this.keyman.util.device.touchable \u0026\u0026 e[\u0027kmw_ip\u0027]) {\r\n        e[\u0027kmw_ip\u0027].focus();\r\n      } else {\r\n        e.focus();\r\n      }\r\n    }\r\n\r\n    /* ----------------------- Editable IFrame methods ------------------- */\r\n\r\n    /**\r\n     * Function     _IsEditableIframe\r\n     * Scope        Private\r\n     * @param       {Object}           Pelem    Iframe element\r\n     * @param       {boolean|number}   PtestOn  1 to test if \u0027designMode\u0027 is \u0027ON\u0027\r\n     * @return      {boolean}\r\n     * Description  Test if element is a Mozilla editable IFrame\r\n     */\r\n    _IsEditableIframe(Pelem: HTMLIFrameElement, PtestOn?: number) {\r\n      var Ldv, Lvalid = Pelem  \u0026\u0026  (Ldv=(\u003cany\u003ePelem).defaultView)  \u0026\u0026  Ldv.frameElement;  // Probable bug!\r\n      return (!PtestOn  \u0026\u0026  Lvalid) || (PtestOn  \u0026\u0026  (!Lvalid || Ldv.document.designMode.toLowerCase()==\u0027on\u0027));\r\n    }\r\n\r\n    /* ----------------------- Initialization methods ------------------ */\r\n\r\n    /**\r\n     * Get the user-specified (or default) font for the first mapped input or textarea element\r\n     * before applying any keymanweb styles or classes\r\n     *\r\n     *  @return   {string}\r\n     */\r\n    getBaseFont() {\r\n      var util = this.keyman.util;\r\n      var ipInput = document.getElementsByTagName\u003c\u0027input\u0027\u003e(\u0027input\u0027),\r\n          ipTextArea=document.getElementsByTagName\u003c\u0027textarea\u0027\u003e(\u0027textarea\u0027),\r\n          n=0,fs,fsDefault=\u0027Arial,sans-serif\u0027;\r\n\r\n      // Find the first input element (if it exists)\r\n      if(ipInput.length == 0 \u0026\u0026 ipTextArea.length == 0) {\r\n        n=0;\r\n      } else if(ipInput.length \u003e 0 \u0026\u0026 ipTextArea.length == 0) {\r\n        n=1;\r\n      } else if(ipInput.length == 0 \u0026\u0026 ipTextArea.length \u003e 0) {\r\n        n=2;\r\n      } else {\r\n        var firstInput = ipInput[0];\r\n        var firstTextArea = ipTextArea[0];\r\n\r\n        if(firstInput.offsetTop \u003c firstTextArea.offsetTop) {\r\n          n=1;\r\n        } else if(firstInput.offsetTop \u003e firstTextArea.offsetTop) {\r\n          n=2;\r\n        } else if(firstInput.offsetLeft \u003c firstTextArea.offsetLeft) {\r\n          n=1;\r\n        } else if(firstInput.offsetLeft \u003e firstTextArea.offsetLeft) {\r\n          n=2;\r\n        }\r\n      }\r\n\r\n      // Grab that font!\r\n      switch(n) {\r\n        case 0:\r\n          fs=fsDefault;\r\n        case 1:\r\n          fs=util.getStyleValue(ipInput[0],\u0027font-family\u0027);\r\n        case 2:\r\n          fs=util.getStyleValue(ipTextArea[0],\u0027font-family\u0027);\r\n      }\r\n      if(typeof(fs) == \u0027undefined\u0027 || fs == \u0027monospace\u0027) {\r\n        fs=fsDefault;\r\n      }\r\n\r\n      return fs;\r\n    }\r\n\r\n    /**\r\n     * Function     Initialization\r\n     * Scope        Public\r\n     * @param       {com.keyman.OptionType}  arg     object of user-defined properties\r\n     * Description  KMW window initialization\r\n     */\r\n    init: (arg: com.keyman.OptionType) =\u003e Promise\u003cany\u003e = function(this: DOMManager, arg): Promise\u003cany\u003e {\r\n      var p,opt,dTrailer,ds;\r\n      var util = this.keyman.util;\r\n      var device = util.device;\r\n\r\n      // Set callbacks for proper feedback from web-core.\r\n      this.keyman.core.keyboardProcessor.beepHandler = this.doBeep.bind(this);\r\n      this.keyman.core.keyboardProcessor.warningLogger = console.warn.bind(console);\r\n      this.keyman.core.keyboardProcessor.errorLogger = console.error.bind(console);\r\n\r\n      // Local function to convert relative to absolute URLs\r\n      // with respect to the source path, server root and protocol\r\n      var fixPath = function(p) {\r\n        if(p.length == 0) return p;\r\n\r\n        // Add delimiter if missing\r\n        if(p.substr(p.length-1,1) != \u0027/\u0027) p = p+\u0027/\u0027;\r\n\r\n        // Absolute\r\n        if((p.replace(/^(http)s?:.*/,\u0027$1\u0027) == \u0027http\u0027)\r\n            || (p.replace(/^(file):.*/,\u0027$1\u0027) == \u0027file\u0027))\r\n          return p;\r\n\r\n        // Absolute (except for protocol)\r\n        if(p.substr(0,2) == \u0027//\u0027)\r\n          return this.keyman.protocol+p;\r\n\r\n        // Relative to server root\r\n        if(p.substr(0,1) == \u0027/\u0027)\r\n          return this.keyman.rootPath+p.substr(1);\r\n\r\n        // Otherwise, assume relative to source path\r\n        return this.keyman.srcPath+p;\r\n      }.bind(this);\r\n\r\n      // Explicit (user-defined) parameter initialization\r\n      opt=this.keyman.options;\r\n      if(typeof(arg) == \u0027object\u0027 \u0026\u0026 arg !== null)\r\n      {\r\n        for(p in opt)\r\n        {\r\n          if(arg.hasOwnProperty(p)) opt[p] = arg[p];\r\n        }\r\n      }\r\n\r\n      // Get default paths and device options\r\n      if(opt[\u0027root\u0027] != \u0027\u0027) {\r\n        this.keyman.rootPath = fixPath(opt[\u0027root\u0027]);\r\n      }\r\n\r\n      // Keyboards and fonts are located with respect to the server root by default\r\n      //if(opt[\u0027keyboards\u0027] == \u0027\u0027) opt[\u0027keyboards\u0027] = keymanweb.rootPath+\u0027keyboard/\u0027;\r\n      //if(opt[\u0027fonts\u0027] == \u0027\u0027) opt[\u0027fonts\u0027] = keymanweb.rootPath+\u0027font/\u0027;\r\n\r\n      // Resources are located with respect to the engine by default\r\n      if(opt[\u0027resources\u0027] == \u0027\u0027) {\r\n        opt[\u0027resources\u0027] = this.keyman.srcPath;\r\n      }\r\n\r\n      // Convert resource, keyboard and font paths to absolute URLs\r\n      opt[\u0027resources\u0027] = fixPath(opt[\u0027resources\u0027]);\r\n      opt[\u0027keyboards\u0027] = fixPath(opt[\u0027keyboards\u0027]);\r\n      opt[\u0027fonts\u0027] = fixPath(opt[\u0027fonts\u0027]);\r\n\r\n      // Set default device options\r\n      this.keyman.setDefaultDeviceOptions(opt);\r\n\r\n      // Only do remainder of initialization once!\r\n      if(this.keyman.initialized) {\r\n        return Promise.resolve();\r\n      }\r\n\r\n      var keyman: KeymanBase = this.keyman;\r\n      var domManager = this;\r\n\r\n      // Do not initialize until the document has been fully loaded\r\n      if(document.readyState !== \u0027complete\u0027)\r\n      {\r\n        return new Promise\u003cvoid\u003e(function(resolve) {\r\n          window.setTimeout(function(){\r\n            domManager.init(arg).then(function() {\r\n              resolve();\r\n            });\r\n          }, 50);\r\n        });\r\n      }\r\n\r\n      keyman.modelManager.init();\r\n      this.keyman._MasterDocument = window.document;\r\n\r\n      /*\r\n       * Initialization of touch devices and browser interfaces must be done\r\n       * after all resources are loaded, during final stage of initialization\r\n       */\r\n\r\n      // Set exposed initialization flag member for UI (and other) code to use\r\n      this.keyman.setInitialized(1);\r\n\r\n      // Finish keymanweb and initialize the OSK once all necessary resources are available\r\n      if(device.touchable) {\r\n        this.keyman.osk = new com.keyman.osk.AnchoredOSKView(device.coreSpec);\r\n      } else {\r\n        this.keyman.osk = new com.keyman.osk.FloatingOSKView(device.coreSpec);\r\n      }\r\n      const osk = this.keyman.osk;\r\n\r\n      // Create and save the remote keyboard loading delay indicator\r\n      util.prepareWait();\r\n\r\n      // Trigger registration of deferred keyboard stubs and keyboards\r\n      this.keyman.keyboardManager.endDeferment();\r\n\r\n      // Initialize the desktop UI\r\n      this.initializeUI();\r\n\r\n      // Exit initialization here if we\u0027re using an embedded code path.\r\n      if(this.keyman.isEmbedded) {\r\n        this.keyman.keyboardManager.setDefaultKeyboard();\r\n        return Promise.resolve();\r\n      }\r\n\r\n      // Determine the default font for mapped elements\r\n      this.keyman.appliedFont=this.keyman.baseFont=this.getBaseFont();\r\n\r\n      // Add orientationchange event handler to manage orientation changes on mobile devices\r\n      // Initialize touch-screen device interface  I3363 (Build 301)\r\n      if(device.touchable) {\r\n        this.keyman.handleRotationEvents();\r\n      }\r\n      // Initialize browser interface\r\n\r\n      if(this.keyman.options[\u0027attachType\u0027] != \u0027manual\u0027) {\r\n        this._SetupDocument(document.documentElement);\r\n      }\r\n\r\n      // Create an ordered list of all input and textarea fields\r\n      this.listInputs();\r\n\r\n      // Initialize the OSK and set default OSK styles\r\n      // Note that this should *never* be called before the OSK has been initialized.\r\n      // However, it possibly may be called before the OSK has been fully defined with the current keyboard, need to check.\r\n      //osk._Load();\r\n\r\n      //document.body.appendChild(osk._Box);\r\n\r\n      //osk._Load(false);\r\n\r\n      // I3363 (Build 301)\r\n      if(device.touchable) {\r\n        const osk = keyman.osk as osk.AnchoredOSKView;\r\n        // Handle OSK touchend events (prevent propagation)\r\n        osk._Box.addEventListener(\u0027touchend\u0027,function(e){\r\n          e.stopPropagation();\r\n        }, false);\r\n\r\n        // Add a blank DIV to the bottom of the page to allow the bottom of the page to be shown\r\n        dTrailer=document.createElement(\u0027DIV\u0027);\r\n        ds=dTrailer.style;\r\n        ds.width=\u0027100%\u0027;\r\n        ds.height=(screen.width/2)+\u0027px\u0027;\r\n        document.body.appendChild(dTrailer);\r\n\r\n        // Sets up page-default touch-based handling for activation-state management.\r\n        // These always trigger for the page, wherever a touch may occur. Does not\r\n        // prevent element-specific or OSK-key-specific handling from triggering.\r\n        const _this = this;\r\n        this.touchStartActivationHandler=function(e) {\r\n          _this.deactivateOnRelease=true;\r\n          _this.touchY=e.touches[0].screenY;\r\n\r\n          // On Chrome, scrolling up or down causes the URL bar to be shown or hidden\r\n          // according to whether or not the document is at the top of the screen.\r\n          // But when doing that, each OSK row top and height gets modified by Chrome\r\n          // looking very ugly.  It would be best to hide the OSK then show it again\r\n          // when the user scroll finishes, but Chrome has no way to reliably report\r\n          // the touch end event after a move. c.f. http://code.google.com/p/chromium/issues/detail?id=152913\r\n          // The best compromise behaviour is simply to hide the OSK whenever any\r\n          // non-input and non-OSK element is touched.\r\n          _this.deactivateOnScroll=false;\r\n          if(device.OS == \u0027Android\u0027 \u0026\u0026 navigator.userAgent.indexOf(\u0027Chrome\u0027) \u003e 0) {\r\n            // _this.deactivateOnScroll has the inverse of the \u0027true\u0027 default,\r\n            // but that fact actually facilitates the following conditional logic.\r\n            if(typeof(osk._Box) == \u0027undefined\u0027) return false;\r\n            if(typeof(osk._Box.style) == \u0027undefined\u0027) return false;\r\n\r\n            // The following tests are needed to prevent the OSK from being hidden during normal input!\r\n            let p=(e.target as HTMLElement).parentElement;\r\n            if(typeof(p) != \u0027undefined\u0027 \u0026\u0026 p != null) {\r\n              if(p.className.indexOf(\u0027keymanweb-input\u0027) \u003e= 0) return false;\r\n              if(p.className.indexOf(\u0027kmw-key-\u0027) \u003e= 0) return false;\r\n              if(typeof(p.parentElement) != \u0027undefined\u0027 \u0026\u0026 p.parentElement != null) {\r\n                p=p.parentElement;\r\n                if(p.className.indexOf(\u0027keymanweb-input\u0027) \u003e= 0) return false;\r\n                if(p.className.indexOf(\u0027kmw-key-\u0027) \u003e= 0) return false;\r\n              }\r\n            }\r\n\r\n            _this.deactivateOnScroll = true;\r\n          }\r\n          return false;\r\n        };\r\n        this.touchMoveActivationHandler = function(e) {\r\n          if(_this.deactivateOnScroll) {  // Android / Chrone case.\r\n            DOMEventHandlers.states.focusing = false;\r\n            _this.activeElement = null;\r\n          }\r\n\r\n          const y = e.touches[0].screenY;\r\n          const y0 = _this.touchY;\r\n          if(y-y0 \u003e 5 || y0-y \u003c 5) {\r\n            _this.deactivateOnRelease = false;\r\n          }\r\n          return false;\r\n        };\r\n        this.touchEndActivationHandler = function() {\r\n          // Should not hide OSK if simply closing the language menu (30/4/15)\r\n          // or if the focusing timer (setFocusTimer) is still active.\r\n          if(_this.deactivateOnRelease \u0026\u0026 !osk[\u0027lgList\u0027] \u0026\u0026 !DOMEventHandlers.states.focusing) {\r\n            _this.activeElement = null;\r\n          }\r\n          _this.deactivateOnRelease=false;\r\n          return false;\r\n        };\r\n\r\n        this.keyman.util.attachDOMEvent(document.body, \u0027touchstart\u0027, this.touchStartActivationHandler,false);\r\n        this.keyman.util.attachDOMEvent(document.body, \u0027touchmove\u0027,  this.touchMoveActivationHandler, false);\r\n        this.keyman.util.attachDOMEvent(document.body, \u0027touchend\u0027,   this.touchEndActivationHandler,  false);\r\n      }\r\n\r\n      //document.body.appendChild(keymanweb._StyleBlock);\r\n\r\n      // Restore and reload the currently selected keyboard, selecting a default keyboard if necessary.\r\n      this.keyman.keyboardManager.restoreCurrentKeyboard();\r\n\r\n      /* Setup of handlers for dynamically-added and (eventually) dynamically-removed elements.\r\n        * Reference: https://developer.mozilla.org/en/docs/Web/API/MutationObserver\r\n        *\r\n        * We place it here so that it loads after most of the other UI loads, reducing the MutationObserver\u0027s overhead.\r\n        * Of course, we only want to dynamically add elements if the user hasn\u0027t enabled the manual attachment option.\r\n        */\r\n\r\n      if(typeof MutationObserver == \u0027function\u0027) {\r\n        var observationTarget = document.querySelector(\u0027body\u0027), observationConfig: MutationObserverInit;\r\n        if(this.keyman.options[\u0027attachType\u0027] != \u0027manual\u0027) { //I1961\r\n          observationConfig = { childList: true, subtree: true};\r\n          this.attachmentObserver = new MutationObserver(this._AutoAttachObserverCore);\r\n          this.attachmentObserver.observe(observationTarget, observationConfig);\r\n        }\r\n\r\n        /*\r\n         * Setup of handlers for dynamic detection of the kmw-disabled class tag that controls enablement.\r\n         */\r\n        observationConfig = { subtree: true, attributes: true, attributeOldValue: true, attributeFilter: [\u0027class\u0027, \u0027readonly\u0027]};\r\n        this.enablementObserver = new MutationObserver(this._EnablementMutationObserverCore);\r\n        this.enablementObserver.observe(observationTarget, observationConfig);\r\n      } else {\r\n        console.warn(\"Your browser is outdated and does not support MutationObservers, a web feature \" +\r\n          \"needed by KeymanWeb to support dynamically-added elements.\");\r\n      }\r\n\r\n      // Set exposed initialization flag to 2 to indicate deferred initialization also complete\r\n\r\n      /* To prevent propagation of focus \u0026 blur events from the input-scroll workaround,\r\n       * we attach top-level capturing listeners to the focus \u0026 blur events.  They prevent propagation\r\n       * but NOT default behavior, allowing the scroll to complete while preventing nearly all\r\n       * possible event \u0027noise\u0027 that could result from the workaround.\r\n       */\r\n      this.keyman.util.attachDOMEvent(document.body, \u0027focus\u0027, DOMManager.suppressFocusCheck, true);\r\n      this.keyman.util.attachDOMEvent(document.body, \u0027blur\u0027, DOMManager.suppressFocusCheck, true);\r\n\r\n      this.keyman.setInitialized(2);\r\n      return Promise.resolve();\r\n    }.bind(this);\r\n\r\n    /**\r\n     * Initialize the desktop user interface as soon as it is ready\r\n     */\r\n    initializeUI() {\r\n      if(this.keyman.ui \u0026\u0026 this.keyman.ui[\u0027initialize\u0027] instanceof Function) {\r\n        this.keyman.ui[\u0027initialize\u0027]();\r\n        // Display the OSK (again) if enabled, in order to set its position correctly after\r\n        // adding the UI to the page\r\n        this.keyman.osk.present();\r\n      } else if(this.keyman.isEmbedded) {\r\n        // UI modules aren\u0027t utilized in embedded mode.  There\u0027s nothing to init, so we simply\r\n        // return instead of waiting for a UI module that will never come.\r\n        return;\r\n      } else {\r\n        window.setTimeout(this.initializeUI.bind(this),1000);\r\n      }\r\n    }\r\n\r\n    static suppressFocusCheck(e: Event) {\r\n      if(DOMEventHandlers.states._IgnoreBlurFocus) {\r\n        // Prevent triggering other blur-handling events (as possible)\r\n        e.stopPropagation();\r\n        e.cancelBubble = true;\r\n      }\r\n      // But DO perform default event behavior (actually blurring \u0026 focusing the affected element)\r\n      return true;\r\n    }\r\n  }\r\n}","// Includes KMW-added property declaration extensions for HTML elements.\r\n/// \u003creference path=\"kmwexthtml.ts\" /\u003e\r\n// Includes the Device definition set.\r\n/// \u003creference path=\"kmwdevice.ts\" /\u003e\r\n// Includes the DOM utils, since our UI modules need access to certain methods here.\r\n/// \u003creference path=\"dom/utils.ts\" /\u003e\r\n\r\nnamespace com.keyman {\r\n  class DOMEventTracking {\r\n    Pelem: EventTarget;\r\n    Peventname: string;\r\n    Phandler: (Object) =\u003e boolean;\r\n    PuseCapture?: boolean\r\n\r\n    constructor(Pelem: EventTarget, Peventname: string, Phandler: (Object) =\u003e boolean, PuseCapture?: boolean) {\r\n      this.Pelem = Pelem;\r\n      this.Peventname = Peventname.toLowerCase();\r\n      this.Phandler = Phandler;\r\n      this.PuseCapture = PuseCapture;\r\n    }\r\n\r\n    equals(other: DOMEventTracking): boolean {\r\n      return this.Pelem == other.Pelem \u0026\u0026 this.Peventname == other.Peventname \u0026\u0026\r\n        this.Phandler == other.Phandler \u0026\u0026 this.PuseCapture == other.PuseCapture;\r\n    }\r\n  };\r\n\r\n  export class Util {\r\n    // Generalized component event registration\r\n    device: Device;\r\n    activeDevice: Device;\r\n    physicalDevice: Device;\r\n\r\n    linkedStylesheets: (HTMLLinkElement|HTMLStyleElement)[] = [];\r\n\r\n    waiting: HTMLDivElement;                  // The element displayed for util.wait and util.alert.\r\n\r\n    // An object mapping event names to individual event lists.  Maps strings to arrays.\r\n    private events: { [name: string]: ((Object) =\u003e boolean)[];} = {};\r\n    private currentEvents: string[] = [];  // The event messaging call stack.\r\n\r\n    private domEvents: DOMEventTracking[] = [];\r\n\r\n    private embeddedFonts: any[] = [];     // Array of currently embedded font descriptor entries.  (Is it just a string?)\r\n\r\n    // Consider refactoring keymanweb.options to within Util.\r\n\r\n    private keyman: KeymanBase; // Closure doesn\u0027t like relying on the global object from within a class def.\r\n\r\n    constructor(keyman: any) {\r\n      this.initDevices();\r\n\r\n      this.keyman = keyman;\r\n    }\r\n\r\n    // Possible alternative:  https://www.npmjs.com/package/language-tags\r\n    // This would necessitate linking in a npm module into compiled KeymanWeb, though.\r\n    [\u0027getLanguageCodes\u0027](lgCode: string): string[] {\r\n      if(lgCode.indexOf(\u0027-\u0027)==-1) {\r\n        return [lgCode];\r\n      } else {\r\n        return lgCode.split(\u0027-\u0027);\r\n      }\r\n    }\r\n\r\n    initDevices(): void {\r\n      this.device = new Device();\r\n      this.physicalDevice = new Device();\r\n      this.activeDevice = this.device;\r\n\r\n      // Initialize the true device values.\r\n      this.device.detect();\r\n\r\n      /* DEBUG: Force touch device   (Build 360)\r\n\r\n      device.touchable = true;\r\n      device.browser = \u0027safari\u0027;\r\n      device.formFactor = \u0027tablet\u0027;\r\n      device.OS = \u0027iOS\u0027;\r\n\r\n      END DEBUG */\r\n\r\n      /* If we\u0027ve made it to this point of initialization and aren\u0027t anything else, KeymanWeb assumes\r\n      * we\u0027re a desktop.  Since we don\u0027t yet support desktops with touch-based input, we disable it here.\r\n      */\r\n      if(this.device.formFactor == \u0027desktop\u0027) {\r\n        this.device.touchable = false;\r\n      }\r\n\r\n      /**\r\n       * Represents hardware-based keystrokes regardless of the \u0027true\u0027 device, facilitating hardware keyboard input\r\n       * whenever touch-based input is available.\r\n       */\r\n      this.physicalDevice = new Device();\r\n      this.physicalDevice.touchable = false;\r\n      this.physicalDevice.browser = this.device.browser;\r\n      this.physicalDevice.formFactor = \u0027desktop\u0027;\r\n      this.physicalDevice.OS = this.device.OS;\r\n    }\r\n\r\n    /**\r\n     * Function     arrayFromNodeList\r\n     * Scope        Public\r\n     * @param       {Object}    nl a node list, as returned from getElementsBy_____ methods.\r\n     * Description  Transforms a node list into an array.   *\r\n     * @return      {Array\u003cElement\u003e}\r\n     */\r\n    arrayFromNodeList(nl: NodeList|HTMLCollectionOf\u003cElement\u003e): HTMLElement[] {\r\n      var res = [];\r\n      for(var i=0; i \u003c nl.length; i++) {\r\n        res.push(nl[i]);\r\n      }\r\n      return res;\r\n    }\r\n\r\n    /**\r\n     * Function    addEventListener\r\n     * Scope       Private\r\n     * @param      {string}     event     name of event prefixed by module, e.g. osk.touchmove\r\n     * @param      {function(Object)}   func      event handler\r\n     * @return     {boolean}\r\n     * Description Add (or replace) an event listener for this component\r\n     */\r\n    addEventListener(event: string, func: (Object) =\u003e boolean): boolean {\r\n      this.removeEventListener(event, func);\r\n      this.events[event].push(func);\r\n      return true;\r\n    }\r\n\r\n    /**\r\n     * Function    removeEventListener\r\n     * Scope       Private\r\n     * @param      {string}     event     name of event prefixed by module, e.g. osk.touchmove\r\n     * @param      {function(Object)}   func      event handler\r\n     * @return     {boolean}\r\n     * Description Remove the specified function from the listeners for this event\r\n     */\r\n    removeEventListener(event: string, func: (Object) =\u003e boolean): boolean {\r\n      if(typeof this.events[event] == \u0027undefined\u0027) {\r\n        this.events[event] = [];\r\n      }\r\n\r\n      for(var i=0; i\u003cthis.events[event].length; i++) {\r\n        if(this.events[event][i] == func) {\r\n          this.events[event].splice(i, 1);\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n\r\n    /**\r\n     * Function    callEvent\r\n     * Scope       Private\r\n     * @param      {string}     event     name of event prefixed by module, e.g. osk.touchmove\r\n     * @param      {Array}      params    parameter array for function\r\n     * @return     {boolean}\r\n     * Description Invoke an event using any function with up to four arguments\r\n     */\r\n    callEvent(event: string, params: Object|Object[]): boolean {\r\n      if(typeof this.events[event] == \u0027undefined\u0027) {\r\n        return true;\r\n      }\r\n\r\n      if(this.currentEvents.indexOf(event) != -1) {\r\n        return false;  // Avoid event messaging recursion!\r\n      }\r\n\r\n      this.currentEvents.push(event);\r\n\r\n      for(var i=0; i\u003cthis.events[event].length; i++) {\r\n        var func=this.events[event][i], result=false;\r\n        try {\r\n          result=func(params);\r\n        } catch(strExcept) {\r\n          console.error(strExcept);\r\n          result=false;\r\n        } //don\u0027t know whether to use true or false here\r\n        if(result === false) {\r\n          this.currentEvents.pop();\r\n          return false;\r\n        }\r\n      }\r\n      this.currentEvents.pop();\r\n      return true;\r\n    }\r\n\r\n    /**\r\n     * Function     attachDOMEvent: Note for most browsers, adds an event to a chain, doesn\u0027t stop existing events\r\n     * Scope        Public\r\n     * @param       {Object}    Pelem       Element (or IFrame-internal Document) to which event is being attached\r\n     * @param       {string}    Peventname  Name of event without \u0027on\u0027 prefix\r\n     * @param       {function(Object)}  Phandler    Event handler for event\r\n     * @param       {boolean=}  PuseCapture True only if event to be handled on way to target element\r\n     * Description  Attaches event handler to element DOM event\r\n     */\r\n    attachDOMEvent(Pelem: EventTarget, Peventname: string, Phandler: (Object) =\u003e boolean, PuseCapture?: boolean): void {\r\n      this.detachDOMEvent(Pelem, Peventname, Phandler, PuseCapture);\r\n      Pelem.addEventListener(Peventname, Phandler, PuseCapture?true:false);\r\n\r\n      // Since we\u0027re attaching to the DOM, these events should be tracked for detachment during shutdown.\r\n      var event = new DOMEventTracking(Pelem, Peventname, Phandler, PuseCapture);\r\n      this.domEvents.push(event);\r\n    }\r\n\r\n    /**\r\n     * Function     detachDOMEvent\r\n     * Scope        Public\r\n     * @param       {Object}    Pelem       Element from which event is being detached\r\n     * @param       {string}    Peventname  Name of event without \u0027on\u0027 prefix\r\n     * @param       {function(Object)}  Phandler    Event handler for event\r\n     * @param       {boolean=}  PuseCapture True if event was being handled on way to target element\r\n     * Description Detaches event handler from element [to prevent memory leaks]\r\n     */\r\n    detachDOMEvent(Pelem: EventTarget, Peventname: string, Phandler: (Object) =\u003e boolean, PuseCapture?: boolean): void {\r\n      Pelem.removeEventListener(Peventname, Phandler, PuseCapture);\r\n\r\n      // Since we\u0027re detaching, we should drop the tracking data from the old event.\r\n      var event = new DOMEventTracking(Pelem, Peventname, Phandler, PuseCapture);\r\n      for(var i = 0; i \u003c this.domEvents.length; i++) {\r\n        if(this.domEvents[i].equals(event)) {\r\n          this.domEvents.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Function     getOption\r\n     * Scope        Public\r\n     * @param       {string}    optionName  Name of option\r\n     * @param       {*=}        dflt        Default value of option\r\n     * @return      {*}\r\n     * Description  Returns value of named option\r\n     */\r\n    getOption(optionName:string, dflt:any): any {\r\n      if(optionName in this.keyman.options) {\r\n        return this.keyman.options[optionName];\r\n      } else if(arguments.length \u003e 1) {\r\n        return dflt;\r\n      } else {\r\n        return \u0027\u0027;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * More reliable way of identifying  element class\r\n     * @param   {Object}  e HTML element\r\n     * @param   {string}  name  class name\r\n     * @return  {boolean}\r\n     */\r\n    hasClass(e: HTMLElement, name: string): boolean {\r\n      var className = \" \" + name + \" \";\r\n      return (\" \" + e.className + \" \").replace(/[\\n\\t\\r\\f]/g, \" \").indexOf(className) \u003e= 0;\r\n    }\r\n\r\n    /**\r\n     * Function     setOption\r\n     * Scope        Public\r\n     * @param       {string}    optionName  Name of option\r\n     * @param       {*=}        value       Value of option\r\n     * Description  Sets value of named option\r\n     */\r\n    setOption(optionName,value) {\r\n      this.keyman.options[optionName] = value;\r\n    }\r\n\r\n    //  Unofficial API used by our desktop UIs.\r\n    getAbsoluteX(Pobj: HTMLElement): number {\r\n      return dom.Utils.getAbsoluteX(Pobj);\r\n    }\r\n\r\n    //  Unofficial API used by our desktop UIs.\r\n    getAbsoluteY(Pobj: HTMLElement): number {\r\n      return dom.Utils.getAbsoluteY(Pobj);\r\n    }\r\n\r\n    /**\r\n     * Function     getAbsolute\r\n     * Scope        Public\r\n     * @param       {Object}    Pobj        HTML element\r\n     * @return      {Object.\u003cstring,number\u003e}\r\n     * Description  Returns absolute position of Pobj element with respect to page\r\n     */\r\n    getAbsolute(Pobj: HTMLElement) {\r\n      var p={\r\n        /* @ export */\r\n        x: this.getAbsoluteX(Pobj),\r\n        /* @ export */\r\n        y: this.getAbsoluteY(Pobj)\r\n      };\r\n      return p;\r\n    }\r\n\r\n    //  Unofficial API used by our desktop UIs.\r\n    _GetAbsolute = this.getAbsolute;\r\n\r\n    /**\r\n     * Select start handler (to replace multiple inline handlers) (Build 360)\r\n     */\r\n    selectStartHandler = function() {\r\n      return false;\r\n    }\r\n\r\n    // Found a bit of magic formatting that allows dynamic return typing for a specified element tag!\r\n    _CreateElement\u003cE extends \"p\"|\"style\"|\"script\"|\"div\"|\"canvas\"|\"span\"\u003e(nodeName:E) {\r\n      const e = document.createElement\u003cE\u003e(nodeName);\r\n\r\n      e.style.MozUserSelect=\"none\";\r\n      e.style.KhtmlUserSelect=\"none\";\r\n      e.style.UserSelect=\"none\";\r\n      e.style.WebkitUserSelect=\"none\";\r\n      return e;\r\n    }\r\n\r\n        /**\r\n     * Function     _CancelMouse\r\n     * Scope        Private\r\n     * @param       {Object}      e     event\r\n     * @return      {boolean}           always false\r\n     * Description  Closes mouse click event\r\n     */\r\n    _CancelMouse=function(e: MouseEvent) {\r\n      if(e \u0026\u0026 e.preventDefault) {\r\n        e.preventDefault();\r\n      }\r\n      if(e) {\r\n        e.cancelBubble=true;\r\n      } // I2409 - Avoid focus loss for visual keyboard events\r\n\r\n      return false;\r\n    }\r\n\r\n    createElement = this._CreateElement;\r\n\r\n    /**\r\n     * Get browser-independent computed style value for element\r\n     *\r\n     * @param       {Element}     e             HTML element\r\n     * @param       {string}      s             CSS style name\r\n     * @return      {*}\r\n     */\r\n    getStyleValue(e:HTMLElement, s:string) {\r\n      // Build 349: error trap added, since on iOS, getPropertyValue may fail\r\n      // and crash in some cases, possibly if passed a text node\r\n      try\r\n      {\r\n        if(e \u0026\u0026 (typeof(window.getComputedStyle) != \u0027undefined\u0027)) {\r\n            return window.getComputedStyle(e,\u0027\u0027).getPropertyValue(s);\r\n        }\r\n      }\r\n      catch(ex){}\r\n\r\n      // Return empty string if unable to get style value\r\n      return \u0027\u0027;\r\n    }\r\n\r\n    /**\r\n     * Get browser-independent computed style integer value for element  (Build 349)\r\n     *\r\n     * @param       {Element}     e             HTML element\r\n     * @param       {string}      s             CSS style name\r\n     * @param       {number=}     d             default value if NaN\r\n     * @return      {number}                    integer value of style\r\n     */\r\n    getStyleInt(e: HTMLElement, s: string, d?: number): number {\r\n      var x=parseInt(this.getStyleValue(e,s),10);\r\n      if(!isNaN(x)) {\r\n        return x;\r\n      }\r\n\r\n      // Return the default value if numeric, else 0\r\n      if(typeof(d) == \u0027number\u0027) {\r\n        return d;\r\n      } else {\r\n        return 0;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Expose the touchable state for UIs - will disable external UIs entirely\r\n     **/\r\n    isTouchDevice(): boolean {\r\n      return this.device.touchable;\r\n    }\r\n\r\n    /**\r\n     * Get orientation of tablet or phone  display\r\n     *\r\n     * @return      {boolean}\r\n     */\r\n    portraitView() { // new for I3363 (Build 301)\r\n      return !this.landscapeView();\r\n    }\r\n\r\n    /**\r\n     * Get orientation of tablet or phone  display\r\n     *\r\n     * @return      {boolean}\r\n     */\r\n    landscapeView(): boolean\t{ // new for I3363 (Build 301)\r\n      var orientation: number;\r\n\r\n      // Assume portrait mode if orientation undefined\r\n      if(typeof window.orientation != \u0027undefined\u0027) { // Used by iOS Safari\r\n        // Else landscape for +/-90, portrait for 0, +/-180\r\n        orientation = window.orientation as number;\r\n      } else if(typeof window.screen.orientation != \u0027undefined\u0027) { // Used by Firefox, Chrome\r\n        orientation = window.screen.orientation.angle;\r\n      }\r\n\r\n      if(orientation !== undefined) {\r\n        return (Math.abs(orientation/90) == 1);\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Get viewport scale factor for this document\r\n     *\r\n     * @return      {number}\r\n     */\r\n    getViewportScale(): number {\r\n      // This can sometimes fail with some browsers if called before document defined,\r\n      // so catch the exception\r\n      try {\r\n        // For emulation of iOS on a desktop device, use a default value\r\n        if(this.device.formFactor == \u0027desktop\u0027) {\r\n          return 1;\r\n        }\r\n\r\n        // Get viewport width\r\n        var viewportWidth = document.documentElement.clientWidth;\r\n\r\n        // Return a default value if screen width is greater than the viewport width (not fullscreen).\r\n        if(screen.width \u003e viewportWidth) {\r\n          return 1;\r\n        }\r\n\r\n        // Get the orientation corrected screen width\r\n        var screenWidth = screen.width;\r\n        if(this.landscapeView()) {\r\n          // Take larger of the two dimensions\r\n          if(screen.width \u003c screen.height) {\r\n            screenWidth = screen.height;\r\n          }\r\n        } else {\r\n          // Take smaller of the two dimensions\r\n          if(screen.width \u003e screen.height) {\r\n            screenWidth = screen.height;\r\n          }\r\n        }\r\n        // Calculate viewport scale\r\n        return Math.round(100*screenWidth / window.innerWidth)/100;\r\n      } catch(ex) {\r\n        return 1;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Return height of URL bar on mobile devices, if visible\r\n     * TODO: This does not seem to be right, so is not currently used\r\n     *\r\n     * @return      {number}\r\n     */\r\n    barHeight(): number {\r\n      var dy=0;\r\n      if(this.device.formFactor == \u0027phone\u0027) {\r\n        dy=screen.height/2-window.innerHeight-(this.landscapeView() ? this.device.dyLandscape: this.device.dyPortrait);\r\n      }\r\n      return dy;\r\n    }\r\n\r\n    /**\r\n     * Function     _EncodeEntities\r\n     * Scope        Private\r\n     * @param       {string}      P_txt         string to be encoded\r\n     * @return      {string}                    encoded (html-safe) string\r\n     * Description Encode angle brackets and ampersand in text string\r\n     */\r\n    _EncodeEntities(P_txt: string): string {\r\n      return P_txt.replace(\u0027\u0026\u0027,\u0027\u0026amp;\u0027).replace(\u0027\u003c\u0027,\u0027\u0026lt;\u0027).replace(\u0027\u003e\u0027,\u0027\u0026gt;\u0027);  // I1452 part 2\r\n    }\r\n\r\n    /**\r\n     * Function     createShim\r\n     * Scope        Public\r\n     * Description  [Deprecated] Create an IFRAME element to go between KMW and drop down (to fix IE6 bug)\r\n     * @deprecated\r\n     */\r\n    createShim(): void {    // I1476 - Handle SELECT overlapping BEGIN\r\n      console.warn(\"The util.createShim function is deprecated, as its old functionality is no longer needed.  \" +\r\n        \"It and references to its previously-produced shims may be safely removed.\");\r\n      return;\r\n    }\r\n\r\n    // I1476 - Handle SELECT overlapping BEGIN\r\n\r\n    /**\r\n     * Function     showShim\r\n     * Scope        Public\r\n     * @param       {Object}      Pvkbd         Visual keyboard DIV element\r\n     * @param       {Object}      Pframe        IFRAME shim element\r\n     * @param       {Object}      Phelp         OSK Help DIV element\r\n     * Description  [Deprecated] Display iFrame under OSK at its currently defined position, to allow OSK to overlap SELECT elements (IE6 fix)\r\n     * @deprecated\r\n     */\r\n    showShim(Pvkbd: HTMLElement, Pframe: HTMLElement, Phelp: HTMLElement) {\r\n      console.warn(\"The util.showShim function is deprecated, as its old functionality is no longer needed.  It may be safely removed.\");\r\n    }\r\n\r\n    /**\r\n     * Function     hideShim\r\n     * Scope        Public\r\n     * @param       {Object}      Pframe        IFRAME shim element\r\n     * Description  [Deprecated] Hide iFrame shim containing OSK\r\n     * @deprecated\r\n     */\r\n    hideShim(Pframe: HTMLElement) {\r\n      console.warn(\"The util.hideShim function is deprecated, as its old functionality is no longer needed.  It may be safely removed.\");\r\n    }\r\n\r\n    /**\r\n     * Function     rgba\r\n     * Scope        Public\r\n     * @param       {Object}      s           element style object\r\n     * @param       {number}      r           red value, 0-255\r\n     * @param       {number}      g           green value, 0-255\r\n     * @param       {number}      b           blue value, 0-255\r\n     * @param       {number}      a           opacity value, 0-1.0\r\n     * @return      {string}                  background colour style string\r\n     * Description  Browser-independent alpha-channel management\r\n     */\r\n    rgba(s: HTMLStyleElement, r:number, g:number, b:number, a:number): string {\r\n      var bgColor=\u0027transparent\u0027;\r\n      try {\r\n        bgColor=\u0027rgba(\u0027+r+\u0027,\u0027+g+\u0027,\u0027+b+\u0027,\u0027+a+\u0027)\u0027;\r\n      } catch(ex) {\r\n        bgColor=\u0027rgb(\u0027+r+\u0027,\u0027+g+\u0027,\u0027+b+\u0027)\u0027;\r\n      }\r\n\r\n      return bgColor;\r\n    }\r\n\r\n    /**\r\n     * Add a stylesheet to a page programmatically, for use by the OSK, the UI or the page creator\r\n     *\r\n     * @param       {string}        s             style string\r\n     * @return      {Object}                      returns the object reference\r\n     **/\r\n    addStyleSheet(s: string): HTMLStyleElement {\r\n      var _ElemStyle: HTMLStyleElement = \u003cHTMLStyleElement\u003edocument.createElement\u003c\u0027style\u0027\u003e(\u0027style\u0027);\r\n\r\n      _ElemStyle.type = \u0027text/css\u0027;\r\n      _ElemStyle.appendChild(document.createTextNode(s));\r\n\r\n      var _ElemHead=document.getElementsByTagName(\u0027HEAD\u0027);\r\n      if(_ElemHead.length \u003e 0) {\r\n        _ElemHead[0].appendChild(_ElemStyle);\r\n      } else {\r\n        document.body.appendChild(_ElemStyle); // Won\u0027t work on Chrome, ah well\r\n      }\r\n\r\n      this.linkedStylesheets.push(_ElemStyle);\r\n\r\n      return _ElemStyle;\r\n    }\r\n\r\n    /**\r\n     * Remove a stylesheet element\r\n     *\r\n     * @param       {Object}        s             style sheet reference\r\n     * @return      {boolean}                     false if element is not a style sheet\r\n     **/\r\n    removeStyleSheet(s: HTMLStyleElement) {\r\n      if(s == null || typeof(s) != \u0027object\u0027) {\r\n        return false;\r\n      }\r\n\r\n      if(s.nodeName != \u0027STYLE\u0027) {\r\n        return false;\r\n      }\r\n\r\n      if(typeof(s.parentNode) == \u0027undefined\u0027 || s.parentNode == null) {\r\n        return false;\r\n      }\r\n\r\n      s.parentNode.removeChild(s);\r\n      return true;\r\n    }\r\n\r\n    /**\r\n     * Add a reference to an external stylesheet file\r\n     *\r\n     * @param   {string}  s   path to stylesheet file\r\n     */\r\n    linkStyleSheet(s: string): void {\r\n      try {\r\n        if(document.querySelector(\"link[href=\"+JSON.stringify(s)+\"]\") != null) {\r\n          // We\u0027ve already linked this stylesheet, don\u0027t do it again\r\n          return;\r\n        }\r\n      } catch(e) {\r\n        // We\u0027ve built an invalid href, somehow?\r\n        return;\r\n      }\r\n\r\n      var headElements=document.getElementsByTagName(\u0027head\u0027);\r\n      if(headElements.length \u003e 0) {\r\n        var linkElement=document.createElement(\u0027link\u0027);\r\n        linkElement.type=\u0027text/css\u0027;\r\n        linkElement.rel=\u0027stylesheet\u0027;\r\n        linkElement.href=s;\r\n        this.linkedStylesheets.push(linkElement);\r\n        headElements[0].appendChild(linkElement);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Add a stylesheet with a font-face CSS descriptor for the embedded font appropriate\r\n     * for the browser being used\r\n     *\r\n     * @param    {Object}  fd  keymanweb font descriptor\r\n     **/\r\n    addFontFaceStyleSheet(fd: any) { // TODO:  Font descriptor object needs definition!\r\n      // Test if a valid font descriptor\r\n      if(typeof(fd) == \u0027undefined\u0027) return;\r\n\r\n      if(typeof(fd[\u0027files\u0027]) == \u0027undefined\u0027) fd[\u0027files\u0027]=fd[\u0027source\u0027];\r\n      if(typeof(fd[\u0027files\u0027]) == \u0027undefined\u0027) return;\r\n\r\n      var i,ttf=\u0027\u0027,woff=\u0027\u0027,eot=\u0027\u0027,svg=\u0027\u0027,fList=[];\r\n\r\n  // TODO: 22 Aug 2014: check that font path passed from cloud is actually used!\r\n\r\n      // Do not add a new font-face style sheet if already added for this font\r\n      for(i=0; i\u003cthis.embeddedFonts.length; i++) {\r\n        if(this.embeddedFonts[i] == fd[\u0027family\u0027]) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      if(typeof(fd[\u0027files\u0027]) == \u0027string\u0027) {\r\n        fList[0]=fd[\u0027files\u0027];\r\n      } else {\r\n        fList=fd[\u0027files\u0027];\r\n      }\r\n\r\n      for(i=0;i\u003cfList.length;i++) {\r\n        if(fList[i].toLowerCase().indexOf(\u0027.otf\u0027) \u003e 0) ttf=fList[i];\r\n        if(fList[i].toLowerCase().indexOf(\u0027.ttf\u0027) \u003e 0) ttf=fList[i];\r\n        if(fList[i].toLowerCase().indexOf(\u0027.woff\u0027) \u003e 0) woff=fList[i];\r\n        if(fList[i].toLowerCase().indexOf(\u0027.eot\u0027) \u003e 0) eot=fList[i];\r\n        if(fList[i].toLowerCase().indexOf(\u0027.svg\u0027) \u003e 0) svg=fList[i];\r\n      }\r\n\r\n      // Font path qualified to support page-relative fonts (build 347)\r\n      if(ttf != \u0027\u0027 \u0026\u0026 (ttf.indexOf(\u0027/\u0027) \u003c 0))  {\r\n        ttf = this.keyman.options[\u0027fonts\u0027]+ttf;\r\n      }\r\n\r\n      if(woff != \u0027\u0027 \u0026\u0026 (woff.indexOf(\u0027/\u0027) \u003c 0)) {\r\n        woff = this.keyman.options[\u0027fonts\u0027]+woff;\r\n      }\r\n\r\n      if(eot != \u0027\u0027 \u0026\u0026 (eot.indexOf(\u0027/\u0027) \u003c 0)) {\r\n        eot = this.keyman.options[\u0027fonts\u0027]+eot;\r\n      }\r\n\r\n      if(svg != \u0027\u0027 \u0026\u0026 (svg.indexOf(\u0027/\u0027) \u003c 0)) {\r\n        svg = this.keyman.options[\u0027fonts\u0027]+svg;\r\n      }\r\n\r\n      // Build the font-face definition according to the browser being used\r\n      var s=\u0027@font-face {\\nfont-family:\u0027\r\n        +fd[\u0027family\u0027]+\u0027;\\nfont-style:normal;\\nfont-weight:normal;\\n\u0027;\r\n\r\n      // Build the font source string according to the browser,\r\n      // but return without adding the style sheet if the required font type is unavailable\r\n\r\n      // Modern browsers: use WOFF, TTF and fallback finally to SVG. Don\u0027t provide EOT\r\n      if(this.device.OS == \u0027iOS\u0027) {\r\n        if(ttf != \u0027\u0027) {\r\n          // Modify the url if required to prevent caching\r\n          ttf = this.unCached(ttf);\r\n          s=s+\u0027src:url(\\\u0027\u0027+ttf+\u0027\\\u0027) format(\\\u0027truetype\\\u0027);\u0027;\r\n        } else {\r\n          return;\r\n        }\r\n      } else {\r\n        var s0 = [];\r\n\r\n        if(this.device.OS == \u0027Android\u0027) {\r\n          // Android 4.2 and 4.3 have bugs in their rendering for some scripts\r\n          // with embedded ttf or woff.  svg mostly works so is a better initial\r\n          // choice on the Android browser.\r\n          if(svg != \u0027\u0027) {\r\n            s0.push(\"url(\u0027\"+svg+\"\u0027) format(\u0027svg\u0027)\");\r\n          }\r\n\r\n          if(woff != \u0027\u0027) {\r\n            s0.push(\"url(\u0027\"+woff+\"\u0027) format(\u0027woff\u0027)\");\r\n          }\r\n\r\n          if(ttf != \u0027\u0027) {\r\n            s0.push(\"url(\u0027\"+ttf+\"\u0027) format(\u0027truetype\u0027)\");\r\n          }\r\n        } else {\r\n          if(woff != \u0027\u0027) {\r\n            s0.push(\"url(\u0027\"+woff+\"\u0027) format(\u0027woff\u0027)\");\r\n          }\r\n\r\n          if(ttf != \u0027\u0027) {\r\n            s0.push(\"url(\u0027\"+ttf+\"\u0027) format(\u0027truetype\u0027)\");\r\n          }\r\n\r\n          if(svg != \u0027\u0027) {\r\n            s0.push(\"url(\u0027\"+svg+\"\u0027) format(\u0027svg\u0027)\");\r\n          }\r\n        }\r\n\r\n        if(s0.length == 0) {\r\n          return;\r\n        }\r\n\r\n        s += \u0027src:\u0027+s0.join(\u0027,\u0027)+\u0027;\u0027;\r\n      }\r\n\r\n      s=s+\u0027\\n}\\n\u0027;\r\n\r\n      this.addStyleSheet(s);\r\n      this.embeddedFonts.push(fd[\u0027family\u0027]);\r\n    }\r\n\r\n    /**\r\n     * Allow forced reload if necessary (stub only here)\r\n     *\r\n     *  @param  {string}  s unmodified URL\r\n     *  @return {string}    modified URL\r\n     */\r\n    unCached(s: string): string {\r\n      // var t=(new Date().getTime());\r\n      // s = s + \u0027?v=\u0027 + t;\r\n      return s;\r\n    }\r\n\r\n    /**\r\n     * Document cookie parsing for use by kernel, OSK, UI etc.\r\n     *\r\n     * @param       {string=}       cn        cookie name (optional)\r\n     * @return      {Object}                  array of names and strings, or array of variables and values\r\n     */\r\n    loadCookie(cn?: string) {\r\n      var v={};\r\n      if(arguments.length \u003e 0) {\r\n        var cx = this.loadCookie();\r\n        for(var t in cx) {\r\n          if(t == cn) {\r\n            var d = decodeURIComponent(cx[t]).split(\u0027;\u0027);\r\n            for(var i=0; i\u003cd.length; i++) {\r\n              var xc = d[i].split(\u0027=\u0027);\r\n              if(xc.length \u003e 1) {\r\n                v[xc[0]] = xc[1];\r\n              } else {\r\n                v[xc[0]] = \u0027\u0027;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if(typeof(document.cookie) != \u0027undefined\u0027 \u0026\u0026 document.cookie != \u0027\u0027) {\r\n          var c = document.cookie.split(/;\\s*/);\r\n          for(var i = 0; i \u003c c.length; i++) {\r\n            var d = c[i].split(\u0027=\u0027);\r\n            if(d.length == 2) {\r\n              v[d[0]] = d[1];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n     * Standard cookie saving for use by kernel, OSK, UI etc.\r\n     *\r\n     * @param       {string}      cn            name of cookie\r\n     * @param       {Object}      cv            object with array of named arguments and values\r\n     */\r\n    saveCookie(cn: string, cv) {\r\n      var s=\u0027\u0027;\r\n      for(var v in cv) {\r\n        s = s + v+\u0027=\u0027+cv[v]+\";\";\r\n      }\r\n\r\n      var d = new Date(new Date().valueOf() + 1000 * 60 * 60 * 24 * 30).toUTCString();\r\n      document.cookie = cn+\u0027=\u0027+encodeURIComponent(s)+\u0027; path=/; expires=\u0027+d;//Fri, 31 Dec 2099 23:59:59 GMT;\u0027;\r\n    }\r\n\r\n    /**\r\n     * Function     toNumber\r\n     * Scope        Public\r\n     * @param       {string}      s            numeric string\r\n     * @param       {number}      dflt         default value\r\n     * @return      {number}\r\n     * Description  Return string converted to integer or default value\r\n     */\r\n    toNumber(s: string, dflt: number): number {\r\n      var x = parseInt(s,10);\r\n      return isNaN(x) ? dflt : x;\r\n    }\r\n\r\n    /**\r\n     * Function     toNumber\r\n     * Scope        Public\r\n     * @param       {string}      s            numeric string\r\n     * @param       {number}      dflt         default value\r\n     * @return      {number}\r\n     * Description  Return string converted to real value or default value\r\n     */\r\n    toFloat(s: string, dflt: number): number {\r\n      var x = parseFloat(s);\r\n      return isNaN(x) ? dflt : x;\r\n    }\r\n\r\n    /**\r\n     * Function     toNzString\r\n     * Scope        Public\r\n     * @param       {*}           item         variable to test\r\n     * @param       {?*=}         dflt         default value\r\n     * @return      {*}\r\n     * Description  Test if a variable is null, false, empty string, or undefined, and return as string\r\n     */\r\n    nzString(item: any, dflt: any): string {\r\n      var dfltValue = \u0027\u0027;\r\n      if(arguments.length \u003e 1) {\r\n        dfltValue = dflt;\r\n      }\r\n\r\n      if(typeof(item) == \u0027undefined\u0027) {\r\n        return dfltValue;\r\n      }\r\n\r\n      if(item == null) {\r\n        return dfltValue;\r\n      }\r\n\r\n      if(item == 0 || item == \u0027\u0027) {\r\n        return dfltValue;\r\n      }\r\n\r\n      return \u0027\u0027+item;\r\n    }\r\n\r\n    /**\r\n     * Return the event target for any browser\r\n     *\r\n     * @param       {Event}      e        event\r\n     * @return      {Object}              HTML element\r\n     */\r\n    eventTarget(e: Event): EventTarget {\r\n      if(!e) {\r\n        return null;\r\n      } else if (e.target) {       // most browsers\r\n        return e.target;\r\n      } else if (e.srcElement) {\r\n        return e.srcElement;\r\n      } else {\r\n        return null;            // shouldn\u0027t happen!\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Return the event type for any browser\r\n     *\r\n     * @param       {Event}      e        event\r\n     * @return      {string}              type of event\r\n     */\r\n    eventType(e: Event): string {\r\n      if(e \u0026\u0026 e.type) {         // most browsers\r\n        return e.type;\r\n      } else {\r\n        return \u0027\u0027;              // shouldn\u0027t happen!\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Customized alert.\r\n     *\r\n     * @param     {string}        s       alert text\r\n     * @param     {function()=}   fn      function to call when alert dismissed\r\n     */\r\n    alert(s: string, fn?: () =\u003e void): void {\r\n      var bg = this.waiting, nn=bg.firstChild.childNodes;\r\n      (nn[0] as HTMLElement).style.display=\u0027block\u0027;\r\n      (nn[1] as HTMLElement).className=\u0027kmw-alert-text\u0027;\r\n      (nn[1] as HTMLElement).innerHTML=s;\r\n      (nn[2] as HTMLElement).style.display=\u0027none\u0027;\r\n      bg.style.display=\u0027block\u0027;\r\n      bg.dismiss = arguments.length \u003e 1 ? fn : null;\r\n    }\r\n\r\n    // Stub definition to be fleshed out depending upon native/embedded mode.\r\n    wait(s: string|boolean): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * Customized internal alert. This is enabled/disabled by the option flag \u0027useAlerts\u0027\r\n     *\r\n     * @param     {string}        s       alert text\r\n     * @param     {function()=}   fn      function to call when alert dismissed\r\n     */\r\n     internalAlert(s: string, fn?: () =\u003e void): void {\r\n       if (this.keyman.options.useAlerts) {\r\n         this.alert(s, fn);\r\n       }\r\n     }\r\n\r\n    /**\r\n     *  Prepare the background and keyboard loading wait message box\r\n     *  Should not be called before options are defined during initialization\r\n     **/\r\n    prepareWait(): void {\r\n      var bg: HTMLDivElement = \u003cHTMLDivElement\u003edocument.createElement(\u0027DIV\u0027),\r\n          lb=document.createElement(\u0027DIV\u0027),\r\n          lt=document.createElement(\u0027DIV\u0027),\r\n          gr=document.createElement(\u0027DIV\u0027),\r\n          bx=document.createElement(\u0027DIV\u0027);\r\n\r\n      bg.className=\u0027kmw-wait-background\u0027;\r\n      lb.className=\u0027kmw-wait-box\u0027;\r\n      bg.dismiss=null;\r\n      lt.className=\u0027kmw-wait-text\u0027;\r\n      gr.className=\u0027kmw-wait-graphic\u0027;\r\n      bx.className=\u0027kmw-alert-close\u0027;\r\n\r\n      // Close alert if anywhere in box is touched, since close box is too small on mobiles\r\n      lb.onmousedown=lb.onclick=function(e) {\r\n        // Ignore if waiting, only handle for alert\r\n        if(bx.style.display == \u0027block\u0027) {\r\n          bg.style.display=\u0027none\u0027;\r\n          if(bg.dismiss) {\r\n            bg.dismiss();\r\n          }\r\n        }\r\n      };\r\n\r\n      lb.addEventListener(\u0027touchstart\u0027, lb.onclick, false);\r\n      bg.onmousedown=bg.onclick=function(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n      }\r\n      bg.addEventListener(\u0027touchstart\u0027, bg.onclick, false);\r\n      lb.appendChild(bx);\r\n      lb.appendChild(lt);\r\n      lb.appendChild(gr);\r\n      bg.appendChild(lb);\r\n      document.body.appendChild(bg);\r\n      this.waiting=bg;\r\n    }\r\n\r\n    shutdown() {\r\n      // Remove all event-handler references rooted in KMW events.\r\n      this.events = {};\r\n\r\n      // Remove all events linking to elements of the original, unaltered page.\r\n      // This should sever any still-existing page ties to this instance of KMW,\r\n      // allowing browser GC to do its thing.\r\n      for(let event of this.domEvents) {\r\n        this.detachDOMEvent(event.Pelem, event.Peventname, event.Phandler, event.PuseCapture);\r\n      }\r\n\r\n      // Remove any KMW-added DOM element clutter.\r\n      this.waiting.parentNode.removeChild(this.waiting);\r\n\r\n      for(let ss of this.linkedStylesheets) {\r\n        if(ss.remove) {\r\n          ss.remove();\r\n        } else if(ss.parentNode) {\r\n          ss.parentNode.removeChild(ss);\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Get path of keymanweb script, for relative references\r\n     *\r\n     * *** This is not currently used, but may possibly be needed if ***\r\n     * *** script identification during loading proves unreliable.   ***\r\n     *\r\n     *  @param    {string}      sName   filename prefix\r\n     *  @return   {string}      path to source, with trailing slash\r\n    **/\r\n    myPath(sName: string): string {\r\n      var i, scripts=document.getElementsByTagName(\u0027script\u0027), ss;\r\n\r\n      for(i=0; i\u003cscripts.length; i++) {\r\n        ss=scripts[i];\r\n        if(ss.src.indexOf(sName) \u003e= 0) {\r\n          return ss.src.substr(0,ss.src.lastIndexOf(\u0027/\u0027)+1);\r\n        }\r\n      }\r\n\r\n      return \u0027\u0027;\r\n    }\r\n\r\n    // Prepend the appropriate protocol if not included in path\r\n    prependProtocol(path: string): string {\r\n      var pattern = new RegExp(\u0027^https?:\u0027);\r\n\r\n      if(pattern.test(path)) {\r\n        return path;\r\n      } else if(path.substr(0,2) == \u0027//\u0027) {\r\n        return this.keyman.protocol+path;\r\n      } else if(path.substr(0,1) == \u0027/\u0027) {\r\n        return this.keyman.protocol+\u0027/\u0027+path;\r\n      } else {\r\n        return this.keyman.protocol+\u0027//\u0027+path;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Return the appropriate test string for a given font\r\n     *\r\n     * TODO: Tidy up and remove arrays once \u0027sample\u0027 included in font metadata\r\n     *\r\n     *  @param  {Object}    fd    font meta-data object\r\n     *  @return {string}          string to compare width\r\n     *\r\n     */\r\n    testString(fd): string {\r\n      var fontName=fd[\u0027family\u0027],\r\n      i,s=\u0027BESbswy\u0027;\r\n\r\n      if(\u0027sample\u0027 in fd \u0026\u0026 typeof(fd[\u0027sample\u0027]) == \u0027string\u0027) {\r\n        return s+fd[\u0027sample\u0027];\r\n      }\r\n\r\n      var f=[\u0027TamilWeb\u0027,\u0027TibetanWeb\u0027,\u0027LatinWeb\u0027,\u0027CherokeeWeb\u0027,\r\n            \u0027EgyptianWeb\u0027,\u0027SinhalaWeb\u0027,\u0027KhmerWeb\u0027,\u0027ArabicWeb\u0027,\r\n            \u0027BurmeseWeb\u0027,\u0027LaoWeb\u0027,\u0027OriyaWeb\u0027,\u0027GeezWeb\u0027],\r\n          t=[\u0027\\u0BBE\\u0BF5\u0027,\u0027\\u0F7F\\u0FD0\u0027,\u0027\\u02B0\\u02A4\u0027,\u0027\\u13D0\\u13C9\u0027,\r\n            \u0027\\uA723\\uF7D3\u0027,\u0027\\u0DD8\\u0DA3\u0027,\u0027\\u17D6\\u178E\u0027,\u0027\\u0639\\u06B3\u0027,\r\n            \u0027\\u1038\\u1024\u0027,\u0027\\u0EC0\\u0EDD\u0027,\u0027\\u0B03\\u0B06\u0027,\u0027\\u1361\\u132C\u0027];\r\n\r\n      for(i=0; i\u003cf.length; i++) {\r\n        if(fontName == f[i]) {\r\n          return s+t[i];\r\n        }\r\n      }\r\n\r\n      return s;\r\n    }\r\n\r\n    /**\r\n     * Test if a font is installed (or available) on the target platform\r\n     *\r\n     * @param       {Object}        fd    font structure\r\n     * @return      {boolean}             true if font available\r\n     */\r\n    checkFont(fd): boolean {\r\n      var fontReady=false, fontName=fd[\u0027family\u0027];\r\n\r\n      // Create an absolute positioned div and two paragraph elements with spans for the test string.\r\n      // The paragraph elements ensure that the spans are measured from the same point, otherwise\r\n      // pixel rounding can result in different widths for the same string and styles.\r\n      // Using a separate invisible DIV is more reliable than other positioning.\r\n      var d=document.createElement(\u0027DIV\u0027), ds=d.style,\r\n          p1=document.createElement(\u0027P\u0027),\r\n          p2=document.createElement(\u0027P\u0027),\r\n          t1=document.createElement(\u0027SPAN\u0027), s1=t1.style,\r\n          t2=document.createElement(\u0027SPAN\u0027), s2=t2.style;\r\n\r\n      ds.position=\u0027absolute\u0027;\r\n      ds.top=\u002710px\u0027;\r\n      ds.left=\u002710px\u0027;\r\n      ds.visibility=\u0027hidden\u0027;\r\n      document.body.appendChild(d);\r\n      d.appendChild(p1);\r\n      d.appendChild(p2);\r\n      p1.appendChild(t1);\r\n      p2.appendChild(t2);\r\n\r\n      // Firefox fails without the !important prefix on the fallback font,\r\n      // apparently applying the same font to both elements.\r\n      // But it also fails to distinguish the two if !important is added to the test font!\r\n      // *** TODO: See if still true after changes Dec 2013 ***\r\n      // Must apply !important tag to font-family, but must apply it to the CSS style, not the JS object member\r\n      // c.f. http://stackoverflow.com/questions/462537/overriding-important-style-using-javascript\r\n      t1.setAttribute(\u0027style\u0027,\u0027font-family:monospace !important\u0027);\r\n      s2.fontFamily=fontName+\u0027,monospace\u0027;\r\n      s1.fontSize=s2.fontSize=\u002724px\u0027;      // Not too large, to avoid wrapping or overflow\r\n\r\n      // Include narrow and wide characters from each unique script\r\n      t1.innerHTML=t2.innerHTML=this.testString(fd);\r\n\r\n      // Compare the actual width of each span. Checking monospace, serif,\r\n      // and sans-serif helps to avoid falsely reporting the font as ready\r\n      // The width must be different for all three tests.\r\n      if(t1.offsetWidth != t2.offsetWidth) {\r\n        t1.setAttribute(\u0027style\u0027,\u0027font-family:sans-serif !important\u0027);\r\n        s2.fontFamily=fontName+\u0027,sans-serif\u0027;\r\n        if(t1.offsetWidth != t2.offsetWidth) {\r\n          t1.setAttribute(\u0027style\u0027,\u0027font-family:serif !important\u0027);\r\n          s2.fontFamily=fontName+\u0027,serif\u0027;\r\n        }\r\n      }\r\n\r\n      fontReady=(t1.offsetWidth != t2.offsetWidth);\r\n\r\n      // Delete test elements\r\n      p1.removeChild(t1);\r\n      p2.removeChild(t2);\r\n      d.removeChild(p1);\r\n      d.removeChild(p2);\r\n      document.body.removeChild(d);\r\n\r\n      return fontReady;\r\n    }\r\n\r\n    /**\r\n     * Check a font descriptor for font availability, returning true if undefined\r\n     *\r\n     *  @param  {Object}  fd  font descriptor member of keyboard stub\r\n     *  @return {boolean}\r\n     **/\r\n    checkFontDescriptor(fd): boolean {\r\n      if(typeof(fd) == \u0027undefined\u0027 || typeof(fd[\u0027family\u0027]) != \u0027string\u0027) {\r\n        return true;\r\n      }\r\n\r\n      return this.checkFont(fd);\r\n    }\r\n  }\r\n}\r\n\r\nimport Util = com.keyman.Util;\r\n","/// \u003creference path=\"../kmwbase.ts\" /\u003e\r\n\r\nnamespace com.keyman.keyboards {\r\n  class CloudRequestEntry {\r\n    id: string;\r\n    language?: string;\r\n    version?: string;\r\n\r\n    constructor(id: string, language?: string) {\r\n      this.id = id;\r\n      this.language = language;\r\n    }\r\n\r\n    toString(): string {\r\n      var kbid=this.id;\r\n      var lgid=\u0027\u0027;\r\n      var kvid=\u0027\u0027;\r\n\r\n      if(this.language) {\r\n        kbid=kbid+\u0027@\u0027+this.language;\r\n        if(this.version) {\r\n          kbid=kbid+\u0027@\u0027+this.version;\r\n        }\r\n      } else {\r\n        if(this.version) {\r\n          kbid=kbid+\u0027@@\u0027+this.version;\r\n        }\r\n      }\r\n\r\n      //TODO: add specifier validation...\r\n\r\n      return kbid;\r\n    }\r\n  }\r\n\r\n  class KeyboardFont {\r\n    \u0027family\u0027: string;\r\n    \u0027files\u0027: string;\r\n    \u0027path\u0027: string;\r\n\r\n    constructor(fontObj: any, fontPath: string) {\r\n      this[\u0027family\u0027] = fontObj[\u0027family\u0027];\r\n      this[\u0027files\u0027] = fontObj[\u0027source\u0027];\r\n      this[\u0027path\u0027] = fontPath;\r\n    }\r\n  }\r\n\r\n  export class KeyboardStub {\r\n    \u0027KI\u0027: string;\r\n    \u0027KLC\u0027: string;\r\n\r\n    \u0027KN\u0027: string;\r\n    \u0027KL\u0027: string;\r\n    \u0027KR\u0027: string;\r\n    \u0027KRC\u0027: string;\r\n\r\n    \u0027KF\u0027: string;\r\n\r\n    \u0027KFont\u0027: KeyboardFont;\r\n    \u0027KOskFont\u0027: KeyboardFont;\r\n\r\n    \u0027displayName\u0027: string; // Display name as shown on spacebar\r\n\r\n    // Used when loading a stub\u0027s keyboard.\r\n    asyncLoader?: any;\r\n\r\n    constructor(id: string, langCode: string) {\r\n      this[\u0027KI\u0027] = \u0027Keyboard_\u0027 + id;\r\n      this[\u0027KLC\u0027] = langCode;\r\n    }\r\n\r\n    /**\r\n     * Utility to convert stubs to KeyboardStub[]\r\n     * @param arg\r\n     * @returns (KeyboardStub|ErrorStub)[]\r\n     */\r\n    public static toStubs(arg: any): (KeyboardStub|ErrorStub)[] {\r\n      let errorMsg: string = \u0027\u0027;\r\n      if (!arg) {\r\n        errorMsg = \"Stub undefined\";\r\n      } else if (!arg.id) {\r\n        errorMsg = \"KeyboardStub has undefined id\";\r\n      } else if (!arg.languages) {\r\n        errorMsg = \"KeyboardStub has undefined languages\"\r\n      }\r\n      if (errorMsg != \u0027\u0027) {\r\n        return [{error: new Error(errorMsg)}];\r\n      }\r\n\r\n      // Extract all the languages\r\n      let languages: any[] = [];\r\n      if (typeof arg.languages === \u0027object\u0027) {\r\n        languages.push(arg.languages);\r\n      } else {\r\n        arg.languages.foreach(language =\u003e {\r\n          languages.push(language);\r\n        });\r\n      }\r\n\r\n      let stubs: KeyboardStub[] = [];\r\n      languages.forEach(language =\u003e {\r\n        let stub: KeyboardStub = new KeyboardStub(arg.id, language.id);\r\n\r\n        if (arg.name) {\r\n          stub[\u0027KN\u0027] = arg.name\r\n        }\r\n        if (arg.filename) {\r\n          stub[\u0027KF\u0027] = arg.filename;\r\n        }\r\n        if (arg.displayName) {\r\n          stub[\u0027displayName\u0027] = arg.displayName;\r\n        }\r\n\r\n        if (language.name) {\r\n          stub[\u0027KL\u0027] = language.name;\r\n        }\r\n        if (language.region) {\r\n          stub[\u0027KR\u0027] = language.region;\r\n        }\r\n\r\n        // Can ignore [\u0027KRC\u0027] RegionCodes used by the Toolbar UI\r\n\r\n        if (language.font) {\r\n          stub[\u0027KFont\u0027] = language.font;\r\n        }\r\n        if (language.oskFont) {\r\n          stub[\u0027KOskFont\u0027] = language.oskFont;\r\n        }\r\n\r\n        stubs.push(stub);\r\n      })\r\n\r\n      return stubs;\r\n    }\r\n  }\r\n\r\n  // Information about a keyboard that fails to get added\r\n  export interface ErrorStub {\r\n    keyboard?: {\r\n      id: string;\r\n      name: string;\r\n    },\r\n    language?: {\r\n      id?: string;\r\n      name?: string;\r\n    }\r\n\r\n    error: Error;\r\n  }\r\n  export class KeyboardTag {\r\n    stores: {[text: string]: text.ComplexKeyboardStore} = {};\r\n  }\r\n\r\n  export interface KeyboardChangeData {\r\n    [\u0027internalName\u0027]: string;\r\n    [\u0027languageCode\u0027]: string;\r\n    [\u0027indirect\u0027]: boolean;\r\n  }\r\n\r\n  // For when the API call straight-up times out.\r\n  const CLOUD_TIMEOUT_ERR = \"The Cloud API request timed out.\";\r\n  // Currently cannot distinguish between \"no matching keyboard\" and other script-load errors.\r\n  const CLOUD_MALFORMED_OBJECT_ERR = \"Could not find a keyboard with that ID.\";\r\n  // Represents unspecified errors that occur when registering the results of a successful API call.\r\n  const CLOUD_STUB_REGISTRATION_ERR = \"The Cloud API failed to find an appropriate keyboard.\";\r\n  // Represents custom, specified KMW errors that occur when registering the results of a successful API call.\r\n  const CLOUD_REGISTRATION_ERR = \"Error occurred while registering keyboards: \";\r\n\r\n  const MISSING_KEYBOARD = function(kbdid: string) {\r\n    return kbdid + \u0027 keyboard not found.\u0027;\r\n  }\r\n\r\n  interface RegistrationPromiseTuple {\r\n    resolve: (stubs: KeyboardStub[]) =\u003e void;\r\n    reject: (err: Error) =\u003e void;\r\n  }\r\n\r\n  export class KeyboardManager {\r\n    // Language regions as defined by cloud server\r\n    static readonly regions = [\u0027World\u0027,\u0027Africa\u0027,\u0027Asia\u0027,\u0027Europe\u0027,\u0027South America\u0027,\u0027North America\u0027,\u0027Oceania\u0027,\u0027Central America\u0027,\u0027Middle East\u0027];\r\n    static readonly regionCodes = [\u0027un\u0027,\u0027af\u0027,\u0027as\u0027,\u0027eu\u0027,\u0027sa\u0027,\u0027na\u0027,\u0027oc\u0027,\u0027ca\u0027,\u0027me\u0027];\r\n\r\n    keymanweb: KeymanBase;\r\n\r\n    activeStub: KeyboardStub = null;\r\n    keyboardStubs: KeyboardStub[] = [];\r\n\r\n    // For deferment of adding keyboards until keymanweb initializes\r\n    deferment: Promise\u003cvoid\u003e = null;\r\n    endDeferment:() =\u003e void;\r\n\r\n    // The following was not actually utilized within KeymanWeb; I think it\u0027s handled via different logic.\r\n    // See setDefaultKeyboard() below.\r\n    dfltStub = null;           // First keyboard stub loaded - default for touch-screen devices, ignored on desktops\r\n\r\n    keyboards: any[] = [];\r\n\r\n    /**\r\n     * Holds the \u0027resolve\u0027 function for Promises built by keymanCloudRequest.\r\n     * These should be cleared when the Promise is fulfilled.\r\n     */\r\n    registrationResolvers: {[timeoutID: number] : RegistrationPromiseTuple} = {};\r\n\r\n    languageListPromise: Promise\u003c(KeyboardStub|ErrorStub)[]\u003e = null;\r\n\r\n    languageList: any[] = null; // List of keyboard languages available for KeymanCloud\r\n\r\n    linkedScripts: HTMLScriptElement[] = [];\r\n\r\n    constructor(kmw: KeymanBase) {\r\n      this.keymanweb = kmw;\r\n\r\n      let _this = this;\r\n      this.deferment = new Promise(function(resolve) {\r\n        _this.endDeferment = resolve;\r\n      });\r\n    }\r\n\r\n    getActiveKeyboardName(): string {\r\n      let core = com.keyman.singleton.core;\r\n      return core.activeKeyboard ? core.activeKeyboard.id : \u0027\u0027;\r\n    }\r\n\r\n    getActiveLanguage(fullName?: boolean): string {\r\n      if(this.activeStub == null) {\r\n        return \u0027\u0027;\r\n      } else if(fullName) {\r\n        return this.activeStub[\u0027KL\u0027];\r\n      } else {\r\n        return this.activeStub[\u0027KLC\u0027];\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Get an associative array of keyboard identification strings\r\n     *   This was defined as an array, so is kept that way, but\r\n     *   Javascript treats it as an object anyway\r\n     *\r\n     * @param       {Object}    Lstub      Keyboard stub object\r\n     * @param       {Object}    Lkbd       Keyboard script object\r\n     * @return      {Object}               Copy of keyboard identification strings\r\n     *\r\n     */\r\n    private _GetKeyboardDetail = function(Lstub: KeyboardStub, Lkbd: any /* KeyboardScriptObject */) { // I2078 - Full keyboard detail\r\n      var Lr={};\r\n      Lr[\u0027Name\u0027] = Lstub[\u0027KN\u0027];\r\n      Lr[\u0027InternalName\u0027] =  Lstub[\u0027KI\u0027];\r\n      Lr[\u0027LanguageName\u0027] = Lstub[\u0027KL\u0027];  // I1300 - Add support for language names\r\n      Lr[\u0027LanguageCode\u0027] = Lstub[\u0027KLC\u0027]; // I1702 - Add support for language codes, region names, region codes, country names and country codes\r\n      Lr[\u0027RegionName\u0027] = Lstub[\u0027KR\u0027];\r\n      Lr[\u0027RegionCode\u0027] = Lstub[\u0027KRC\u0027];\r\n      Lr[\u0027CountryName\u0027] = Lstub[\u0027KC\u0027];\r\n      Lr[\u0027CountryCode\u0027] = Lstub[\u0027KCC\u0027];\r\n      Lr[\u0027KeyboardID\u0027] = Lstub[\u0027KD\u0027];\r\n      Lr[\u0027Font\u0027] = Lstub[\u0027KFont\u0027];\r\n      Lr[\u0027OskFont\u0027] = Lstub[\u0027KOskFont\u0027];\r\n      Lr[\u0027HasLoaded\u0027] = !!Lkbd;\r\n\r\n      Lr[\u0027IsRTL\u0027] = Lkbd ? !!Lkbd[\u0027KRTL\u0027] : null;\r\n      return Lr;\r\n    }\r\n\r\n    /**\r\n     * Get array of available keyboard stubs\r\n     *\r\n     * @return   {Array}     Array of available keyboards\r\n     *\r\n     */\r\n    getDetailedKeyboards() {\r\n      var Lr = [], Ln, Lstub, Lrn;\r\n\r\n      for(Ln=0; Ln \u003c this.keyboardStubs.length; Ln++) { // I1511 - array prototype extended\r\n        Lstub = this.keyboardStubs[Ln];\r\n\r\n        // In Chrome, (including on Android), Array.prototype.find() requires Chrome 45.\r\n        // This is a later version than the default on our oldest-supported Android devices.\r\n        const Lkbd = this.keyboards.find(k =\u003e k[\u0027KI\u0027] == Lstub[\u0027KI\u0027]);\r\n        Lrn = this._GetKeyboardDetail(Lstub, Lkbd);  // I2078 - Full keyboard detail\r\n        Lr=this.keymanweb._push(Lr,Lrn); // TODO:  Resolve without need for the cast.\r\n      }\r\n      return Lr;\r\n    }\r\n\r\n    /**\r\n     * Register a fully specified keyboard (add meta-data for each language) immediately\r\n     *\r\n     * @param  {Object}  arg\r\n     * @returns {boolean}\r\n     **/\r\n    addStub(arg: any): boolean {\r\n      if(typeof(arg[\u0027id\u0027]) != \u0027string\u0027) {\r\n        return false;\r\n      }\r\n\r\n      if(typeof(arg[\u0027language\u0027]) != \"undefined\") {\r\n        console.warn(\"The \u0027language\u0027 property for keyboard stubs has been deprecated.  Please use the \u0027languages\u0027 property instead.\");\r\n        arg[\u0027languages\u0027] = arg[\u0027language\u0027];\r\n      }\r\n\r\n      if(typeof(arg[\u0027languages\u0027]) == \u0027undefined\u0027) {\r\n        return false;\r\n      }\r\n\r\n      // Default the keyboard name to its id, capitalized\r\n      if(typeof(arg[\u0027name\u0027]) != \u0027string\u0027) {\r\n        arg[\u0027name\u0027] = arg[\u0027id\u0027].replace(\u0027_\u0027,\u0027 \u0027);\r\n        arg[\u0027name\u0027] = arg[\u0027name\u0027].substr(0,1).toUpperCase()+arg[\u0027name\u0027].substr(1);\r\n      }\r\n\r\n      var lgArg=arg[\u0027languages\u0027];\r\n      var lgList=[], i, lg;\r\n      if(typeof(lgArg.length) == \u0027undefined\u0027) {\r\n        lgList[0] = lgArg;\r\n      } else {\r\n        lgList = lgArg;\r\n      }\r\n\r\n      var localOptions={\r\n        \u0027keyboardBaseUri\u0027: this.keymanweb.options[\u0027keyboards\u0027],\r\n        \u0027fontBaseUri\u0027: this.keymanweb.options[\u0027fonts\u0027]\r\n      };\r\n\r\n      // Add a stub for each correctly specified language\r\n      for(i=0; i\u003clgList.length; i++) {\r\n        this.mergeStub(arg, lgList[i], localOptions);\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    /**\r\n     *  Create or update a keyboard meta-data \u0027stub\u0027 during keyboard registration\r\n     *\r\n     *  Cross-reference with https://help.keyman.com/developer/engine/web/11.0/reference/core/addKeyboards.\r\n     *\r\n     *  @param  {Object}  kp  (partial) keyboard meta-data object (`spec` object)\r\n     *  @param  {Object}  lp  language object (`spec.languages` object)\r\n     *  @param  {Object}  options   KeymanCloud callback options\r\n     **/\r\n    mergeStub(kp: any, lp: any, options) {\r\n      var sp: KeyboardStub = this.findStub(kp[\u0027id\u0027], lp[\u0027id\u0027]);\r\n      var isNew: boolean = false;\r\n\r\n      if(sp == null) {\r\n        sp= new KeyboardStub(kp[\u0027id\u0027], lp[\u0027id\u0027]);\r\n        this.keyboardStubs.push(sp);\r\n        isNew = true;\r\n      }\r\n\r\n      // Accept region as number (from Cloud server), code, or name\r\n      var region=lp[\u0027region\u0027], rIndex=0;\r\n      if(typeof(region) == \u0027number\u0027) {\r\n        if(region \u003c 1 || region \u003e 9) {\r\n          rIndex = 0;\r\n        } else {\r\n          rIndex = region-1;\r\n        }\r\n      } else if(typeof(region) == \u0027string\u0027) {\r\n        var list = (region.length == 2 ? KeyboardManager.regionCodes : KeyboardManager.regions);\r\n        for(var i=0; i\u003clist.length; i++) {\r\n          if(region.toLowerCase() == list[i].toLowerCase()) {\r\n            rIndex=i;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      var rx: RegExp;\r\n\r\n      sp[\u0027KL\u0027] = (typeof sp[\u0027KL\u0027] === \u0027undefined\u0027) ? lp[\u0027name\u0027] : sp[\u0027KL\u0027];\r\n      sp[\u0027KR\u0027] = (typeof sp[\u0027KR\u0027] === \u0027undefined\u0027) ? KeyboardManager.regions[rIndex] : sp[\u0027KR\u0027];\r\n      sp[\u0027KRC\u0027] = (typeof sp[\u0027KRC\u0027] === \u0027undefined\u0027) ? KeyboardManager.regionCodes[rIndex] : sp[\u0027KRC\u0027];\r\n      sp[\u0027KN\u0027] = (typeof sp[\u0027KN\u0027] === \u0027undefined\u0027) ? kp[\u0027name\u0027] : sp[\u0027KN\u0027];\r\n      sp[\u0027displayName\u0027] = (typeof sp[\u0027displayName\u0027] === \u0027undefined\u0027) ? kp[\u0027displayName\u0027] : sp[\u0027displayName\u0027];\r\n\r\n      if(typeof(sp[\u0027KF\u0027]) == \u0027undefined\u0027) {\r\n        rx=RegExp(\u0027^(([\\\\.]/)|([\\\\.][\\\\.]/)|(/))|(:)\u0027);\r\n        sp[\u0027KF\u0027] = kp[\u0027filename\u0027];\r\n\r\n        if(!rx.test(sp[\u0027KF\u0027])) {\r\n          sp[\u0027KF\u0027] = options[\u0027keyboardBaseUri\u0027]+sp[\u0027KF\u0027];\r\n        }\r\n      }\r\n\r\n      // Font path defined by cloud entry\r\n      var fontPath=options[\u0027fontBaseUri\u0027];\r\n\r\n      // or overridden locally, in page source\r\n      if(this.keymanweb.options[\u0027fonts\u0027] != \u0027\u0027) {\r\n        fontPath=this.keymanweb.options[\u0027fonts\u0027];\r\n        rx=new RegExp(\u0027^https?\\\\:\u0027);\r\n        if(!rx.test(fontPath)) {\r\n          if(fontPath.substr(0,2) == \u0027//\u0027) {\r\n            fontPath = this.keymanweb.protocol + fontPath;\r\n          } else if(fontPath.substr(0,1) == \u0027/\u0027) {\r\n            fontPath = this.keymanweb.rootPath + fontPath.substr(1);\r\n          } else {\r\n            fontPath = this.keymanweb.rootPath + fontPath;\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        this.keymanweb.options.fonts=fontPath;\r\n      }\r\n\r\n      // Add font specifiers where necessary and not overridden by user\r\n      if(typeof(lp[\u0027font\u0027]) != \u0027undefined\u0027) {\r\n        sp[\u0027KFont\u0027] = (typeof sp[\u0027KFont\u0027] === \u0027undefined\u0027) ? new KeyboardFont(lp[\u0027font\u0027], fontPath) : sp[\u0027KFont\u0027];\r\n      }\r\n\r\n      // Fixed OSK font issue Github #7 (9/1/2015)\r\n      if(typeof(lp[\u0027oskFont\u0027]) != \u0027undefined\u0027) {\r\n        sp[\u0027KOskFont\u0027] = (typeof sp[\u0027KOskFont\u0027] === \u0027undefined\u0027) ? new KeyboardFont(lp[\u0027oskFont\u0027], fontPath) : sp[\u0027KOskFont\u0027];\r\n      }\r\n\r\n      // Update the UI\r\n      this.doKeyboardRegistered(sp[\u0027KI\u0027],sp[\u0027KL\u0027],sp[\u0027KN\u0027],sp[\u0027KLC\u0027],sp[\u0027KP\u0027]);\r\n\r\n      // If we have no activeStub because there were no stubs, set the new keyboard as active.\r\n      // Do not trigger on merges.\r\n      if(!this.activeStub \u0026\u0026 isNew \u0026\u0026 this.keyboardStubs.length == 1 \u0026\u0026 this.keymanweb.options[\u0027setActiveOnRegister\u0027]==\u0027true\u0027) {\r\n        // #676: We call _SetActiveKeyboard so we can avoid overwriting\r\n        // cookies that determine our active keyboard at page load time\r\n        this.doBeforeKeyboardChange(sp[\u0027KI\u0027], sp[\u0027KLC\u0027]);\r\n        this._SetActiveKeyboard(sp[\u0027KI\u0027], sp[\u0027KLC\u0027], false);\r\n        this.doKeyboardChange(sp[\u0027KI\u0027], sp[\u0027KLC\u0027]);\r\n      }\r\n    }\r\n\r\n    /**\r\n     *  Find a keyboard stub by id in the registered keyboards list\r\n     *\r\n     *  @param  {string}  kid   internal keyboard id (without \u0027Keyboard_\u0027 prefix)\r\n     *  @param  {string}  lgid  language code\r\n     *\r\n     **/\r\n    findStub(kid: string, lgid: string): KeyboardStub {\r\n      var i;\r\n      for(i=0; i\u003cthis.keyboardStubs.length; i++) {\r\n        if((this.keyboardStubs[i][\u0027KI\u0027] == \u0027Keyboard_\u0027+kid) \u0026\u0026 (this.keyboardStubs[i][\u0027KLC\u0027] == lgid)) {\r\n          return this.keyboardStubs[i];\r\n        }\r\n      }\r\n\r\n      return null;\r\n    }\r\n\r\n    // Called on the embedded path at the end of its initialization.\r\n    setDefaultKeyboard() {\r\n      if(this.keyboardStubs.length \u003e 0) {\r\n        // Select the first stub as our active keyboard.\r\n        this._SetActiveKeyboard(this.keyboardStubs[0][\u0027KI\u0027], this.keyboardStubs[0][\u0027KLC\u0027]);\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Allow to change active keyboard by (internal) keyboard name\r\n     *\r\n     * @param       {string}    PInternalName   Internal name\r\n     * @param       {string}    PLgCode         Language code\r\n     */\r\n    setActiveKeyboard(PInternalName: string, PLgCode: string): Promise\u003cvoid\u003e {\r\n      //TODO: This does not make sense: the callbacks should be in _SetActiveKeyboard, not here,\r\n      //      since this is always called FROM the UI, which should not need notification.\r\n      //      If UI callbacks are needed at all, they should be within _SetActiveKeyboard\r\n\r\n      // Skip on embedded which namespaces packageID::Keyboard_keyboardID\r\n      if(!this.keymanweb.isEmbedded \u0026\u0026 PInternalName \u0026\u0026 PInternalName.indexOf(\"Keyboard_\") != 0) {\r\n        PInternalName = \"Keyboard_\" + PInternalName;\r\n      }\r\n\r\n      this.doBeforeKeyboardChange(PInternalName,PLgCode);\r\n      let p: Promise\u003cvoid\u003e = this._SetActiveKeyboard(PInternalName,PLgCode,true);\r\n      if(this.keymanweb.domManager.lastActiveElement != null) {\r\n        this.keymanweb.domManager.focusLastActiveElement(); // TODO:  Resolve without need for the cast.\r\n      }\r\n      // If we ever allow PLgCode to be set by default, we can auto-detect the language code\r\n      // after the _SetActiveKeyboard call.\r\n      // if(!PLgCode \u0026\u0026 (\u003cKeymanBase\u003ekeymanweb).keyboardManager.activeStub) {\r\n      //   PLgCode = (\u003cKeymanBase\u003ekeymanweb).keyboardManager.activeStub[\u0027KLC\u0027];\r\n      // }\r\n      const _this = this;\r\n      p.then(function() {\r\n        // Only mark the keyboard as having changed once the setActiveKeyboard op\r\n        // is successful.\r\n        _this.doKeyboardChange(PInternalName, PLgCode);\r\n      });\r\n\r\n      p.catch(error =\u003e {\r\n        // Rejection indicates a failure of the keyboard to load.\r\n        //\r\n        // In case p\u0027s rejection is never caught, throwing this error will generate logs that shows up\r\n        // in Sentry or in the console, with useful information for debugging either way.\r\n        throw new Error(\"Unable to load keyboard with internal name \\\"\" + PInternalName + \"\\\", language code \\\"\" + PLgCode + \"\\\": \" + error);\r\n      });\r\n\r\n      return p;\r\n    }\r\n\r\n    /**\r\n     * Change active keyboard to keyboard selected by (internal) name and language code\r\n     *\r\n     *  Test if selected keyboard already loaded, and simply update active stub if so.\r\n     *  Otherwise, insert a script to download and insert the keyboard from the repository\r\n     *  or user-indicated file location.\r\n     *\r\n     * Note that the test-case oriented \u0027recorder\u0027 stubs this method to provide active\r\n     * keyboard stub information.  If changing this function, please ensure the recorder is\r\n     * not affected.\r\n     *\r\n     * @param       {string}    PInternalName\r\n     * @param       {string=}    PLgCode\r\n     * @param       {boolean=}   saveCookie\r\n     */\r\n    _SetActiveKeyboard(PInternalName: string, PLgCode?: string, saveCookie?: boolean): Promise\u003cvoid\u003e {\r\n      var n, Ln;\r\n\r\n      let keyman = com.keyman.singleton;\r\n\r\n      var util = keyman.util;\r\n      var osk = keyman.osk;\r\n\r\n      let activeKeyboard = keyman.core.activeKeyboard;\r\n\r\n      // Set default language code\r\n      if(arguments.length \u003c 2 || (!PLgCode)) {\r\n        PLgCode=\u0027---\u0027;\r\n      }\r\n\r\n      // Check that the saved keyboard is currently registered\r\n      for(n=0; n \u003c this.keyboardStubs.length; n++) {\r\n        if(PInternalName == this.keyboardStubs[n][\u0027KI\u0027]) {\r\n          if(PLgCode == this.keyboardStubs[n][\u0027KLC\u0027] || PLgCode == \u0027---\u0027) break;\r\n        }\r\n      }\r\n\r\n      // Mobile device addition: force selection of the first keyboard if none set\r\n      if(util.device.touchable \u0026\u0026 (PInternalName == \u0027\u0027 || PInternalName == null || n \u003e= this.keyboardStubs.length)) {\r\n        if(this.keyboardStubs.length != 0) {\r\n          PInternalName=this.keyboardStubs[0][\u0027KI\u0027];\r\n          PLgCode=this.keyboardStubs[0][\u0027KLC\u0027];\r\n        }\r\n      }\r\n\r\n      // Save name of keyboard (with language code) as a cookie\r\n      if(arguments.length \u003e 2 \u0026\u0026 saveCookie) {\r\n        this.saveCurrentKeyboard(PInternalName,PLgCode);\r\n      }\r\n\r\n      // Check if requested keyboard and stub are currently active\r\n      if(this.activeStub \u0026\u0026 activeKeyboard \u0026\u0026 activeKeyboard.id == PInternalName\r\n        \u0026\u0026 this.activeStub[\u0027KI\u0027] == PInternalName     //this part of test should not be necessary, but keep anyway\r\n        \u0026\u0026 this.activeStub[\u0027KLC\u0027] == PLgCode \u0026\u0026 !this.keymanweb.mustReloadKeyboard\r\n        ) return Promise.resolve();\r\n\r\n      // Check if current keyboard matches requested keyboard, but not stub\r\n      if(activeKeyboard \u0026\u0026 (activeKeyboard.id == PInternalName)) {\r\n        // If so, simply update the active stub\r\n        for(Ln=0; Ln\u003cthis.keyboardStubs.length; Ln++) {\r\n          if((this.keyboardStubs[Ln][\u0027KI\u0027] == PInternalName)\r\n            \u0026\u0026 (this.keyboardStubs[Ln][\u0027KLC\u0027] == PLgCode)) {\r\n            this.activeStub = this.keyboardStubs[Ln];\r\n\r\n            // Append a stylesheet for this keyboard for keyboard specific styles\r\n            // or if needed to specify an embedded font\r\n            osk.vkbd?.appendStyleSheet();\r\n\r\n            // Re-initializate OSK before returning if required\r\n            if(this.keymanweb.mustReloadKeyboard) {\r\n              activeKeyboard.refreshLayouts();\r\n              if(osk) {\r\n                osk._Load();\r\n              }\r\n            }\r\n            return Promise.resolve();\r\n          }\r\n        }\r\n      }\r\n\r\n      keyman.core.activeKeyboard = null;\r\n      this.activeStub = null;\r\n\r\n      // Hide OSK and do not update keyboard list if using internal keyboard (desktops)\r\n      if(PInternalName == \u0027\u0027) {\r\n        osk.startHide(false);\r\n\r\n        if(!this.keymanweb.isEmbedded) {\r\n          util.wait(false);\r\n        }\r\n\r\n        return Promise.resolve();\r\n      }\r\n\r\n      // Determine if the keyboard was previously loaded but is not active and use the prior load if so.\r\n      for(Ln=0; Ln\u003cthis.keyboards.length; Ln++) { // I1511 - array prototype extended\r\n        if(this.keyboards[Ln][\u0027KI\u0027] == PInternalName) {\r\n          keyman.core.activeKeyboard = new Keyboard(this.keyboards[Ln]);\r\n          // As a rotation may have occurred since the keyboard was swapped out,\r\n          // we should refresh its layouts.\r\n          keyman.core.activeKeyboard.refreshLayouts();\r\n          this.keymanweb.domManager._SetTargDir(this.keymanweb.domManager.lastActiveElement);  // I2077 - LTR/RTL timing\r\n\r\n          // and update the active stub\r\n          for(var Ls=0; Ls\u003cthis.keyboardStubs.length; Ls++) {\r\n            if((this.keyboardStubs[Ls][\u0027KI\u0027] == PInternalName) \u0026\u0026\r\n              (this.keyboardStubs[Ls][\u0027KLC\u0027] == PLgCode || PLgCode == \u0027---\u0027)) {\r\n              this.activeStub = this.keyboardStubs[Ls];\r\n              break;\r\n            }\r\n          }\r\n          break;\r\n        }\r\n      }\r\n\r\n      // If we\u0027ve reached this point, this is the first load request for the requested keyboard.\r\n      if(keyman.core.activeKeyboard == null) {\r\n        for(Ln=0; Ln\u003cthis.keyboardStubs.length; Ln++) { // I1511 - array prototype extended\r\n          if((this.keyboardStubs[Ln][\u0027KI\u0027] == PInternalName)\r\n            \u0026\u0026 ((this.keyboardStubs[Ln][\u0027KLC\u0027] == PLgCode) || (PLgCode == \u0027---\u0027))) {\r\n            // Force OSK display for CJK keyboards (keyboards using a pick list)\r\n            if(this.isCJK(this.keyboardStubs[Ln]) || util.device.touchable) {\r\n              osk.displayIfActive = true;\r\n            }\r\n\r\n            // Create a script to load from the server - when it finishes loading, it will register itself,\r\n            //  detect that it is active, and focus as appropriate. The second test is needed to allow recovery from a failed script load\r\n\r\n            // Ensure we\u0027re not already loading the keyboard.\r\n            if(!this.keyboardStubs[Ln].asyncLoader) {\r\n              // Always (temporarily) hide the OSK when loading a new keyboard, to ensure that a failure to load doesn\u0027t leave the current OSK displayed\r\n              if(osk) {\r\n                osk.startHide(false);\r\n              }\r\n\r\n              var loadingStub = this.keyboardStubs[Ln];\r\n              // Tag the stub so that we don\u0027t double-load the keyboard!\r\n              loadingStub.asyncLoader = {};\r\n\r\n              var kbdName = loadingStub[\u0027KN\u0027];\r\n              var lngName = loadingStub[\u0027KL\u0027];\r\n              kbdName = kbdName.replace(/\\s*keyboard\\s*/i, \u0027\u0027);\r\n\r\n              // Setup our default error-messaging callback if it should be implemented.\r\n              loadingStub.asyncLoader.callback = function(altString, msgType) {\r\n                var msg = altString || \u0027Sorry, the \u0027+kbdName+\u0027 keyboard for \u0027+lngName+\u0027 is not currently available.\u0027;\r\n\r\n                // Thanks, Closure errors.\r\n                if(!this.keymanweb.isEmbedded) {\r\n                  util.wait(false);\r\n                  util.internalAlert(altString || msg, function() {\r\n                      this.keymanweb[\u0027setActiveKeyboard\u0027](\u0027\u0027); // The API call!\r\n                  }.bind(this));\r\n                }\r\n\r\n                switch(msgType) { // in case we extend this later.\r\n                  case \u0027err\u0027:\r\n                    console.error(msg);\r\n                    break;\r\n                  case \u0027warn\u0027:\r\n                  default:\r\n                    console.warn(msg);\r\n                    break;\r\n                }\r\n\r\n                if(Ln \u003e 0) {\r\n                  var Ps = this.keyboardStubs[0];\r\n                  this._SetActiveKeyboard(Ps[\u0027KI\u0027], Ps[\u0027KLC\u0027], true);\r\n                }\r\n              }.bind(this);\r\n\r\n              loadingStub.asyncLoader.timer = window.setTimeout(loadingStub.asyncLoader.callback, 10000);\r\n\r\n              //Display the loading delay bar (Note: only append \u0027keyboard\u0027 if not included in name.)\r\n              if(!this.keymanweb.isEmbedded) {\r\n                util.wait(\u0027Installing keyboard\u003cbr/\u003e\u0027 + kbdName);\r\n              }\r\n\r\n              // Installing the script immediately does not work reliably if two keyboards are\r\n              // loaded in succession if there is any delay in downloading the script.\r\n              // It works much more reliably if deferred (KMEW-101, build 356)\r\n              // The effect of a delay can also be tested, for example, by setting the timeout to 5000\r\n              var manager = this;\r\n              loadingStub.asyncLoader.promise = new Promise\u003cvoid\u003e(function(resolve, reject) {\r\n                window.setTimeout(function(){\r\n                  manager.installKeyboard(resolve, reject, loadingStub);\r\n                },0);\r\n              });\r\n            }\r\n            this.activeStub=this.keyboardStubs[Ln];\r\n            return this.keyboardStubs[Ln].asyncLoader.promise;\r\n          }\r\n        }\r\n        this.keymanweb.domManager._SetTargDir(this.keymanweb.domManager.lastActiveElement);  // I2077 - LTR/RTL timing\r\n      }\r\n\r\n      // Initialize the OSK (provided that the base code has been loaded)\r\n      if(osk) {\r\n        osk._Load();\r\n      }\r\n      return Promise.resolve();\r\n    }\r\n\r\n    /**\r\n     * Install a keyboard script that has been downloaded from a keyboard server\r\n     * Operates as the core of a Promise, hence the \u0027resolve\u0027 and \u0027reject\u0027 parameters.\r\n     *\r\n     *  @param  {Object}  kbdStub   keyboard stub to be loaded.\r\n     *\r\n     **/\r\n    installKeyboard(resolve: () =\u003e void, reject: (message?: string) =\u003e void, kbdStub: KeyboardStub) {\r\n      var util = this.keymanweb.util;\r\n      var osk = this.keymanweb.osk;\r\n\r\n      var Lscript = util._CreateElement(\u0027script\u0027);\r\n      Lscript.charset=\"UTF-8\";        // KMEW-89\r\n      Lscript.type = \u0027text/javascript\u0027;\r\n\r\n      // Preserve any namespaced IDs by use of the script\u0027s id tag attribute!\r\n      if(this.keymanweb.isEmbedded) {\r\n        Lscript.id = kbdStub[\u0027KI\u0027];\r\n      }\r\n\r\n      var kbdFile = kbdStub[\u0027KF\u0027];\r\n      var kbdLang = kbdStub[\u0027KL\u0027];\r\n      var kbdName = kbdStub[\u0027KN\u0027];\r\n\r\n      const scriptSrc = this.keymanweb.getKeyboardPath(kbdFile);\r\n\r\n      var manager = this;\r\n      let core = com.keyman.singleton.core;\r\n\r\n      // Add a handler for cases where the new \u003cscript\u003e block fails to load.\r\n      Lscript.addEventListener(\u0027error\u0027, function() {\r\n        if(kbdStub.asyncLoader.timer !== null) {\r\n          // Clear the timeout timer.\r\n          window.clearTimeout(kbdStub.asyncLoader.timer);\r\n          kbdStub.asyncLoader.timer = null;\r\n        }\r\n\r\n        // We already know the load has failed... why wait?\r\n        const msg = \u0027Cannot find the \u0027 + kbdName + \u0027 keyboard for \u0027 + kbdLang + \u0027 at \u0027 + scriptSrc + \u0027.\u0027;\r\n        kbdStub.asyncLoader.callback(msg, \u0027warn\u0027);\r\n        kbdStub.asyncLoader = null;\r\n\r\n        reject(msg);\r\n      });\r\n\r\n\r\n      // The load event will activate a newly-loaded keyboard if successful and report an error if it is not.\r\n      Lscript.addEventListener(\u0027load\u0027, function() {\r\n        if(kbdStub.asyncLoader.timer !== null) {\r\n          // Clear the timeout timer.\r\n          window.clearTimeout(kbdStub.asyncLoader.timer);\r\n          kbdStub.asyncLoader.timer = null;\r\n        }\r\n\r\n        // To determine if the load was successful, we\u0027ll need to check the keyboard array for our desired keyboard.\r\n        // Test if keyboard already loaded\r\n        var kbd = manager.getKeyboardByID(kbdStub[\u0027KI\u0027]);\r\n        if(kbd) {  // Is cleared upon a successful load.\r\n\r\n          //Activate keyboard, if it\u0027s still the active stub.\r\n          if(kbdStub == manager.activeStub) {\r\n            manager.doBeforeKeyboardChange(kbd[\u0027KI\u0027],kbdStub[\u0027KLC\u0027]);\r\n            core.activeKeyboard=new Keyboard(kbd);\r\n\r\n            if(manager.keymanweb.domManager.lastActiveElement != null) { // TODO:  Resolve without need for the cast.\r\n              manager.keymanweb.uiManager.justActivated = true; // TODO:  Resolve without need for the cast.\r\n              manager.keymanweb.domManager._SetTargDir(manager.keymanweb.domManager.lastActiveElement);\r\n            }\r\n\r\n            manager.saveCurrentKeyboard(kbd[\u0027KI\u0027], kbdStub[\u0027KLC\u0027]);\r\n\r\n            // Prepare and show the OSK for this keyboard\r\n            if(osk) {\r\n              osk._Load();\r\n            }\r\n\r\n            if(manager.keymanweb.domManager.lastActiveElement != null) {\r\n              core.processNewContextEvent(dom.Utils.getOutputTarget(manager.keymanweb.domManager.lastActiveElement));\r\n            }\r\n          }\r\n\r\n          // Remove the wait message, if defined\r\n          if(!manager.keymanweb.isEmbedded) {\r\n            util.wait(false);\r\n          }\r\n\r\n          kbdStub.asyncLoader = null;\r\n          resolve();\r\n          // A handler portion for cases where the new \u003cscript\u003e block loads, but fails to process.\r\n        } else {  // Output error messages even when embedded - they\u0027re useful when debugging the apps and KMEA/KMEI engines.\r\n          const msg = \u0027Error registering the \u0027 + kbdName + \u0027 keyboard for \u0027 + kbdLang + \u0027; keyboard script at \u0027 + scriptSrc + \u0027 may contain an error.\u0027;\r\n          kbdStub.asyncLoader.callback(msg, \u0027error\u0027);\r\n          kbdStub.asyncLoader = null;\r\n          reject(msg);\r\n        }\r\n      }, false);\r\n\r\n      // Some browsers may instantly start loading the file when assigned to an element, so we do this after the rest\r\n      // of our setup.  This method is not relocated here (yet) b/c it varies based upon \u0027native\u0027 vs \u0027embedded\u0027.\r\n      Lscript.src = scriptSrc;\r\n\r\n      try {\r\n        document.body.appendChild(Lscript);\r\n      }\r\n      catch(ex) {\r\n        try {\r\n          document.getElementsByTagName(\u0027head\u0027)[0].appendChild(Lscript);\r\n        } catch(ex2) {\r\n          reject(\u0027Error registering script \u0027 + scriptSrc + \u0027: \u0027 + ex2);\r\n          return;\r\n        }\r\n      }\r\n      this.linkedScripts.push(Lscript);\r\n    }\r\n\r\n    /* TODO: why not use util.loadCookie and saveCookie?? */\r\n\r\n    /**\r\n     * Function     saveCurrentKeyboard\r\n     * Scope        Private\r\n     * @param       {string}    PInternalName       name of keyboard\r\n     * @param       {string}    PLgCode             language code\r\n     * Description Saves current keyboard as a cookie\r\n     */\r\n    private saveCurrentKeyboard(PInternalName: string, PLgCode: string) {\r\n      var s = \"current=\"+PInternalName+\":\"+PLgCode;\r\n      this.keymanweb.util.saveCookie(\u0027KeymanWeb_Keyboard\u0027,{\u0027current\u0027:PInternalName+\u0027:\u0027+PLgCode});\r\n\r\n      // Additionally, make sure we save the (upcoming) per-control keyboard settings.\r\n      // This allows us to ensure the keyboard is set correctly without waiting for focus event\r\n      // triggers - very helpful for automated testing.\r\n      if(!this.keymanweb.isEmbedded) {\r\n        this.keymanweb.touchAliasing._BlurKeyboardSettings(this.keymanweb.domManager.lastActiveElement, PInternalName, PLgCode);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Restore the most recently used keyboard, if still available\r\n     */\r\n    restoreCurrentKeyboard() {\r\n      var stubs = this.keyboardStubs, i, n=stubs.length;\r\n      let core = com.keyman.singleton.core;\r\n\r\n      // Do nothing if no stubs loaded\r\n      if(stubs.length \u003c 1) return;\r\n\r\n      // If no saved keyboard, default to US English, else first loaded stub\r\n      var d=this.getSavedKeyboard();\r\n      var t=d.split(\u0027:\u0027);\r\n\r\n      // Identify the stub with the saved keyboard\r\n      t=d.split(\u0027:\u0027);\r\n      if(t.length \u003c 2) t[1]=\u0027\u0027;\r\n\r\n      // This loop is needed to select the correct stub when several apply to a given keyboard\r\n      // TODO: There should be a better way!\r\n      for(i=0; i\u003cn; i++)\r\n      {\r\n        if(stubs[i][\u0027KI\u0027] == t[0] \u0026\u0026 (stubs[i][\u0027KLC\u0027] == t[1] || t[1] == \u0027\u0027)) break;\r\n      }\r\n\r\n      // Sets the default stub (as specified with the `getSavedKeyboard` call) as active.\r\n      // if((i \u003c n) || (device.touchable \u0026\u0026 (this.activeKeyboard == null)))\r\n      if((i \u003c n) || (core.activeKeyboard == null))\r\n      {\r\n        this._SetActiveKeyboard(t[0],t[1],false);\r\n        this.keymanweb.globalKeyboard = t[0];\r\n        this.keymanweb.globalLanguageCode = t[1];\r\n\r\n        this.doKeyboardChange(t[0],t[1]);        // And update the UI if necessary\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Gets the cookie for the name and language code of the most recently active keyboard\r\n     *\r\n     *  Defaults to US English, but this needs to be user-set in later revision (TODO)\r\n     *\r\n     * @return      {string}          InternalName:LanguageCode\r\n     **/\r\n    getSavedKeyboard(): string {\r\n      var v = this.keymanweb.util.loadCookie(\u0027KeymanWeb_Keyboard\u0027);\r\n\r\n      if(typeof(v[\u0027current\u0027]) != \u0027string\u0027) {\r\n        return \u0027Keyboard_us:eng\u0027;\r\n      }\r\n\r\n      // Check that the requested keyboard is included in the available keyboard stubs\r\n      var n, stubs = this.keyboardStubs,kd;\r\n\r\n      for(n=0; n\u003cstubs.length; n++) {\r\n        kd=stubs[n][\u0027KI\u0027]+\u0027:\u0027+stubs[n][\u0027KLC\u0027];\r\n        if(kd == v[\u0027current\u0027]) return kd;\r\n      }\r\n\r\n      // Default to US English if available (but don\u0027t assume it is first)\r\n      for(n=0; n\u003cstubs.length; n++) {\r\n        kd=stubs[n][\u0027KI\u0027]+\u0027:\u0027+stubs[n][\u0027KLC\u0027];\r\n        if(kd == \u0027Keyboard_us:eng\u0027) return kd;\r\n      }\r\n\r\n      // Otherwise use the first keyboard stub\r\n      if(stubs.length \u003e 0) {\r\n        return stubs[0][\u0027KI\u0027]+\u0027:\u0027+stubs[0][\u0027KLC\u0027];\r\n      }\r\n\r\n      // Or US English if no stubs loaded (should never happen)\r\n      return \u0027Keyboard_us:eng\u0027;\r\n    }\r\n\r\n    /**\r\n     * Function    isCJK\r\n     * Scope       Public\r\n     * @param      {Object=}  k0\r\n     * @return     {boolean}\r\n     * Description Tests if the keyboard stub uses a pick list (Chinese, Japanese, Korean, etc.)\r\n     *             (This function accepts either keyboard structure.)\r\n     */\r\n    isCJK(k: KeyboardStub) { // I3363 (Build 301)\r\n      var lg: string;\r\n      if(typeof(k[\u0027KLC\u0027]) != \u0027undefined\u0027) {\r\n        lg = k[\u0027KLC\u0027];\r\n      } else if(typeof(k[\u0027LanguageCode\u0027]) != \u0027undefined\u0027) {\r\n        lg = k[\u0027LanguageCode\u0027];\r\n      }\r\n\r\n      return ((lg == \u0027cmn\u0027) || (lg == \u0027jpn\u0027) || (lg == \u0027kor\u0027));\r\n    }\r\n\r\n    /**\r\n     * Function     _getKeyboardByID\r\n     * Scope        Private\r\n     * @param       {string}  keyboardID\r\n     * @return      {Object|null}\r\n     * Description  Returns the internal, registered keyboard object - not the stub, but the keyboard itself.\r\n     */\r\n    private getKeyboardByID(keyboardID: string):any {\r\n      var Li;\r\n      for(Li=0; Li\u003cthis.keyboards.length; Li++) {\r\n        if(keyboardID == this.keyboards[Li][\u0027KI\u0027]) {\r\n          return this.keyboards[Li];\r\n        }\r\n      }\r\n\r\n      return null;\r\n    }\r\n\r\n    /* ------------------------------------------------------------\r\n    *  Definitions for adding, removing, and requesting keyboards.\r\n    *  ------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Function       isUniqueRequest\r\n     * Scope          Private\r\n     * @param         {Object}    tEntry\r\n     * Description    Checks to ensure that the stub isn\u0027t already loaded within KMW or subject\r\n     *                to an already-pending request.\r\n     */\r\n    isUniqueRequest(cloudList: {id: string, language?: string}[], tEntry: CloudRequestEntry) {\r\n      var k;\r\n\r\n      if(this.findStub(tEntry.id, tEntry.language) == null) {\r\n        for(k=0; k \u003c cloudList.length; k++) {\r\n          if(cloudList[k].id == tEntry[\u0027id\u0027] \u0026\u0026 cloudList[k].language == tEntry.language) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Returns a Promise of the merged keyboard stubs and error stubs.\r\n     *\r\n     * If the keyboard stub array is empty, will return a rejected Promise,\r\n     * otherwise returns a resolved Promise.\r\n     *\r\n     * @param keyboardStubs  array of keyboard stubs to merge.\r\n     * @param errorStubs     array of error stubs to merge.\r\n     * @returns  resolved or rejected promise with merged array of stubs.\r\n     */\r\n    private mergeAndResolveStubPromises(keyboardStubs: (KeyboardStub|ErrorStub)[], errorStubs: ErrorStub[]) :\r\n        Promise\u003c(KeyboardStub|ErrorStub)[]\u003e {\r\n      if (errorStubs.length == 0) {\r\n        return Promise.resolve(keyboardStubs);\r\n      } if (keyboardStubs.length == 0) {\r\n        return Promise.reject(errorStubs);\r\n      } else {\r\n        // Merge this with errorStubs\r\n        let result: (KeyboardStub|ErrorStub)[] = keyboardStubs;\r\n        return Promise.resolve(result.concat(errorStubs));\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Build 362: addKeyboardArray() link to Cloud. One or more arguments may be used\r\n     *\r\n     * @param x  keyboard name string or keyboard metadata JSON object\r\n     * @returns resolved or rejected promise with merged array of stubs.\r\n     */\r\n    async addKeyboardArray(x: (string|KeyboardStub)[]): Promise\u003c(KeyboardStub|ErrorStub)[]\u003e {\r\n      let errorStubs: ErrorStub[] = [];\r\n\r\n      // Ensure keymanweb is initialized before continuing to add keyboards\r\n      if(!this.keymanweb.initialized) {\r\n        await this.deferment;\r\n      }\r\n\r\n      // Ignore empty array passed as argument\r\n      if(x.length == 0) {\r\n        let stub: ErrorStub = {error: new Error(\"No keyboards to add\")}\r\n        errorStubs.push(stub);\r\n        // Normally reject error, but this can be a warning\r\n        return Promise.resolve(errorStubs);\r\n      }\r\n\r\n      // Create a temporary array of metadata objects from the arguments used\r\n      var i,j,cmd=\u0027\u0027,comma=\u0027\u0027;\r\n      var cloudList: CloudRequestEntry[] = [];\r\n      let keyboardStubs: KeyboardStub[] = [];\r\n      var tEntry: CloudRequestEntry;\r\n\r\n      for(i=0; i\u003cx.length; i++) {\r\n        if(typeof(x[i]) == \u0027string\u0027 \u0026\u0026 (\u003cstring\u003ex[i]).length \u003e 0) {\r\n          var pList=(\u003cstring\u003ex[i]).split(\u0027@\u0027),lList=[\u0027\u0027];\r\n          if(pList[0].toLowerCase() == \u0027english\u0027) {\r\n            pList[0] = \u0027us\u0027;\r\n          }\r\n\r\n          if(pList.length \u003e 1) {\r\n            lList=pList[1].split(\u0027,\u0027);\r\n          }\r\n\r\n          for(j=0; j\u003clList.length; j++) {\r\n            tEntry = new CloudRequestEntry(pList[0]);\r\n\r\n            if(lList[j] != \u0027\u0027) {\r\n              tEntry.language=lList[j];\r\n            }\r\n\r\n            if(pList.length \u003e 2) {\r\n              tEntry.version=pList[2];\r\n            }\r\n\r\n            // If we\u0027ve already registered or requested a stub for this keyboard-language pairing,\r\n            // don\u0027t bother with a cloud request.\r\n            if(this.isUniqueRequest(cloudList, tEntry)) {\r\n              cloudList.push(tEntry);\r\n            }\r\n          }\r\n        }\r\n        if(typeof(x[i]) == \u0027object\u0027 \u0026\u0026 x[i] != null) {\r\n          // Register any local keyboards immediately:\r\n          // - must specify filename, keyboard name, language codes, region codes\r\n          // - no request will be sent to cloud\r\n          if(typeof(x[i][\u0027filename\u0027]) == \u0027string\u0027) {\r\n            if(!this.addStub(x[i])) {\r\n              this.keymanweb.util.internalAlert(\u0027To use a custom keyboard, you must specify file name, keyboard name, language, language code and region code.\u0027);\r\n            }\r\n          } else {\r\n            if(x[i][\u0027language\u0027]) {\r\n              console.warn(\"The \u0027language\u0027 property for keyboard stubs has been deprecated.  Please use the \u0027languages\u0027 property instead.\");\r\n              x[i][\u0027languages\u0027] = x[i][\u0027language\u0027];\r\n            }\r\n\r\n            lList=x[i][\u0027languages\u0027];\r\n            if (!lList) {\r\n              let msg = \u0027To use keyboard \\\u0027\u0027 + x[i][\u0027id\u0027] + \u0027\\\u0027, you must specify languages.\u0027;\r\n              let e: ErrorStub = {\r\n                keyboard: {\r\n                  id : x[i][\u0027id\u0027],\r\n                  name: x[i][\u0027name\u0027]\r\n                },\r\n                error: new Error(msg)\r\n              };\r\n              errorStubs.push(e);\r\n              continue;\r\n            }\r\n\r\n            //Array or single entry?\r\n            if(typeof(lList.length) == \u0027number\u0027) {\r\n              for(j=0; j\u003clList.length; j++) {\r\n                tEntry = new CloudRequestEntry(x[i][\u0027id\u0027], x[i][\u0027languages\u0027][j][\u0027id\u0027]);\r\n                if(this.isUniqueRequest(cloudList, tEntry)) {\r\n                  cloudList.push(tEntry);\r\n                }\r\n              }\r\n            } else { // Single language element\r\n              tEntry = new CloudRequestEntry(x[i][\u0027id\u0027], x[i][\u0027languages\u0027][\u0027id\u0027]);\r\n              if(this.isUniqueRequest(cloudList, tEntry)) {\r\n                cloudList.push(tEntry);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Convert stub from one-to-many KeyboardStub[]\r\n          let convertedStubs = KeyboardStub.toStubs(x[i]);\r\n          convertedStubs.forEach(s =\u003e {\r\n            if (s instanceof KeyboardStub) {\r\n              keyboardStubs.push(s);\r\n            } else {\r\n              errorStubs.push(s);\r\n            }\r\n          })\r\n        }\r\n      }\r\n\r\n      // Return if all keyboards being registered are local and fully specified\r\n      try {\r\n        if(cloudList.length == 0) {\r\n          return this.mergeAndResolveStubPromises(keyboardStubs, errorStubs);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n        return Promise.reject(error);\r\n      }\r\n\r\n      // Update the keyboard metadata list from keyman.com - build the command\r\n      cmd=\u0027\u0026keyboardid=\u0027;\r\n      for(i=0; i\u003ccloudList.length; i++) {\r\n        cmd=cmd+comma+cloudList[i].toString();\r\n        comma=\u0027,\u0027;\r\n      }\r\n\r\n      // Request keyboard metadata from the Keyman Cloud keyboard metadata server\r\n      try {\r\n        let result: (KeyboardStub|ErrorStub)[]|Error = await this.keymanCloudRequest(cmd,false);\r\n        return this.mergeAndResolveStubPromises(result, errorStubs);\r\n      } catch(err) {\r\n        // We don\u0027t have keyboard info for this ErrorStub\r\n        console.error(err);\r\n        let stub: ErrorStub = {error: err};\r\n        errorStubs.push(stub);\r\n        return Promise.reject(errorStubs);\r\n      }\r\n\r\n      // no keyboards added so return empty stub\r\n      return Promise.resolve(errorStubs);\r\n    }\r\n\r\n    /**\r\n     *  Register a keyboard for each associated language\r\n     *\r\n     *  @param  {Object}  kp  Keyboard Object or Object array\r\n     *  @param  {Object}  options   keymanCloud callback options\r\n     *  @param  {number}  nArg  keyboard index in argument array\r\n     *\r\n     **/\r\n    registerLanguagesForKeyboard(kp, options, nArg:number) {\r\n      var i,j,id,nDflt=0,kbId=\u0027\u0027;\r\n\r\n      // Do not attempt to process badly formatted requests\r\n      if(typeof(kp) == \u0027undefined\u0027) {\r\n        return;\r\n      }\r\n\r\n      if(typeof(options[\u0027keyboardid\u0027]) == \u0027string\u0027) {\r\n        kbId = options[\u0027keyboardid\u0027].split(\u0027,\u0027)[nArg];\r\n      }\r\n\r\n      // When keyboards requested by language code, several keyboards may be returned as an array\r\n      if(typeof(kp.length) == \u0027number\u0027) {\r\n        // If language code is suffixed by $, register all keyboards for this language\r\n        if(kp.length == 1 || kbId.substr(-1,1) == \u0027$\u0027 || kbId == \u0027\u0027) {\r\n          for(i=0; i\u003ckp.length; i++) {\r\n            this.registerLanguagesForKeyboard(kp[i],options,nArg);\r\n          }\r\n        }\r\n        // Register the default keyboard for the language code\r\n        // Until a default is defined, the default will be the Windows keyboard,\r\n        // that is, the keyboard named for the language (exception: English:US), or the\r\n        // first keyboard found.\r\n        else {\r\n          for(i=0; i\u003ckp.length; i++) {\r\n            id=kp[i].id.toLowerCase();\r\n            if(id == \u0027us\u0027) {\r\n              id=\u0027english\u0027;\r\n            }\r\n\r\n            for(j=0; j\u003ckp[i][\u0027languages\u0027].length; j++) {\r\n              if(id == kp[i][\u0027languages\u0027][j][\u0027name\u0027].toLowerCase()) {\r\n                nDflt = i;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n\r\n          this.registerLanguagesForKeyboard(kp[nDflt],options,nArg);\r\n        }\r\n      } else { // Otherwise, process a single keyboard for the specified languages\r\n        // May need to filter returned stubs by language\r\n        var lgCode=kbId.split(\u0027@\u0027)[1];\r\n        if(typeof(lgCode) == \u0027string\u0027) {\r\n          lgCode=lgCode.replace(/\\$$/,\u0027\u0027);\r\n        }\r\n\r\n        // Can only add keyboard stubs for defined languages\r\n        var ll=kp[\u0027languages\u0027];\r\n        if(typeof(ll) != \u0027undefined\u0027) {\r\n          if(typeof(ll.length) == \u0027number\u0027) {\r\n            for(i=0; i\u003cll.length; i++) {\r\n              if(typeof(lgCode) == \u0027undefined\u0027 || ll[i][\u0027id\u0027] == lgCode) {\r\n                this.mergeStub(kp,ll[i],options);\r\n              }\r\n            }\r\n          } else {\r\n            this.mergeStub(kp,ll,options);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Call back from cloud for adding keyboard metadata\r\n     *\r\n     * @param {Object}    x   metadata object\r\n     **/\r\n    register(x) {\r\n      const promiseid = x[\u0027timerid\u0027];\r\n\r\n      let result: KeyboardStub[] | Error;\r\n      try {\r\n        result = this._registerCore(x);\r\n      } catch(err) {\r\n        result = new Error(CLOUD_REGISTRATION_ERR + err);\r\n      }\r\n\r\n      if(promiseid) {\r\n        const promiseFuncs = this.registrationResolvers[promiseid];\r\n        window.clearTimeout(promiseid);\r\n\r\n        if(promiseFuncs) {\r\n          try {\r\n            if(result instanceof Error) {\r\n              promiseFuncs.reject(result as Error);\r\n            } else {\r\n              promiseFuncs.resolve(result as KeyboardStub[]);\r\n            }\r\n          } finally {\r\n            delete this.registrationResolvers[promiseid];\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Call back from cloud for adding keyboard metadata\r\n     *\r\n     * @param {Object}    x   metadata object\r\n     **/\r\n    private _registerCore(x): KeyboardStub[] | Error { // TODO (#5044): should return heterogenous type; allow array of stubs.\r\n      var options=x[\u0027options\u0027];\r\n      let currentKeyboardStubsCount = this.keyboardStubs.length;\r\n\r\n      // Indicate if unable to register keyboard\r\n      if(typeof(x[\u0027error\u0027]) == \u0027string\u0027) {\r\n        // Currently unreachable (24 May 2021 - API returns a 404; returned \u0027script\u0027 does not call register)\r\n        var badName=\u0027\u0027;\r\n        if(typeof(x[\u0027keyboardid\u0027]) == \u0027string\u0027) {\r\n          badName = x[\u0027keyboardid\u0027].substr(0,1).toUpperCase()+x[\u0027keyboardid\u0027].substr(1);\r\n        }\r\n\r\n        return new Error(MISSING_KEYBOARD(badName));\r\n      }\r\n\r\n      // Ignore callback unless the context is defined\r\n      if(typeof(options) == \u0027undefined\u0027 || typeof(options[\u0027context\u0027]) == \u0027undefined\u0027) {\r\n        return new Error(CLOUD_MALFORMED_OBJECT_ERR);\r\n      }\r\n\r\n      // Register each keyboard for the specified language codes\r\n      if(options[\u0027context\u0027] == \u0027keyboard\u0027) {\r\n        var i,kp=x[\u0027keyboard\u0027];\r\n        // Process array of keyboard definitions\r\n        if(typeof(kp.length) == \u0027number\u0027) {\r\n          for(i=0; i\u003ckp.length; i++) {\r\n            // Note:  if an invalid language code is specified, the elements here may be\r\n            //        empty arrays.  Will not report an error if so.\r\n            this.registerLanguagesForKeyboard(kp[i],options,i);\r\n          }\r\n        } else { // Process a single keyboard definition\r\n          this.registerLanguagesForKeyboard(kp,options,0);\r\n        }\r\n      } else if(options[\u0027context\u0027] == \u0027language\u0027) { // Download the full list of supported keyboard languages\r\n        this.languageList = x[\u0027languages\u0027];\r\n      }\r\n\r\n      return this.keyboardStubs.slice(currentKeyboardStubsCount);\r\n    }\r\n\r\n    /**\r\n     *  Internal handler for processing keyboard registration, used only by `register`\r\n     *\r\n     *  @param  {string[]}   languages    Array of language names\r\n     *  @returns {Promise\u003c(KeyboardStub|ErrorStub)[]\u003e} Promise of added keyboard stubs\r\n     **/\r\n    addLanguageKeyboards(languages: string[]): Promise\u003c(KeyboardStub|ErrorStub)[]\u003e {\r\n      let errorStubs: ErrorStub[] = [];\r\n\r\n      // Defer registering keyboards by language until the language list has been loaded\r\n      if (this.languageList == null) {\r\n        if (this.languageListPromise == null) {\r\n          this.languageListPromise = this.keymanCloudRequest(\u0027\u0027,true).catch((error) =\u003e {\r\n            // If promise is not error, then... (needs an error guard)\r\n            console.error(error);\r\n            errorStubs.push({error: error});\r\n            return errorStubs;\r\n          });\r\n        }\r\n\r\n        let _this = this;\r\n        return new Promise\u003c(KeyboardStub|ErrorStub)[]\u003e(function(resolve, reject) {\r\n          if (_this.languageListPromise) {\r\n            // 1: wait for the language list to be loaded properly\r\n            return _this.languageListPromise.then(function() {\r\n              // 2: perform the actual query, now that we can find the language code\r\n              resolve(_this.addLanguageKeyboards(languages));\r\n            }).catch(function(error) {\r\n              reject(error);\r\n            });\r\n          } else {\r\n            resolve(_this.addLanguageKeyboards(languages));\r\n          }\r\n        }).then(function(result) {\r\n          if (result instanceof Error) {\r\n            throw result;\r\n          }\r\n          return result;\r\n        });\r\n      }\r\n\r\n      // Identify and register each keyboard by language name\r\n      let cmd = \u0027\u0027;\r\n      for(let i=0; i\u003clanguages.length; i++) {\r\n        let lgName = languages[i].toLowerCase();\r\n        let addAll = (lgName.substr(-1,1) == \u0027$\u0027);\r\n        if(addAll) {\r\n          lgName = lgName.substr(0,lgName.length-1);\r\n        }\r\n\r\n        let languageFound: boolean = false;\r\n        for(let j=0; j\u003cthis.languageList.length; j++) {\r\n          if(lgName == this.languageList[j][\u0027name\u0027].toLowerCase()) {\r\n            if(cmd != \u0027\u0027) {\r\n              cmd = cmd + \u0027,\u0027;\r\n            }\r\n\r\n            cmd = cmd+\u0027@\u0027+this.languageList[j][\u0027id\u0027];\r\n            if(addAll) {\r\n              cmd = cmd + \u0027$\u0027;\r\n            }\r\n\r\n            languageFound = true;\r\n            break;\r\n          }\r\n        }\r\n        if (!languageFound) {\r\n          // Construct response array of errors (failed-query keyboards)\r\n          // that will be merged with stubs (successfully-queried keyboards)\r\n          let stub: ErrorStub = {language: {name: lgName}, error: new Error(this.alertLanguageUnavailable(lgName))};\r\n          errorStubs.push(stub);\r\n        }\r\n      }\r\n\r\n      if(cmd == \u0027\u0027) {\r\n        // No command so return errors\r\n        return Promise.reject(errorStubs);\r\n      }\r\n\r\n      return this.keymanCloudRequest(\u0027\u0026keyboardid=\u0027+cmd, false).then((result) =\u003e {\r\n        return this.mergeAndResolveStubPromises(result, errorStubs);\r\n      }, (err) =\u003e {\r\n        console.error(err);\r\n        let stub: ErrorStub = {error: err};\r\n        errorStubs.push(stub);\r\n        return Promise.reject(errorStubs);\r\n      });\r\n    }\r\n\r\n    /**\r\n     *  Request keyboard metadata from the Keyman Cloud keyboard metadata server\r\n     *\r\n     *  @param  {string}   cmd        command string\r\n     *  @param  {boolean?} byLanguage if true, context=languages, else context=keyboards\r\n     *  @returns {Promise\u003c(KeyboardStub[]\u003e} Promise of added keyboard stubs\r\n     **/\r\n    keymanCloudRequest(cmd: string, byLanguage?: boolean): Promise\u003cKeyboardStub[]\u003e {\r\n      var kbdManager = this;\r\n      var keymanweb = this.keymanweb;\r\n\r\n      // Some basic support toward #5044, but definitely not a full solution toward it.\r\n      // Wraps the cloud API keyboard-stub request in a Promise, allowing response on network\r\n      // and/or parser errors.  Also detects when `register` returns due to an error case that\r\n      // does not throw errors.  (There are a few such \"empty\" `return` statements there.)\r\n      const URL=\u0027https://api.keyman.com/cloud/4.0/\u0027\r\n                + ((arguments.length \u003e 1) \u0026\u0026 byLanguage ? \u0027languages\u0027 : \u0027keyboards\u0027);\r\n\r\n      let promise = new Promise(function(resolve: (result: KeyboardStub[]) =\u003e void, reject: (error: Error) =\u003e void) {\r\n        const Lscript: HTMLScriptElement = keymanweb.util._CreateElement(\u0027script\u0027);\r\n\r\n        const queryConfig = \u0027?jsonp=keyman.register\u0026languageidtype=bcp47\u0026version=\u0027+keymanweb[\u0027version\u0027];\r\n\r\n        // Set callback timer\r\n        const timeoutID = window.setTimeout(function() {\r\n          delete kbdManager.registrationResolvers[timeoutID];\r\n          reject(new Error(CLOUD_TIMEOUT_ERR));\r\n        } ,10000);\r\n\r\n        // Save the resolve / reject functions.\r\n        kbdManager.registrationResolvers[timeoutID] = {\r\n          resolve: resolve,\r\n          reject: reject\r\n        };\r\n\r\n        const tFlag=\u0027\u0026timerid=\u0027+ timeoutID;\r\n\r\n        Lscript.onload = function(event: Event) {\r\n          window.clearTimeout(timeoutID);\r\n        // This case should only happen if a returned, otherwise-valid keyboard\r\n          // script does not ever call `register`.  Also provides default handling\r\n          // should `register` fail to report results/failure correctly.\r\n          if(kbdManager.registrationResolvers[timeoutID]) {\r\n            try {\r\n              reject(new Error(CLOUD_STUB_REGISTRATION_ERR));\r\n            } finally {\r\n              delete kbdManager.registrationResolvers[timeoutID];\r\n            }\r\n          }\r\n        };\r\n\r\n      // Note:  at this time (24 May 2021), this is also happens for \"successful\"\r\n        //        API calls where there is no matching keyboard ID.\r\n      //\r\n        //        The returned \u0027error\u0027 JSON object is sent with an HTML error code (404)\r\n        //        and does not call `keyman.register`.  Even if it did the latter, the\r\n        //        404 code would likely prevent the returned script\u0027s call.\r\n      Lscript.onerror = function(event: string | Event, source?: string,\r\n                                  lineno?: number, colno?: number, error?: Error) {\r\n          window.clearTimeout(timeoutID);\r\n          try {\r\n            let msg = CLOUD_MALFORMED_OBJECT_ERR;\r\n            if(error) {\r\n              msg = msg + \": \" + error.message;\r\n            }\r\n            reject(new Error(msg));\r\n          } finally {\r\n            delete kbdManager.registrationResolvers[timeoutID];\r\n          }\r\n        }\r\n\r\n        Lscript.src = URL + queryConfig + cmd + tFlag;\r\n\r\n        try {\r\n          document.body.appendChild(Lscript);\r\n        } catch(ex) {\r\n          document.getElementsByTagName(\u0027head\u0027)[0].appendChild(Lscript);\r\n        }\r\n      });\r\n      return promise;\r\n    }\r\n\r\n    /**\r\n     * Display warning if language name unavailable to add keyboard\r\n     * @param {string} languageName\r\n     * @returns string of Error message\r\n     */\r\n    private alertLanguageUnavailable(languageName: string): string {\r\n      let msg = \u0027No keyboards are available for \u0027+ languageName + \u0027. \u0027\r\n        +\u0027Does it have another language name?\u0027;\r\n      this.keymanweb.util.internalAlert(msg);\r\n      return msg;\r\n    }\r\n\r\n    /**\r\n     *  Display warning if Keyman Cloud server fails to respond\r\n     *\r\n     *  @param  {string}  cmd command string sent to Cloud\r\n     *\r\n     */\r\n    private serverUnavailable(cmd: string): void {\r\n      this.keymanweb.util.internalAlert(cmd == \u0027\u0027 ? \u0027Unable to connect to Keyman Cloud server!\u0027 : cmd);\r\n      this.keymanweb.warned=true;\r\n    }\r\n\r\n    /**\r\n     * Build 362: removeKeyboards() remove keyboard from list of available keyboards\r\n     *\r\n     * @param {string}  x      keyboard name string\r\n     * @param {boolean} force  When true, also drops the cached keyboard object\r\n     *\r\n     */\r\n    removeKeyboards(x: string, force?: boolean) {\r\n      if(arguments.length == 0) {\r\n        return false;\r\n      }\r\n\r\n      var i, j;\r\n      var success = true, activeRemoved = false, anyRemoved = false;;\r\n\r\n      for(i=0; i\u003carguments.length; i++) {\r\n        for(j=this.keyboardStubs.length-1; j\u003e=0; j--) {\r\n          if(\u0027Keyboard_\u0027+arguments[i] == this.keyboardStubs[j][\u0027KI\u0027]) {\r\n            if(\u0027Keyboard_\u0027+arguments[i] == this.getActiveKeyboardName()) {\r\n              activeRemoved = true;\r\n            }\r\n\r\n            anyRemoved = true;\r\n            this.keyboardStubs.splice(j,1);\r\n            break;\r\n          }\r\n        }\r\n\r\n        if(j \u003c 0) {\r\n          success = false;\r\n        }\r\n      }\r\n\r\n      for(i=0; i\u003carguments.length; i++) {\r\n        for(j=this.keyboards.length-1; j\u003e=0; j--) {\r\n          if(\u0027Keyboard_\u0027+arguments[i] == this.keyboards[j][\u0027KI\u0027]) {\r\n            this.keyboards.splice(j, 1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      if(activeRemoved) {\r\n        if(this.keyboardStubs.length \u003e 0) {\r\n        // Always reset to the first remaining keyboard\r\n          this._SetActiveKeyboard(this.keyboardStubs[0][\u0027KI\u0027],this.keyboardStubs[0][\u0027KLC\u0027],true);\r\n        } else {\r\n          this._SetActiveKeyboard(\u0027\u0027, \u0027\u0027, false);\r\n        }\r\n        // This is likely to be triggered by a UI call of some sort, and we need to treat\r\n        // this call as such to properly maintain the globalKeyboard setting.\r\n        this.keymanweb.uiManager.justActivated = true;\r\n      }\r\n\r\n      if(anyRemoved) {\r\n        // Update the UI keyboard menu\r\n        this.doKeyboardUnregistered();\r\n      }\r\n\r\n      return success;\r\n    }\r\n\r\n    /**\r\n     * Function     _registerKeyboard  KR\r\n     * Scope        Public\r\n     * @param       {Object}      Pk      Keyboard  object\r\n     * Description  Register and load the keyboard\r\n     */\r\n    async _registerKeyboard(Pk) {\r\n      // Ensure keymanweb is initialized before continuing to register keyboards\r\n      if(!this.keymanweb.initialized) {\r\n        await this.deferment;\r\n      }\r\n\r\n      if(Pk[\u0027_kmw\u0027]) {\r\n        console.error(\"The keyboard _kmw property is a reserved field for engine use only; this keyboard is invalid.\");\r\n        return;\r\n      } else {\r\n        Pk[\u0027_kmw\u0027] = new KeyboardTag();\r\n      }\r\n\r\n      var Li,Lstub;\r\n\r\n      // For package namespacing with KMEA/KMEI.\r\n      if(this.keymanweb.isEmbedded) {\r\n        this.keymanweb.preserveID(Pk);\r\n      }\r\n\r\n      // Check if the active stub refers to this keyboard, else find applicable stub\r\n\r\n      var Ps=this.activeStub;\r\n      var savedActiveStub = this.activeStub;\r\n      if(!Ps || !(\u0027KI\u0027 in Ps) || (Ps[\u0027KI\u0027] != Pk[\u0027KI\u0027])) {\r\n        // Find the first stub for this keyboard\r\n        for(Lstub=0; Lstub \u003c this.keyboardStubs.length; Lstub++) { // I1511 - array prototype extended\r\n          Ps=this.keyboardStubs[Lstub];\r\n          if(Pk[\u0027KI\u0027] == Ps[\u0027KI\u0027]) {\r\n            break;\r\n          }\r\n\r\n          Ps=null;\r\n        }\r\n      }\r\n\r\n      // Build 369: ensure active stub defined when loading local keyboards\r\n      if(this.activeStub == null \u0026\u0026 Ps != null) {\r\n        this.activeStub = Ps;\r\n      }\r\n\r\n      // Register the stub for this language (unless it is already registered)\r\n      // keymanweb.KRS(Ps?Ps:Pk);\r\n\r\n      // Test if keyboard already loaded\r\n      for(Li=0; Li\u003cthis.keyboards.length; Li++) {\r\n        if(Pk[\u0027KI\u0027] == this.keyboards[Li][\u0027KI\u0027]) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Append to keyboards array\r\n      this.keyboards=this.keymanweb._push(this.keyboards, Pk); // TODO:  Resolve without need for the cast.\r\n\r\n      // Execute any external (UI) code needed after loading keyboard\r\n      this.doKeyboardLoaded(Pk[\u0027KI\u0027]);\r\n\r\n      // Restore the originally-active stub to its prior state.  No need to change it permanently.\r\n      this.activeStub = savedActiveStub;\r\n    }\r\n\r\n    /**\r\n     * Add the basic keyboard parameters (keyboard stub) to the array of keyboard stubs\r\n     * If no language code is specified in a keyboard it cannot be registered,\r\n     * and a keyboard stub must be registered before the keyboard is loaded\r\n     * for the keyboard to be usable.\r\n     *\r\n     * @param       {Object}      Pstub     Keyboard stub object\r\n     * @return      {Promise\u003c?boolean\u003e}      1 if already registered, else null\r\n     */\r\n    async _registerStub(Pstub): Promise\u003cboolean\u003e {\r\n      Pstub = { ... Pstub}; // shallow clone the stub object\r\n      // Ensure keymanweb is initialized before continuing to register stub\r\n      if(!this.keymanweb.initialized) {\r\n        await this.deferment;\r\n      }\r\n\r\n      // The default stub is always the first keyboard stub loaded [and will be ignored by desktop browsers - not for beta, anyway]\r\n      if(this.dfltStub == null) {\r\n        this.dfltStub=Pstub;\r\n        //if(device.formFactor == \u0027desktop\u0027) return 1;    //Needs further thought before release\r\n      }\r\n\r\n      // If no language code has been defined, and no stub has been registered for this keyboard, register with empty string as the language code\r\n      if(this.keymanweb.isEmbedded) {\r\n        this.keymanweb.namespaceID(Pstub);\r\n      } // else leave undefined.  It\u0027s nice to condition upon.\r\n      if(typeof(Pstub[\u0027KLC\u0027]) == \u0027undefined\u0027) {\r\n        Pstub[\u0027KLC\u0027] = \u0027\u0027;\r\n      }\r\n      if(typeof(Pstub[\u0027KL\u0027]) == \u0027undefined\u0027) {\r\n        Pstub[\u0027KL\u0027] = \u0027undefined\u0027;\r\n      }\r\n\r\n      // Register stub (add to KeyboardStubs array)\r\n      this.keyboardStubs=this.keymanweb._push(this.keyboardStubs, Pstub); // TODO:  Resolve without need for the cast.\r\n\r\n      // TODO: Need to distinguish between initial loading of a large number of stubs and any subsequent loading.\r\n      //   UI initialization should not be needed for each registration, only at end.\r\n      // Reload this keyboard if it was the last active keyboard and\r\n      // make any changes needed by UI for new keyboard stub\r\n      // (Uncommented for Build 360)\r\n      this.doKeyboardRegistered(Pstub[\u0027KI\u0027],Pstub[\u0027KL\u0027],Pstub[\u0027KN\u0027],Pstub[\u0027KLC\u0027],Pstub[\u0027KP\u0027]);\r\n\r\n      // If we have no activeStub because there were no stubs, set the new keyboard as active.\r\n      // Do not trigger on merges.\r\n      if(!this.activeStub \u0026\u0026 this.dfltStub == Pstub \u0026\u0026 this.keyboardStubs.length == 1 \u0026\u0026 this.keymanweb.options[\u0027setActiveOnRegister\u0027]==\u0027true\u0027) {\r\n        this.setActiveKeyboard(Pstub[\u0027KI\u0027], Pstub[\u0027KLC\u0027]);\r\n      }\r\n\r\n      return Promise.resolve(false);\r\n    }\r\n\r\n    /*\r\n    * Last part - the events.\r\n    */\r\n\r\n    /**\r\n     * Execute external (UI) code needed on registering keyboard, used\r\n     * to update each UIs language menu\r\n     *\r\n     * Note that the argument object is not at present used by any UI,\r\n     * since the menu is always fully recreated when needed, but the arguments\r\n     * remain defined to allow for possible use in future (Aug 2014)\r\n     *\r\n     * @param       {string}            _internalName\r\n     * @param       {string}            _language\r\n     * @param       {string}            _keyboardName\r\n     * @param       {string}            _languageCode\r\n     * @param       {string=}           _packageID        Used by KMEA/KMEI to track .kmp related info.\r\n     * @return      {boolean}\r\n     */\r\n    doKeyboardRegistered(_internalName: string, _language: string, _keyboardName: string,\r\n        _languageCode: string, _packageID?: string): boolean {\r\n      var p={\u0027internalName\u0027:_internalName,\u0027language\u0027:_language,\u0027keyboardName\u0027:_keyboardName,\u0027languageCode\u0027:_languageCode};\r\n\r\n      // Utilized only by our embedded codepaths.\r\n      if(_packageID) {\r\n        p[\u0027package\u0027] = _packageID;\r\n      }\r\n      return this.keymanweb.util.callEvent(\u0027kmw.keyboardregistered\u0027,p);\r\n    }\r\n\r\n    /**\r\n     * Execute external (UI) code to rebuild menu when deregistering keyboard\r\n     *\r\n     * @return      {boolean}\r\n     */\r\n\r\n    doKeyboardUnregistered(): boolean {\r\n      var p={};\r\n      return this.keymanweb.util.callEvent(\u0027kmw.keyboardregistered\u0027,p);\r\n    }\r\n\r\n    /**\r\n     * Execute external (UI) code needed on loading keyboard\r\n     *\r\n     * @param       {string}            _internalName\r\n     * @return      {boolean}\r\n     */\r\n    doKeyboardLoaded(_internalName: string): boolean {\r\n      var p={};\r\n      p[\u0027keyboardName\u0027]=_internalName;\r\n      return this.keymanweb.util.callEvent(\u0027kmw.keyboardloaded\u0027, p);\r\n    }\r\n\r\n    /**\r\n     * Function     doBeforeKeyboardChange\r\n     * Scope        Private\r\n     * @param       {string}            _internalName\r\n     * @param       {string}            _languageCode\r\n     * @return      {boolean}\r\n     * Description  Execute external (UI) code needed before changing keyboard\r\n     */\r\n    doBeforeKeyboardChange(_internalName: string, _languageCode: string): boolean {\r\n      var p={};\r\n      p[\u0027internalName\u0027]=_internalName;\r\n      p[\u0027languageCode\u0027]=_languageCode;\r\n      return this.keymanweb.util.callEvent(\u0027kmw.beforekeyboardchange\u0027,p);\r\n    }\r\n\r\n    /**\r\n     * Execute external (UI) code needed *after* changing keyboard\r\n     *\r\n     * @param       {string}            _internalName\r\n     * @param       {string}            _languageCode\r\n     * @param       {boolean=}           _indirect\r\n     * @return      {boolean}\r\n     */\r\n    doKeyboardChange(_internalName: string, _languageCode: string, _indirect?:boolean): boolean {\r\n      var p: KeyboardChangeData = {\r\n        \u0027internalName\u0027: _internalName,\r\n        \u0027languageCode\u0027: _languageCode,\r\n        \u0027indirect\u0027: (arguments.length \u003e 2 ? _indirect : false)\r\n      }\r\n\r\n      return this.keymanweb.util.callEvent(\u0027kmw.keyboardchange\u0027, p);\r\n    }\r\n\r\n    shutdown() {\r\n      for(let script of this.linkedScripts) {\r\n        if(script.remove) {\r\n          script.remove();\r\n        } else if(script.parentNode) {\r\n          script.parentNode.removeChild(script);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","namespace com.keyman {\r\n\r\n  class Hotkey {\r\n    code: number;\r\n    shift: number;\r\n    handler: () =\u003e void\r\n\r\n    constructor(code: number, shift: number, handler: () =\u003e void) {\r\n      this.code = code;\r\n      this.shift = shift;\r\n      this.handler = handler;\r\n    }\r\n\r\n    matches(keyCode: number, shiftState: number): boolean {\r\n      return (this.code == keyCode \u0026\u0026 this.shift == shiftState);\r\n    }\r\n  }\r\n\r\n  export class HotkeyManager {\r\n    keyman: KeymanBase;\r\n    hotkeys: Hotkey[] = [];\r\n\r\n    constructor(keyman: KeymanBase) {\r\n      this.keyman = keyman;\r\n    }\r\n\r\n    /**\r\n     * Function     addHotkey\r\n     * Scope        Public\r\n     * @param       {number}            keyCode\r\n     * @param       {number}            shiftState\r\n     * @param       {function(Object)}  handler\r\n     * Description  Add hot key handler to array of document-level hotkeys triggered by key up event\r\n     */\r\n    addHotKey(keyCode: number, shiftState: number, handler: () =\u003e void) {\r\n      // Test if existing handler for this code and replace it if so\r\n      for(var i=0; i\u003cthis.hotkeys.length; i++) {\r\n        if(this.hotkeys[i].code == keyCode \u0026\u0026 this.hotkeys[i].shift == shiftState) {\r\n          this.hotkeys[i].handler = handler;\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Otherwise add it to the array\r\n      this.hotkeys.push(new Hotkey(keyCode, shiftState, handler));\r\n    }              \r\n\r\n    /**\r\n     * Function     removeHotkey\r\n     * Scope        Public\r\n     * @param       {number}        keyCode\r\n     * @param       {number}        shiftState\r\n     * Description  Remove a hot key handler from array of document-level hotkeys triggered by key up event\r\n     */\r\n    /*keymanweb[\u0027removeHotKey\u0027] = */removeHotkey(keyCode: number, shiftState: number) {\r\n      for(var i=0; i\u003cthis.hotkeys.length; i++) {\r\n        if(this.hotkeys[i].matches(keyCode, shiftState)) {\r\n          this.hotkeys.splice(i,1);\r\n          return;\r\n        }\r\n      }\r\n    }\r\n                  \r\n    /**\r\n     * Function     _Process\r\n     * Scope        Private\r\n     * @param       {Event}       e       event\r\n     * Description  Passes control to handlers according to the hotkey pressed\r\n     */\r\n    _Process: (e: KeyboardEvent) =\u003e boolean = function(this: HotkeyManager, e: KeyboardEvent) {\r\n      if(!e) {\r\n        e = window.event as KeyboardEvent;\r\n      }\r\n\r\n      var _Lcode = dom.PreProcessor._GetEventKeyCode(e);\r\n      if(_Lcode == null) {\r\n        return false;\r\n      }\r\n      \r\n      // Removed testing of e.shiftKey==null  I3363 (Build 301)\r\n      var _Lmodifiers = \r\n        (e.shiftKey ? 0x10 : 0) |\r\n        (e.ctrlKey ? 0x20 : 0) | \r\n        (e.altKey ? 0x40 : 0);\r\n\r\n      for(var i=0; i\u003cthis.hotkeys.length; i++) {  \r\n        if(this.hotkeys[i].matches(_Lcode, _Lmodifiers)) { \r\n          this.hotkeys[i].handler(); \r\n          e.returnValue = false; \r\n          if(e \u0026\u0026 e.preventDefault) {\r\n            e.preventDefault(); \r\n          }\r\n          e.cancelBubble = true; \r\n          return false; \r\n        }\r\n      }\r\n      return true;\r\n    }.bind(this);  \r\n  }\r\n}","namespace com.keyman {\r\n\r\n  export class UIState {\r\n    [\u0027activated\u0027]: boolean;\r\n    [\u0027activationPending\u0027]: boolean;\r\n\r\n    constructor(pending: boolean, activated: boolean) {\r\n      this[\u0027activationPending\u0027] = pending;\r\n      this[\u0027activated\u0027] = activated;\r\n    }\r\n  }\r\n\r\n  export class UIManager {\r\n    keyman: KeymanBase;\r\n\r\n    isActivating: boolean = false;    // ActivatingKeymanWebUI - is the KeymanWeb DIV in process of being clicked on?\r\n    justActivated: boolean = false;   // JustActivatedKeymanWebUI - focussing back to control after KeymanWeb UI interaction\r\n\r\n    constructor(keyman: KeymanBase) {\r\n      this.keyman = keyman;\r\n    }\r\n\r\n    /**\r\n     * Function     getUIState\r\n     * Scope        Public   \r\n     * @return      {Object.\u003cstring,boolean\u003e}\r\n     * Description  Return object with activation state of UI:\r\n     *                activationPending (bool):   KMW being activated\r\n     *                activated         (bool):   KMW active    \r\n     */    \r\n    getUIState(): UIState {\r\n      return new UIState(this.isActivating, this.justActivated);\r\n    }\r\n\r\n    /**\r\n     * Set or clear the IsActivatingKeymanWebUI flag (exposed function)\r\n     * \r\n     * @param       {(boolean|number)}  state  Activate (true,false)\r\n     */\r\n    setActivatingUI(state: boolean|number) {\r\n      this.isActivating = state ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Function     doLoad\r\n     * Scope        Private\r\n     * @return      {boolean}   \r\n     * Description  Execute UI initialization code after loading the UI\r\n     *              // Appears to be unused; could be eliminated?  Though, doUnload IS used.\r\n     */       \r\n    doLoad() {\r\n      var p={};\r\n      return this.keyman.util.callEvent(\u0027kmw.loaduserinterface\u0027,p);\r\n    }\r\n\r\n    /**\r\n     * Function     doUnload\r\n     * Scope        Private\r\n     * @return      {boolean}   \r\n     * Description  Execute UI cleanup code before unloading the UI (may not be required?)\r\n     */       \r\n    doUnload = function() {\r\n      var p={};\r\n      return this.keyman.util.callEvent(\u0027kmw.unloaduserinterface\u0027,p);\r\n    }\r\n  }\r\n}","namespace com.keyman.osk {\r\n  // Manages the language selection UI for touch-form factors, which is triggered by an OSK key.\r\n  // Used by \u0027native\u0027-mode KMW only - the Android and iOS embedding apps implement their own menus.\r\n  export class LanguageMenu {\r\n    keyman: KeymanBase;\r\n\r\n    private lgList: HTMLDivElement;\r\n    private shim: HTMLDivElement;\r\n\r\n    private scrolling: boolean;\r\n    private activeLgNo: number;\r\n    private y0: number;\r\n\r\n    constructor(keyman: KeymanBase) {\r\n      this.keyman = keyman;\r\n      this.scrolling = false;\r\n\r\n      this.shim = this.constructShim();\r\n    }\r\n\r\n    constructShim(): HTMLDivElement {\r\n      let languageMenu = this;\r\n      let shim = this.keyman.util._CreateElement(\u0027div\u0027);\r\n      let osk = this.keyman.osk;\r\n\r\n      shim.id=\u0027kmw-language-menu-background\u0027;\r\n      shim.addEventListener(\u0027touchstart\u0027, function(e) {\r\n        e.preventDefault();\r\n        languageMenu.hide();\r\n\r\n        // Display build only if touching menu, space *and* one other point on screen (build 369)\r\n        if(e.touches.length \u003e 2) {\r\n          var sX=e.touches[1].pageX,sY=e.touches[1].pageY;\r\n          let spaceBar = osk.vkbd.spaceBar;\r\n          if(sX \u003e spaceBar.offsetLeft \u0026\u0026 sX \u003c spaceBar.offsetLeft+spaceBar.offsetWidth \u0026\u0026\r\n            sY \u003e spaceBar.offsetTop \u0026\u0026 sY \u003c spaceBar.offsetTop+spaceBar.offsetHeight) {\r\n              osk.showBuild();\r\n            }\r\n        }\r\n      },false);\r\n\r\n      return shim;\r\n    }\r\n\r\n    /**\r\n     * Display list of installed keyboards in pop-up menu\r\n     **/\r\n    show() {\r\n      var n=0, kbdList=this.keyman.keyboardManager.keyboardStubs, nKbds=kbdList.length;\r\n      let util = this.keyman.util;\r\n      if(nKbds \u003c 1) {\r\n        return;\r\n      }\r\n\r\n      // Create the menu list container element\r\n      var menu=this.lgList=util._CreateElement(\u0027div\u0027),ss;\r\n      this.lgList.id=\u0027kmw-language-menu\u0027;\r\n\r\n      // Insert a transparent overlay to prevent anything else happening during keyboard selection,\r\n      // but allow the menu to be closed if anywhere else on screen is touched\r\n\r\n      let osk = this.keyman.osk;\r\n      let languageMenu = this;\r\n\r\n      document.body.appendChild(this.shim);\r\n\r\n      // Add two nested DIVs to properly support iOS scrolling with momentum\r\n      //  c.f. https://github.com/joelambert/ScrollFix/issues/2\r\n      var m2=util._CreateElement(\u0027div\u0027),s2=m2.style,\r\n          m3=util._CreateElement(\u0027div\u0027),s3=m3.style;\r\n      m2.id=\u0027kmw-menu-scroll-container\u0027; m3.id=\u0027kmw-menu-scroller\u0027;\r\n\r\n      // Support momentum scrolling on iOS\r\n      if(\u0027WebkitOverflowScrolling\u0027 in s2) {\r\n        s2.WebkitOverflowScrolling=\u0027touch\u0027;\r\n      }\r\n\r\n      m2.appendChild(m3);\r\n      menu.appendChild(m2);\r\n\r\n      // Add menu index strip\r\n      var i,x,mx=util._CreateElement(\u0027div\u0027);\r\n      mx.id=\u0027kmw-menu-index\u0027;\r\n      for(i=1; i\u003c=26; i++) {\r\n        x=util._CreateElement(\u0027p\u0027);\r\n        x.innerHTML=String.fromCharCode(i+64);\r\n        mx.appendChild(x);\r\n      }\r\n\r\n      // Add index selection (for a large menu)\r\n      mx.addEventListener(\u0027touchstart\u0027,function(e){\r\n        languageMenu.scrollToLanguage(e, m2, m3);\r\n      }, false);\r\n      mx.addEventListener(\u0027touchend\u0027,function(e){\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n      }, false);\r\n      menu.appendChild(mx);\r\n\r\n      //TODO: not sure if either of these two handlers ar actually needed.  touchmove handler may be doing all that is necessary.\r\n      // Add scroll end event handling to override body scroll\r\n      menu.addEventListener(\u0027scroll\u0027,function(e){\r\n        languageMenu.scrolling=true;\r\n      },false);\r\n      m2.addEventListener(\u0027scroll\u0027,function(e){\r\n        //this.lgList.scrolling=true;\r\n        if(m2.scrollTop \u003c 1) {\r\n          m2.scrollTop=1;\r\n        }\r\n        if(m2.scrollTop \u003e m2.scrollHeight-m2.offsetHeight-1) {\r\n          m2.scrollTop=m2.scrollHeight-m2.offsetHeight-1;\r\n        }\r\n      },false);\r\n\r\n      // Add a list of keyboards to the innermost DIV\r\n      this.activeLgNo=this.addLanguages(m3,kbdList);\r\n\r\n      // Get number of visible (language) selectors\r\n      var nLgs=m3.childNodes.length-1;\r\n\r\n      // Do not display until sizes have been calculated\r\n      this.lgList.style.visibility=\u0027hidden\u0027;\r\n\r\n      // Append menu to document body, not to OSK\r\n      document.body.appendChild(this.lgList);\r\n\r\n      // Adjust size for viewport scaling (probably not needed for iOS, but check!)\r\n      if(util.device.OS == \u0027Android\u0027 \u0026\u0026 \u0027devicePixelRatio\u0027 in window) {\r\n        this.lgList.style.fontSize=(2/window.devicePixelRatio)+\u0027em\u0027;\r\n      }\r\n\r\n\r\n      // Adjust width for pixel scaling on Android tablets\r\n      if(util.device.OS == \u0027Android\u0027 \u0026\u0026 util.device.formFactor == \u0027tablet\u0027 \u0026\u0026 \u0027devicePixelRatio\u0027 in window) {\r\n        var w=parseInt(util.getStyleValue(menu,\u0027width\u0027),10),\r\n        ms=menu.style;\r\n        if(!isNaN(w)) {\r\n          ms.width=ms.maxWidth=(2*w/window.devicePixelRatio)+\u0027px\u0027;\r\n        }\r\n        w=parseInt(util.getStyleValue(m2,\u0027width\u0027),10);\r\n        ms=m2.style;\r\n        if(!isNaN(w)) {\r\n          ms.width=ms.maxWidth=(2*w/window.devicePixelRatio)+\u0027px\u0027;\r\n        }\r\n        w=parseInt(util.getStyleValue(m3,\u0027width\u0027),10);\r\n        ms=m3.style;\r\n        if(!isNaN(w)) {\r\n          ms.width=ms.maxWidth=(2*w/window.devicePixelRatio)+\u0027px\u0027;\r\n        }\r\n      }\r\n\r\n      // Adjust initial top and height of menu\r\n      this.adjust(0);\r\n\r\n      // Adjust the index font size and line height\r\n      var dy=(\u003cHTMLElement\u003emx.childNodes[1]).offsetTop-(\u003cHTMLElement\u003emx.childNodes[0]).offsetTop,\r\n          lineHeight=Math.floor(menu.offsetHeight/26.0),\r\n          scale=Math.round(100.0*lineHeight/dy)/100.0,\r\n          factor=(scale \u003e 0.6 ? 1 : 2);\r\n\r\n      if(scale \u003e 1.25) {\r\n        scale=1.25;\r\n      }\r\n\r\n      for(i=0;i\u003c26;i++) {\r\n        var qs=(\u003cHTMLElement\u003emx.childNodes[i]).style;\r\n        if(factor == 2 \u0026\u0026 (i%2) == 1) {\r\n          qs.display=\u0027none\u0027;\r\n        } else {\r\n          qs.fontSize=(scale*factor)+\u0027em\u0027;\r\n          qs.lineHeight=(lineHeight*factor)+\u0027px\u0027;\r\n        }\r\n      }\r\n\r\n      // Increase width of outer menu DIV by index, else hide index\r\n      var menuWidth=m2.offsetWidth;\r\n      if(m2.scrollHeight \u003e m2.offsetHeight+3) {\r\n        menuWidth = menuWidth+mx.offsetWidth;\r\n      } else {\r\n        mx.style.display=\u0027none\u0027;\r\n      }\r\n\r\n      menu.style.width=menuWidth+\u0027px\u0027;\r\n\r\n      // Now display the menu\r\n      this.lgList.style.visibility=\u0027\u0027;\r\n\r\n      // Set initial scroll to show current language (but never less than 1, to avoid dragging body)\r\n      var top=(\u003cHTMLElement\u003em3.firstChild).offsetHeight*this.activeLgNo+1;\r\n      m2.scrollTop=top;\r\n\r\n      // The scrollTop value is limited by the device, and must be limited to avoid dragging the document body\r\n      if(m2.scrollTop \u003c top) {\r\n        m2.scrollTop=m2.scrollHeight-m2.offsetHeight;\r\n      }\r\n\r\n      if(m2.scrollTop \u003e m2.scrollHeight-m2.offsetHeight-1) {\r\n        m2.scrollTop=m2.scrollHeight-m2.offsetHeight-1;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Adjust top and height of language menu\r\n     *\r\n     * @param   {number}  nKbds number of displayed keyboards to add to number of languages\r\n     **/\r\n    adjust(nKbds: number) {\r\n      let osk = this.keyman.osk;\r\n      let util = this.keyman.util;\r\n      let device = util.device;\r\n\r\n      var menu=this.lgList, m2=\u003cHTMLElement\u003emenu.firstChild, m3=\u003cHTMLElement\u003em2.firstChild,\r\n        barWidth=0,s=menu.style,mx=\u003cHTMLElement\u003emenu.childNodes[1],\r\n        maxHeight=window.innerHeight-osk.vkbd.lgKey.offsetHeight-16,\r\n        nItems=m3.childNodes.length+nKbds-1,      // Number of (visible) keyboard selectors\r\n        itemHeight=(\u003cHTMLElement\u003em3.firstChild.firstChild).offsetHeight,\r\n        menuHeight=nItems*itemHeight;\r\n\r\n      // Correct maxheight for viewport scaling (iPhone/iPod only) and internal position corrections\r\n      if(device.OS == \u0027iOS\u0027) {\r\n        if(device.formFactor == \u0027phone\u0027) {\r\n          barWidth=(util.landscapeView() ? 36 : 0);\r\n          maxHeight=(window.innerHeight-barWidth-16)*util.getViewportScale();\r\n        } else if(device.formFactor == \u0027tablet\u0027) {\r\n          barWidth=(util.landscapeView() ? 16 : 0);\r\n          maxHeight=(maxHeight-barWidth);\r\n        }\r\n      }\r\n\r\n      // Explicitly set position and height\r\n      s.left=dom.Utils.getAbsoluteX(osk.vkbd.lgKey)+\u0027px\u0027;\r\n      if(menuHeight \u003e maxHeight) {\r\n        menuHeight=maxHeight;\r\n      }\r\n      s.height=menuHeight+\u0027px\u0027;\r\n\r\n      // Position menu at bottom of screen using the same positioning model as the OSK.\r\n      s.bottom=\u00270px\u0027;\r\n\r\n      // Explicitly set the scroller and index heights to the container height\r\n      mx.style.height=m2.style.height=s.height;\r\n    }\r\n\r\n    /**\r\n     * Add an index to the language menu\r\n     *\r\n     *  @param  {Object}  e         touch start event from index\r\n     *  @param  {Object}  m2        menu scroller DIV\r\n     *  @param  {Object}  menu      DIV with list of languages\r\n     */\r\n    scrollToLanguage(e: TouchEvent, m2: HTMLDivElement, menu: HTMLDivElement) {\r\n      e.stopImmediatePropagation();\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n\r\n      let target = \u003cHTMLElement\u003e e.touches[0].target;\r\n\r\n      // Will return \u0027P\u0027, not \u0027p\u0027.\r\n      if(target.nodeName != \u0027P\u0027) {\r\n        return;\r\n      }\r\n\r\n      var i,t,top=0,initial=target.innerHTML.charCodeAt(0),nn=menu.childNodes;\r\n      try {\r\n        for(i=0; i\u003cnn.length-1; i++) {\r\n          t=(\u003cHTMLElement\u003enn[i].firstChild).innerHTML.toUpperCase().charCodeAt(0);\r\n          if(t \u003e= initial) {\r\n            break;\r\n          }\r\n        }\r\n      } catch(ex){}\r\n\r\n      try {\r\n        top=(\u003cHTMLElement\u003emenu.firstChild).offsetHeight*i+1;\r\n        m2.scrollTop=top;\r\n      } catch(ex) {\r\n        top=0;\r\n      }\r\n\r\n      try {\r\n        if(m2.scrollTop \u003c top) {\r\n          m2.scrollTop=m2.scrollHeight-m2.offsetHeight;\r\n        }\r\n        if(m2.scrollTop \u003e m2.scrollHeight-m2.offsetHeight-1) {\r\n          m2.scrollTop=m2.scrollHeight-m2.offsetHeight-1;\r\n        }\r\n      } catch(ex){}\r\n    }\r\n\r\n    /**\r\n     * Display all languages for installed keyboards in scrollable list\r\n     *\r\n     *    @param    {Object}    menu      DIV to which language selectors will be added\r\n     *    @param    {Object}    kbdList   array of keyboard stub objects\r\n     *    @return   {number}              index of currently active language\r\n     **/\r\n    addLanguages(menu: HTMLDivElement, kbdList): number {\r\n      var nStubs=kbdList.length;\r\n      let util = this.keyman.util\r\n      let device = util.device;\r\n\r\n      // Create and sort a list of languages\r\n      var k,n,lg,langs=[];\r\n      for(n=0; n\u003cnStubs; n++) {\r\n        lg=kbdList[n][\u0027KL\u0027];\r\n        if(langs.indexOf(lg) == -1) {\r\n          langs.push(lg);\r\n        }\r\n      }\r\n      langs.sort();\r\n\r\n      // Get current scale factor (reciprocal of viewport scale)\r\n      var scale=Math.round(100/util.getViewportScale())/100;\r\n\r\n      var dx,lgBar,i,kb,activeLanguageIndex=-1;\r\n      for(k=0; k\u003clangs.length; k++) {\r\n        dx=util._CreateElement(\u0027div\u0027);\r\n        dx.className=\u0027kbd-list-closed\u0027;\r\n        lgBar=util._CreateElement(\u0027p\u0027);\r\n        lgBar.kList=[];\r\n\r\n        for(n=0; n\u003cnStubs; n++) {\r\n          if(kbdList[n][\u0027KL\u0027] == langs[k]) {\r\n            lgBar.kList.push(kbdList[n]);\r\n          }\r\n        }\r\n\r\n        // Adjust bar size for current viewport scaling (iOS only!)\r\n        if(device.OS == \u0027iOS\u0027) {\r\n          lgBar.style.fontSize=scale+\u0027em\u0027;\r\n        }\r\n\r\n        // Add to menu\r\n        dx.appendChild(lgBar);\r\n        menu.appendChild(dx);\r\n\r\n        if(langs[k] == this.keyman.keyboardManager.activeStub[\u0027KL\u0027]) {\r\n          activeLanguageIndex=k;\r\n        }\r\n\r\n        let languageMenu = this;\r\n        // Several keyboards for this language\r\n        if(lgBar.kList.length \u003e 1) {\r\n          lgBar.className=\u0027kbd-list\u0027;\r\n          lgBar.innerHTML=langs[k]+\u0027...\u0027;\r\n          lgBar.scrolled=false;\r\n          lgBar.ontouchend=function(e) {\r\n            e.preventDefault();e.stopPropagation();\r\n            if(e.target.scrolled)\r\n              e.target.scrolled=false;\r\n            else\r\n              this.parentNode.className=(this.parentNode.className==\u0027kbd-list-closed\u0027?\u0027kbd-list-open\u0027:\u0027kbd-list-closed\u0027);\r\n\r\n            // Adjust top of menu to allow for expanded list\r\n            languageMenu.adjust(this.parentNode.className==\u0027kbd-list-closed\u0027?0:this.kList.length);\r\n          }\r\n          lgBar.addEventListener(\u0027touchstart\u0027,function(e){e.stopPropagation();},false);\r\n          lgBar.addEventListener(\u0027touchmove\u0027,function(e){e.target.scrolled=true;e.stopPropagation();},false);\r\n\r\n          for(i=0; i\u003clgBar.kList.length; i++) {\r\n            kb=util._CreateElement(\u0027p\u0027);\r\n            kb.className=\u0027kbd-list-entry\u0027;\r\n            if(device.OS == \u0027iOS\u0027) {\r\n              kb.style.fontSize=scale+\u0027em\u0027;\r\n            }\r\n            this.addKeyboard(lgBar.kList[i],kb,false);\r\n            dx.appendChild(kb);\r\n          }\r\n          // Only one keyboard for this language\r\n        } else {\r\n          lgBar.innerHTML=langs[k];\r\n          lgBar.className=\u0027kbd-single-entry\u0027;\r\n          this.addKeyboard(lgBar.kList[0],lgBar,true);\r\n        }\r\n\r\n        if(k == activeLanguageIndex) {\r\n          lgBar.className=lgBar.className+\u0027 current\u0027;\r\n        }\r\n      }\r\n\r\n      // Add a non-selectable bottom bar so to allow scrolling to the last language\r\n      var padLast=util._CreateElement(\u0027div\u0027);\r\n      padLast.id=\u0027kmw-menu-footer\u0027;\r\n      var cancelTouch=function(e){\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n      };\r\n      padLast.addEventListener(\u0027touchstart\u0027,cancelTouch,false);\r\n      padLast.addEventListener(\u0027touchmove\u0027,cancelTouch,false);\r\n      padLast.addEventListener(\u0027touchend\u0027,cancelTouch,false);\r\n      menu.appendChild(padLast);\r\n\r\n      return activeLanguageIndex;\r\n    }\r\n\r\n    /**\r\n     * Add a keyboard entry to the language menu *\r\n     *\r\n     * @param   {Object}    kbd     keyboard object\r\n     * @param   {Object}    kb      element being added and styled\r\n     * @param   {boolean}   unique  is this the only keyboard for the language?\r\n     */\r\n    addKeyboard(kbd, kb, unique: boolean) {\r\n      kb.kn=kbd[\u0027KI\u0027];        // InternalName;\r\n      kb.kc=kbd[\u0027KLC\u0027];       // LanguageCode;\r\n      kb.innerHTML=unique?kbd[\u0027KL\u0027]:kbd[\u0027KN\u0027].replace(\u0027 Keyboard\u0027,\u0027\u0027); // Name\r\n\r\n      // We\u0027re setting up a few events - this alias helps avoid scoping issues.\r\n      let languageMenu = this;\r\n\r\n      // Touchstart (or mspointerdown) event highlights the touched list item\r\n      var touchStart=function(e) {\r\n        e.stopPropagation();\r\n        if(this.className.indexOf(\u0027selected\u0027) \u003c= 0) {\r\n          this.className=this.className+\u0027 selected\u0027;\r\n        }\r\n        languageMenu.scrolling=false;\r\n        languageMenu.y0=e.touches[0].pageY;//osk.lgList.childNodes[0].scrollTop;\r\n        return true;\r\n      };\r\n\r\n      //TODO: Still drags Android background sometimes (not consistently)\r\n      // Touchmove drags the list and prevents release from selecting the language\r\n      var touchMove=function(e: TouchEvent) {\r\n        e.stopImmediatePropagation();\r\n        var scroller=\u003cHTMLElement\u003elanguageMenu.lgList.childNodes[0],\r\n            yMax=scroller.scrollHeight-scroller.offsetHeight,\r\n        y, dy;\r\n\r\n        if(\"undefined\" != typeof e.pageY) {\r\n          y = e.pageY;\r\n        } else if(\"undefined\" != typeof e.touches) {\r\n          y = e.touches[0].pageY;\r\n        } else {\r\n          return;\r\n        }\r\n\r\n        dy=y-languageMenu.y0;\r\n\r\n        // Scroll up (show later listed languages)\r\n        if(dy \u003c 0) {\r\n          if(scroller.scrollTop \u003e= yMax-1) {\r\n            e.preventDefault();\r\n            languageMenu.y0=y;\r\n          }\r\n          // Scroll down (show earlier listed languages)\r\n        } else if(dy \u003e 0) {\r\n          if(scroller.scrollTop \u003c 2) {\r\n            e.preventDefault();\r\n            languageMenu.y0=y;\r\n          }\r\n          // Dont\u0027 scroll - can happen if changing scroll direction\r\n        } else {\r\n          return;\r\n        }\r\n\r\n        // Disable selected language if drag more than 5px\r\n        if(dy \u003c -5 || dy \u003e 5) {\r\n          languageMenu.scrolling=true;\r\n          this.className=this.className.replace(/\\s*selected/,\u0027\u0027);\r\n          languageMenu.y0=y;\r\n        }\r\n        return true;\r\n      };\r\n\r\n      // Touch release (click) event selects touched list item\r\n      var touchEnd=function(e: TouchEvent) {\r\n        e.preventDefault();\r\n        if(typeof(e.stopImmediatePropagation) != \u0027undefined\u0027) {\r\n          e.stopImmediatePropagation();\r\n        } else {\r\n          e.stopPropagation();\r\n        }\r\n\r\n        if(languageMenu.scrolling) {\r\n          this.className=this.className.replace(/\\s*selected/,\u0027\u0027);\r\n        } else {\r\n          com.keyman.dom.DOMEventHandlers.states.setFocusTimer();\r\n\r\n          languageMenu.lgList.style.display=\u0027none\u0027; //still allows blank menu momentarily on selection\r\n          languageMenu.keyman.keyboardManager._SetActiveKeyboard(this.kn,this.kc,true);\r\n          languageMenu.keyman.keyboardManager.doKeyboardChange(this.kn,this.kc);\r\n          languageMenu.keyman.domManager.focusLastActiveElement();\r\n          languageMenu.hide();\r\n        }\r\n        return true;\r\n      };\r\n\r\n      kb.onmspointerdown=touchStart;\r\n      kb.addEventListener(\u0027touchstart\u0027,touchStart,false);\r\n      kb.onmspointermove=touchMove;\r\n      kb.addEventListener(\u0027touchmove\u0027,touchMove,false);\r\n      kb.onmspointerout=touchEnd;\r\n      kb.addEventListener(\u0027touchend\u0027,touchEnd,false);\r\n    }\r\n\r\n    /**\r\n     * Remove the language menu again\r\n     **/\r\n    hide() {\r\n      let osk = this.keyman.osk;\r\n\r\n      let languageMenu = this;\r\n      if(this.lgList) {\r\n        osk.vkbd.highlightKey(osk.vkbd.lgKey,false);\r\n        this.lgList.style.visibility=\u0027hidden\u0027;\r\n\r\n        window.setTimeout(function(){\r\n          // In case of extremely rapid keyboard swaps, this event may trigger more than once - \r\n          // the shim\u0027s on-touch event can trigger after a keyboard has been selected!\r\n          if(languageMenu.shim.parentElement) {\r\n            document.body.removeChild(languageMenu.shim);\r\n            document.body.removeChild(languageMenu.lgList);\r\n          }\r\n        },500);\r\n      }\r\n    }\r\n  }\r\n}","namespace com.keyman.osk {\r\n  export interface LengthStyle {\r\n    val: number,\r\n    absolute: boolean,\r\n    special?: \u0027em\u0027 | \u0027rem\u0027;\r\n  };\r\n\r\n  export class ParsedLengthStyle implements LengthStyle {\r\n    public readonly val: number;\r\n    public readonly absolute: boolean;\r\n    public readonly special: \u0027em\u0027 | \u0027rem\u0027;\r\n\r\n    public constructor(style: LengthStyle | string) {\r\n      let parsed: LengthStyle = (typeof style == \u0027string\u0027) ? ParsedLengthStyle.parseLengthStyle(style) : style;\r\n\r\n      // While Object.assign would be nice (and previously, was used), it will break\r\n      // on old but still supported versions of Android if their Chrome isn\u0027t updated.\r\n      // Requires mobile Chrome 45+, but API 21 (5.0) launches with an older browser.\r\n\r\n      // Object.assign(this, parsed);\r\n      this.val = parsed.val;\r\n      this.absolute = parsed.absolute;\r\n      if(parsed.special) {\r\n        this.special = parsed.special;\r\n      }\r\n    }\r\n\r\n    public get styleString(): string {\r\n      if(this.absolute) {\r\n        return this.val + \u0027px\u0027;\r\n      } else if(this.special) {\r\n        // Only \u0027em\u0027 and \u0027rem\u0027 are allowed, and both may be treated similarly.\r\n        // Both relate to font sizes, though the path to the reference element\r\n        // differs between them.\r\n        return this.val + this.special;\r\n      } else {\r\n        return (this.val * 100) + \u0027%\u0027;\r\n      }\r\n    }\r\n\r\n    public scaledBy(scalar: number): ParsedLengthStyle {\r\n      return new ParsedLengthStyle({\r\n        val: scalar * this.val,\r\n        absolute: this.absolute\r\n      });\r\n    }\r\n\r\n    public static inPixels(val: number): ParsedLengthStyle {\r\n      return new ParsedLengthStyle({val: val, absolute: true});\r\n    }\r\n\r\n    public static inPercent(val: number): ParsedLengthStyle {\r\n      return new ParsedLengthStyle({val: val/100, absolute: false});\r\n    }\r\n\r\n    public static forScalar(val: number): ParsedLengthStyle {\r\n      return new ParsedLengthStyle({val: val, absolute: false});\r\n    }\r\n\r\n    public static special(val: number, suffix: \u0027em\u0027 | \u0027rem\u0027): ParsedLengthStyle {\r\n      return new ParsedLengthStyle({val: val, absolute: false, special: suffix});\r\n    }\r\n\r\n    private static parseLengthStyle(spec: string): LengthStyle {\r\n      const val = parseFloat(spec);\r\n  \r\n      if(isNaN(val)) {\r\n        // Cannot parse.\r\n        console.error(\"Could not properly parse specified length style info: \u0027\" + spec + \"\u0027.\");\r\n        return null;\r\n      }\r\n\r\n      return spec.indexOf(\u0027px\u0027) != -1 ? {val: val, absolute: true} :\r\n        // 16 px ~= 12 pt.\r\n        // Reference: https://kyleschaeffer.com/css-font-size-em-vs-px-vs-pt-vs-percent\r\n        spec.indexOf(\u0027pt\u0027) != -1 ? {val: (4 * val / 3), absolute: true} :\r\n        spec.indexOf(\u0027%\u0027) != -1 ? {val: val/100, absolute: false} :\r\n        spec.indexOf(\u0027rem\u0027) != -1 ? {val: val, absolute: false, special: \u0027rem\u0027} :\r\n        spec.indexOf(\u0027em\u0027) != -1 ?  {val: val, absolute: false, special: \u0027em\u0027} :\r\n        // At this point, assuming either Number or number in a string without units\r\n        // Note:  this one is NOT natively handled by browsers!\r\n        //        We\u0027ll treat it as if it were \u0027pt\u0027, since that\u0027s likely the user\u0027s\r\n        //        most familiar font size unit.\r\n        {val: (4 * val / 3), absolute: true};\r\n    }\r\n  }\r\n}\r\n","/// \u003creference path=\"../oskViewComponent.ts\" /\u003e\r\n\r\nnamespace com.keyman.osk.layouts {\r\n  export class ResizeBar implements OSKViewComponent {\r\n    private _element: HTMLDivElement;\r\n    private _resizeHandle: HTMLDivElement;\r\n\r\n    private static readonly DISPLAY_HEIGHT = ParsedLengthStyle.inPixels(16); // As set in kmwosk.css\r\n\r\n    private mouseCancellingHandler: (ev: MouseEvent) =\u003e boolean = function(ev: MouseEvent) {\r\n      ev.preventDefault();\r\n      ev.cancelBubble = true;\r\n      return false;\r\n    };\r\n\r\n    public constructor(dragHandler?: MouseDragOperation) {\r\n      this._element = this.buildResizeBar();\r\n\r\n      if(dragHandler) {\r\n        this._resizeHandle.onmousedown = dragHandler.mouseDownHandler;\r\n      }\r\n    }\r\n\r\n    public get layoutHeight(): ParsedLengthStyle {\r\n      return ResizeBar.DISPLAY_HEIGHT;\r\n    }\r\n\r\n    public get element(): HTMLDivElement {\r\n      return this._element;\r\n    }\r\n\r\n    public get handle(): HTMLDivElement {\r\n      return this._resizeHandle;\r\n    }\r\n\r\n    public allowResizing(flag: boolean) {\r\n      this._resizeHandle.style.display = flag ? \u0027block\u0027 : \u0027none\u0027;\r\n    }\r\n\r\n    private markUnselectable(e: HTMLElement) {\r\n      e.style.MozUserSelect=\"none\";\r\n      e.style.KhtmlUserSelect=\"none\";\r\n      e.style.UserSelect=\"none\";\r\n      e.style.WebkitUserSelect=\"none\";\r\n    }\r\n\r\n    /**\r\n     * Create a bottom bar with a resizing icon for the desktop OSK\r\n     */\r\n    buildResizeBar(): HTMLDivElement {\r\n      let util = com.keyman.singleton.util;\r\n      let osk = com.keyman.singleton.osk;\r\n\r\n      var bar = document.createElement(\u0027div\u0027);\r\n      this.markUnselectable(bar);\r\n      bar.className=\u0027kmw-footer\u0027;\r\n      bar.onmousedown = this.mouseCancellingHandler;\r\n\r\n      // Add caption\r\n      var Ltitle=document.createElement(\u0027div\u0027);\r\n      this.markUnselectable(Ltitle);\r\n      Ltitle.className=\u0027kmw-footer-caption\u0027;\r\n      Ltitle.innerHTML=\u0027\u003ca href=\"https://keyman.com/developer/keymanweb/\"\u003eKeymanWeb\u003c/a\u003e\u0027;\r\n      Ltitle.id=\u0027keymanweb-osk-footer-caption\u0027;\r\n\r\n      // Display build number on shift+double click\r\n      util.attachDOMEvent(Ltitle,\u0027dblclick\u0027, function(e) {\r\n        if(e \u0026\u0026 e.shiftKey) {\r\n          osk.showBuild();\r\n        }\r\n        return false;\r\n      }.bind(this),false);\r\n\r\n      bar.appendChild(Ltitle);\r\n\r\n      var Limg = document.createElement(\u0027div\u0027);\r\n      this.markUnselectable(Limg);\r\n      Limg.className=\u0027kmw-footer-resize\u0027;\r\n      bar.appendChild(Limg);\r\n      this._resizeHandle=Limg;\r\n\r\n      return bar;\r\n    }\r\n\r\n    public refreshLayout() {\r\n      // The title bar is adaptable as it is and needs no adjustments.\r\n    }\r\n  }\r\n}","namespace com.keyman.osk {\r\n  /**\r\n   * Represents the current location of the current cursor / touchpoint during\r\n   * an ongoing OSK input event.  This class standardizes to .pageX (document)\r\n   * coordinates, rather than .clientX (viewport) coordinates.\r\n   */\r\n  export class InputEventCoordinate {\r\n    public readonly x: number;\r\n    public readonly y: number;\r\n\r\n    private readonly source: MouseEvent | TouchEvent;\r\n\r\n    public constructor(x: number, y: number, source?: MouseEvent | TouchEvent) {\r\n      this.x = x;\r\n      this.y = y;\r\n\r\n      if(source) {\r\n        this.source = source;\r\n      }\r\n    }\r\n\r\n    // Converts a MouseEvent or TouchEvent into the base coordinates needed \r\n    // by the mouse-dragging operations.\r\n    public static fromEvent(e: MouseEvent | TouchEvent) {\r\n      let coordSource: MouseEvent | Touch;\r\n\r\n      // Desktop Safari versions as recent as 14.1 do not support TouchEvents.\r\n      // So, just in case, a two-fold conditional check to avoid issues with a direct\r\n      // \u0027instanceof\u0027 against the type.\r\n      if(window[\u0027TouchEvent\u0027] \u0026\u0026 e instanceof TouchEvent) {\r\n        coordSource = e.changedTouches[0];\r\n      } else if(e[\u0027changedTouches\u0027]) {\r\n        coordSource = e[\u0027changedTouches\u0027][0] as Touch;\r\n      } else {\r\n        coordSource = e as MouseEvent;\r\n      }\r\n\r\n      // For MouseEvents, .pageX is slightly less supported in older browsers when\r\n      // compared to .clientX.  They\u0027re about equally supported for TouchEvents.\r\n      if (coordSource.pageX) {\r\n        return new InputEventCoordinate(coordSource.pageX, coordSource.pageY, e);\r\n      } else if (coordSource.clientX) {\r\n        const x = coordSource.clientX + document.body.scrollLeft;\r\n        const y = coordSource.clientY + document.body.scrollTop;\r\n\r\n        return new InputEventCoordinate(x, y, e);\r\n      } else {\r\n        return new InputEventCoordinate(null, null, e);\r\n      }\r\n    }\r\n\r\n    public get activeInputCount(): number {\r\n      // May not be an ACTUAL touch event during unit tests.\r\n      if(window[\u0027TouchEvent\u0027] \u0026\u0026 this.source[\u0027touches\u0027] !== undefined \u0026\u0026 this.source[\u0027touches\u0027] !== null) {\r\n        return this.source[\u0027touches\u0027].length;\r\n      } else {\r\n        const event = this.source as MouseEvent;\r\n        return event.buttons \u003e 0 ? 1 : 0;\r\n      }\r\n    }\r\n\r\n    public get target() {\r\n      return this.source?.target;\r\n    }\r\n\r\n    public get isFromTouch(): boolean {\r\n      return !this.isFromMouse;\r\n    }\r\n\r\n    public get isFromMouse(): boolean {\r\n      return this.source instanceof MouseEvent;\r\n    }\r\n  }\r\n}","/// \u003creference path=\"../inputEventCoordinate.ts\" /\u003e\r\n\r\nnamespace com.keyman.osk.layouts {\r\n\r\n\r\n  type MouseHandler = (this: GlobalEventHandlers, ev: MouseEvent) =\u003e any;\r\n\r\n  /**\r\n   * Used to store the page\u0027s original mouse handlers and properties\r\n   * when temporarily overridden by OSK moving or resizing handlers due\r\n   * to user interaction.\r\n   */\r\n  class MouseStartSnapshot {\r\n    private readonly _VPreviousMouseMove: MouseHandler;\r\n    private readonly _VPreviousMouseUp: MouseHandler;\r\n    private readonly _VPreviousCursor: string;\r\n    private readonly _VPreviousMouseButton: number;\r\n\r\n    constructor(e: MouseEvent) {\r\n      this._VPreviousMouseMove = document.onmousemove;\r\n      this._VPreviousMouseUp = document.onmouseup;\r\n\r\n      this._VPreviousCursor = document.body.style.cursor;\r\n      this._VPreviousMouseButton = (typeof(e.which)==\u0027undefined\u0027 ? e.button : e.which);\r\n    }\r\n\r\n    restore() {\r\n      document.onmousemove = this._VPreviousMouseMove;\r\n      document.onmouseup = this._VPreviousMouseUp;\r\n\r\n      if(document.body.style.cursor) {\r\n        document.body.style.cursor = this._VPreviousCursor;\r\n      }\r\n    }\r\n\r\n    matchesCausingClick(e: MouseEvent): boolean {\r\n      return this._VPreviousMouseButton == (typeof(e.which)==\u0027undefined\u0027 ? e.button : e.which);\r\n    }\r\n  }\r\n\r\n  export abstract class MouseDragOperation {\r\n    private _enabled: boolean;\r\n    private _startCoord: InputEventCoordinate;\r\n    private _mouseStartSnapshot: MouseStartSnapshot;\r\n\r\n    private startHandler: (e: MouseEvent) =\u003e void;\r\n    private cursorType: string;\r\n\r\n    public constructor(cursorType?: string) {\r\n      this.startHandler = this._VMoveMouseDown.bind(this);\r\n      this.cursorType = cursorType;\r\n    }\r\n\r\n    /**\r\n     * Denotes whether or not this object should handle incoming events.\r\n     */\r\n    public get enabled(): boolean {\r\n      return this._enabled;\r\n    }\r\n\r\n    public set enabled(flag: boolean) {\r\n      this._enabled = flag;\r\n    }\r\n\r\n    /**\r\n     * Denotes whether or not this object is currently handling an ongoing drag event.\r\n     */\r\n    public get isActive(): boolean {\r\n      return !!this._mouseStartSnapshot;\r\n    }\r\n\r\n    public get mouseDownHandler(): (e: MouseEvent) =\u003e void {\r\n      return this.startHandler;\r\n    }\r\n\r\n    /**\r\n     * Function     _VMoveMouseDown\r\n     * Scope        Private\r\n     * @param       {Object}      e      event\r\n     * Description  Process mouse down on OSK\r\n     */\r\n     private _VMoveMouseDown(e: MouseEvent) {\r\n      if(!e) {\r\n        return true;\r\n      }\r\n\r\n      if(!this._enabled) {\r\n        return true;\r\n      }\r\n\r\n      if(!this._mouseStartSnapshot) { // I1472 - Dragging off edge of browser window causes muckup\r\n        this._mouseStartSnapshot = new MouseStartSnapshot(e);\r\n      }\r\n\r\n      this._startCoord = InputEventCoordinate.fromEvent(e);\r\n\r\n      document.onmousemove = this._VMoveMouseMove.bind(this);\r\n      document.onmouseup = this._VMoveMouseUp.bind(this);\r\n      if(document.body.style.cursor) {\r\n        document.body.style.cursor = this.cursorType;\r\n      }\r\n\r\n      e.preventDefault();\r\n      e.cancelBubble = true;\r\n\r\n      this.onDragStart();\r\n      return false;\r\n    }\r\n\r\n    protected abstract onDragStart();\r\n\r\n    /**\r\n     * Process mouse drag on OSK\r\n     *\r\n     * @param       {Object}      e      event\r\n     */\r\n     private _VMoveMouseMove(e: MouseEvent) {\r\n      if(!e) {\r\n        return true;\r\n      }\r\n\r\n      if(!this.enabled) {\r\n        return true;\r\n      }\r\n\r\n      e.preventDefault();\r\n      e.cancelBubble = true;\r\n\r\n      if(!this._mouseStartSnapshot.matchesCausingClick(e)) { // I1472 - Dragging off edge of browser window causes muckup\r\n        return this._VMoveMouseUp(e);\r\n      } else {\r\n        const coord = InputEventCoordinate.fromEvent(e);\r\n        const deltaX = coord.x - this._startCoord.x;\r\n        const deltaY = coord.y - this._startCoord.y;\r\n\r\n        this.onDragMove(deltaX, deltaY);\r\n        return false;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param deltaX The total horizontal distance moved, in pixels, since the start of the drag\r\n     * @param deltaY The total vertical distance moved, in pixels, since the start of the drag\r\n     */\r\n    protected abstract onDragMove(deltaX: number, deltaY: number);\r\n\r\n    /**\r\n     * Function     _VMoveMouseUp\r\n     * Scope        Private\r\n     * @param       {Object}      e      event\r\n     * Description  Process mouse up during movement of KMW OSK UI\r\n     */\r\n    private _VMoveMouseUp(e: MouseEvent) {\r\n      if(!e) {\r\n        return true;\r\n      }\r\n\r\n      this._mouseStartSnapshot.restore();\r\n      this._mouseStartSnapshot = null;\r\n\r\n      e.preventDefault();\r\n      e.cancelBubble = true;\r\n\r\n      this.onDragRelease();\r\n      return false;\r\n    }\r\n\r\n    protected abstract onDragRelease();\r\n  }\r\n}","/// \u003creference path=\"mouseDragOperation.ts\" /\u003e\r\n/// \u003creference path=\"../oskViewComponent.ts\" /\u003e\r\n\r\nnamespace com.keyman.osk.layouts {\r\n  export class TitleBar implements OSKViewComponent {\r\n    private _element: HTMLDivElement;\r\n    private _unpinButton: HTMLDivElement;\r\n    private _closeButton: HTMLDivElement;\r\n    private _helpButton: HTMLDivElement;\r\n    private _configButton: HTMLDivElement;\r\n    private _caption: HTMLSpanElement;\r\n\r\n    private static readonly DISPLAY_HEIGHT = ParsedLengthStyle.inPixels(20); // As set in kmwosk.css\r\n\r\n    public constructor(dragHandler?: MouseDragOperation) {\r\n      this._element = this.buildTitleBar();\r\n\r\n      if(dragHandler) {\r\n        this.element.onmousedown = dragHandler.mouseDownHandler;\r\n      }\r\n    }\r\n\r\n    public get layoutHeight(): ParsedLengthStyle {\r\n      return TitleBar.DISPLAY_HEIGHT;\r\n    }\r\n\r\n    private mouseCancellingHandler: (ev: MouseEvent) =\u003e boolean = function(ev: MouseEvent) {\r\n      ev.preventDefault();\r\n      ev.cancelBubble = true;\r\n      return false;\r\n    };\r\n\r\n    public get element(): HTMLDivElement {\r\n      return this._element;\r\n    }\r\n\r\n    public setPinCJKOffset() {\r\n      this._unpinButton.style.left = \u002715px\u0027;\r\n    }\r\n\r\n    public showPin(visible: boolean) {\r\n      this._unpinButton.style.display = visible ? \u0027block\u0027 : \u0027none\u0027;\r\n    }\r\n\r\n    public setTitle(str: string) {\r\n      this._caption.innerHTML = str;\r\n    }\r\n\r\n    public setTitleFromKeyboard(keyboard: keyboards.Keyboard) {\r\n      let title = \"\u003cspan style=\u0027font-weight:bold\u0027\u003e\" + keyboard?.name + \u0027\u003c/span\u003e\u0027;  // I1972  // I2186\r\n      this._caption.innerHTML = title;\r\n    }\r\n\r\n    public attachHandlers(osk: OSKView) {\r\n      let util = com.keyman.singleton.util;\r\n\r\n      this._helpButton.onclick = function() {\r\n        var p={};\r\n        util.callEvent(\u0027osk.helpclick\u0027,p);\r\n        if(window.event) {\r\n          window.event.returnValue=false;\r\n        }\r\n        return false;\r\n      }\r\n\r\n      this._configButton.onclick = function() {\r\n        var p={};\r\n        util.callEvent(\u0027osk.configclick\u0027,p);\r\n        if(window.event) {\r\n          window.event.returnValue=false;\r\n        }\r\n        return false;\r\n      }\r\n\r\n      this._closeButton.onclick = function () {\r\n        osk.startHide(true);\r\n        return false;\r\n      };\r\n\r\n      if(osk instanceof FloatingOSKView) {\r\n        const _osk = osk as FloatingOSKView;\r\n        this._unpinButton.onclick = function () {\r\n          _osk.restorePosition(true);\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Create a control bar with title and buttons for the desktop OSK\r\n     */\r\n    buildTitleBar(): HTMLDivElement {\r\n      let bar = document.createElement(\u0027div\u0027);\r\n      this.markUnselectable(bar);\r\n      bar.id=\u0027keymanweb_title_bar\u0027;\r\n      bar.className=\u0027kmw-title-bar\u0027;\r\n\r\n      var Ltitle = this._caption = document.createElement(\u0027span\u0027);\r\n      this.markUnselectable(Ltitle);\r\n      Ltitle.className=\u0027kmw-title-bar-caption\u0027;\r\n      Ltitle.style.color=\u0027#fff\u0027;\r\n      bar.appendChild(Ltitle);\r\n\r\n      var Limg = this._closeButton = this.buildCloseButton();\r\n      bar.appendChild(Limg);\r\n\r\n      Limg = this._helpButton = this.buildHelpButton()\r\n      bar.appendChild(Limg);\r\n\r\n      Limg = this._configButton = this.buildConfigButton();\r\n      bar.appendChild(Limg);\r\n\r\n      Limg = this._unpinButton = this.buildUnpinButton();\r\n      bar.appendChild(Limg);\r\n\r\n      return bar;\r\n    }\r\n\r\n    private markUnselectable(e: HTMLElement) {\r\n      e.style.MozUserSelect=\"none\";\r\n      e.style.KhtmlUserSelect=\"none\";\r\n      e.style.UserSelect=\"none\";\r\n      e.style.WebkitUserSelect=\"none\";\r\n    }\r\n\r\n    private buildCloseButton(): HTMLDivElement {\r\n      var Limg = document.createElement(\u0027div\u0027);\r\n      this.markUnselectable(Limg);\r\n\r\n      Limg.id=\u0027kmw-close-button\u0027;\r\n      Limg.className=\u0027kmw-title-bar-image\u0027;\r\n      Limg.onmousedown = this.mouseCancellingHandler;\r\n\r\n      return Limg;\r\n    }\r\n\r\n    private buildHelpButton(): HTMLDivElement {\r\n      let Limg = document.createElement(\u0027div\u0027);\r\n      this.markUnselectable(Limg);\r\n      Limg.id=\u0027kmw-help-image\u0027;\r\n      Limg.className=\u0027kmw-title-bar-image\u0027;\r\n      Limg.title=\u0027KeymanWeb Help\u0027;\r\n      Limg.onmousedown = this.mouseCancellingHandler;\r\n      return Limg;\r\n    }\r\n\r\n    private buildConfigButton(): HTMLDivElement {\r\n      let Limg = document.createElement(\u0027div\u0027);\r\n      this.markUnselectable(Limg);\r\n\r\n      Limg.id=\u0027kmw-config-image\u0027;\r\n      Limg.className=\u0027kmw-title-bar-image\u0027;\r\n      Limg.title=\u0027KeymanWeb Configuration Options\u0027;\r\n      Limg.onmousedown = this.mouseCancellingHandler;\r\n\r\n      return Limg;\r\n    }\r\n\r\n    /**\r\n     * Builds an \u0027unpin\u0027 button for restoring OSK to default location, handle mousedown and click events\r\n     */\r\n    private buildUnpinButton(): HTMLDivElement {\r\n      let Limg = document.createElement(\u0027div\u0027);  //I2186\r\n      this.markUnselectable(Limg);\r\n\r\n      Limg.id = \u0027kmw-pin-image\u0027;\r\n      Limg.className = \u0027kmw-title-bar-image\u0027;\r\n      Limg.title=\u0027Pin the On Screen Keyboard to its default location on the active text box\u0027;\r\n\r\n      Limg.onmousedown = this.mouseCancellingHandler;\r\n\r\n      return Limg;\r\n    }\r\n\r\n    public refreshLayout() {\r\n      // The title bar is adaptable as it is and needs no adjustments.\r\n    }\r\n  }\r\n}","/// \u003creference path=\"resizeBar.ts\" /\u003e\r\n/// \u003creference path=\"titleBar.ts\" /\u003e\r\n/// \u003creference path=\"mouseDragOperation.ts\" /\u003e\r\n\r\nnamespace com.keyman.osk.layouts {\r\n  export class TargetedFloatLayout {\r\n    titleBar: layouts.TitleBar;\r\n    resizeBar: layouts.ResizeBar;\r\n\r\n    private oskView: FloatingOSKView;\r\n\r\n    // Encapsulations of the drag behaviors for OSK movement \u0026 resizing\r\n    private _moveHandler: MouseDragOperation;\r\n    private _resizeHandler: MouseDragOperation;\r\n\r\n    public constructor() {\r\n      this.titleBar = new layouts.TitleBar(this.titleDragHandler);\r\n      this.resizeBar = new layouts.ResizeBar(this.resizeDragHandler);\r\n    }\r\n\r\n    public get movementEnabled(): boolean {\r\n      return this.titleDragHandler.enabled;\r\n    }\r\n\r\n    public set movementEnabled(flag: boolean) {\r\n      this.titleDragHandler.enabled = flag;\r\n      this.titleBar.showPin(flag \u0026\u0026 this.oskView.userPositioned);\r\n    }\r\n\r\n    public get resizingEnabled(): boolean {\r\n      return this.resizeDragHandler.enabled;\r\n    }\r\n\r\n    public set resizingEnabled(flag: boolean) {\r\n      this.resizeDragHandler.enabled = flag;\r\n      this.resizeBar.allowResizing(flag);\r\n    }\r\n\r\n    public get isBeingMoved(): boolean {\r\n      return this.titleDragHandler.isActive;\r\n    }\r\n\r\n    public get isBeingResized(): boolean {\r\n      return this.resizeDragHandler.isActive;\r\n    }\r\n\r\n    attachToView(view: FloatingOSKView) {\r\n      this.oskView = view;\r\n      this.titleBar.attachHandlers(view);\r\n      this.titleDragHandler.enabled = !view.noDrag;\r\n      this.resizeDragHandler.enabled = true; // by default.\r\n    }\r\n\r\n    private get titleDragHandler(): MouseDragOperation {\r\n      const layout = this;\r\n\r\n      if(this._moveHandler) {\r\n        return this._moveHandler;\r\n      }\r\n\r\n      this._moveHandler = new class extends MouseDragOperation {\r\n        startX: number;\r\n        startY: number;\r\n\r\n        constructor() {\r\n          super(\u0027move\u0027); // The type of cursor to use while \u0027active\u0027.\r\n        }\r\n\r\n        onDragStart() {\r\n          if(!layout.oskView) {\r\n            return;\r\n          }\r\n\r\n          this.startX = layout.oskView._Box.offsetLeft;\r\n          this.startY = layout.oskView._Box.offsetTop;\r\n\r\n          let keymanweb = com.keyman.singleton;\r\n          if(keymanweb.isCJK()) {\r\n            layout.titleBar.setPinCJKOffset();\r\n          }\r\n\r\n          keymanweb.uiManager.justActivated = true;\r\n        }\r\n\r\n        // Note:  _this.oskView may not be initialized yet.\r\n        onDragMove(cumulativeX: number, cumulativeY: number) {\r\n          if(!layout.oskView) {\r\n            return;\r\n          }\r\n\r\n          layout.titleBar.showPin(true);\r\n          layout.oskView.userPositioned = true;\r\n\r\n          layout.oskView._Box.style.left = (this.startX + cumulativeX) + \u0027px\u0027;\r\n          layout.oskView._Box.style.top  = (this.startY + cumulativeY) + \u0027px\u0027;\r\n\r\n          var r=layout.oskView.getRect();\r\n          layout.oskView.setSize(r.width, r.height, true);\r\n          layout.oskView.x = r.left;\r\n          layout.oskView.y = r.top;\r\n        }\r\n\r\n        onDragRelease() {\r\n          if(!layout.oskView) {\r\n            return;\r\n          }\r\n\r\n          let keymanweb = com.keyman.singleton;\r\n\r\n          keymanweb.domManager.focusLastActiveElement();\r\n\r\n          keymanweb.uiManager.justActivated = false;\r\n          keymanweb.uiManager.setActivatingUI(false);\r\n\r\n          if(layout.oskView.vkbd) {\r\n            layout.oskView.vkbd.currentKey=null;\r\n          }\r\n\r\n          layout.oskView.userPositioned = true;\r\n          layout.oskView.doResizeMove();\r\n          layout.oskView.saveCookie();\r\n        }\r\n      }\r\n\r\n      return this._moveHandler;\r\n    }\r\n\r\n    private get resizeDragHandler(): MouseDragOperation {\r\n      const layout = this;\r\n\r\n      if(this._resizeHandler) {\r\n        return this._resizeHandler;\r\n      }\r\n\r\n      this._resizeHandler = new class extends MouseDragOperation {\r\n        startWidth: number;\r\n        startHeight: number;\r\n\r\n        constructor() {\r\n          super(\u0027se-resize\u0027); // The type of cursor to use while \u0027active\u0027.\r\n        }\r\n\r\n        onDragStart() {\r\n          if(!layout.oskView) {\r\n            return;\r\n          }\r\n\r\n          this.startWidth = layout.oskView.computedWidth;\r\n          this.startHeight = layout.oskView.computedHeight;\r\n\r\n          let keymanweb = com.keyman.singleton;\r\n\r\n          keymanweb.uiManager.justActivated = true;\r\n        }\r\n\r\n        // Note:  _this.oskView may not be initialized yet.\r\n        onDragMove(cumulativeX: number, cumulativeY: number) {\r\n          if(!layout.oskView) {\r\n            return;\r\n          }\r\n\r\n          let newWidth  = this.startWidth  + cumulativeX;\r\n          let newHeight = this.startHeight + cumulativeY;\r\n          \r\n          // Set the smallest and largest OSK size\r\n          if(newWidth \u003c 0.2*screen.width) {\r\n            newWidth = 0.2*screen.width;\r\n          }\r\n          if(newHeight \u003c 0.1*screen.height) {\r\n            newHeight = 0.1*screen.height;\r\n          }\r\n          if(newWidth \u003e 0.9*screen.width) {\r\n            newWidth = 0.9*screen.width;\r\n          }\r\n          if(newHeight \u003e 0.5*screen.height) {\r\n            newHeight = 0.5*screen.height;\r\n          }\r\n\r\n          // Explicitly set OSK width, height,  and font size - cannot safely rely on scaling from font\r\n          layout.oskView.setSize(newWidth, newHeight, true);\r\n        }\r\n\r\n        onDragRelease() {\r\n          if(!layout.oskView) {\r\n            return;\r\n          }\r\n\r\n          let keymanweb = com.keyman.singleton;\r\n\r\n          keymanweb.domManager.focusLastActiveElement();\r\n\r\n          keymanweb.uiManager.justActivated = false;\r\n          keymanweb.uiManager.setActivatingUI(false);\r\n\r\n          if(layout.oskView.vkbd) {\r\n            layout.oskView.vkbd.currentKey=null;\r\n          }\r\n\r\n          if(layout.oskView.vkbd) {\r\n            this.startWidth  = layout.oskView.computedWidth;\r\n            this.startHeight = layout.oskView.computedHeight;\r\n          }\r\n          layout.oskView.refreshLayout(); // Finalize the resize.\r\n          layout.oskView.doResizeMove();\r\n          layout.oskView.saveCookie();\r\n        }\r\n      }\r\n\r\n      return this._resizeHandler;\r\n    }\r\n  }\r\n}","namespace com.keyman.osk {\r\n  export class PreProcessor {\r\n    /**\r\n     * Simulate a keystroke according to the touched keyboard button element\r\n     *\r\n     * Note that the test-case oriented \u0027recorder\u0027 stubs this method to facilitate OSK-based input\r\n     * recording for use in test cases.  If changing this function, please ensure the recorder is\r\n     * not affected.\r\n     * \r\n     * @param       {Object}      e      element touched (or clicked)\r\n     */\r\n    static clickKey(e: osk.KeyElement, input?: InputEventCoordinate) {\r\n      let keyman = com.keyman.singleton;\r\n      let Lkc = keyman[\u0027osk\u0027].vkbd.initKeyEvent(e, input);\r\n      if(!Lkc) {\r\n        return true;\r\n      }\r\n\r\n      return this.raiseKeyEvent(Lkc);\r\n    }\r\n\r\n    static raiseKeyEvent(keyEvent: text.KeyEvent) {\r\n      let keyman = com.keyman.singleton;\r\n      var Lelem = keyman.domManager.lastActiveElement;\r\n\r\n      if(Lelem != null) {\r\n        // Handle any DOM state management related to click inputs.\r\n        let outputTarget = dom.Utils.getOutputTarget(Lelem);\r\n        keyman.domManager.initActiveElement(Lelem);\r\n        \r\n        // Clear any cached codepoint data; we can rebuild it if it\u0027s unchanged.\r\n        outputTarget.invalidateSelection();\r\n        // Deadkey matching continues to be troublesome.\r\n        // Deleting matched deadkeys here seems to correct some of the issues.   (JD 6/6/14)\r\n        outputTarget.deadkeys().deleteMatched();      // Delete any matched deadkeys before continuing\r\n\r\n        if(!keyman.isEmbedded) {\r\n          keyman.uiManager.setActivatingUI(true);\r\n          com.keyman.dom.DOMEventHandlers.states._IgnoreNextSelChange = 100;\r\n          keyman.domManager.focusLastActiveElement();\r\n          com.keyman.dom.DOMEventHandlers.states._IgnoreNextSelChange = 0;\r\n        }\r\n\r\n        let retVal = PreProcessor.handleClick(keyEvent, outputTarget, null);\r\n\r\n        // Now that processing is done, we can do a bit of post-processing, too.\r\n        keyman.uiManager.setActivatingUI(false);\t// I2498 - KeymanWeb OSK does not accept clicks in FF when using automatic UI\r\n        return retVal;\r\n      } else {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    // Serves to hold DOM-dependent code that affects both \u0027native\u0027 and \u0027embedded\u0027 mode OSK use \r\n    // after the KeyEvent object has been properly instantiated.  This should help catch any \r\n    // mutual last-minute DOM-side interactions before passing control to the processor... such as\r\n    // the UI-control command keys as seen below.\r\n    static handleClick(Lkc: text.KeyEvent, outputTarget: text.OutputTarget, e: osk.KeyElement) {\r\n      let keyman = com.keyman.singleton;\r\n        // Exclude menu and OSK hide keys from normal click processing\r\n      if(Lkc.kName == \u0027K_LOPT\u0027 || Lkc.kName == \u0027K_ROPT\u0027) {\r\n        keyman[\u0027osk\u0027].vkbd.optionKey(e, Lkc.kName, true);\r\n        return true;\r\n      }\r\n\r\n      let retVal = !!keyman.core.processKeyEvent(Lkc, outputTarget);\r\n\r\n      return retVal;\r\n    }\r\n  }\r\n}","/// \u003creference path=\"lengthStyle.ts\" /\u003e\r\n\r\nnamespace com.keyman.osk {\r\n  export function getFontSizeStyle(e: HTMLElement|string): {val: number, absolute: boolean} {\r\n    var fs: string;\r\n\r\n    if(typeof e == \u0027string\u0027) {\r\n      fs = e;\r\n    } else {\r\n      fs = e.style.fontSize;\r\n      if(!fs) {\r\n        fs = getComputedStyle(e).fontSize;\r\n      }\r\n    }\r\n\r\n    return new ParsedLengthStyle(fs);\r\n  }\r\n}","namespace com.keyman.osk {\r\n  export class KeyData {\r\n    [\u0027key\u0027]: OSKKey;\r\n    [\u0027keyId\u0027]: string;\r\n    [\u0027subKeys\u0027]?: OSKKeySpec[];\r\n\r\n    constructor(keyData: OSKKey, keyId: string) {\r\n      this[\u0027key\u0027] = keyData;\r\n      this[\u0027keyId\u0027] = keyId;\r\n    }\r\n  }\r\n\r\n  export type KeyElement = HTMLDivElement \u0026 KeyData;\r\n\r\n  // Many thanks to https://www.typescriptlang.org/docs/handbook/advanced-types.html for this.\r\n  export function link(elem: HTMLDivElement, data: KeyData): KeyElement {\r\n    let e = \u003cKeyElement\u003e elem;\r\n\r\n    // Merges all properties and methods of KeyData onto the underlying HTMLDivElement, creating a merged class.\r\n    for(let id in data) {\r\n      if(!e.hasOwnProperty(id)) {\r\n        (\u003cany\u003ee)[id] = (\u003cany\u003edata)[id];\r\n      }\r\n    }\r\n\r\n    return e;\r\n  }\r\n\r\n  export function isKey(elem: Node): boolean {\r\n    return elem \u0026\u0026 (\u0027key\u0027 in elem) \u0026\u0026 ((\u003cany\u003e elem[\u0027key\u0027]) instanceof OSKKey);\r\n  }\r\n\r\n  export function getKeyFrom(elem: Node): KeyElement {\r\n    if(isKey(elem)) {\r\n      return \u003cKeyElement\u003e elem;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  export class OSKKeySpec implements keyboards.LayoutKey {\r\n    id: string;\r\n\r\n    // Only set (within @keymanapp/keyboard-processor) for keys actually specified in a loaded layout\r\n    baseKeyID?: string;\r\n    coreID?: string;\r\n    elementID?: string;\r\n\r\n    text?: string;\r\n    sp?: number | keyboards.ButtonClass;\r\n    width: string;\r\n    layer?: string; // The key will derive its base modifiers from this property - may not equal the layer on which it is displayed.\r\n    nextlayer?: string;\r\n    pad?: string;\r\n    sk?: OSKKeySpec[];\r\n\r\n    constructor(id: string, text?: string, width?: string, sp?: number | keyboards.ButtonClass, nextlayer?: string, pad?: string) {\r\n      this.id = id;\r\n      this.text = text;\r\n      this.width = width ? width : \"50\";\r\n      this.sp = sp;\r\n      this.nextlayer = nextlayer;\r\n      this.pad = pad;\r\n    }\r\n  }\r\n\r\n  export abstract class OSKKey {\r\n    // Defines the PUA code mapping for the various \u0027special\u0027 modifier/control keys on keyboards.\r\n    // `specialCharacters` must be kept in sync with the same variable in builder.js. See also CompileKeymanWeb.pas: CSpecialText10\r\n    static readonly specialCharacters = {\r\n      \u0027*Shift*\u0027:    8,\r\n      \u0027*Enter*\u0027:    5,\r\n      \u0027*Tab*\u0027:      6,\r\n      \u0027*BkSp*\u0027:     4,\r\n      \u0027*Menu*\u0027:     11,\r\n      \u0027*Hide*\u0027:     10,\r\n      \u0027*Alt*\u0027:      25,\r\n      \u0027*Ctrl*\u0027:     1,\r\n      \u0027*Caps*\u0027:     3,\r\n      \u0027*ABC*\u0027:      16,\r\n      \u0027*abc*\u0027:      17,\r\n      \u0027*123*\u0027:      19,\r\n      \u0027*Symbol*\u0027:   21,\r\n      \u0027*Currency*\u0027: 20,\r\n      \u0027*Shifted*\u0027:  9,\r\n      \u0027*AltGr*\u0027:    2,\r\n      \u0027*TabLeft*\u0027:  7,\r\n      \u0027*LAlt*\u0027:     0x56,\r\n      \u0027*RAlt*\u0027:     0x57,\r\n      \u0027*LCtrl*\u0027:    0x58,\r\n      \u0027*RCtrl*\u0027:    0x59,\r\n      \u0027*LAltCtrl*\u0027:       0x60,\r\n      \u0027*RAltCtrl*\u0027:       0x61,\r\n      \u0027*LAltCtrlShift*\u0027:  0x62,\r\n      \u0027*RAltCtrlShift*\u0027:  0x63,\r\n      \u0027*AltShift*\u0027:       0x64,\r\n      \u0027*CtrlShift*\u0027:      0x65,\r\n      \u0027*AltCtrlShift*\u0027:   0x66,\r\n      \u0027*LAltShift*\u0027:      0x67,\r\n      \u0027*RAltShift*\u0027:      0x68,\r\n      \u0027*LCtrlShift*\u0027:     0x69,\r\n      \u0027*RCtrlShift*\u0027:     0x70,\r\n      // Added in Keyman 14.0.\r\n      \u0027*LTREnter*\u0027:       0x05, // Default alias of \u0027*Enter*\u0027.\r\n      \u0027*LTRBkSp*\u0027:        0x04, // Default alias of \u0027*BkSp*\u0027.\r\n      \u0027*RTLEnter*\u0027:       0x71,\r\n      \u0027*RTLBkSp*\u0027:        0x72,\r\n      \u0027*ShiftLock*\u0027:      0x73,\r\n      \u0027*ShiftedLock*\u0027:    0x74,\r\n      \u0027*ZWNJ*\u0027:           0x75, // If this one is specified, auto-detection will kick in.\r\n      \u0027*ZWNJiOS*\u0027:        0x75, // The iOS version will be used by default, but the\r\n      \u0027*ZWNJAndroid*\u0027:    0x76, // Android platform has its own default glyph.\r\n    };\r\n\r\n    static readonly BUTTON_CLASSES = [\r\n      \u0027default\u0027,\r\n      \u0027shift\u0027,\r\n      \u0027shift-on\u0027,\r\n      \u0027special\u0027,\r\n      \u0027special-on\u0027,\r\n      \u0027\u0027, // Key classes 5 through 7 are reserved for future use.\r\n      \u0027\u0027,\r\n      \u0027\u0027,\r\n      \u0027deadkey\u0027,\r\n      \u0027blank\u0027,\r\n      \u0027hidden\u0027\r\n    ];\r\n\r\n    static readonly HIGHLIGHT_CLASS = \u0027kmw-key-touched\u0027;\r\n    readonly spec: OSKKeySpec;\r\n\r\n    btn: KeyElement;\r\n    label: HTMLSpanElement;\r\n    square: HTMLDivElement;\r\n\r\n    /**\r\n     * The layer of the OSK on which the key is displayed.\r\n     */\r\n    readonly layer: string;\r\n\r\n    constructor(spec: OSKKeySpec, layer: string) {\r\n      this.spec = spec;\r\n      this.layer = layer;\r\n    }\r\n\r\n    abstract getId(): string;\r\n\r\n    /**\r\n     * Attach appropriate class to each key button, according to the layout\r\n     *\r\n     * @param       {Object=}   layout  source layout description (optional, sometimes)\r\n     */\r\n    public setButtonClass() {\r\n      let key = this.spec;\r\n      let btn = this.btn;\r\n\r\n      var n=0;\r\n      if(typeof key[\u0027dk\u0027] == \u0027string\u0027 \u0026\u0026 key[\u0027dk\u0027] == \u00271\u0027) {\r\n        n=8;\r\n      }\r\n\r\n      if(typeof key[\u0027sp\u0027] == \u0027string\u0027) {\r\n        n=parseInt(key[\u0027sp\u0027],10);\r\n      }\r\n\r\n      if(n \u003c 0 || n \u003e 10) {\r\n        n=0;\r\n      }\r\n\r\n      btn.className=\u0027kmw-key kmw-key-\u0027+OSKKey.BUTTON_CLASSES[n];\r\n    }\r\n\r\n    /**\r\n     * For keys with button classes that support toggle states, this method\r\n     * may be used to toggle which state the key\u0027s button class is in.\r\n     * -  shift  \u003c=\u003e  shift-on\r\n     * - special \u003c=\u003e special-on\r\n     * @param {boolean=} flag The new toggle state\r\n     */\r\n    public setToggleState(flag?: boolean) {\r\n      let btnClassId: number;\r\n      let classAsString: boolean;\r\n\r\n      if(classAsString = typeof this.spec[\u0027sp\u0027] == \u0027string\u0027) {\r\n        btnClassId = parseInt(this.spec[\u0027sp\u0027], 10);\r\n      } else {\r\n        btnClassId = this.spec[\u0027sp\u0027];\r\n      }\r\n\r\n      // 1 + 2:   shift  +  shift-on\r\n      // 3 + 4:  special + special-on\r\n      switch(OSKKey.BUTTON_CLASSES[btnClassId]) {\r\n        case \u0027shift\u0027:\r\n        case \u0027shift-on\u0027:\r\n          if(flag === undefined) {\r\n            flag = OSKKey.BUTTON_CLASSES[btnClassId] == \u0027shift\u0027;\r\n          }\r\n\r\n          this.spec[\u0027sp\u0027] = 1 + (flag ? 1 : 0);\r\n          break;\r\n        // Added in 15.0:  special key highlight toggling.\r\n        // Was _intended_ in earlier versions, but not actually implemented.\r\n        case \u0027special\u0027:\r\n        case \u0027special-on\u0027:\r\n          if(flag === undefined) {\r\n            flag = OSKKey.BUTTON_CLASSES[btnClassId] == \u0027special\u0027;\r\n          }\r\n\r\n          this.spec[\u0027sp\u0027] = 3 + (flag ? 1 : 0);\r\n          break;\r\n        default:\r\n          return;\r\n      }\r\n\r\n      if(classAsString) {\r\n        // KMW currently doesn\u0027t handle raw numbers for \u0027sp\u0027 properly.\r\n        this.spec[\u0027sp\u0027] = (\u0027\u0027 + this.spec[\u0027sp\u0027]) as keyboards.ButtonClass;\r\n      }\r\n\r\n      this.setButtonClass();\r\n    }\r\n\r\n    // \"Frame key\" - generally refers to non-linguistic keys on the keyboard\r\n    public isFrameKey(): boolean {\r\n      let classIndex = this.spec[\u0027sp\u0027] || 0;\r\n      switch(OSKKey.BUTTON_CLASSES[classIndex]) {\r\n        case \u0027default\u0027:\r\n        case \u0027deadkey\u0027:\r\n          // Note:  will (generally) include the spacebar.\r\n          return false;\r\n        default:\r\n          return true;\r\n      }\r\n    }\r\n\r\n    public allowsKeyTip(): boolean {\r\n      if(this.isFrameKey()) {\r\n        return false;\r\n      } else {\r\n        return !this.btn.classList.contains(\u0027kmw-spacebar\u0027);\r\n      }\r\n    }\r\n\r\n    public highlight(on: boolean) {\r\n      var classes=this.btn.classList;\r\n\r\n      if(on) {\r\n        if(!classes.contains(OSKKey.HIGHLIGHT_CLASS)) {\r\n          classes.add(OSKKey.HIGHLIGHT_CLASS);\r\n        }\r\n      } else {\r\n        classes.remove(OSKKey.HIGHLIGHT_CLASS);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Uses canvas.measureText to compute and return the width of the given text of given font in pixels.\r\n     *\r\n     * @param {String} text The text to be rendered.\r\n     * @param {String} style The CSSStyleDeclaration for an element to measure against, without modification.\r\n     *\r\n     * @see https://stackoverflow.com/questions/118241/calculate-text-width-with-javascript/21015393#21015393\r\n     * This version has been substantially modified to work for this particular application.\r\n     */\r\n    static getTextMetrics(text: string, emScale: number, style: {fontFamily?: string, fontSize: string}): TextMetrics {\r\n      // Since we may mutate the incoming style, let\u0027s make sure to copy it first.\r\n      // Only the relevant properties, though.\r\n      style = {\r\n        fontFamily: style.fontFamily,\r\n        fontSize: style.fontSize\r\n      };\r\n\r\n      // A final fallback - having the right font selected makes a world of difference.\r\n      if(!style.fontFamily) {\r\n        style.fontFamily = getComputedStyle(document.body).fontFamily;\r\n      }\r\n\r\n      if(!style.fontSize || style.fontSize == \"\") {\r\n        style.fontSize = \u00271em\u0027;\r\n      }\r\n\r\n      let fontFamily = style.fontFamily;\r\n      let fontSpec = getFontSizeStyle(style.fontSize);\r\n\r\n      var fontSize: string;\r\n      if(fontSpec.absolute) {\r\n        // We\u0027ve already got an exact size - use it!\r\n        fontSize = fontSpec.val + \u0027px\u0027;\r\n      } else {\r\n        fontSize = fontSpec.val * emScale + \u0027px\u0027;\r\n      }\r\n\r\n      // re-use canvas object for better performance\r\n      var canvas: HTMLCanvasElement = OSKKey.getTextMetrics[\u0027canvas\u0027] ||\r\n                                     (OSKKey.getTextMetrics[\u0027canvas\u0027] = document.createElement(\"canvas\"));\r\n      var context = canvas.getContext(\"2d\");\r\n      context.font = fontSize + \" \" + fontFamily;\r\n      var metrics = context.measureText(text);\r\n\r\n      return metrics;\r\n    }\r\n\r\n    /**\r\n     * Calculate the font size required for a key cap, scaling to fit longer text\r\n     * @param vkbd\r\n     * @param style     specification for the desired base font size\r\n     * @param override  if true, don\u0027t use the font spec from the button, just use the passed in spec\r\n     * @returns         font size as a style string\r\n     */\r\n    getIdealFontSize(vkbd: VisualKeyboard, style: {height?: string, fontFamily?: string, fontSize: string}, override?: boolean): string {\r\n      let buttonStyle = getComputedStyle(this.btn);\r\n      let keyWidth = parseFloat(buttonStyle.width);\r\n      let emScale = 1;\r\n\r\n      const originalSize = getFontSizeStyle(style.fontSize || \u00271em\u0027);\r\n\r\n      // Not yet available; it\u0027ll be handled in a later layout pass.\r\n      if(!buttonStyle.fontSize) {\r\n        // NOTE:  preserves old behavior for use in documentation keyboards, for now.\r\n        // Once we no longer need to maintain this code block, we can drop all current\r\n        // method parameters safely.\r\n        //\r\n        // Recompute the new width for use in autoscaling calculations below, just in case.\r\n        emScale = vkbd.getKeyEmFontSize();\r\n        keyWidth = this.getKeyWidth(vkbd);\r\n      } else if(!override) {\r\n        // When available, just use computedStyle instead.\r\n        style = buttonStyle;\r\n      }\r\n\r\n      let fontSpec = getFontSizeStyle(style.fontSize || \u00271em\u0027);\r\n      let metrics = OSKKey.getTextMetrics(this.spec.text, emScale, style);\r\n\r\n      const MAX_X_PROPORTION = 0.90;\r\n      const MAX_Y_PROPORTION = 0.90;\r\n      const X_PADDING = 2;\r\n      const Y_PADDING = 2;\r\n\r\n      var fontHeight: number, keyHeight: number;\r\n      if(metrics.fontBoundingBoxAscent) {\r\n        fontHeight = metrics.fontBoundingBoxAscent + metrics.fontBoundingBoxDescent;\r\n      }\r\n\r\n      let textHeight = fontHeight ? fontHeight + Y_PADDING : 0;\r\n      if(style.height \u0026\u0026 style.height.indexOf(\u0027px\u0027) != -1) {\r\n        keyHeight = Number.parseFloat(style.height.substring(0, style.height.indexOf(\u0027px\u0027)));\r\n      }\r\n\r\n      let xProportion = (keyWidth * MAX_X_PROPORTION) / (metrics.width + X_PADDING); // How much of the key does the text want to take?\r\n      let yProportion = textHeight \u0026\u0026 keyHeight ? (keyHeight * MAX_Y_PROPORTION) / textHeight : undefined;\r\n\r\n      var proportion: number = xProportion;\r\n      if(yProportion \u0026\u0026 yProportion \u003c xProportion) {\r\n        proportion = yProportion;\r\n      }\r\n\r\n      // Never upscale keys past the default - only downscale them.\r\n      // Proportion \u003c 1:  ratio of key width to (padded [loosely speaking]) text width\r\n      //                  maxProportion determines the \u0027padding\u0027 involved.\r\n      //\r\n      if(proportion \u003c 1) {\r\n        if(originalSize.absolute) {\r\n          return proportion * fontSpec.val + \u0027px\u0027;\r\n        } else {\r\n          return proportion * originalSize.val + \u0027em\u0027;\r\n        }\r\n      } else {\r\n        if(originalSize.absolute) {\r\n          return fontSpec.val + \u0027px\u0027;\r\n        } else {\r\n          return originalSize.val + \u0027em\u0027;\r\n        }\r\n      }\r\n    }\r\n\r\n    getKeyWidth(vkbd: VisualKeyboard): number {\r\n      let key = this.spec as keyboards.ActiveKey;\r\n      return key.proportionalWidth * vkbd.width;\r\n    }\r\n\r\n    /**\r\n     * Replace default key names by special font codes for modifier keys\r\n     *\r\n     *  @param  {string}  oldText\r\n     *  @return {string}\r\n     **/\r\n    protected renameSpecialKey(oldText: string, vkbd: VisualKeyboard): string {\r\n      // If a \u0027special key\u0027 mapping exists for the text, replace it with its corresponding special OSK character.\r\n      switch(oldText) {\r\n        case \u0027*ZWNJ*\u0027:\r\n          // Default ZWNJ symbol comes from iOS.  We\u0027d rather match the system defaults where\r\n          // possible / available though, and there\u0027s a different standard symbol on Android.\r\n          oldText = vkbd.device.OS == com.keyman.utils.OperatingSystem.Android ?\r\n            \u0027*ZWNJAndroid*\u0027 :\r\n            \u0027*ZWNJiOS*\u0027;\r\n          break;\r\n        case \u0027*Enter*\u0027:\r\n          oldText = vkbd.isRTL ? \u0027*RTLEnter*\u0027 : \u0027*LTREnter*\u0027;\r\n          break;\r\n        case \u0027*BkSp*\u0027:\r\n          oldText = vkbd.isRTL ? \u0027*RTLBkSp*\u0027 : \u0027*LTRBkSp*\u0027;\r\n          break;\r\n        default:\r\n          // do nothing.\r\n      }\r\n\r\n      let specialCodePUA = 0XE000 + VisualKeyboard.specialCharacters[oldText];\r\n\r\n      return VisualKeyboard.specialCharacters[oldText] ?\r\n        String.fromCharCode(specialCodePUA) :\r\n        oldText;\r\n    }\r\n\r\n\r\n    private unicodeKeyIdToString(id: string): string {\r\n      // This is similar to defaultOutput.ts:forUnicodeKeynames and could potentially\r\n      // be refactored in the future.\r\n      if(!id || id.substr(0,2) != \u0027U_\u0027) {\r\n        return null;\r\n      }\r\n\r\n      let result = \u0027\u0027;\r\n      const codePoints = id.substr(2).split(\u0027_\u0027);\r\n      for(let codePoint of codePoints) {\r\n        const codePointValue = parseInt(codePoint, 16);\r\n        if (((0x0 \u003c= codePointValue) \u0026\u0026 (codePointValue \u003c= 0x1F)) || ((0x80 \u003c= codePointValue) \u0026\u0026 (codePointValue \u003c= 0x9F))) {\r\n          continue;\r\n        } else {\r\n          // String.fromCharCode() is inadequate to handle the entire range of Unicode\r\n          // Someday after upgrading to ES2015, can use String.fromCodePoint()\r\n          result += String.kmwFromCharCode(codePointValue);\r\n        }\r\n      }\r\n      return result ? result : null;\r\n    }\r\n\r\n    // Produces a HTMLSpanElement with the key\u0027s actual text.\r\n    protected generateKeyText(vkbd: VisualKeyboard): HTMLSpanElement {\r\n      let spec = this.spec;\r\n\r\n      // Add OSK key labels\r\n      var keyText;\r\n      var t = document.createElement(\u0027span\u0027), ts=t.style;\r\n      if(spec[\u0027text\u0027] == null || spec[\u0027text\u0027] == \u0027\u0027) {\r\n        keyText=\u0027\\xa0\u0027;  // default:  nbsp.\r\n        if(typeof spec[\u0027id\u0027] == \u0027string\u0027) {\r\n          // If the ID\u0027s Unicode-based, just use that code.\r\n          keyText = this.unicodeKeyIdToString(spec[\u0027id\u0027]) || keyText;\r\n        }\r\n      } else {\r\n        keyText=spec[\u0027text\u0027];\r\n\r\n        // Unique layer-based transformation:  SHIFT-TAB uses a different glyph.\r\n        if(keyText == \u0027*Tab*\u0027 \u0026\u0026 this.layer == \u0027shift\u0027) {\r\n          keyText = \u0027*TabLeft*\u0027;\r\n        }\r\n      }\r\n\r\n      t.className=\u0027kmw-key-text\u0027;\r\n\r\n      let specialText = this.renameSpecialKey(keyText, vkbd);\r\n      if(specialText != keyText) {\r\n        // The keyboard wants to use the code for a special glyph defined by the SpecialOSK font.\r\n        keyText = specialText;\r\n        spec[\u0027font\u0027] = \"SpecialOSK\";\r\n      }\r\n\r\n      //Override font spec if set for this key in the layout\r\n      if(typeof spec[\u0027font\u0027] == \u0027string\u0027 \u0026\u0026 spec[\u0027font\u0027] != \u0027\u0027) {\r\n        ts.fontFamily=spec[\u0027font\u0027];\r\n      }\r\n\r\n      if(typeof spec[\u0027fontsize\u0027] == \u0027string\u0027 \u0026\u0026 spec[\u0027fontsize\u0027] != \u0027\u0027) {\r\n        ts.fontSize=spec[\u0027fontsize\u0027];\r\n      }\r\n\r\n      // For some reason, fonts will sometimes \u0027bug out\u0027 for the embedded iOS page if we\r\n      // instead assign fontFamily to the existing style \u0027ts\u0027.  (Occurs in iOS 12.)\r\n      let styleSpec: {fontFamily?: string, fontSize: string} = {fontSize: ts.fontSize};\r\n\r\n      if(ts.fontFamily) {\r\n        styleSpec.fontFamily = ts.fontFamily;\r\n      } else {\r\n        styleSpec.fontFamily = vkbd.fontFamily; // Helps with style sheet calculations.\r\n      }\r\n\r\n      // Check the key\u0027s display width - does the key visualize well?\r\n      let emScale = vkbd.getKeyEmFontSize();\r\n      var width: number = OSKKey.getTextMetrics(keyText, emScale, styleSpec).width;\r\n      if(width == 0 \u0026\u0026 keyText != \u0027\u0027 \u0026\u0026 keyText != \u0027\\xa0\u0027) {\r\n        // Add the Unicode \u0027empty circle\u0027 as a base support for needy diacritics.\r\n\r\n        // Disabled by mcdurdin 2020-10-19; dotted circle display is inconsistent on iOS/Safari\r\n        // at least and doesn\u0027t combine with diacritic marks. For consistent display, it may be\r\n        // necessary to build a custom font that does not depend on renderer choices for base\r\n        // mark display -- e.g. create marks with custom base included, potentially even on PUA\r\n        // code points and use those in rendering the OSK. See #3039 for more details.\r\n        // keyText = \u0027\\u25cc\u0027 + keyText;\r\n\r\n        if(vkbd.isRTL) {\r\n          // Add the RTL marker to ensure it displays properly.\r\n          keyText = \u0027\\u200f\u0027 + keyText;\r\n        }\r\n      }\r\n\r\n      ts.fontSize = this.getIdealFontSize(vkbd, styleSpec);\r\n\r\n      // Finalize the key\u0027s text.\r\n      t.innerText = keyText;\r\n\r\n      return t;\r\n    }\r\n\r\n    public isUnderTouch(input: InputEventCoordinate): boolean {\r\n      let x = input.x;\r\n      let y = input.y;\r\n\r\n      let btn = this.btn;\r\n      let x0 = dom.Utils.getAbsoluteX(btn);\r\n      let y0 = dom.Utils.getAbsoluteY(btn);\r\n      let x1 = x0 + btn.offsetWidth;\r\n      let y1 = y0 + btn.offsetHeight;\r\n\r\n      return (x \u003e x0 \u0026\u0026 x \u003c x1 \u0026\u0026 y \u003e y0 \u0026\u0026 y \u003c y1);\r\n    }\r\n\r\n    public refreshLayout(vkbd: VisualKeyboard) {\r\n      if(this.label) { // space bar may not define the text span!\r\n        this.label.style.fontSize = this.getIdealFontSize(vkbd, this.btn.style);\r\n      }\r\n    }\r\n  }\r\n}\r\n","/// \u003creference path=\"oskKey.ts\" /\u003e\r\n\r\nnamespace com.keyman.osk {\r\n  let Codes = com.keyman.text.Codes;\r\n\r\n  export class OSKBaseKey extends OSKKey {\r\n    private capLabel: HTMLDivElement;\r\n    public readonly row: OSKRow;\r\n\r\n    constructor(spec: OSKKeySpec, layer: string, row: OSKRow) {\r\n      super(spec, layer);\r\n      this.row = row;\r\n    }\r\n\r\n    getId(): string {\r\n      // Define each key element id by layer id and key id (duplicate possible for SHIFT - does it matter?)\r\n      return this.spec.elementID;\r\n    }\r\n\r\n    getCoreId(): string {\r\n      return this.spec.coreID;\r\n    }\r\n\r\n    getBaseId(): string {\r\n      return this.spec.baseKeyID;\r\n    }\r\n\r\n    // Produces a small reference label for the corresponding physical key on a US keyboard.\r\n    private generateKeyCapLabel(): HTMLDivElement {\r\n      // Create the default key cap labels (letter keys, etc.)\r\n      var x = Codes.keyCodes[this.spec.baseKeyID];\r\n      switch(x) {\r\n        // Converts the keyman key id code for common symbol keys into its representative ASCII code.\r\n        // K_COLON -\u003e K_BKQUOTE\r\n        case 186: x=59; break;\r\n        case 187: x=61; break;\r\n        case 188: x=44; break;\r\n        case 189: x=45; break;\r\n        case 190: x=46; break;\r\n        case 191: x=47; break;\r\n        case 192: x=96; break;\r\n        // K_LBRKT -\u003e K_QUOTE\r\n        case 219: x=91; break;\r\n        case 220: x=92; break;\r\n        case 221: x=93; break;\r\n        case 222: x=39; break;\r\n        default:\r\n          // No other symbol character represents a base key on the standard QWERTY English layout.\r\n          if(x \u003c 48 || x \u003e 90) {\r\n            x=0;\r\n          }\r\n      }\r\n\r\n      let q = document.createElement(\u0027div\u0027);\r\n      q.className=\u0027kmw-key-label\u0027;\r\n      if(x \u003e 0) {\r\n        q.innerText=String.fromCharCode(x);\r\n      } else {\r\n        // Keyman-only virtual keys have no corresponding physical key.\r\n        // So, no text for the key-cap.\r\n      }\r\n      return q;\r\n    }\r\n\r\n    private processSubkeys(btn: KeyElement, vkbd: VisualKeyboard) {\r\n      // Add reference to subkey array if defined\r\n      var bsn: number, bsk=btn[\u0027subKeys\u0027] = this.spec[\u0027sk\u0027];\r\n      // Transform any special keys into their PUA representations.\r\n      for(bsn=0; bsn\u003cbsk.length; bsn++) {\r\n        if(bsk[bsn][\u0027sp\u0027] == \u00271\u0027 || bsk[bsn][\u0027sp\u0027] == \u00272\u0027) {\r\n          var oldText=bsk[bsn][\u0027text\u0027];\r\n          bsk[bsn][\u0027text\u0027]=this.renameSpecialKey(oldText, vkbd);\r\n        }\r\n\r\n        // If a subkey doesn\u0027t have a defined layer property, copy it from the base key\u0027s layer by default.\r\n        if(!bsk[bsn].layer) {\r\n          bsk[bsn].layer = btn.key.layer\r\n        }\r\n      }\r\n\r\n      // If a subkey array is defined, add an icon\r\n      var skIcon = document.createElement(\u0027div\u0027);\r\n      skIcon.className=\u0027kmw-key-popup-icon\u0027;\r\n      //kDiv.appendChild(skIcon);\r\n      btn.appendChild(skIcon);\r\n    }\r\n\r\n    construct(vkbd: VisualKeyboard): HTMLDivElement {\r\n      let spec = this.spec;\r\n\r\n      let kDiv = document.createElement(\u0027div\u0027);\r\n      kDiv.className=\u0027kmw-key-square\u0027;\r\n\r\n      let btnEle = document.createElement(\u0027div\u0027);\r\n      let btn = this.btn = link(btnEle, new KeyData(this, spec[\u0027id\u0027]));\r\n\r\n      // Set button class\r\n      this.setButtonClass();\r\n\r\n      // Add the (US English) keycap label for layouts requesting display of underlying keys\r\n      let keyCap = this.capLabel = this.generateKeyCapLabel();\r\n      btn.appendChild(keyCap);\r\n\r\n      // Define each key element id by layer id and key id (duplicate possible for SHIFT - does it matter?)\r\n      btn.id=this.getId();\r\n\r\n      // Make sure the key text is the element\u0027s first child - processSubkeys()\r\n      // will add an extra element if subkeys exist, which can interfere with\r\n      // keyboard/language name display on the space bar!\r\n      btn.appendChild(this.label = this.generateKeyText(vkbd));\r\n\r\n      // Handle subkey-related tasks.\r\n      if(typeof(spec[\u0027sk\u0027]) != \u0027undefined\u0027 \u0026\u0026 spec[\u0027sk\u0027] != null) {\r\n        this.processSubkeys(btn, vkbd);\r\n      } else {\r\n        btn[\u0027subKeys\u0027]=null;\r\n      }\r\n\r\n      // Add text to button and button to placeholder div\r\n      kDiv.appendChild(btn);\r\n\r\n      // The \u0027return value\u0027 of this process.\r\n      return this.square = kDiv;\r\n    }\r\n\r\n    public refreshLayout(vkbd: VisualKeyboard) {\r\n      let key = this.spec as keyboards.ActiveKey;\r\n      this.square.style.width = vkbd.layoutWidth.scaledBy(key.proportionalWidth).styleString;\r\n      this.square.style.marginLeft = vkbd.layoutWidth.scaledBy(key.proportionalPad).styleString;\r\n      this.btn.style.width = vkbd.usesFixedWidthScaling ? this.square.style.width : \u0027100%\u0027;\r\n\r\n      if(vkbd.usesFixedHeightScaling) {\r\n        // Matches its row\u0027s height.\r\n        this.square.style.height = vkbd.internalHeight.scaledBy(this.row.heightFraction).styleString;\r\n      } else {\r\n        this.square.style.height = \u0027100%\u0027; // use the full row height\r\n      }\r\n\r\n      super.refreshLayout(vkbd);\r\n\r\n      let util = com.keyman.singleton.util;\r\n      const device = vkbd.device;\r\n      const resizeLabels = (device.OS == utils.OperatingSystem.iOS \u0026\u0026\r\n                            device.formFactor == utils.FormFactor.Phone\r\n                            \u0026\u0026 util.landscapeView());\r\n\r\n      // Rescale keycap labels on iPhone (iOS 7)\r\n      if(resizeLabels \u0026\u0026 this.capLabel) {\r\n        this.capLabel.style.fontSize = \u00276px\u0027;\r\n      }\r\n    }\r\n\r\n    public get displaysKeyCap(): boolean {\r\n      return this.capLabel \u0026\u0026 this.capLabel.style.display == \u0027block\u0027;\r\n    }\r\n\r\n    public set displaysKeyCap(flag: boolean) {\r\n      if(!this.capLabel) {\r\n        throw new Error(\"Key element not yet constructed; cannot display key cap\");\r\n      }\r\n      this.capLabel.style.display = flag ? \u0027block\u0027 : \u0027none\u0027;\r\n    }\r\n  }\r\n}\r\n","/// \u003creference path=\"oskBaseKey.ts\" /\u003e\r\n\r\nnamespace com.keyman.osk {\r\n  /**\r\n   * Models one row of one layer of the OSK (`VisualKeyboard`) for a keyboard.\r\n   */\r\n  export class OSKRow {\r\n    public readonly element: HTMLDivElement;\r\n    public readonly keys: OSKBaseKey[];\r\n    public readonly heightFraction: number;\r\n\r\n    public constructor(vkbd: VisualKeyboard,\r\n                       layerSpec: keyboards.ActiveLayer,\r\n                       rowSpec: keyboards.ActiveRow) {\r\n      const rDiv = this.element = document.createElement(\u0027div\u0027);\r\n      rDiv.className=\u0027kmw-key-row\u0027;\r\n\r\n      // Calculate default row height\r\n      this.heightFraction = 1 / layerSpec.row.length;\r\n\r\n      // Apply defaults, setting the width and other undefined properties for each key\r\n      const keys=rowSpec.key;\r\n      this.keys = [];\r\n\r\n      // Calculate actual key widths by multiplying by the OSK\u0027s width and rounding appropriately,\r\n      // adjusting the width of the last key to make the total exactly 100%.\r\n      // Overwrite the previously-computed percent.\r\n      // NB: the \u0027percent\u0027 suffix is historical, units are percent on desktop devices, but pixels on touch devices\r\n      // All key widths and paddings are rounded for uniformity\r\n      for(let j=0; j\u003ckeys.length; j++) {\r\n        const key = keys[j];\r\n        var keyObj = new OSKBaseKey(key as OSKKeySpec, layerSpec.id, this);\r\n\r\n        var element = keyObj.construct(vkbd);\r\n        this.keys.push(keyObj);\r\n\r\n        rDiv.appendChild(element);\r\n      }\r\n    }\r\n\r\n    public get displaysKeyCaps(): boolean {\r\n      if(this.keys.length \u003e 0) {\r\n        return this.keys[0].displaysKeyCap;\r\n      } else {\r\n        return undefined;\r\n      }\r\n    }\r\n\r\n    public set displaysKeyCaps(flag: boolean) {\r\n      for(const key of this.keys) {\r\n        key.displaysKeyCap = flag;\r\n      }\r\n    }\r\n\r\n    public refreshLayout(vkbd: VisualKeyboard) {\r\n      const rs = this.element.style;\r\n\r\n      const rowHeight = vkbd.internalHeight.scaledBy(this.heightFraction);\r\n      if(vkbd.usesFixedHeightScaling) {\r\n        rs.maxHeight=rs.lineHeight=rs.height=rowHeight.styleString;\r\n      }\r\n\r\n      // Only used for fixed-height scales at present.\r\n      const padRatio = 0.15;\r\n\r\n      const keyHeightBase = vkbd.usesFixedHeightScaling ? rowHeight : ParsedLengthStyle.forScalar(1);\r\n      const padTop = keyHeightBase.scaledBy(padRatio / 2);\r\n      const keyHeight = keyHeightBase.scaledBy(1 - padRatio);\r\n\r\n      for(const key of this.keys) {\r\n        const keySquare  = key.btn.parentElement;\r\n        const keyElement = key.btn;\r\n\r\n        // Set the kmw-key-square position\r\n        const kss = keySquare.style;\r\n        kss.height=kss.minHeight=keyHeightBase.styleString;\r\n\r\n        const kes = keyElement.style;\r\n        kes.top = padTop.styleString;\r\n        kes.height=kes.lineHeight=kes.minHeight=keyHeight.styleString;\r\n\r\n        if(keyElement.key) {\r\n          keyElement.key.refreshLayout(vkbd);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}","/// \u003creference path=\"oskRow.ts\" /\u003e\r\n\r\nnamespace com.keyman.osk {\r\n  export class OSKLayer {\r\n    public readonly element: HTMLDivElement;\r\n    public readonly rows: OSKRow[];\r\n    public readonly spec: keyboards.ActiveLayer;\r\n    public readonly nextlayer: string;\r\n\r\n    public readonly globeKey:    OSKBaseKey;\r\n    public readonly spaceBarKey: OSKBaseKey;\r\n    public readonly hideKey:     OSKBaseKey;\r\n    public readonly capsKey:     OSKBaseKey;\r\n    public readonly numKey:      OSKBaseKey;\r\n    public readonly scrollKey:   OSKBaseKey;\r\n\r\n    private _rowHeight: number;\r\n\r\n    public get rowHeight(): number {\r\n      return this._rowHeight;\r\n    }\r\n\r\n    public get id(): string {\r\n      return this.spec.id;\r\n    }\r\n\r\n    public constructor(vkbd: VisualKeyboard,\r\n                       layout: keyboards.ActiveLayout,\r\n                       layer: keyboards.ActiveLayer) {\r\n      this.spec = layer;\r\n\r\n      const gDiv = this.element = document.createElement(\u0027div\u0027);\r\n      const gs=gDiv.style;\r\n      gDiv.className=\u0027kmw-key-layer\u0027;\r\n\r\n      var nRows=layer[\u0027row\u0027].length;\r\n      if(nRows \u003e 4 \u0026\u0026 vkbd.device.formFactor == \u0027phone\u0027) {\r\n        gDiv.className = gDiv.className + \u0027 kmw-5rows\u0027;\r\n      }\r\n\r\n      // Set font for layer if defined in layout\r\n      gs.fontFamily = \u0027font\u0027 in layout ? layout[\u0027font\u0027] : \u0027\u0027;\r\n\r\n      this.nextlayer = gDiv[\u0027layer\u0027] = layer[\u0027id\u0027];\r\n      if(typeof layer[\u0027nextlayer\u0027] == \u0027string\u0027) {\r\n        // The gDiv[\u0027nextLayer\u0027] is no longer referenced in KMW 15.0+, but is\r\n        // maintained for partial back-compat in case any site devs actually\r\n        // relied on its value from prior versions.\r\n        //\r\n        // We won\u0027t pay attention to any mutations to the gDiv copy, though.\r\n        gDiv[\u0027nextLayer\u0027] = this.nextlayer = layer[\u0027nextlayer\u0027];\r\n      }\r\n\r\n      // Create a DIV for each row of the group\r\n      let rows=layer[\u0027row\u0027];\r\n      this.rows = [];\r\n\r\n      for(let i=0; i\u003crows.length; i++) {\r\n        let rowObj = new OSKRow(vkbd, layer, rows[i]);\r\n        rowObj.displaysKeyCaps = layout[\"displayUnderlying\"];\r\n        gDiv.appendChild(rowObj.element);\r\n        this.rows.push(rowObj);\r\n      }\r\n\r\n      // Identify and save references to the language key, hide keyboard key, and space bar\r\n      if(vkbd.device.touchable) {\r\n        this.globeKey  = this.findKey(\u0027K_LOPT\u0027);\r\n        this.hideKey   = this.findKey(\u0027K_ROPT\u0027);\r\n      }\r\n\r\n      // Define for both desktop and touchable OSK\r\n      this.spaceBarKey = this.findKey(\u0027K_SPACE\u0027);\r\n      this.capsKey     = this.findKey(\u0027K_CAPS\u0027);\r\n      this.numKey      = this.findKey(\u0027K_NUMLOCK\u0027);\r\n      this.scrollKey   = this.findKey(\u0027K_SCROLL\u0027);\r\n    }\r\n\r\n    /**\r\n     *  Find the OSKBaseKey representing the specified\r\n     *  key ID for the currently visible OSK layer\r\n     *\r\n     *  @param    {string}  keyId   key identifier\r\n     *  @return   {Object}          Reference to key\r\n     */\r\n    private findKey(keyId: string): OSKBaseKey {\r\n      for(const row of this.rows) {\r\n        for(const key of row.keys) {\r\n          if(key.getBaseId() == keyId) {\r\n            return key;\r\n          }\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n\r\n    public refreshLayout(vkbd: VisualKeyboard, layerHeight: number) {\r\n      // Check the heights of each row, in case different layers have different row counts.\r\n      const nRows = this.rows.length;\r\n      const rowHeight = this._rowHeight = Math.floor(layerHeight/(nRows == 0 ? 1 : nRows));\r\n\r\n      if(vkbd.usesFixedHeightScaling) {\r\n        this.element.style.height=(layerHeight)+\u0027px\u0027;\r\n      }\r\n\r\n      for(let nRow=0; nRow\u003cnRows; nRow++) {\r\n        const oskRow = this.rows[nRow];\r\n        const bottom = (nRows-nRow-1)*rowHeight+1;\r\n\r\n        if(vkbd.usesFixedHeightScaling) {\r\n          // Calculate the exact vertical coordinate of the row\u0027s center.\r\n          this.spec.row[nRow].proportionalY = ((layerHeight - bottom) - rowHeight/2) / layerHeight;\r\n\r\n          if(nRow == nRows-1) {\r\n            oskRow.element.style.bottom = \u00271px\u0027;\r\n          }\r\n        }\r\n\r\n        oskRow.refreshLayout(vkbd);\r\n      }\r\n    }\r\n  }\r\n}\r\n","/// \u003creference path=\"oskLayer.ts\" /\u003e\r\n\r\nnamespace com.keyman.osk {\r\n  export class OSKLayerGroup {\r\n    public readonly element: HTMLDivElement;\r\n    public readonly layers: {[layerID: string]: OSKLayer} = {};\r\n\r\n    public constructor(vkbd: VisualKeyboard, keyboard: keyboards.Keyboard, formFactor: utils.FormFactor) {\r\n      let layout = keyboard.layout(formFactor);\r\n\r\n      const lDiv = this.element = document.createElement(\u0027div\u0027);\r\n      const ls=lDiv.style;\r\n\r\n      // Set OSK box default style\r\n      lDiv.className=\u0027kmw-key-layer-group\u0027;\r\n\r\n      // Return empty DIV if no layout defined\r\n      if(layout == null) {\r\n        return;\r\n      }\r\n\r\n      // Set default OSK font size (Build 344, KMEW-90)\r\n      let layoutFS = layout[\u0027fontsize\u0027];\r\n      if(typeof layoutFS == \u0027undefined\u0027 || layoutFS == null || layoutFS == \u0027\u0027) {\r\n        ls.fontSize=\u00271em\u0027;\r\n      } else {\r\n        ls.fontSize=layout[\u0027fontsize\u0027];\r\n      }\r\n\r\n      // Create a separate OSK div for each OSK layer, only one of which will ever be visible\r\n      var n: number, i: number, j: number;\r\n      var layers: keyboards.LayoutLayer[];\r\n\r\n      layers=layout[\u0027layer\u0027];\r\n\r\n      // Set key default attributes (must use exportable names!)\r\n      var tKey=vkbd.getDefaultKeyObject();\r\n      tKey[\u0027fontsize\u0027]=ls.fontSize;\r\n\r\n      for(n=0; n\u003clayers.length; n++) {\r\n        let layer=layers[n] as keyboards.ActiveLayer;\r\n        const layerObj = new OSKLayer(vkbd, layout, layer);\r\n        this.layers[layer.id] = layerObj;\r\n\r\n        // Always make the first layer visible\r\n        layerObj.element.style.display = (n==0 ? \u0027block\u0027 : \u0027none\u0027);\r\n\r\n        // Add layer to group\r\n        lDiv.appendChild(layerObj.element);\r\n      }\r\n    }\r\n  }\r\n}","namespace com.keyman.osk.browser {\r\n  export class KeyTip implements com.keyman.osk.KeyTip {\r\n    public readonly element: HTMLDivElement;\r\n    public key: KeyElement;\r\n    public state: boolean = false;\r\n\r\n    //  -----\r\n    // |     | \u003c-- tip\r\n    // |  x  | \u003c-- label\r\n    // |_   _|\r\n    //  |   |\r\n    //  |   |  \u003c-- cap\r\n    //  |___|\r\n\r\n    private readonly cap: HTMLDivElement;\r\n    private readonly tip: HTMLDivElement;\r\n    private readonly label: HTMLSpanElement;\r\n\r\n    private readonly constrain: boolean;\r\n\r\n    /**\r\n     *\r\n     * @param constrain keep the keytip within the bounds of the overall OSK.\r\n     *                  Will probably be handled via function in a later pass.\r\n     */\r\n    constructor(constrain: boolean) {\r\n      let tipElement = this.element=document.createElement(\u0027div\u0027);\r\n      tipElement.className=\u0027kmw-keytip\u0027;\r\n      tipElement.id = \u0027kmw-keytip\u0027;\r\n\r\n      // The following style is critical, so do not rely on external CSS\r\n      tipElement.style.pointerEvents=\u0027none\u0027;\r\n      tipElement.style.display=\u0027none\u0027;\r\n\r\n      tipElement.appendChild(this.tip = document.createElement(\u0027div\u0027));\r\n      tipElement.appendChild(this.cap = document.createElement(\u0027div\u0027));\r\n      this.tip.appendChild(this.label = document.createElement(\u0027span\u0027));\r\n\r\n      this.tip.className = \u0027kmw-keytip-tip\u0027;\r\n      this.cap.className = \u0027kmw-keytip-cap\u0027;\r\n      this.label.className = \u0027kmw-keytip-label\u0027;\r\n\r\n      this.constrain = constrain;\r\n    }\r\n\r\n    show(key: KeyElement, on: boolean, vkbd: VisualKeyboard) {\r\n      let keyman = com.keyman.singleton;\r\n      let util = keyman.util;\r\n\r\n      // Create and display the preview\r\n      // If !key.offsetParent, the OSK is probably hidden.  Either way, it\u0027s a half-\r\n      // decent null-guard check.\r\n      if(on \u0026\u0026 key.offsetParent) {\r\n        // The key element is positioned relative to its key-square, which is,\r\n        // in turn, relative to its row.  Rows take 100% width, so this is sufficient.\r\n        //\r\n        let rowElement = (key.key as OSKBaseKey).row.element;\r\n\r\n        // May need adjustment for borders if ever enabled for the desktop form-factor target.\r\n        let rkey = key.getClientRects()[0], rrow = rowElement.getClientRects()[0];\r\n        let xLeft = rkey.left - rrow.left,\r\n            xWidth = rkey.width,\r\n            xHeight = rkey.height,\r\n            kc = key.key.label,\r\n            previewFontScale = 1.8;\r\n\r\n        let kts = this.element.style;\r\n\r\n        // Roughly matches how the subkey positioning is set.\r\n        const _Box = vkbd.element.parentNode as HTMLDivElement;\r\n        const _BoxRect = _Box.getBoundingClientRect();\r\n        const keyRect = key.getBoundingClientRect();\r\n        let y = (keyRect.bottom - _BoxRect.top + 1);\r\n        let ySubPixelPadding = y - Math.floor(y);\r\n\r\n        // Canvas dimensions must be set explicitly to prevent clipping\r\n        // This gives us exactly the same number of pixels on left and right\r\n        let canvasWidth = xWidth + Math.ceil(xWidth * 0.3) * 2;\r\n        let canvasHeight = Math.ceil(2.3 * xHeight) + (ySubPixelPadding); //\r\n\r\n        kts.top = \u0027auto\u0027;\r\n        kts.bottom = Math.floor(keyman.osk.computedHeight - y) + \u0027px\u0027;\r\n        kts.textAlign = \u0027center\u0027;\r\n        kts.overflow = \u0027visible\u0027;\r\n        kts.fontFamily = util.getStyleValue(kc,\u0027font-family\u0027);\r\n        kts.width = canvasWidth+\u0027px\u0027;\r\n        kts.height = canvasHeight+\u0027px\u0027;\r\n\r\n        var px=util.getStyleInt(kc, \u0027font-size\u0027);\r\n        if(px != 0) {\r\n          let popupFS = previewFontScale * px;\r\n          let scaleStyle = {\r\n            fontFamily: kts.fontFamily,\r\n            fontSize: popupFS + \u0027px\u0027,\r\n            height: 1.6 * xHeight + \u0027px\u0027 // as opposed to the canvas height of 2.3 * xHeight.\r\n          };\r\n\r\n          kts.fontSize = key.key.getIdealFontSize(vkbd, scaleStyle, true);\r\n        }\r\n\r\n        this.label.textContent = kc.textContent;\r\n\r\n        // Adjust shape if at edges\r\n        var xOverflow = (canvasWidth - xWidth) / 2;\r\n        if(xLeft \u003c xOverflow) {\r\n          this.cap.style.left = \u00271px\u0027;\r\n          xLeft += xOverflow - 1;\r\n        } else if(xLeft \u003e window.innerWidth - xWidth - xOverflow) {\r\n          this.cap.style.left = (canvasWidth - xWidth - 1) + \u0027px\u0027;\r\n          xLeft -= xOverflow - 1;\r\n        } else {\r\n          this.cap.style.left = xOverflow + \u0027px\u0027;\r\n        }\r\n\r\n        kts.left=(xLeft - xOverflow) + \u0027px\u0027;\r\n\r\n        let cs = getComputedStyle(this.element);\r\n        let oskHeight = keyman.osk.computedHeight;\r\n        let bottomY = parseFloat(cs.bottom);\r\n        let tipHeight = parseFloat(cs.height);\r\n        let halfHeight = Math.ceil(canvasHeight / 2);\r\n\r\n        this.cap.style.width = xWidth + \u0027px\u0027;\r\n        this.tip.style.height = halfHeight + \u0027px\u0027;\r\n\r\n        this.cap.style.top = (halfHeight - 3) + \u0027px\u0027;\r\n        this.cap.style.height = (keyRect.bottom - _BoxRect.top - Math.floor(y - canvasHeight) - (halfHeight)) + \u0027px\u0027; //(halfHeight + 3 + ySubPixelPadding) + \u0027px\u0027;\r\n\r\n        if(this.constrain \u0026\u0026 tipHeight + bottomY \u003e oskHeight) {\r\n          const delta = tipHeight + bottomY - oskHeight;\r\n          kts.height = (canvasHeight-delta) + \u0027px\u0027;\r\n          const hx = Math.max(0, (canvasHeight-delta)-(canvasHeight/2) + 2);\r\n          this.cap.style.height = hx + \u0027px\u0027;\r\n        }\r\n\r\n        kts.display = \u0027block\u0027;\r\n      } else { // Hide the key preview\r\n        this.element.style.display = \u0027none\u0027;\r\n      }\r\n\r\n      // Save the key preview state\r\n      this.key = key;\r\n      this.state = on;\r\n    }\r\n  }\r\n}","/// \u003creference path=\"../oskKey.ts\" /\u003e\r\n\r\nnamespace com.keyman.osk.browser {\r\n  export class OSKSubKey extends OSKKey {\r\n    constructor(spec: OSKKeySpec, layer: string) {\r\n      if(typeof(layer) != \u0027string\u0027 || layer == \u0027\u0027) {\r\n        throw \"The \u0027layer\u0027 parameter for subkey construction must be properly defined.\";\r\n      }\r\n\r\n      super(spec, layer);\r\n    }\r\n\r\n    getId(): string {\r\n      // Create (temporarily) unique ID by prefixing \u0027popup-\u0027 to actual key ID\r\n      return \u0027popup-\u0027+this.layer+\u0027-\u0027+this.spec[\u0027id\u0027];\r\n    }\r\n\r\n    construct(osk: VisualKeyboard, baseKey: KeyElement, topMargin: boolean): HTMLDivElement {\r\n      let spec = this.spec;\r\n\r\n      let kDiv=document.createElement(\u0027div\u0027);\r\n      let tKey = osk.getDefaultKeyObject();\r\n      let ks=kDiv.style;\r\n\r\n      for(var tp in tKey) {\r\n        if(typeof spec[tp] != \u0027string\u0027) {\r\n          spec[tp]=tKey[tp];\r\n        }\r\n      }\r\n\r\n      kDiv.className=\u0027kmw-key-square-ex\u0027;\r\n      if(topMargin) {\r\n        ks.marginTop=\u00275px\u0027;\r\n      }\r\n\r\n      if(typeof spec[\u0027width\u0027] != \u0027undefined\u0027) {\r\n        ks.width=(parseInt(spec[\u0027width\u0027],10)*baseKey.offsetWidth/100)+\u0027px\u0027;\r\n      } else {\r\n        ks.width=baseKey.offsetWidth+\u0027px\u0027;\r\n      }\r\n      ks.height=baseKey.offsetHeight+\u0027px\u0027;\r\n\r\n      let btnEle=document.createElement(\u0027div\u0027);\r\n      let btn = this.btn = link(btnEle, new KeyData(this, spec[\u0027id\u0027]));\r\n\r\n      this.setButtonClass();\r\n      btn.id = this.getId();\r\n\r\n      // Must set button size (in px) dynamically, not from CSS\r\n      let bs=btn.style;\r\n      bs.height=ks.height;\r\n      bs.lineHeight=baseKey.style.lineHeight;\r\n      bs.width=ks.width;\r\n\r\n      // Must set position explicitly, at least for Android\r\n      bs.position=\u0027absolute\u0027;\r\n\r\n      btn.appendChild(this.label = this.generateKeyText(osk));\r\n      kDiv.appendChild(btn);\r\n\r\n      return this.square = kDiv;\r\n    }\r\n\r\n    public allowsKeyTip(): boolean {\r\n      return false;\r\n    }\r\n  }\r\n}","/// \u003creference path=\"oskSubKey.ts\" /\u003e\r\n/// \u003creference path=\"../realizedGesture.interface.ts\" /\u003e\r\n\r\nnamespace com.keyman.osk.browser {\r\n  /**\r\n   * Represents a \u0027realized\u0027 longpress gesture\u0027s default implementation\r\n   * within KeymanWeb.  Once a touch sequence has been confirmed to\r\n   * correspond to a longpress gesture, implementations of this class\r\n   * provide the following:\r\n   * * The UI needed to present a subkey menu\r\n   * * The state management needed to present feedback about the\r\n   * currently-selected subkey to the user\r\n   * * A `Promise` that will resolve to the user\u0027s selected subkey\r\n   * once the longpress operation is complete.\r\n   *\r\n   * As selection of the subkey occurs after the subkey popup is\r\n   * displayed, selection of the subkey is inherently asynchronous.\r\n   * The `Promise` may also resolve to `null` if the user indicates\r\n   * the desire to cancel subkey selection.\r\n   */\r\n  export class SubkeyPopup implements RealizedGesture {\r\n    public readonly element: HTMLDivElement;\r\n    public readonly shim: HTMLDivElement;\r\n\r\n    private vkbd: VisualKeyboard;\r\n    private currentSelection: KeyElement;\r\n\r\n    private callout: HTMLDivElement;\r\n\r\n    public readonly baseKey: KeyElement;\r\n    public readonly promise: Promise\u003ctext.KeyEvent\u003e;\r\n\r\n    // Resolves the promise that generated this SubkeyPopup.\r\n    private resolver: (keyEvent: text.KeyEvent) =\u003e void;\r\n\r\n    constructor(vkbd: VisualKeyboard, e: KeyElement) {\r\n      let keyman = com.keyman.singleton;\r\n      let _this = this;\r\n\r\n      this.promise = new Promise\u003ctext.KeyEvent\u003e(function(resolve) {\r\n        _this.resolver = resolve;\r\n      })\r\n\r\n      this.vkbd = vkbd;\r\n      this.baseKey = e;\r\n\r\n      // If the user doesn\u0027t move their finger and releases, we\u0027ll output the base key\r\n      // by default.\r\n      this.currentSelection = e;\r\n      e.key.highlight(true);\r\n\r\n      // A tag we directly set on a key element during its construction.\r\n      let subKeySpec: OSKKeySpec[] = e[\u0027subKeys\u0027];\r\n\r\n      // The holder is position:fixed, but the keys do not need to be, as no scrolling\r\n      // is possible while the array is visible.  So it is simplest to let the keys have\r\n      // position:static and display:inline-block\r\n      var subKeys = this.element = document.createElement(\u0027div\u0027);\r\n\r\n      var i;\r\n      subKeys.id=\u0027kmw-popup-keys\u0027;\r\n\r\n      // #3718: No longer prepend base key to popup array\r\n\r\n      // Must set position dynamically, not in CSS\r\n      var ss=subKeys.style;\r\n\r\n      // Set key font according to layout, or defaulting to OSK font\r\n      // (copied, not inherited, since OSK is not a parent of popup keys)\r\n      ss.fontFamily=vkbd.fontFamily;\r\n\r\n      // Copy the font size from the parent key, allowing for style inheritance\r\n      ss.fontSize=keyman.util.getStyleValue(e,\u0027font-size\u0027);\r\n      ss.visibility=\u0027hidden\u0027;\r\n\r\n      var nKeys=subKeySpec.length,nRows,nCols;\r\n      nRows=Math.min(Math.ceil(nKeys/9),2);\r\n      nCols=Math.ceil(nKeys/nRows);\r\n      ss.width=(nCols*e.offsetWidth+nCols*5)+\u0027px\u0027;\r\n\r\n      // Add nested button elements for each sub-key\r\n      for(i=0; i\u003cnKeys; i++) {\r\n        var needsTopMargin = false;\r\n        let nRow=Math.floor(i/nCols);\r\n        if(nRows \u003e 1 \u0026\u0026 nRow \u003e 0) {\r\n          needsTopMargin = true;\r\n        }\r\n\r\n        let layer = e[\u0027key\u0027].layer;\r\n        if(typeof(layer) != \u0027string\u0027 || layer == \u0027\u0027) {\r\n          // Use the currently-active layer.\r\n          layer = vkbd.layerId;\r\n        }\r\n        let keyGenerator = new OSKSubKey(subKeySpec[i], layer);\r\n        let kDiv = keyGenerator.construct(vkbd, \u003cKeyElement\u003e e, needsTopMargin);\r\n\r\n        subKeys.appendChild(kDiv);\r\n      }\r\n\r\n      // And add a filter to fade main keyboard\r\n      this.shim = document.createElement(\u0027div\u0027);\r\n      this.shim.id = \u0027kmw-popup-shim\u0027;\r\n\r\n      // Highlight the duplicated base key or ideal subkey (if a phone)\r\n      if(vkbd.device.formFactor == utils.FormFactor.Phone) {\r\n        this.selectDefaultSubkey(vkbd, e, subKeys /* == this.element */);\r\n      }\r\n    }\r\n\r\n    finalize(input: InputEventCoordinate) {\r\n      if(this.resolver) {\r\n        let keyEvent: text.KeyEvent = null;\r\n        if(this.currentSelection) {\r\n          keyEvent = this.vkbd.initKeyEvent(this.currentSelection, input);\r\n          this.currentSelection.key.highlight(false);\r\n        }\r\n        this.resolver(keyEvent);\r\n      }\r\n      this.resolver = null;\r\n    }\r\n\r\n    reposition(vkbd: VisualKeyboard) {\r\n      let keyman = com.keyman.singleton;\r\n\r\n      let subKeys = this.element;\r\n      let e = this.baseKey;\r\n\r\n      // And correct its position with respect to that element\r\n      const _Box = vkbd.element.offsetParent as HTMLDivElement;\r\n      let rowElement = (e.key as OSKBaseKey).row.element;\r\n      let ss=subKeys.style;\r\n      var x = e.offsetLeft + (\u003cHTMLElement\u003ee.offsetParent).offsetLeft + 0.5*(e.offsetWidth-subKeys.offsetWidth);\r\n      var xMax = keyman.osk.computedWidth - subKeys.offsetWidth;\r\n\r\n      if(x \u003e xMax) {\r\n        x=xMax;\r\n      }\r\n      if(x \u003c 0) {\r\n        x=0;\r\n      }\r\n      ss.left=x+\u0027px\u0027;\r\n\r\n      let _BoxRect = _Box.getBoundingClientRect();\r\n      let rowElementRect = rowElement.getBoundingClientRect();\r\n      ss.top = (rowElementRect.top - _BoxRect.top - subKeys.offsetHeight - 3) + \u0027px\u0027;\r\n\r\n      // Make the popup keys visible\r\n      ss.visibility=\u0027visible\u0027;\r\n\r\n      // For now, should only be true (in production) when keyman.isEmbedded == true.\r\n      let constrainPopup = keyman.isEmbedded;\r\n\r\n      let cs = getComputedStyle(subKeys);\r\n      let topY = parseFloat(cs.top);\r\n\r\n      // Adjust the vertical position of the popup to keep it within the\r\n      // bounds of the keyboard rectangle, when on iPhone (system keyboard)\r\n      const topOffset = 0; // Set this when testing constrainPopup, e.g. to -80px\r\n      let delta = 0;\r\n      if(topY \u003c topOffset \u0026\u0026 constrainPopup) {\r\n        delta = topOffset - topY;\r\n        ss.top = topOffset + \u0027px\u0027;\r\n      }\r\n\r\n      // Add the callout\r\n      if(vkbd.device.formFactor == utils.FormFactor.Phone \u0026\u0026 vkbd.device.OS == utils.OperatingSystem.iOS) {\r\n        this.callout = this.addCallout(e, delta);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Add a callout for popup keys (if KeymanWeb on a phone device)\r\n     *\r\n     * @param   {Object}  key   HTML key element\r\n     * @return  {Object}        callout object\r\n     */\r\n    addCallout(key: KeyElement, delta?: number): HTMLDivElement {\r\n      let keyman = com.keyman.singleton;\r\n\r\n      delta = delta || 0;\r\n\r\n      let calloutHeight = key.offsetHeight - delta + 6;\r\n\r\n      if(calloutHeight \u003e 0) {\r\n        var cc = document.createElement(\u0027div\u0027), ccs = cc.style;\r\n        cc.id = \u0027kmw-popup-callout\u0027;\r\n        keyman.osk._Box.appendChild(cc);\r\n\r\n        // Create the callout\r\n        let keyRect = key.getBoundingClientRect();\r\n        let _BoxRect = keyman.osk._Box.getBoundingClientRect();\r\n\r\n        // Set position and style\r\n        // We\u0027re going to adjust the top of the box to ensure it stays\r\n        // pixel aligned, otherwise we can get antialiasing artifacts\r\n        // that look ugly\r\n        let top = Math.floor(keyRect.top - _BoxRect.top - 9 + delta);\r\n        ccs.top = top + \u0027px\u0027;\r\n        ccs.left = (keyRect.left - _BoxRect.left) + \u0027px\u0027;\r\n        ccs.width = keyRect.width + \u0027px\u0027;\r\n        ccs.height = (keyRect.bottom - _BoxRect.top - top - 1) + \u0027px\u0027; //(height - 1) + \u0027px\u0027;\r\n\r\n        // Return callout element, to allow removal later\r\n        return cc;\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    selectDefaultSubkey(vkbd: VisualKeyboard, baseKey: KeyElement, popupBase: HTMLElement) {\r\n      var bk: KeyElement;\r\n      let subkeys = baseKey[\u0027subKeys\u0027];\r\n      for(let i=0; i \u003c subkeys.length; i++) {\r\n        let skSpec = subkeys[i];\r\n        let skElement = \u003cKeyElement\u003e popupBase.childNodes[i].firstChild;\r\n\r\n        // Preference order:\r\n        // #1:  if a default subkey has been specified, select it.  (pending, for 15.0+)\r\n        // #2:  if no default subkey is specified, default to a subkey with the same\r\n        //      key ID and layer / modifier spec.\r\n        //if(skSpec.isDefault) { TODO for 15.0\r\n        //  bk = skElement;\r\n        //  break;\r\n        //} else\r\n        if(!baseKey.key || !baseKey.key.spec) {\r\n          continue;\r\n        }\r\n\r\n        if(skSpec.elementID == baseKey.key.spec.elementID) {\r\n          bk = skElement;\r\n          break; // Best possible match has been found.  (Disable \u0027break\u0027 once above block is implemented.)\r\n        }\r\n      }\r\n\r\n      if(bk) {\r\n        vkbd.keyPending = bk;\r\n        // Subkeys never get key previews, so we can directly highlight the subkey.\r\n        bk.key.highlight(true);\r\n      }\r\n    }\r\n\r\n    isVisible(): boolean {\r\n      return this.element.style.visibility == \u0027visible\u0027;\r\n    }\r\n\r\n    clear() {\r\n      // Discard the reference to the Promise\u0027s resolve method, allowing\r\n      // GC to clean it up.  The corresponding Promise\u0027s contract allows\r\n      // passive cancellation.\r\n      this.resolver = null;\r\n\r\n      // Remove the displayed subkey array, if any\r\n      if(this.element.parentNode) {\r\n        this.element.parentNode.removeChild(this.element);\r\n      }\r\n\r\n      if(this.shim.parentNode) {\r\n        this.shim.parentNode.removeChild(this.shim);\r\n      }\r\n\r\n      if(this.callout \u0026\u0026 this.callout.parentNode) {\r\n        this.callout.parentNode.removeChild(this.callout);\r\n      }\r\n    }\r\n\r\n    updateTouch(input: InputEventCoordinate) {\r\n      this.currentSelection = null;\r\n      this.baseKey.key.highlight(false);\r\n\r\n      for(let i=0; i \u003c this.baseKey[\u0027subKeys\u0027].length; i++) {\r\n        try {\r\n          let sk = this.element.childNodes[i].firstChild as KeyElement;\r\n\r\n          let onKey = sk.key.isUnderTouch(input);\r\n          if(onKey) {\r\n            this.currentSelection = sk;\r\n          }\r\n          sk.key.highlight(onKey);\r\n        } catch(ex) {\r\n          if(ex.message) {\r\n            console.error(\"Unexpected error when attempting to update selected subkey:\" + ex.message);\r\n          } else {\r\n            console.error(\"Unexpected error (and error type) when attempting to update selected subkey.\");\r\n          }\r\n        }\r\n      }\r\n\r\n      // Use the popup duplicate of the base key if a phone with a visible popup array\r\n      if(!this.currentSelection \u0026\u0026 this.baseKey.key.isUnderTouch(input)) {\r\n        this.baseKey.key.highlight(true);\r\n        this.currentSelection = this.baseKey;\r\n      }\r\n    }\r\n  }\r\n}\r\n","/// \u003creference path=\"subkeyPopup.ts\" /\u003e\r\n/// \u003creference path=\"../pendingGesture.interface.ts\" /\u003e\r\n\r\nnamespace com.keyman.osk.browser {\r\n  /**\r\n   * (Conceptually) represents a finite-state-machine that determines\r\n   * whether or not a series of touch events corresponds to a longpress\r\n   * touch input.  The `resolve` method may be used to trigger the\r\n   * subkey menu early, as with the upward quick-display shortcut.\r\n   *\r\n   * This is the default implementation of longpress behavior for KMW.\r\n   * Alterate implementations are modeled through the `embedded`\r\n   * namespace\u0027s equivalent, which is designed to facilitate custom\r\n   * modeling for such gestures.\r\n   *\r\n   * Once the conditions to recognize a longpress gesture have been\r\n   * fulfilled, this class\u0027s `promise` will resolve with a `SubkeyPopup`\r\n   * matching the gesture\u0027s \u0027base\u0027 key, which itself provides a\r\n   * `promise` field that will resolve to a `KeyEvent` once the touch\r\n   * sequence is completed.\r\n   */\r\n  export class PendingLongpress implements PendingGesture {\r\n    public readonly baseKey: KeyElement;\r\n    public readonly promise: Promise\u003cSubkeyPopup\u003e;\r\n\r\n    public readonly subkeyUI: SubkeyPopup;\r\n\r\n    private readonly vkbd: VisualKeyboard;\r\n    private resolver: (subkeyPopup: SubkeyPopup) =\u003e void;\r\n\r\n    private timerId: number;\r\n    private popupDelay: number = 500;\r\n\r\n    constructor(vkbd: VisualKeyboard, baseKey: KeyElement) {\r\n      this.vkbd = vkbd;\r\n      this.baseKey = baseKey;\r\n\r\n      let _this = this;\r\n      this.promise = new Promise\u003cSubkeyPopup\u003e(function(resolve, reject) {\r\n        _this.resolver = resolve;\r\n        // After the timeout, it\u0027s no longer deferred; it\u0027s being fulfilled.\r\n        // Even if the actual subkey itself is still async.\r\n        _this.timerId = window.setTimeout(_this.resolve.bind(_this), _this.popupDelay);\r\n      });\r\n    }\r\n\r\n    public cancel() {\r\n      if(this.timerId) {\r\n        window.clearTimeout(this.timerId);\r\n        this.timerId = null;\r\n      }\r\n\r\n      if(this.resolver) {\r\n        this.resolver(null);\r\n        this.resolver = null;\r\n      }\r\n    }\r\n\r\n    public resolve() {\r\n      // User has flicked up to get to the longpress, before\r\n      // the timeout has expired. We need to cancel the timeout.\r\n      // See #5950\r\n      if(this.timerId) {\r\n        window.clearTimeout(this.timerId);\r\n        this.timerId = null;\r\n      }\r\n\r\n      if(this.resolver) {\r\n        this.resolver(new SubkeyPopup(this.vkbd, this.baseKey));\r\n      }\r\n    }\r\n  }\r\n}\r\n","/// \u003creference path=\"../pendingGesture.interface.ts\" /\u003e\r\n/// \u003creference path=\"../visualKeyboard.ts\" /\u003e\r\n\r\nnamespace com.keyman.osk {\r\n\r\n  export enum PendingMultiTapState { Waiting, Realized, Cancelled };\r\n  /**\r\n   * Implements the multi-tap gesture, which is a series of taps on a single key\r\n   * (based on key id substring in the case of the shift key), within a\r\n   * specified timeout period.\r\n   */\r\n  export class PendingMultiTap implements PendingGesture {\r\n    public readonly vkbd: VisualKeyboard;\r\n    public readonly baseKey: KeyElement;\r\n    public readonly count: number;\r\n    private timerId;\r\n    private _touches = 1; // we start the multitap with a single touch\r\n    private _state: PendingMultiTapState = PendingMultiTapState.Waiting;\r\n    private _timeout: Promise\u003cvoid\u003e;\r\n    private cancelDelayFactor = 125; // 125msec * count\r\n\r\n    public get timeout() {\r\n      return this._timeout;\r\n    }\r\n    public get realized() {\r\n      return this._state == PendingMultiTapState.Realized;\r\n    }\r\n    public get cancelled() {\r\n      return this._state == PendingMultiTapState.Cancelled;\r\n    }\r\n\r\n    /**\r\n     * Construct a record of a potential multitap gesture\r\n     * @param vkbd\r\n     * @param baseKey   key which is being tapped\r\n     * @param count     number of taps required to finalize this gesture\r\n     */\r\n    constructor(vkbd: VisualKeyboard, baseKey: KeyElement, count: number) {\r\n      this.vkbd = vkbd;\r\n      this.count = count;\r\n      this.baseKey = baseKey;\r\n\r\n      const _this = this;\r\n      this._timeout = new Promise\u003cvoid\u003e(function(resolve) {\r\n        // If multiple taps do not occur within the timeout window,\r\n        // then we will abandon the gesture\r\n        _this.timerId = window.setTimeout(() =\u003e {\r\n          _this.cancel();\r\n          resolve();\r\n        }, _this.cancelDelayFactor * _this.count);\r\n      });\r\n    }\r\n\r\n    public static isValidTarget(vkbd: VisualKeyboard, baseKey: KeyElement) {\r\n      // Could use String.includes, but Chrome for Android must be version 41+.\r\n      // We support down to version 37.\r\n      return (\r\n        baseKey[\u0027keyId\u0027].indexOf(\u0027K_SHIFT\u0027) \u003e= 0 \u0026\u0026\r\n        vkbd.layerGroup.layers[\u0027caps\u0027] \u0026\u0026\r\n        !baseKey[\u0027subKeys\u0027] \u0026\u0026\r\n        vkbd.touchCount == 1\r\n      );\r\n    }\r\n\r\n    private cleanup(): void {\r\n      if(this.timerId) {\r\n        window.clearTimeout(this.timerId);\r\n      }\r\n      this.timerId = null;\r\n    }\r\n\r\n    /**\r\n     * Cancel a pending multitap gesture\r\n     */\r\n    public cancel(): void {\r\n      this._state = PendingMultiTapState.Cancelled;\r\n      this.cleanup();\r\n    }\r\n\r\n    /**\r\n     * Increments the touch counter for the gesture, and\r\n     * if the touch count is reached, realize the gesture\r\n     * @returns new state of the gesture\r\n     */\r\n    public incrementTouch(newKey: KeyElement): PendingMultiTapState {\r\n      // TODO: support for any key\r\n      if(this._state == PendingMultiTapState.Waiting) {\r\n        if(!newKey[\u0027keyId\u0027].includes(\u0027K_SHIFT\u0027)) {\r\n          this.cancel();\r\n        }\r\n        else if(++this._touches == this.count) {\r\n          this.realize();\r\n        }\r\n      }\r\n      return this._state;\r\n    }\r\n\r\n    /**\r\n     * Realize the gesture. In Keyman 15, this supports only\r\n     * the Caps double-tap gesture on the Shift key.\r\n     */\r\n    public realize(): void {\r\n      if(this._state != PendingMultiTapState.Waiting) {\r\n        return;\r\n      }\r\n      this._state = PendingMultiTapState.Realized;\r\n      this.cleanup();\r\n\r\n      // In Keyman 15, only the K_SHIFT key supports multi-tap, so we can hack\r\n      // in the switch to the caps layer.\r\n      //\r\n      // TODO: generalize this with double-tap key properties in touch layout\r\n      //       description.\r\n      let e = text.KeyEvent.constructNullKeyEvent(this.vkbd.device);\r\n      e.kNextLayer = \u0027caps\u0027;\r\n      e.Lstates = text.Codes.stateBitmasks.CAPS;\r\n      e.LmodifierChange = true;\r\n      PreProcessor.raiseKeyEvent(e);\r\n    }\r\n  }\r\n}","/// \u003creference path=\"inputEventCoordinate.ts\" /\u003e\r\n\r\nnamespace com.keyman.osk {\r\n  export type InputHandler = (coord: InputEventCoordinate) =\u003e void;\r\n\r\n  export interface InputEventEngineConfig {\r\n    /**\r\n     * Specifies the element that input listeners should be attached to.\r\n     */\r\n    readonly eventRoot: HTMLElement;\r\n    /**\r\n     * Specifies the most specific common ancestor element of any event target\r\n     * that the InputEventEngine should consider.\r\n     */\r\n    readonly targetRoot: HTMLElement;\r\n\r\n    readonly coordConstrainedWithinInteractiveBounds: (coord: InputEventCoordinate) =\u003e boolean;\r\n\r\n    readonly inputStartHandler?:      InputHandler;\r\n    readonly inputMoveHandler?:       InputHandler;\r\n    readonly inputMoveCancelHandler?: InputHandler;\r\n    readonly inputEndHandler?:        InputHandler;\r\n  }\r\n\r\n  export abstract class InputEventEngine {\r\n    protected readonly config: InputEventEngineConfig;\r\n\r\n    public constructor(config: InputEventEngineConfig) {\r\n      this.config = config;\r\n    }\r\n\r\n    abstract registerEventHandlers();\r\n    abstract unregisterEventHandlers();\r\n\r\n    onInputStart(coord: InputEventCoordinate) {\r\n      if(this.config.inputStartHandler) {\r\n        this.config.inputStartHandler(coord);\r\n      }\r\n    }\r\n\r\n    onInputMove(coord: InputEventCoordinate) {\r\n      if(this.config.inputMoveHandler) {\r\n        this.config.inputMoveHandler(coord);\r\n      }\r\n    }\r\n\r\n    onInputMoveCancel(coord: InputEventCoordinate) {\r\n      if(this.config.inputMoveCancelHandler) {\r\n        this.config.inputMoveCancelHandler(coord);\r\n      }\r\n    }\r\n\r\n    onInputEnd(coord: InputEventCoordinate) {\r\n      if(this.config.inputEndHandler) {\r\n        this.config.inputEndHandler(coord);\r\n      }\r\n    }\r\n  }\r\n}","/// \u003creference path=\"inputEventEngine.ts\" /\u003e\r\n\r\nnamespace com.keyman.osk {\r\n  export class TouchEventEngine extends InputEventEngine {\r\n    private readonly _touchStart: typeof TouchEventEngine.prototype.onTouchStart;\r\n    private readonly _touchMove:  typeof TouchEventEngine.prototype.onTouchMove;\r\n    private readonly _touchEnd:   typeof TouchEventEngine.prototype.onTouchEnd;\r\n\r\n    public constructor(config: InputEventEngineConfig) {\r\n      super(config);\r\n\r\n      this._touchStart = this.onTouchStart.bind(this);\r\n      this._touchMove  = this.onTouchMove.bind(this);\r\n      this._touchEnd   = this.onTouchEnd.bind(this);\r\n    }\r\n\r\n    public static forVisualKeyboard(vkbd: VisualKeyboard) {\r\n      let config: InputEventEngineConfig = {\r\n        targetRoot: vkbd.element,\r\n        eventRoot: vkbd.element,\r\n        inputStartHandler: vkbd.touch.bind(vkbd),\r\n        inputMoveHandler: vkbd.moveOver.bind(vkbd),\r\n        inputMoveCancelHandler: vkbd.moveCancel.bind(vkbd),\r\n        inputEndHandler: vkbd.release.bind(vkbd),\r\n        coordConstrainedWithinInteractiveBounds: vkbd.detectWithinInteractiveBounds.bind(vkbd)\r\n      };\r\n\r\n      return new TouchEventEngine(config);\r\n    }\r\n\r\n    public static forPredictiveBanner(banner: SuggestionBanner, handlerRoot: SuggestionManager) {\r\n      const config: InputEventEngineConfig = {\r\n        targetRoot: banner.getDiv(),\r\n        // document.body is the event root b/c we need to track the mouse if it leaves\r\n        // the VisualKeyboard\u0027s hierarchy.\r\n        eventRoot: banner.getDiv(),\r\n        inputStartHandler: handlerRoot.touchStart.bind(handlerRoot),\r\n        inputMoveHandler:  handlerRoot.touchMove.bind(handlerRoot),\r\n        inputEndHandler:   handlerRoot.touchEnd.bind(handlerRoot),\r\n        coordConstrainedWithinInteractiveBounds: function() { return true; }\r\n      };\r\n\r\n      return new TouchEventEngine(config);\r\n    }\r\n\r\n    registerEventHandlers() {\r\n      this.config.eventRoot.addEventListener(\u0027touchstart\u0027, this._touchStart, true);\r\n      this.config.eventRoot.addEventListener(\u0027touchmove\u0027,  this._touchMove, false);\r\n      // The listener below fails to capture when performing automated testing checks in Chrome emulation unless \u0027true\u0027.\r\n      this.config.eventRoot.addEventListener(\u0027touchend\u0027,   this._touchEnd, true);\r\n    }\r\n\r\n    unregisterEventHandlers() {\r\n      this.config.eventRoot.removeEventListener(\u0027touchstart\u0027, this._touchStart, true);\r\n      this.config.eventRoot.removeEventListener(\u0027touchmove\u0027,  this._touchMove, false);\r\n      this.config.eventRoot.removeEventListener(\u0027touchend\u0027,   this._touchEnd, true);\r\n    }\r\n\r\n    private preventPropagation(e: TouchEvent) {\r\n      // Standard event maintenance\r\n      e.preventDefault();\r\n      e.cancelBubble=true;\r\n\r\n      if(typeof e.stopImmediatePropagation == \u0027function\u0027) {\r\n        e.stopImmediatePropagation();\r\n      } else if(typeof e.stopPropagation == \u0027function\u0027) {\r\n        e.stopPropagation();\r\n      }\r\n    }\r\n\r\n    onTouchStart(event: TouchEvent) {\r\n      this.onInputStart(InputEventCoordinate.fromEvent(event));\r\n    }\r\n\r\n    onTouchMove(event: TouchEvent) {\r\n      this.preventPropagation(event);\r\n      const coord = InputEventCoordinate.fromEvent(event);\r\n\r\n      if(this.config.coordConstrainedWithinInteractiveBounds(coord)) {\r\n        this.onInputMove(coord);\r\n      } else {\r\n        this.onInputMoveCancel(coord);\r\n      }\r\n    }\r\n\r\n    onTouchEnd(event: TouchEvent) {\r\n      this.onInputEnd(InputEventCoordinate.fromEvent(event));\r\n    }\r\n  }\r\n}","/// \u003creference path=\"inputEventEngine.ts\" /\u003e\r\n\r\nnamespace com.keyman.osk {\r\n  export class MouseEventEngine extends InputEventEngine {\r\n    private readonly _mouseStart: typeof MouseEventEngine.prototype.onMouseStart;\r\n    private readonly _mouseMove:  typeof MouseEventEngine.prototype.onMouseMove;\r\n    private readonly _mouseEnd:   typeof MouseEventEngine.prototype.onMouseEnd;\r\n\r\n    private hasActiveClick: boolean = false;\r\n    private ignoreSequence: boolean = false;\r\n\r\n    public constructor(config: InputEventEngineConfig) {\r\n      super(config);\r\n\r\n      this._mouseStart = this.onMouseStart.bind(this);\r\n      this._mouseMove  = this.onMouseMove.bind(this);\r\n      this._mouseEnd   = this.onMouseEnd.bind(this);\r\n    }\r\n\r\n    public static forVisualKeyboard(vkbd: VisualKeyboard) {\r\n      const config: InputEventEngineConfig = {\r\n        targetRoot: vkbd.element,\r\n        // document.body is the event root b/c we need to track the mouse if it leaves\r\n        // the VisualKeyboard\u0027s hierarchy.\r\n        eventRoot: document.body,\r\n        inputStartHandler: vkbd.touch.bind(vkbd),\r\n        inputMoveHandler: vkbd.moveOver.bind(vkbd),\r\n        inputMoveCancelHandler: vkbd.moveCancel.bind(vkbd),\r\n        inputEndHandler: vkbd.release.bind(vkbd),\r\n        coordConstrainedWithinInteractiveBounds: vkbd.detectWithinInteractiveBounds.bind(vkbd)\r\n      };\r\n\r\n      return new MouseEventEngine(config);\r\n    }\r\n\r\n    public static forPredictiveBanner(banner: SuggestionBanner, handlerRoot: SuggestionManager) {\r\n      const config: InputEventEngineConfig = {\r\n        targetRoot: banner.getDiv(),\r\n        // document.body is the event root b/c we need to track the mouse if it leaves\r\n        // the VisualKeyboard\u0027s hierarchy.\r\n        eventRoot: document.body,\r\n        inputStartHandler: handlerRoot.touchStart.bind(handlerRoot),\r\n        inputMoveHandler:  handlerRoot.touchMove.bind(handlerRoot),\r\n        inputEndHandler:   handlerRoot.touchEnd.bind(handlerRoot),\r\n        coordConstrainedWithinInteractiveBounds: function() { return true; }\r\n      };\r\n\r\n      return new MouseEventEngine(config);\r\n    }\r\n\r\n    registerEventHandlers() {\r\n      this.config.eventRoot.addEventListener(\u0027mousedown\u0027, this._mouseStart, true);\r\n      this.config.eventRoot.addEventListener(\u0027mousemove\u0027,  this._mouseMove, false);\r\n      // The listener below fails to capture when performing automated testing checks in Chrome emulation unless \u0027true\u0027.\r\n      this.config.eventRoot.addEventListener(\u0027mouseup\u0027,   this._mouseEnd, true);\r\n    }\r\n\r\n    unregisterEventHandlers() {\r\n      this.config.eventRoot.removeEventListener(\u0027mousedown\u0027, this._mouseStart, true);\r\n      this.config.eventRoot.removeEventListener(\u0027mousemove\u0027,  this._mouseMove, false);\r\n      this.config.eventRoot.removeEventListener(\u0027mouseup\u0027,   this._mouseEnd, true);\r\n    }\r\n\r\n    private preventPropagation(e: MouseEvent) {\r\n      // Standard event maintenance\r\n      e.preventDefault();\r\n      e.cancelBubble=true;\r\n      e.returnValue=false; // I2409 - Avoid focus loss for visual keyboard events\r\n\r\n      if(typeof e.stopImmediatePropagation == \u0027function\u0027) {\r\n        e.stopImmediatePropagation();\r\n      } else if(typeof e.stopPropagation == \u0027function\u0027) {\r\n        e.stopPropagation();\r\n      }\r\n    }\r\n\r\n    onMouseStart(event: MouseEvent) {\r\n      if(!this.config.targetRoot.contains(event.target as Node)) {\r\n        this.ignoreSequence = true;\r\n        return;\r\n      }\r\n\r\n      this.preventPropagation(event);\r\n      this.onInputStart(InputEventCoordinate.fromEvent(event));\r\n      this.hasActiveClick = true;\r\n    }\r\n\r\n    onMouseMove(event: MouseEvent) {\r\n      if(this.ignoreSequence) {\r\n        return;\r\n      }\r\n\r\n      const coord = InputEventCoordinate.fromEvent(event);\r\n\r\n      if(!event.buttons) {\r\n        if(this.hasActiveClick) {\r\n          this.hasActiveClick = false;\r\n          this.onInputMoveCancel(coord);\r\n        }\r\n        return;\r\n      } else if(!this.hasActiveClick) {\r\n        // Can interfere with OSK drag-handlers (title bar, resize bar) otherwise.\r\n        return;\r\n      }\r\n\r\n      this.preventPropagation(event);\r\n\r\n      if(this.config.coordConstrainedWithinInteractiveBounds(coord)) {\r\n        this.onInputMove(coord);\r\n      } else {\r\n        this.onInputMoveCancel(coord);\r\n      }\r\n    }\r\n\r\n    onMouseEnd(event: MouseEvent) {\r\n      if(this.ignoreSequence) {\r\n        this.ignoreSequence = false;\r\n        return;\r\n      }\r\n\r\n      if(!event.buttons) {\r\n        this.hasActiveClick = false;\r\n      }\r\n      this.onInputEnd(InputEventCoordinate.fromEvent(event));\r\n    }\r\n  }\r\n}","/// \u003creference path=\"preProcessor.ts\" /\u003e\r\n/// \u003creference path=\"lengthStyle.ts\" /\u003e\r\n/// \u003creference path=\"utils.ts\" /\u003e\r\n/// \u003creference path=\"oskLayerGroup.ts\" /\u003e\r\n/// \u003creference path=\"keytip.interface.ts\" /\u003e\r\n/// \u003creference path=\"browser/keytip.ts\" /\u003e\r\n/// \u003creference path=\"browser/pendingLongpress.ts\" /\u003e\r\n/// \u003creference path=\"browser/pendingMultiTap.ts\" /\u003e\r\n/// \u003creference path=\"keyboardView.interface.ts\" /\u003e\r\n/// \u003creference path=\"touchEventEngine.ts\" /\u003e\r\n/// \u003creference path=\"mouseEventEngine.ts\" /\u003e\r\n\r\nnamespace com.keyman.osk {\r\n  interface BoundingRect {\r\n    left: number,\r\n    right: number,\r\n    top: number,\r\n    bottom: number\r\n  };\r\n\r\n  export class VisualKeyboard implements KeyboardView {\r\n    // Legacy alias, maintaining a reference for code built against older\r\n    // versions of KMW.\r\n    static specialCharacters = OSKKey.specialCharacters;\r\n\r\n    /**\r\n     * Contains layout properties corresponding to the OSK\u0027s layout.  Needs to be public\r\n     * so that its geometry may be updated on rotations and keyboard resize events, as\r\n     * said geometry needs to be accurate for fat-finger probability calculations.\r\n     */\r\n    kbdLayout: keyboards.ActiveLayout;\r\n    layerGroup: OSKLayerGroup;\r\n\r\n    private _layerId: string = \"default\";\r\n    layerIndex: number = 0; // the index of the default layer\r\n    readonly isRTL: boolean;\r\n\r\n    device: com.keyman.utils.DeviceSpec;\r\n    hostDevice: com.keyman.utils.DeviceSpec;\r\n\r\n    inputEngine: InputEventEngine;\r\n\r\n    isStatic: boolean = false;\r\n    _fixedWidthScaling:  boolean = false;\r\n    _fixedHeightScaling: boolean = true;\r\n\r\n    // Stores the base element for this instance of the visual keyboard.\r\n    // Formerly known as osk._DivVKbd\r\n    kbdDiv: HTMLDivElement;\r\n    styleSheet: HTMLStyleElement;\r\n\r\n    /**\r\n     * The configured width for this VisualKeyboard.  May be `undefined` or `null`\r\n     * to allow automatic width scaling.\r\n     */\r\n    private _width: number;\r\n\r\n    /**\r\n     * The configured height for this VisualKeyboard.  May be `undefined` or `null`\r\n     * to allow automatic height scaling.\r\n     */\r\n    private _height: number;\r\n\r\n    /**\r\n     * The computed width for this VisualKeyboard.  May be null if auto sizing\r\n     * is allowed and the VisualKeyboard is not currently in the DOM hierarchy.\r\n     */\r\n    private _computedWidth: number;\r\n\r\n    /**\r\n     * The computed height for this VisualKeyboard.  May be null if auto sizing\r\n     * is allowed and the VisualKeyboard is not currently in the DOM hierarchy.\r\n     */\r\n    private _computedHeight: number;\r\n\r\n    // Style-related properties\r\n    fontFamily: string;\r\n    private _fontSize: ParsedLengthStyle;\r\n    // fontSize: string;\r\n\r\n    // State-related properties\r\n    keyPending: KeyElement;\r\n    touchPending: InputEventCoordinate;\r\n    deleteKey: KeyElement;\r\n    deleting: number; // Tracks a timer id for repeated deletions.\r\n    nextLayer: string;\r\n    currentKey: string;\r\n\r\n    // Touch-tracking properties\r\n    initTouchCoord: InputEventCoordinate;\r\n    touchCount: number;\r\n    currentTarget: KeyElement;\r\n\r\n    // Used by embedded-mode\u0027s globe key\r\n    menuEvent: KeyElement; // Used by embedded-mode.\r\n\r\n    // Popup key management\r\n    keytip: KeyTip;\r\n    pendingSubkey: PendingGesture;\r\n    subkeyGesture: RealizedGesture;\r\n\r\n    // Multi-tap gesture management\r\n    pendingMultiTap: PendingMultiTap;\r\n\r\n    get layerId(): string {\r\n      return this._layerId;\r\n    }\r\n\r\n    set layerId(value: string) {\r\n      this._layerId = value;\r\n    }\r\n\r\n    get currentLayer(): OSKLayer {\r\n      return this.layerId ? this.layerGroup?.layers[this.layerId] : null;\r\n    }\r\n\r\n    // Special keys (for the currently-visible layer)\r\n    get lgKey(): KeyElement { // currently, must be visible for the touch language menu.\r\n      return this.currentLayer?.globeKey?.btn;\r\n    }\r\n\r\n    private get hkKey(): KeyElement { // hide keyboard key\r\n      return this.currentLayer?.hideKey?.btn;\r\n    }\r\n\r\n    public get spaceBar(): KeyElement { // also referenced by the touch language menu.\r\n      return this.currentLayer?.spaceBarKey?.btn;\r\n    }\r\n\r\n    //#region OSK constructor and helpers\r\n\r\n    /**\r\n     * @param       {Object}      PVK         Visual keyboard name\r\n     * @param       {Object}      Lhelp       true if OSK defined for this keyboard\r\n     * @param       {Object}      layout0\r\n     * @param       {Number}      kbdBitmask  Keyboard modifier bitmask\r\n     * Description  Generates the base visual keyboard element, prepping for attachment to KMW\r\n     */\r\n    constructor(keyboard: keyboards.Keyboard, device: com.keyman.utils.DeviceSpec, hostDevice?: com.keyman.utils.DeviceSpec, isStatic?: boolean) {\r\n      this.device = device;\r\n      this.hostDevice = hostDevice || device;\r\n      if (isStatic) {\r\n        this.isStatic = isStatic;\r\n      }\r\n\r\n      this._fixedWidthScaling  = this.device.touchable \u0026\u0026 !this.isStatic;\r\n      this._fixedHeightScaling = this.device.touchable \u0026\u0026 !this.isStatic;\r\n\r\n      // Create the collection of HTML elements from the device-dependent layout object\r\n      var Lkbd = document.createElement(\u0027div\u0027);\r\n      let layout: keyboards.ActiveLayout;\r\n      if (keyboard) {\r\n        layout = this.kbdLayout = keyboard.layout(device.formFactor as utils.FormFactor);\r\n        this.isRTL = keyboard.isRTL;\r\n      } else {\r\n        // This COULD be called with no backing keyboard; KMW will try to force-show the OSK even without\r\n        // a backing keyboard on mobile, using the most generic default layout as the OSK\u0027s base.\r\n        //\r\n        // In KMW\u0027s current state, it\u0027d take a major break, though - Processor always has an activeKeyboard,\r\n        // even if it\u0027s \"hollow\".\r\n        let rawLayout = keyboards.Layouts.buildDefaultLayout(null, null, device.formFactor);\r\n        layout = this.kbdLayout = keyboards.ActiveLayout.polyfill(rawLayout, null, device.formFactor as utils.FormFactor);\r\n        this.isRTL = false;\r\n      }\r\n\r\n      // Override font if specified by keyboard\r\n      if (\u0027font\u0027 in layout) {\r\n        this.fontFamily = layout[\u0027font\u0027];\r\n      } else {\r\n        this.fontFamily = \u0027\u0027;\r\n      }\r\n\r\n      // Now to build the actual layout.\r\n      const formFactor = device.formFactor as utils.FormFactor;\r\n      let layoutKeyboard = keyboard;\r\n      if (!layoutKeyboard) {\r\n        // May occasionally be null in embedded contexts; have seen this when iOS engine sets\r\n        // keyboard height during change of keyboards.\r\n        layoutKeyboard = new keyboards.Keyboard(null);\r\n      }\r\n\r\n      this.layerGroup = new OSKLayerGroup(this, layoutKeyboard, formFactor);\r\n\r\n      // Now that we\u0027ve properly processed the keyboard\u0027s layout, mark it as calibrated.\r\n      // TODO:  drop the whole \u0027calibration\u0027 thing.  The newer layout system supersedes the\r\n      // need for it.  (Is no longer really used, so the drop ought be clean.)\r\n      layoutKeyboard.markLayoutCalibrated(formFactor);\r\n\r\n      // Append the OSK layer group container element to the containing element\r\n      //osk.keyMap = divLayerContainer;\r\n      Lkbd.appendChild(this.layerGroup.element);\r\n\r\n      // Set base class - OS and keyboard added for Build 360\r\n      this.kbdDiv = Lkbd;\r\n\r\n      // For \u0027live\u0027 touch keyboards, attach touch-based event handling.\r\n      // Needs to occur AFTER this.kbdDiv is initialized.\r\n      if (!this.isStatic) {\r\n        if (this.hostDevice.touchable) {\r\n          this.inputEngine = TouchEventEngine.forVisualKeyboard(this);\r\n        } else {\r\n          this.inputEngine = MouseEventEngine.forVisualKeyboard(this);\r\n        }\r\n        this.inputEngine.registerEventHandlers();\r\n      }\r\n\r\n      Lkbd.className = device.formFactor + \u0027 kmw-osk-inner-frame\u0027;\r\n    }\r\n\r\n    public get element(): HTMLDivElement {\r\n      return this.kbdDiv;\r\n    }\r\n\r\n    public postInsert(): void { }\r\n\r\n    /**\r\n     * The configured width for this VisualKeyboard.  May be `undefined` or `null`\r\n     * to allow automatic width scaling.\r\n     */\r\n    get width(): number {\r\n      return this._width;\r\n    }\r\n\r\n    /**\r\n     * The configured height for this VisualKeyboard.  May be `undefined` or `null`\r\n     * to allow automatic height scaling.\r\n     */\r\n    get height(): number {\r\n      return this._height;\r\n    }\r\n\r\n    get layoutWidth(): ParsedLengthStyle {\r\n      if (this.usesFixedWidthScaling) {\r\n        let baseWidth = this.width;\r\n        let cs = getComputedStyle(this.element);\r\n        if (cs.border) {\r\n          let borderWidth = new ParsedLengthStyle(cs.borderWidth).val;\r\n          baseWidth -= borderWidth * 2;\r\n        }\r\n        return ParsedLengthStyle.inPixels(baseWidth);\r\n      } else {\r\n        return ParsedLengthStyle.forScalar(1);\r\n      }\r\n    }\r\n\r\n    get layoutHeight(): ParsedLengthStyle {\r\n      if (this.usesFixedHeightScaling) {\r\n        let baseHeight = this.height;\r\n        let cs = getComputedStyle(this.element);\r\n        if (cs.border) {\r\n          let borderHeight = new ParsedLengthStyle(cs.borderWidth).val;\r\n          baseHeight -= borderHeight * 2;\r\n        }\r\n        return ParsedLengthStyle.inPixels(baseHeight);\r\n      } else {\r\n        return ParsedLengthStyle.forScalar(1);\r\n      }\r\n    }\r\n\r\n    get internalHeight(): ParsedLengthStyle {\r\n      if (this.usesFixedHeightScaling) {\r\n        // Touch OSKs may apply internal padding to prevent row cropping at the edges.\r\n        return ParsedLengthStyle.inPixels(this.layoutHeight.val - this.getVerticalLayerGroupPadding());\r\n      } else {\r\n        return ParsedLengthStyle.forScalar(1);\r\n      }\r\n    }\r\n\r\n    get fontSize(): ParsedLengthStyle {\r\n      if (!this._fontSize) {\r\n        this._fontSize = new ParsedLengthStyle(\u00271em\u0027);\r\n      }\r\n      return this._fontSize;\r\n    }\r\n\r\n    set fontSize(value: ParsedLengthStyle) {\r\n      this._fontSize = value;\r\n      this.kbdDiv.style.fontSize = value.styleString;\r\n    }\r\n\r\n    /**\r\n     * Uses fixed scaling for widths of internal elements, rather than relative,\r\n     * percent-based scaling.\r\n     */\r\n    public get usesFixedWidthScaling(): boolean {\r\n      return this._fixedWidthScaling;\r\n    }\r\n\r\n    public set usesFixedWidthScaling(val: boolean) {\r\n      this._fixedWidthScaling = val;\r\n    }\r\n\r\n    /**\r\n     * Uses fixed scaling for heights of internal elements, rather than relative,\r\n     * percent-based scaling.\r\n     */\r\n    public get usesFixedHeightScaling(): boolean {\r\n      return this._fixedHeightScaling;\r\n    }\r\n\r\n    public set usesFixedHeightScaling(val: boolean) {\r\n      this._fixedHeightScaling = val;\r\n    }\r\n\r\n    /**\r\n     * Denotes if the VisualKeyboard or its containing OSKView / OSKManager uses\r\n     * fixed positioning.\r\n     */\r\n    public get usesFixedPositioning(): boolean {\r\n      let node: HTMLElement = this.element;\r\n      while (node) {\r\n        if (getComputedStyle(node).position == \u0027fixed\u0027) {\r\n          return true;\r\n        } else {\r\n          node = node.offsetParent as HTMLElement;\r\n        }\r\n      }\r\n\r\n      return false;\r\n    }\r\n\r\n    /**\r\n     * Sets \u0026 tracks the size of the VisualKeyboard\u0027s primary element.\r\n     * @param width\r\n     * @param height\r\n     * @param pending Set to `true` if called during a resizing interaction\r\n     */\r\n    public setSize(width?: number, height?: number, pending?: boolean) {\r\n      this._width = width;\r\n      this._height = height;\r\n\r\n      if (this.kbdDiv) {\r\n        this.kbdDiv.style.width = width ? this._width + \u0027px\u0027 : \u0027\u0027;\r\n        this.kbdDiv.style.height = height ? this._height + \u0027px\u0027 : \u0027\u0027;\r\n\r\n        if (!this.device.touchable \u0026\u0026 height) {\r\n          this.fontSize = new ParsedLengthStyle((this._height / 8) + \u0027px\u0027);\r\n        }\r\n\r\n        if (!pending) {\r\n          this.refreshLayout();\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Returns the default properties for a key object, used to construct\r\n     * both a base keyboard key and popup keys\r\n     *\r\n     * @return    {Object}    An object that contains default key properties\r\n     */\r\n    getDefaultKeyObject(): OSKKeySpec {\r\n      return new OSKKeySpec(undefined, \u0027\u0027, keyboards.ActiveKey.DEFAULT_KEY.width, keyboards.ActiveKey.DEFAULT_KEY.sp as keyboards.ButtonClass,\r\n        null, keyboards.ActiveKey.DEFAULT_KEY.pad);\r\n    };\r\n    //#endregion\r\n\r\n    //#region OSK touch handlers\r\n    getTouchCoordinatesOnKeyboard(input: InputEventCoordinate) {\r\n      let keyman = com.keyman.singleton;\r\n\r\n      // We need to compute the \u0027local\u0027, keyboard-based coordinates for the touch.\r\n      let kbdCoords = keyman.util.getAbsolute(this.kbdDiv as HTMLElement);\r\n      let offsetCoords = { x: input.x - kbdCoords.x, y: input.y - kbdCoords.y };\r\n\r\n      // The layer group\u0027s element always has the proper width setting, unlike kbdDiv itself.\r\n      offsetCoords.x /= this.layerGroup.element.offsetWidth;\r\n      offsetCoords.y /= this.kbdDiv.offsetHeight;\r\n\r\n      return offsetCoords;\r\n    }\r\n\r\n    /**\r\n     * Builds the fat-finger distribution used by predictive text as its source for likelihood\r\n     * of alternate keystroke sequences.\r\n     * @param input The input coordinate of the event that led to use of this function\r\n     * @param keySpec The spec of the key directly triggered by the input event.  May be for a subkey.\r\n     * @returns\r\n     */\r\n    getTouchProbabilities(input: InputEventCoordinate, keySpec?: keyboards.ActiveKey): text.KeyDistribution {\r\n      let keyman = com.keyman.singleton;\r\n      if (!keyman.core.languageProcessor.mayCorrect) {\r\n        return null;\r\n      }\r\n\r\n      // Note:  if subkeys are active, they will still be displayed at this time.\r\n      // TODO:  In such cases, we should build an ActiveLayout (of sorts) for subkey displays,\r\n      //        update their geometries to the actual display values, and use the results here.\r\n      let touchKbdPos = this.getTouchCoordinatesOnKeyboard(input);\r\n      let layerGroup = this.layerGroup.element;  // Always has proper dimensions, unlike kbdDiv itself.\r\n      let width = layerGroup.offsetWidth, height = this.kbdDiv.offsetHeight;\r\n      // Prevent NaN breakages.\r\n      if (!width || !height) {\r\n        return null;\r\n      }\r\n\r\n      let kbdAspectRatio = layerGroup.offsetWidth / this.kbdDiv.offsetHeight;\r\n      let baseKeyProbabilities = this.kbdLayout.getLayer(this.layerId).getTouchProbabilities(touchKbdPos, kbdAspectRatio);\r\n\r\n      if (!keySpec || !this.subkeyGesture || !this.subkeyGesture.baseKey.key) {\r\n        return baseKeyProbabilities;\r\n      } else {\r\n        // A temp-hack, as this was noted just before 14.0\u0027s release.\r\n        // Since a more... comprehensive solution would be way too complex this late in the game,\r\n        // this provides a half-decent stopgap measure.\r\n        //\r\n        // Will not correct to nearby subkeys; only includes the selected subkey and its base keys.\r\n        // Still, better than ignoring them both for whatever base key is beneath the final cursor location.\r\n        let baseMass = 1.0;\r\n\r\n        let baseKeyMass = 1.0;\r\n        let baseKeyID = this.subkeyGesture.baseKey.key.spec.coreID;\r\n\r\n        let popupKeyMass = 0.0;\r\n        let popupKeyID: string = null;\r\n\r\n        popupKeyMass = 3.0;\r\n        popupKeyID = keySpec.coreID;\r\n\r\n        // If the base key appears in the subkey array and was selected, merge the probability masses.\r\n        if (popupKeyID == baseKeyID) {\r\n          baseKeyMass += popupKeyMass;\r\n          popupKeyMass = 0;\r\n        } else {\r\n          // We namespace it so that lookup operations know to find it via its base key.\r\n          popupKeyID = `${baseKeyID}::${popupKeyID}`;\r\n        }\r\n\r\n        // Compute the normalization factor\r\n        let totalMass = baseMass + baseKeyMass + popupKeyMass;\r\n        let scalar = 1.0 / totalMass;\r\n\r\n        // Prevent duplicate entries in the final map \u0026 normalize the remaining entries!\r\n        for (let i = 0; i \u003c baseKeyProbabilities.length; i++) {\r\n          let entry = baseKeyProbabilities[i];\r\n          if (entry.keyId == baseKeyID) {\r\n            baseKeyMass += entry.p * scalar;\r\n            baseKeyProbabilities.splice(i, 1);\r\n            i--;\r\n          } else if (entry.keyId == popupKeyID) {\r\n            popupKeyMass = + entry.p * scalar;\r\n            baseKeyProbabilities.splice(i, 1);\r\n            i--;\r\n          } else {\r\n            entry.p *= scalar;\r\n          }\r\n        }\r\n\r\n        let finalArray: { keyId: string, p: number }[] = [];\r\n\r\n        if (popupKeyMass \u003e 0) {\r\n          finalArray.push({ keyId: popupKeyID, p: popupKeyMass * scalar });\r\n        }\r\n\r\n        finalArray.push({ keyId: baseKeyID, p: baseKeyMass * scalar });\r\n\r\n        finalArray = finalArray.concat(baseKeyProbabilities);\r\n        return finalArray;\r\n      }\r\n    }\r\n\r\n    //#region Input handling start\r\n\r\n    /**\r\n     * Determines a \"fuzzy boundary\" area around the OSK within which active mouse and\r\n     * touch events will be maintained, even if their coordinates lie outside of the OSK\u0027s\r\n     * true visual bounds.\r\n     * @returns A `BoundingRect`, in `.pageX` / `.pageY` coordinates.\r\n     */\r\n    private getInteractiveBoundingRect(): BoundingRect {\r\n      // Determine the important geometric values involved\r\n      let oskX = dom.Utils.getAbsoluteX(this.element);\r\n      let oskY = dom.Utils.getAbsoluteY(this.element);\r\n\r\n      // Determine the out-of-bounds threshold at which touch-cancellation should automatically occur.\r\n      // Assuming square key-squares, we\u0027ll use 1/3 the height of a row for bounds detection\r\n      // for both dimensions.\r\n      const rowCount = this.currentLayer.rows.length;\r\n      const buffer = (0.333 * this.height / rowCount);\r\n\r\n      // Determine the OSK\u0027s boundaries and the boundaries of the page / view.\r\n      // These values are needed in .pageX / .pageY coordinates for the final calcs.\r\n      let boundingRect: BoundingRect = {\r\n        left: oskX - buffer,\r\n        right: oskX + this.width + buffer,\r\n        top: oskY - buffer,\r\n        bottom: oskY + this.height + buffer\r\n      };\r\n\r\n      return boundingRect;\r\n    }\r\n\r\n    /**\r\n     * Adjusts a potential \"interactive boundary\" definition by enforcing an\r\n     * \"event cancellation zone\" near screen boundaries that are not directly adjacent\r\n     * to the ongoing input event\u0027s initial coordinate.\r\n     *\r\n     * This facilitates modeling of conventional cancellation gestures where a user would\r\n     * drag the mouse or touch point off the OSK, as mouse and touch event handlers receive\r\n     * no input beyond screen boundaries.\r\n     *\r\n     * @param baseBounds The baseline interactive bounding area to be adjusted\r\n     * @param startCoord The initial coordinate of a currently-ongoing input event\r\n     * @returns\r\n     */\r\n    private applyScreenMarginBoundsThresholding(baseBounds: BoundingRect,\r\n      startCoord: InputEventCoordinate): BoundingRect {\r\n      // Determine the needed linear translation to screen coordinates.\r\n      const xDelta = window.screenLeft - window.pageXOffset;\r\n      const yDelta = window.screenTop - window.pageYOffset;\r\n\r\n      let adjustedBounds: BoundingRect = { ...baseBounds };\r\n\r\n      // Also translate the initial touch\u0027s screen coord, as it affects our bounding box logic.\r\n      const initScreenCoord = new InputEventCoordinate(startCoord.x + xDelta, startCoord.y + yDelta);\r\n\r\n      // Detection:  is the OSK aligned with any screen boundaries?\r\n      // If so, create a \u0027fuzzy\u0027 zone around the edges not near the initial touch point that allow\r\n      // move-based cancellation.\r\n\r\n      // If the initial input screen-coord is at least 5 pixels from the screen\u0027s left AND\r\n      // the OSK\u0027s left boundary is within 2 pixels from the screen\u0027s left...\r\n      if (initScreenCoord.x \u003e= 5 \u0026\u0026 baseBounds.left + xDelta \u003c= 2) {\r\n        adjustedBounds.left = 2 - xDelta; // new `leftBound` is set to 2 pixels from the screen\u0027s left.\r\n      }\r\n\r\n      if (initScreenCoord.x \u003c= screen.width - 5 \u0026\u0026 baseBounds.right + xDelta \u003e= screen.width - 2) {\r\n        adjustedBounds.right = (screen.width - 2) - xDelta; // new `rightBound` 2px from screen\u0027s right.\r\n      }\r\n\r\n      if (initScreenCoord.y \u003e= 5 \u0026\u0026 baseBounds.top + yDelta \u003c= 2) {\r\n        adjustedBounds.top = 2 - yDelta;\r\n      }\r\n\r\n      if (initScreenCoord.y \u003c= screen.height - 5 \u0026\u0026 baseBounds.bottom + yDelta \u003e= screen.height - 2) {\r\n        adjustedBounds.bottom = (screen.height - 2) - yDelta;\r\n      }\r\n\r\n      return adjustedBounds;\r\n    }\r\n\r\n    detectWithinInteractiveBounds(coord: InputEventCoordinate): boolean {\r\n      // Shortcuts the method during unit testing, as we don\u0027t currently\r\n      // provide coordinate values in its synthetic events.\r\n      if (coord.x === null \u0026\u0026 coord.y === null) {\r\n        return true;\r\n      }\r\n\r\n      const baseBoundingRect = this.getInteractiveBoundingRect();\r\n      let adjustedBoundingRect = baseBoundingRect;\r\n      if(this.initTouchCoord) {\r\n        this.applyScreenMarginBoundsThresholding(baseBoundingRect, this.initTouchCoord);\r\n      }\r\n\r\n      // Now to check where the input coordinate lies in relation to the final bounding box!\r\n\r\n      if (coord.x \u003c adjustedBoundingRect.left || coord.x \u003e adjustedBoundingRect.right) {\r\n        return false;\r\n      } else if (coord.y \u003c adjustedBoundingRect.top || coord.y \u003e adjustedBoundingRect.bottom) {\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * The main OSK touch start event handler\r\n     *\r\n     *  @param  {Event} e   touch start event object\r\n     *\r\n     */\r\n    touch(input: InputEventCoordinate) {\r\n      // Identify the key touched\r\n      var t = \u003cHTMLElement\u003einput.target, key = this.keyTarget(t);\r\n\r\n      // Save the touch point, which is used for quick-display of popup keys (defined in highlightSubKeys)\r\n      this.initTouchCoord = input;\r\n\r\n      // Set the key for the new touch point to be current target, if defined\r\n      this.currentTarget = key;\r\n\r\n      // Clear repeated backspace if active, preventing \u0027sticky\u0027 behavior.\r\n      this.cancelDelete();\r\n\r\n      // Prevent multi-touch if popup displayed\r\n      if (this.subkeyGesture \u0026\u0026 this.subkeyGesture.isVisible()) {\r\n        return;\r\n      }\r\n\r\n      // Keep track of number of active (unreleased) touch points\r\n      this.touchCount = input.activeInputCount;\r\n\r\n      // Get nearest key if touching a hidden key or the end of a key row\r\n      if ((key \u0026\u0026 ((key.className.indexOf(\u0027key-hidden\u0027) \u003e= 0) || (key.className.indexOf(\u0027key-blank\u0027) \u003e= 0)))\r\n        || t.className.indexOf(\u0027kmw-key-row\u0027) \u003e= 0) {\r\n\r\n        // Perform \"fudged\" selection ops if and only if we\u0027re not sure about the precision of the\r\n        // input source.  Mouse-based selection IS precise, so no need for \"fudging\" there.\r\n        if (!input.isFromMouse) {\r\n          key = this.findNearestKey(input, t);\r\n        }\r\n      }\r\n      // Do not do anything if no key identified!\r\n      if (key == null) {\r\n        return;\r\n      }\r\n\r\n      // Get key name (K_...) from element ID\r\n      let keyName = key[\u0027keyId\u0027];\r\n\r\n      // Highlight the touched key\r\n      this.highlightKey(key, true);\r\n\r\n      // Special function keys need immediate action\r\n      if (keyName == \u0027K_LOPT\u0027 || keyName == \u0027K_ROPT\u0027) {\r\n        window.setTimeout(function (this: VisualKeyboard) {\r\n          this.modelKeyClick(key);\r\n          // Because we immediately process the key, we need to re-highlight it after the click.\r\n          this.highlightKey(key, true);\r\n          // Highlighting\u0027ll be cleared automatically later.\r\n        }.bind(this), 0);\r\n        this.keyPending = null;\r\n        this.touchPending = null;\r\n\r\n        // Also backspace, to allow delete to repeat while key held\r\n      } else if (keyName == \u0027K_BKSP\u0027) {\r\n        // While we could inline the execution of the delete key here, we lose the ability to\r\n        // record the backspace key if we do so.\r\n        this.modelKeyClick(key, input);\r\n        this.deleteKey = key;\r\n        this.deleting = window.setTimeout(this.repeatDelete, 500);\r\n        this.keyPending = null;\r\n        this.touchPending = null;\r\n      } else {\r\n        if (this.keyPending) {\r\n          this.highlightKey(this.keyPending, false);\r\n\r\n          if (this.subkeyGesture \u0026\u0026 this.subkeyGesture instanceof browser.SubkeyPopup) {\r\n            let subkeyPopup = this.subkeyGesture as browser.SubkeyPopup;\r\n            subkeyPopup.updateTouch(input);\r\n            subkeyPopup.finalize(input);\r\n          } else {\r\n            this.modelKeyClick(this.keyPending, this.touchPending);\r\n          }\r\n          // Decrement the number of unreleased touch points to prevent\r\n          // sending the keystroke again when the key is actually released\r\n          this.touchCount--;\r\n        } else {\r\n          this.initGestures(key, input);\r\n        }\r\n        this.keyPending = key;\r\n        this.touchPending = input;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * OSK touch release event handler\r\n     *\r\n     *  @param  {Event} e   touch release event object\r\n     *\r\n     **/\r\n    release(input: InputEventCoordinate): void {\r\n      // Prevent incorrect multi-touch behaviour if native or device popup visible\r\n      var t = this.currentTarget;\r\n\r\n      // Clear repeated backspace if active, preventing \u0027sticky\u0027 behavior.\r\n      this.cancelDelete();\r\n\r\n      // Multi-Tap\r\n      if (this.pendingMultiTap \u0026\u0026 this.pendingMultiTap.realized) {\r\n        // Ignore pending key if we\u0027ve just handled a multitap\r\n        this.pendingMultiTap = null;\r\n\r\n        this.highlightKey(this.keyPending, false);\r\n        this.keyPending = null;\r\n        this.touchPending = null;\r\n\r\n        return;\r\n      }\r\n\r\n      if (this.pendingMultiTap \u0026\u0026 this.pendingMultiTap.cancelled) {\r\n        this.pendingMultiTap = null;\r\n      }\r\n\r\n      // Longpress\r\n      if ((this.subkeyGesture \u0026\u0026 this.subkeyGesture.isVisible())) {\r\n        // Ignore release if a multiple touch\r\n        if (input.activeInputCount \u003e 0) {\r\n          return;\r\n        }\r\n\r\n        if (this.subkeyGesture instanceof browser.SubkeyPopup) {\r\n          let subkeyPopup = this.subkeyGesture as browser.SubkeyPopup;\r\n          subkeyPopup.finalize(input);\r\n        }\r\n        this.highlightKey(this.keyPending, false);\r\n        this.keyPending = null;\r\n        this.touchPending = null;\r\n\r\n        return;\r\n      }\r\n\r\n      // Handle menu key release event\r\n      if (t \u0026\u0026 t.id) {\r\n        this.optionKey(t, t.id, false);\r\n      }\r\n\r\n      // Test if moved off screen (effective release point must be corrected for touch point horizontal speed)\r\n      // This is not completely effective and needs some tweaking, especially on Android\r\n      if (!this.detectWithinInteractiveBounds(input)) {\r\n        this.moveCancel(input);\r\n        this.touchCount--;\r\n        return;\r\n      }\r\n\r\n      // Save then decrement current touch count\r\n      var tc = this.touchCount;\r\n      if (this.touchCount \u003e 0) {\r\n        this.touchCount--;\r\n      }\r\n\r\n      // Process and clear highlighting of pending target\r\n      if (this.keyPending) {\r\n        this.highlightKey(this.keyPending, false);\r\n        // Output character unless moved off key\r\n        if (this.keyPending.className.indexOf(\u0027hidden\u0027) \u003c 0 \u0026\u0026 tc \u003e 0) {\r\n          this.modelKeyClick(this.keyPending, input);\r\n        }\r\n        this.clearPopup();\r\n        this.keyPending = null;\r\n        this.touchPending = null;\r\n        // Always clear highlighting of current target on release (multi-touch)\r\n      } else {\r\n        var tt = input;\r\n        t = this.keyTarget(tt.target);\r\n        if (!t) {\r\n          // Operates relative to the viewport, not based on the actual coordinate on the page.\r\n          var t1 = document.elementFromPoint(input.x - window.pageXOffset, input.y - window.pageYOffset);\r\n          t = this.findNearestKey(input, \u003cHTMLElement\u003et1);\r\n        }\r\n\r\n        this.highlightKey(t, false);\r\n      }\r\n    }\r\n\r\n    moveCancel(input: InputEventCoordinate): void {\r\n      // Do not attempt to support reselection of target key for overlapped keystrokes.\r\n      // Perform _after_ ensuring possible sticky keys have been cancelled.\r\n      if (input.activeInputCount \u003e 1) {\r\n        return;\r\n      }\r\n\r\n      // Update all gesture tracking.  The function returns true if further input processing\r\n      // should be blocked.  (Keeps the subkey array operating when the input coordinate has\r\n      // moved outside the OSK\u0027s boundaries.)\r\n      if (this.updateGestures(null, this.keyPending, input)) {\r\n        return;\r\n      }\r\n\r\n      this.cancelDelete();\r\n\r\n      this.highlightKey(this.keyPending, false);\r\n      this.showKeyTip(null, false);\r\n      this.clearPopup();\r\n      this.keyPending = null;\r\n      this.touchPending = null;\r\n    }\r\n\r\n    /**\r\n     * OSK touch move event handler\r\n     *\r\n     *  @param  {Event} e   touch move event object\r\n     *\r\n     **/\r\n    moveOver(input: InputEventCoordinate): void {\r\n      // Shouldn\u0027t be possible, but just in case.\r\n      if (this.touchCount == 0) {\r\n        this.cancelDelete();\r\n        return;\r\n      }\r\n\r\n      // Get touch position\r\n      const x = input.x - window.pageXOffset;\r\n      const y = input.y - window.pageYOffset;\r\n\r\n      // Move target key and highlighting\r\n      this.touchPending = input;\r\n      // Operates on viewport-based coordinates, not page-based.\r\n      var t1 = \u003cHTMLElement\u003edocument.elementFromPoint(x, y);\r\n      const key0 = this.keyPending;\r\n      let key1 = this.keyTarget(t1); // Not only gets base keys, but also gets popup keys!\r\n\r\n      // Find the nearest key to the touch point if not on a visible key\r\n      if ((key1 \u0026\u0026 key1.className.indexOf(\u0027key-hidden\u0027) \u003e= 0) ||\r\n        (t1 \u0026\u0026 (!key1) \u0026\u0026 t1.className.indexOf(\u0027key-row\u0027) \u003e= 0)) {\r\n        key1 = this.findNearestKey(input, t1);\r\n      }\r\n\r\n      // Cancels BKSP if it\u0027s not the key.  (Note... could also cancel BKSP if the ongoing\r\n      // input is cancelled, regardless of key, just to be safe.)\r\n\r\n      // Stop repeat if no longer on BKSP key\r\n      if (key1 \u0026\u0026 (typeof key1.id == \u0027string\u0027) \u0026\u0026 (key1.id.indexOf(\u0027-K_BKSP\u0027) \u003c 0)) {\r\n        this.cancelDelete();\r\n      }\r\n\r\n      // Cancels if it\u0027s a multitouch attempt.\r\n\r\n      // Do not attempt to support reselection of target key for overlapped keystrokes.\r\n      // Perform _after_ ensuring possible sticky keys have been cancelled.\r\n      if (input.activeInputCount \u003e 1) {\r\n        return;\r\n      }\r\n\r\n      // Gesture-updates should probably be a separate call from other touch-move aspects.\r\n\r\n      // Update all gesture tracking.  The function returns true if further input processing\r\n      // should be blocked.\r\n      if (this.updateGestures(key1, key0, input)) {\r\n        return;\r\n      }\r\n\r\n      // Identify current touch position (to manage off-key release)\r\n      this.currentTarget = key1;\r\n\r\n      // Only NOW do we denote the newly-selected key as the currently-focused key.\r\n\r\n      // Replace the target key, if any, by the new target key\r\n      // Do not replace a null target, as that indicates the key has already been released\r\n      if (key1 \u0026\u0026 this.keyPending) {\r\n        this.highlightKey(key0, false);\r\n        this.keyPending = key1;\r\n        this.touchPending = input;\r\n      }\r\n\r\n      if (key0 \u0026\u0026 key1 \u0026\u0026 (key1 != key0) \u0026\u0026 (key1.id != \u0027\u0027)) {\r\n        // While there may not be an active subkey menu, we should probably update which base key\r\n        // is being highlighted by the current touch \u0026 start a pending longpress for it.\r\n        this.clearPopup();\r\n        this.initGestures(key1, input);\r\n      }\r\n\r\n      if (this.keyPending) {\r\n        if (key0 != key1 || key1.className.indexOf(OSKKey.HIGHLIGHT_CLASS) \u003c 0) {\r\n          this.highlightKey(key1, true);\r\n        }\r\n      }\r\n    }\r\n\r\n    //#endregion\r\n\r\n    /**\r\n     * Get the current key target from the touch point element within the key\r\n     *\r\n     * @param   {Object}  t   element at touch point\r\n     * @return  {Object}      the key element (or null)\r\n     **/\r\n    keyTarget(target: HTMLElement | EventTarget): KeyElement {\r\n      let t = \u003cHTMLElement\u003etarget;\r\n\r\n      try {\r\n        if (t) {\r\n          if (t.classList.contains(\u0027kmw-key\u0027)) {\r\n            return getKeyFrom(t);\r\n          }\r\n          if (t.parentNode \u0026\u0026 (t.parentNode as HTMLElement).classList.contains(\u0027kmw-key\u0027)) {\r\n            return getKeyFrom(t.parentNode);\r\n          }\r\n          if (t.firstChild \u0026\u0026 (t.firstChild as HTMLElement).classList.contains(\u0027kmw-key\u0027)) {\r\n            return getKeyFrom(t.firstChild);\r\n          }\r\n        }\r\n      } catch (ex) { }\r\n      return null;\r\n    }\r\n\r\n    /**\r\n     * Identify the key nearest to the touch point if at the end of a key row,\r\n     * but return null more than about 0.6 key width from the nearest key.\r\n     *\r\n     *  @param  {Event}   e   touch event\r\n     *  @param  {Object}  t   HTML object at touch point\r\n     *  @return {Object}      nearest key to touch point\r\n     *\r\n     **/\r\n    findNearestKey(input: InputEventCoordinate, t: HTMLElement): KeyElement {\r\n      if (!input) {\r\n        return null;\r\n      }\r\n\r\n      // Get touch point on screen\r\n      var x = input.x;\r\n\r\n      // Get key-row beneath touch point\r\n      while (t \u0026\u0026 t.className !== undefined \u0026\u0026 t.className.indexOf(\u0027key-row\u0027) \u003c 0) {\r\n        t = \u003cHTMLElement\u003et.parentNode;\r\n      }\r\n      if (!t) {\r\n        return null;\r\n      }\r\n\r\n      // Find minimum distance from any key\r\n      var k, k0 = 0, dx, dxMax = 24, dxMin = 100000, x1, x2;\r\n      for (k = 0; k \u003c t.childNodes.length; k++) {\r\n        let keySquare = t.childNodes[k] as HTMLElement; // gets the .kmw-key-square containing a key\r\n        // Find the actual key element.\r\n        let childNode = keySquare.firstChild ? keySquare.firstChild as HTMLElement : keySquare;\r\n\r\n        if (childNode.className !== undefined\r\n          \u0026\u0026 (childNode.className.indexOf(\u0027key-hidden\u0027) \u003e= 0\r\n            || childNode.className.indexOf(\u0027key-blank\u0027) \u003e= 0)) {\r\n          continue;\r\n        }\r\n        x1 = keySquare.offsetLeft;\r\n        x2 = x1 + keySquare.offsetWidth;\r\n        if (x \u003e= x1 \u0026\u0026 x \u003c= x2) {\r\n          // Within the key square\r\n          return \u003cKeyElement\u003echildNode;\r\n        }\r\n        dx = x1 - x;\r\n        if (dx \u003e= 0 \u0026\u0026 dx \u003c dxMin) {\r\n          // To right of key\r\n          k0 = k; dxMin = dx;\r\n        }\r\n        dx = x - x2;\r\n        if (dx \u003e= 0 \u0026\u0026 dx \u003c dxMin) {\r\n          // To left of key\r\n          k0 = k; dxMin = dx;\r\n        }\r\n      }\r\n\r\n      if (dxMin \u003c 100000) {\r\n        t = \u003cHTMLElement\u003et.childNodes[k0];\r\n        x1 = t.offsetLeft;\r\n        x2 = x1 + t.offsetWidth;\r\n\r\n        // Limit extended touch area to the larger of 0.6 of key width and 24 px\r\n        if (t.offsetWidth \u003e 40) {\r\n          dxMax = 0.6 * t.offsetWidth;\r\n        }\r\n\r\n        if (((x1 - x) \u003e= 0 \u0026\u0026 (x1 - x) \u003c dxMax) || ((x - x2) \u003e= 0 \u0026\u0026 (x - x2) \u003c dxMax)) {\r\n          return \u003cKeyElement\u003et.firstChild;\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n\r\n    /**\r\n     *  Repeat backspace as long as the backspace key is held down\r\n     **/\r\n    repeatDelete: () =\u003e void = function (this: VisualKeyboard) {\r\n      if (this.deleting) {\r\n        this.modelKeyClick(this.deleteKey);\r\n        this.deleting = window.setTimeout(this.repeatDelete, 100);\r\n      }\r\n    }.bind(this);\r\n\r\n    /**\r\n     * Cancels any active repeatDelete() timeouts, ensuring that\r\n     * repeating backspace operations are properly terminated.\r\n     */\r\n    cancelDelete() {\r\n      // Clears the delete-repeating timeout.\r\n      if (this.deleting) {\r\n        window.clearTimeout(this.deleting);\r\n      }\r\n      this.deleting = 0;\r\n    }\r\n    //#endregion\r\n\r\n    modelKeyClick(e: osk.KeyElement, input?: InputEventCoordinate) {\r\n      let keyEvent = this.initKeyEvent(e, input);\r\n\r\n      // TODO:  convert into an actual event, raised by the VisualKeyboard.\r\n      //        Its code is intended to lie outside of the OSK-Core library/module.\r\n      PreProcessor.raiseKeyEvent(keyEvent);\r\n    }\r\n\r\n    initKeyEvent(e: osk.KeyElement, input?: InputEventCoordinate) {\r\n      // Turn off key highlighting (or preview)\r\n      this.highlightKey(e, false);\r\n\r\n      // Future note:  we need to refactor osk.OSKKeySpec to instead be a \u0027tag field\u0027 for\r\n      // keyboards.ActiveKey.  (Prob with generics, allowing the Web-only parts to\r\n      // be fully specified within the tag.)\r\n      //\r\n      // Would avoid the type shenanigans needed here because of our current type-abuse setup\r\n      // for key spec tracking.\r\n      let keySpec = (e[\u0027key\u0027] ? e[\u0027key\u0027].spec : null) as unknown as keyboards.ActiveKey;\r\n      if (!keySpec) {\r\n        console.error(\"OSK key with ID \u0027\" + e.id + \"\u0027, keyID \u0027\" + e.keyId + \"\u0027 missing needed specification\");\r\n        return null;\r\n      }\r\n\r\n      // Return the event object.\r\n      return this.keyEventFromSpec(keySpec, input);\r\n    }\r\n\r\n    keyEventFromSpec(keySpec: keyboards.ActiveKey, input?: InputEventCoordinate) {\r\n      let core = com.keyman.singleton.core; // only singleton-based ref currently needed here.\r\n\r\n      // Start:  mirrors _GetKeyEventProperties\r\n\r\n      // First check the virtual key, and process shift, control, alt or function keys\r\n      let Lkc = keySpec.constructKeyEvent(core.keyboardProcessor, this.device);\r\n\r\n      // End - mirrors _GetKeyEventProperties\r\n\r\n      if (core.languageProcessor.isActive \u0026\u0026 input) {\r\n        Lkc.source = input;\r\n        Lkc.keyDistribution = this.getTouchProbabilities(input, keySpec);\r\n      }\r\n\r\n      // Return the event object.\r\n      return Lkc;\r\n    }\r\n\r\n    // cancel = function(e) {} //cancel event is never generated by iOS\r\n\r\n    /**\r\n     * Function     _UpdateVKShiftStyle\r\n     * Scope        Private\r\n     * @param       {string=}   layerId\r\n     * Description  Updates the OSK\u0027s visual style for any toggled state keys\r\n     */\r\n    _UpdateVKShiftStyle(layerId?: string) {\r\n      var i;\r\n      let core = com.keyman.singleton.core;\r\n\r\n      if (!layerId) {\r\n        layerId = this.layerId;\r\n      }\r\n\r\n      const layer = this.layerGroup.layers[layerId];\r\n      if (!layer) {\r\n        return;\r\n      }\r\n\r\n      // So... through KMW 14, we actually never tracked the capsKey, numKey, and scrollKey\r\n      // properly for keyboard-defined layouts - only _default_, desktop-style layouts.\r\n      //\r\n      // We _could_ remedy this, but then... touch keyboards like khmer_angkor actually\r\n      // repurpose certain state keys, and in an inconsistent manner at that.\r\n      // Considering the potential complexity of touch layouts, with multiple possible\r\n      // layer-shift keys, it\u0027s likely best to just leave things as they are for now.\r\n      if (!core.activeKeyboard?.usesDesktopLayoutOnDevice(this.device)) {\r\n        return;\r\n      }\r\n\r\n      // Set the on/off state of any visible state keys.\r\n      const states = [\u0027K_CAPS\u0027, \u0027K_NUMLOCK\u0027, \u0027K_SCROLL\u0027];\r\n      const keys = [layer.capsKey, layer.numKey, layer.scrollKey];\r\n\r\n      for (i = 0; i \u003c keys.length; i++) {\r\n        // Skip any keys not in the OSK!\r\n        if (keys[i] == null) {\r\n          continue;\r\n        }\r\n\r\n        keys[i].setToggleState(core.keyboardProcessor.stateKeys[states[i]]);\r\n      }\r\n    }\r\n\r\n    clearPopup() {\r\n      // Remove the displayed subkey array, if any, and cancel popup request\r\n      if (this.subkeyGesture) {\r\n        this.subkeyGesture.clear();\r\n        this.subkeyGesture = null;\r\n      }\r\n\r\n      if (this.pendingSubkey) {\r\n        this.pendingSubkey.cancel();\r\n        this.pendingSubkey = null;\r\n      }\r\n    }\r\n\r\n    //#endregion\r\n\r\n    /**\r\n     * Indicate the current language and keyboard on the space bar\r\n     **/\r\n    showLanguage() {\r\n      let keyman = com.keyman.singleton;\r\n\r\n      let displayName: string = undefined;\r\n      let activeStub = keyman.keyboardManager.activeStub;\r\n\r\n      if (activeStub) {\r\n        if (activeStub[\u0027displayName\u0027] != null) {\r\n          displayName = activeStub[\u0027displayName\u0027];\r\n        } else {\r\n          let\r\n            lgName: string = activeStub[\u0027KL\u0027],\r\n            kbdName: string = activeStub[\u0027KN\u0027];\r\n          kbdName = kbdName.replace(/\\s*keyboard\\s*/i, \u0027\u0027);\r\n          switch (keyman.options[\u0027spacebarText\u0027]) {\r\n            case SpacebarText.KEYBOARD:\r\n              displayName = kbdName;\r\n              break;\r\n            case SpacebarText.LANGUAGE:\r\n              displayName = lgName;\r\n              break;\r\n            case SpacebarText.LANGUAGE_KEYBOARD:\r\n              displayName = (kbdName == lgName) ? lgName : lgName + \u0027 - \u0027 + kbdName;\r\n              break;\r\n            case SpacebarText.BLANK:\r\n              displayName = \u0027\u0027;\r\n              break;\r\n            default:\r\n              displayName = kbdName;\r\n          }\r\n        }\r\n      } else {\r\n        displayName = \u0027(System keyboard)\u0027;\r\n      }\r\n\r\n      try {\r\n        var t = \u003cHTMLElement\u003ethis.spaceBar.key.label;\r\n        let tParent = \u003cHTMLElement\u003et.parentNode;\r\n        if (typeof (tParent.className) == \u0027undefined\u0027 || tParent.className == \u0027\u0027) {\r\n          tParent.className = \u0027kmw-spacebar\u0027;\r\n        } else if (tParent.className.indexOf(\u0027kmw-spacebar\u0027) == -1) {\r\n          tParent.className += \u0027 kmw-spacebar\u0027;\r\n        }\r\n\r\n        if (t.className != \u0027kmw-spacebar-caption\u0027) {\r\n          t.className = \u0027kmw-spacebar-caption\u0027;\r\n        }\r\n\r\n        // It sounds redundant, but this dramatically cuts down on browser DOM processing;\r\n        // but sometimes innerText is reported empty when it actually isn\u0027t, so set it\r\n        // anyway in that case (Safari, iOS 14.4)\r\n        if (t.innerText != displayName || displayName == \u0027\u0027) {\r\n          t.innerText = displayName;\r\n        }\r\n      }\r\n      catch (ex) { }\r\n    }\r\n\r\n    /**\r\n     *  Add or remove a class from a keyboard key (when touched or clicked)\r\n     *  or add a key preview for phone devices\r\n     *\r\n     *  @param    {Object}    key   key affected\r\n     *  @param    {boolean}   on    add or remove highlighting\r\n     **/\r\n    highlightKey(key: KeyElement, on: boolean) {\r\n      // Do not change element class unless a key\r\n      if (!key || !key.key || (key.className == \u0027\u0027) || (key.className.indexOf(\u0027kmw-key-row\u0027) \u003e= 0)) return;\r\n\r\n      // For phones, use key preview rather than highlighting the key,\r\n      var usePreview = (this.keytip != null) \u0026\u0026 key.key.allowsKeyTip();\r\n\r\n      if (usePreview) {\r\n        this.showKeyTip(key, on);\r\n      } else {\r\n        // No key tip should be shown. In some cases (e.g. multitap), we\r\n        // may still have a tip visible so let\u0027s always hide in that case\r\n        this.showKeyTip(null, false);\r\n        key.key.highlight(on);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Use of `getComputedStyle` is ideal, but in many of our use cases its preconditions are not met.\r\n     * This function allows us to calculate the font size in those situations.\r\n     */\r\n    getKeyEmFontSize(): number {\r\n      if (!this.fontSize) {\r\n        return 0;\r\n      }\r\n\r\n      if (this.device.formFactor == \u0027desktop\u0027) {\r\n        let keySquareScale = 0.8; // Set in kmwosk.css, is relative.\r\n        return this.fontSize.scaledBy(keySquareScale).val;\r\n      } else {\r\n        let emSizeStr = getComputedStyle(document.body).fontSize;\r\n        let emSize = getFontSizeStyle(emSizeStr).val;\r\n\r\n        var emScale = 1;\r\n        if (!this.isStatic) {\r\n          // Double-check against the font scaling applied to the _Box element.\r\n          if (this.fontSize.absolute) {\r\n            return this.fontSize.val;\r\n          } else {\r\n            emScale = this.fontSize.val;\r\n          }\r\n        }\r\n        return emSize * emScale;\r\n      }\r\n    }\r\n\r\n    updateState() {\r\n      // May happen for desktop-oriented keyboards that neglect to specify a touch layout.\r\n      // See `test_chirality.js` from the unit-test keyboard suite, which tests keystrokes\r\n      // using modifiers that lack corresponding visual-layout representation.\r\n      if (!this.currentLayer) {\r\n        return;\r\n      }\r\n\r\n      var n, b = this.kbdDiv.childNodes[0].childNodes;\r\n      this.nextLayer = this.layerId;\r\n\r\n      if (this.currentLayer.nextlayer) {\r\n        this.nextLayer = this.currentLayer.nextlayer;\r\n      }\r\n\r\n      for (n = 0; n \u003c b.length; n++) {\r\n        let layerElement = \u003cHTMLDivElement\u003eb[n];\r\n        if (layerElement[\u0027layer\u0027] == this.layerId) {\r\n          layerElement.style.display = \u0027block\u0027;\r\n          //b[n].style.visibility=\u0027visible\u0027;\r\n\r\n          // Most functions that call this one often indicate a change in modifier\r\n          // or state key state.  Keep it updated!\r\n          this._UpdateVKShiftStyle();\r\n        } else {\r\n          layerElement.style.display = \u0027none\u0027;\r\n          //layerElement.style.visibility=\u0027hidden\u0027;\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Used to refresh the VisualKeyboard\u0027s geometric layout and key sizes\r\n     * when needed.\r\n     */\r\n    refreshLayout() {\r\n      let keyman = com.keyman.singleton;\r\n      let device = this.device;\r\n\r\n      var fs = 1.0;\r\n      // TODO: Logically, this should be needed for Android, too - may need to be changed for the next version!\r\n      if (device.OS == utils.OperatingSystem.iOS \u0026\u0026 !keyman.isEmbedded) {\r\n        fs = fs / keyman.util.getViewportScale();\r\n      }\r\n\r\n      let paddedHeight: number;\r\n      if (this.height) {\r\n        paddedHeight = this.computedAdjustedOskHeight(this.height);\r\n      }\r\n\r\n      let b = this.layerGroup.element as HTMLElement;\r\n      let gs = this.kbdDiv.style;\r\n      let bs = b.style;\r\n      if (this.usesFixedHeightScaling \u0026\u0026 this.height) {\r\n        // Sets the layer group to the correct height.\r\n        gs.height = gs.maxHeight = this.height + \u0027px\u0027;\r\n      }\r\n\r\n      // The font-scaling applied on the layer group.\r\n      gs.fontSize = this.fontSize.styleString;\r\n      bs.fontSize = ParsedLengthStyle.forScalar(fs).styleString;\r\n\r\n      // NEW CODE ------\r\n\r\n      // Step 1:  have the necessary conditions been met?\r\n      const fixedSize = this.width \u0026\u0026 this.height;\r\n      const computedStyle = getComputedStyle(this.kbdDiv);\r\n      const isInDOM = computedStyle.height != \u0027\u0027 \u0026\u0026 computedStyle.height != \u0027auto\u0027;\r\n\r\n      // Step 2:  determine basic layout geometry\r\n      if (fixedSize) {\r\n        this._computedWidth = this.width;\r\n        this._computedHeight = this.height;\r\n      } else if (isInDOM) {\r\n        this._computedWidth = parseInt(computedStyle.width, 10);\r\n        if (!this._computedWidth) {\r\n          // For touch keyboards, the width _was_ specified on the layer group,\r\n          // not the root element (`kbdDiv`).\r\n          const groupStyle = getComputedStyle(this.kbdDiv.firstElementChild);\r\n          this._computedWidth = parseInt(groupStyle.width, 10);\r\n        }\r\n        this._computedHeight = parseInt(computedStyle.height, 10);\r\n      } else {\r\n        // Cannot perform layout operations!\r\n        return;\r\n      }\r\n\r\n      // Step 3:  perform layout operations.  (Handled by \u0027old code\u0027 section below.)\r\n\r\n      // END NEW CODE -----------\r\n\r\n      // Needs the refreshed layout info to work correctly.\r\n      if(this.currentLayer) {\r\n        this.currentLayer.refreshLayout(this, this._computedHeight - this.getVerticalLayerGroupPadding());\r\n      }\r\n    }\r\n\r\n    private getVerticalLayerGroupPadding(): number {\r\n      // For touch-based OSK layouts, kmwosk.css may include top \u0026 bottom padding on the layer-group element.\r\n      const computedGroupStyle = getComputedStyle(this.layerGroup.element);\r\n      return parseInt(computedGroupStyle.paddingTop, 10) + parseInt(computedGroupStyle.paddingBottom, 10);\r\n    }\r\n\r\n    /*private*/ computedAdjustedOskHeight(allottedHeight: number): number {\r\n      if (!this.layerGroup) {\r\n        return allottedHeight;\r\n      }\r\n\r\n      const layers = this.layerGroup.layers;\r\n      let oskHeight = 0;\r\n\r\n      // In case the keyboard\u0027s layers have differing row counts, we check them all for the maximum needed oskHeight.\r\n      for (const layerID in layers) {\r\n        const layer = layers[layerID];\r\n        let nRows = layer.rows.length;\r\n        let rowHeight = Math.floor(allottedHeight / (nRows == 0 ? 1 : nRows));\r\n        let layerHeight = nRows * rowHeight;\r\n\r\n        if (layerHeight \u003e oskHeight) {\r\n          oskHeight = layerHeight;\r\n        }\r\n      }\r\n\r\n      // This isn\u0027t set anywhere else; it\u0027s a legacy part of the original methods.\r\n      const oskPad = 0;\r\n      let oskPaddedHeight = oskHeight + oskPad;\r\n\r\n      return oskPaddedHeight;\r\n    }\r\n\r\n    /**\r\n     *  Append a style sheet for the current keyboard if needed for specifying an embedded font\r\n     *  or to re-apply the default element font\r\n     *\r\n     **/\r\n    appendStyleSheet() {\r\n      let keymanweb = com.keyman.singleton;\r\n      let util = keymanweb.util;\r\n\r\n      var activeKeyboard = keymanweb.core.activeKeyboard;\r\n      var activeStub: com.keyman.keyboards.KeyboardStub = keymanweb.keyboardManager.activeStub;\r\n\r\n      // Do not do anything if a null stub\r\n      if (activeStub == null) {\r\n        return;\r\n      }\r\n\r\n      // First remove any existing keyboard style sheet\r\n      if (this.styleSheet) {\r\n        util.removeStyleSheet(this.styleSheet);\r\n      }\r\n\r\n      var i, kfd = activeStub[\u0027KFont\u0027], ofd = activeStub[\u0027KOskFont\u0027];\r\n\r\n      // Add style sheets for embedded fonts if necessary (each font-face style will only be added once)\r\n      util.addFontFaceStyleSheet(kfd);\r\n      util.addFontFaceStyleSheet(ofd);\r\n\r\n      // Temporarily hide duplicated elements on non-desktop browsers\r\n      keymanweb.hideInputs();\r\n\r\n      // Build the style string and append (or replace) the font style sheet\r\n      // Note: Some browsers do not download the font-face font until it is applied,\r\n      //       so must apply style before testing for font availability\r\n      // Extended to allow keyboard-specific custom styles for Build 360\r\n      var customStyle = this.addFontStyle(kfd, ofd);\r\n      if (activeKeyboard != null \u0026\u0026 typeof (activeKeyboard.oskStyling) == \u0027string\u0027)  // KMEW-129\r\n        customStyle = customStyle + activeKeyboard.oskStyling;\r\n\r\n      this.styleSheet = util.addStyleSheet(customStyle); //Build 360\r\n\r\n      // Wait until font is loaded then align duplicated input elements with page elements\r\n      if (this.waitForFonts(kfd, ofd)) {\r\n        keymanweb.alignInputs();\r\n      }\r\n    }\r\n\r\n    /**\r\n     *  Add or replace the style sheet used to set the font for input elements and OSK\r\n     *\r\n     *  @param  {Object}  kfd   KFont font descriptor\r\n     *  @param  {Object}  ofd   OSK font descriptor (if any)\r\n     *  @return {string}\r\n     *\r\n     **/\r\n    addFontStyle(kfd, ofd): string {\r\n      let keymanweb = com.keyman.singleton;\r\n\r\n      // Get name of font to be applied\r\n      var fn = keymanweb.baseFont;\r\n      if (typeof (kfd) != \u0027undefined\u0027 \u0026\u0026 typeof (kfd[\u0027family\u0027]) != \u0027undefined\u0027) {\r\n        fn = kfd[\u0027family\u0027];\r\n      }\r\n\r\n      // Unquote font name in base font (if quoted)\r\n      fn = fn.replace(/\\u0022/g, \u0027\u0027);\r\n\r\n      // Set font family chain for mapped elements and remove any double quotes\r\n      var rx = new RegExp(\u0027\\\\s?\u0027 + fn + \u0027,?\u0027), ff = keymanweb.appliedFont.replace(/\\u0022/g, \u0027\u0027);\r\n\r\n      // Remove base font name from chain if present\r\n      ff = ff.replace(rx, \u0027\u0027);\r\n      ff = ff.replace(/,$/, \u0027\u0027);\r\n\r\n      // Then replace it at the head of the chain\r\n      if (ff == \u0027\u0027) {\r\n        ff = fn;\r\n      } else {\r\n        ff = fn + \u0027,\u0027 + ff;\r\n      }\r\n\r\n      // Re-insert quotes around individual font names\r\n      ff = \u0027\"\u0027 + ff.replace(/\\,\\s?/g, \u0027\",\"\u0027) + \u0027\"\u0027;\r\n\r\n      // Add to the stylesheet, quoted, and with !important to override any explicit style\r\n      var s = \u0027.keymanweb-font{\\nfont-family:\u0027 + ff + \u0027 !important;\\n}\\n\u0027;\r\n\r\n      // Set font family for OSK text\r\n      if (typeof (ofd) != \u0027undefined\u0027) {\r\n        s = s + \u0027.kmw-key-text{\\nfont-family:\"\u0027 + ofd[\u0027family\u0027].replace(/\\u0022/g, \u0027\u0027).replace(/,/g, \u0027\",\"\u0027) + \u0027\";\\n}\\n\u0027;\r\n      } else if (typeof (kfd) != \u0027undefined\u0027) {\r\n        s = s + \u0027.kmw-key-text{\\nfont-family:\"\u0027 + kfd[\u0027family\u0027].replace(/\\u0022/g, \u0027\u0027).replace(/,/g, \u0027\",\"\u0027) + \u0027\";\\n}\\n\u0027;\r\n      }\r\n\r\n      // Store the current font chain (with quote-delimited font names)\r\n      keymanweb.appliedFont = ff;\r\n\r\n      // Return the style string\r\n      return s;\r\n    }\r\n\r\n    /**\r\n     * Create copy of the OSK that can be used for embedding in documentation or help\r\n     * The currently active keyboard will be returned if PInternalName is null\r\n     *\r\n     *  @param  {Object}            PKbd            the keyboard object to be displayed\r\n     *  @param  {string=}           argFormFactor   layout form factor, defaulting to \u0027desktop\u0027\r\n     *  @param  {(string|number)=}  argLayerId      name or index of layer to show, defaulting to \u0027default\u0027\r\n     *  @param  {number}            height          Target height for the rendered keyboard\r\n     *                                              (currently required for legacy reasons)\r\n     *  @return {Object}                            DIV object with filled keyboard layer content\r\n     */\r\n    static buildDocumentationKeyboard(PKbd: com.keyman.keyboards.Keyboard, argFormFactor, argLayerId, height: number): HTMLElement { // I777\r\n      if (!PKbd) {\r\n        return null;\r\n      }\r\n\r\n      var formFactor = (typeof (argFormFactor) == \u0027undefined\u0027 ? \u0027desktop\u0027 : argFormFactor),\r\n        layerId = (typeof (argLayerId) == \u0027undefined\u0027 ? \u0027default\u0027 : argLayerId),\r\n        device = new Device();\r\n\r\n      // Device emulation for target documentation.\r\n      device.formFactor = formFactor;\r\n      if (formFactor != \u0027desktop\u0027) {\r\n        device.OS = \u0027iOS\u0027;\r\n        device.touchable = true;\r\n      } else {\r\n        device.OS = \u0027windows\u0027;\r\n        device.touchable = false;\r\n      }\r\n\r\n      let layout = PKbd.layout(formFactor);\r\n\r\n      let kbdObj = new VisualKeyboard(PKbd, device.coreSpec, device.coreSpec, true);\r\n\r\n      // The \u0027documentation\u0027 format uses the base element\u0027s child as the actual display base.\r\n      // Since there\u0027s no backing kmw-osk-frame, we do need the static-class kmw-osk-inner-frame\r\n      // to perform background styling on our behalf.  We\u0027ll trust the actual, live keyboard rules\r\n      // for the other elements, which in turn needs the non-static variant of the CSS rules.\r\n      kbdObj.layerGroup.element.className = kbdObj.kbdDiv.className + \u0027 \u0027 + device.formFactor\r\n        + \u0027-static \u0027 + device.OS.toLowerCase();\r\n\r\n      let kbd = kbdObj.kbdDiv.childNodes[0] as HTMLDivElement; // Gets the layer group.\r\n\r\n      // Select the layer to display, and adjust sizes\r\n      if (layout != null) {\r\n        kbdObj.layerId = layerId;\r\n        kbdObj.updateState();\r\n        // This still feels fairly hacky... but something IS needed to constrain the height.\r\n        // There are plans to address related concerns through some of the later aspects of\r\n        // the Web OSK-Core design.\r\n        kbdObj.setSize(800, height); // Probably need something for width, too, rather than\r\n        // assuming 100%.\r\n        kbdObj.refreshLayout(); // Necessary for the row heights to be properly set!\r\n        // Relocates the font size definition from the main VisualKeyboard wrapper, since we don\u0027t return the whole thing.\r\n        kbd.style.fontSize = kbdObj.kbdDiv.style.fontSize;\r\n        kbd.style.height = kbdObj.kbdDiv.style.height;\r\n        kbd.style.maxHeight = kbdObj.kbdDiv.style.maxHeight;\r\n      } else {\r\n        kbd.innerHTML = \"\u003cp style=\u0027color:#c40; font-size:0.5em;margin:10px;\u0027\u003eNo \" + formFactor + \" layout is defined for \" + PKbd.name + \".\u003c/p\u003e\";\r\n      }\r\n      // Add a faint border\r\n      kbd.style.border = \u00271px solid #ccc\u0027;\r\n\r\n      // Once the element is inserted into the DOM, refresh the layout so that proper text scaling may apply.\r\n      const refreshInterval = window.setInterval(function () {\r\n        let computedStyle = getComputedStyle(kbd);\r\n        if (computedStyle.fontSize) {\r\n          if (kbd.style.fontSize) {\r\n            // Preserve the new setting (provided by CSS)\r\n            kbdObj.fontSize = new ParsedLengthStyle(kbd.style.fontSize);\r\n          }\r\n          kbdObj.refreshLayout();\r\n          window.clearInterval(refreshInterval);\r\n        }\r\n      }, 10);\r\n\r\n      return kbd;\r\n    }\r\n\r\n    onHide() {\r\n      // Remove highlighting from hide keyboard key, if applied\r\n      if (this.hkKey) {\r\n        this.highlightKey(this.hkKey, false);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Starts an implementation-specific longpress gesture.  Separately implemented for\r\n     * in-browser and embedded modes.\r\n     * @param key The base key of the longpress.\r\n     * @returns\r\n     */\r\n    startLongpress(key: KeyElement): PendingGesture {\r\n      let _this = this;\r\n\r\n      // First-level object/Promise:  will produce a subkey popup when the longpress gesture completes.\r\n      // \u0027Returns\u0027 a second-level object/Promise:  resolves when a subkey is selected or is cancelled.\r\n      let pendingLongpress = new browser.PendingLongpress(this, key);\r\n      pendingLongpress.promise.then(function (subkeyPopup) {\r\n        // In-browser-specific handling.\r\n        if (subkeyPopup) {\r\n          // Append the touch-hold (subkey) array to the OSK\r\n          let keyman = com.keyman.singleton;\r\n          keyman.osk._Box.appendChild(subkeyPopup.element);\r\n          keyman.osk._Box.appendChild(subkeyPopup.shim);\r\n\r\n          // Must be placed after its `.element` has been inserted into the DOM.\r\n          subkeyPopup.reposition(_this);\r\n        }\r\n      });\r\n\r\n      return pendingLongpress;\r\n    }\r\n\r\n    /**\r\n     * Initializes all supported gestures given a base key and the triggering touch coordinates.\r\n     * @param key     The gesture\u0027s base key\r\n     * @param touch   The starting touch coordinates for the gesture\r\n     * @returns\r\n     */\r\n    initGestures(key: KeyElement, input: InputEventCoordinate) {\r\n\r\n      if (this.pendingMultiTap) {\r\n        switch (this.pendingMultiTap.incrementTouch(key)) {\r\n          case PendingMultiTapState.Cancelled:\r\n            this.pendingMultiTap = null;\r\n            break;\r\n          case PendingMultiTapState.Realized:\r\n            // Don\u0027t initialize any other gestures if the\r\n            // multi tap is realized; we cleanup on touch\r\n            // release because we need to cancel the base\r\n            // key action\r\n            return;\r\n        }\r\n      }\r\n\r\n      if (!this.pendingMultiTap \u0026\u0026 PendingMultiTap.isValidTarget(this, key)) {\r\n        // We are only going to support double-tap on Shift\r\n        // in Keyman 15, so we pass in the constant count = 2\r\n        this.pendingMultiTap = new PendingMultiTap(this, key, 2);\r\n        this.pendingMultiTap.timeout.then(() =\u003e {\r\n          this.pendingMultiTap = null;\r\n        });\r\n      }\r\n\r\n\r\n      if (key[\u0027subKeys\u0027]) {\r\n        let _this = this;\r\n\r\n        let pendingLongpress = this.startLongpress(key);\r\n        if (pendingLongpress == null) {\r\n          return;\r\n        }\r\n        this.pendingSubkey = pendingLongpress;\r\n\r\n        pendingLongpress.promise.then(function (subkeyPopup) {\r\n          if (_this.pendingSubkey == pendingLongpress) {\r\n            _this.pendingSubkey = null;\r\n          }\r\n\r\n          if (subkeyPopup) {\r\n            // Clear key preview if any\r\n            _this.showKeyTip(null, false);\r\n\r\n            _this.subkeyGesture = subkeyPopup;\r\n            subkeyPopup.promise.then(function (keyEvent: text.KeyEvent) {\r\n              // Allow active cancellation, even if the source should allow passive.\r\n              // It\u0027s an easy and cheap null guard.\r\n              if (keyEvent) {\r\n                PreProcessor.raiseKeyEvent(keyEvent);\r\n              }\r\n              _this.clearPopup();\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Updates all currently-pending and activated gestures.\r\n     *\r\n     * @param currentKey    The key currently underneath the most recent touch coordinate\r\n     * @param previousKey   The previously-selected key\r\n     * @param input         The current mouse or touch coordinate for the gesture\r\n     * @returns true if should fully capture input, false if input should \u0027fall through\u0027.\r\n     */\r\n    updateGestures(currentKey: KeyElement, previousKey: KeyElement, input: InputEventCoordinate): boolean {\r\n      let key0 = previousKey;\r\n      let key1 = currentKey;\r\n\r\n      if(!currentKey \u0026\u0026 this.pendingMultiTap) {\r\n        this.pendingMultiTap.cancel();\r\n        this.pendingMultiTap = null;\r\n      }\r\n\r\n      // Clear previous key highlighting, allow subkey controller to highlight as appropriate.\r\n      if (this.subkeyGesture) {\r\n        if (key0) {\r\n          key0.key.highlight(false);\r\n        }\r\n        this.subkeyGesture.updateTouch(input);\r\n\r\n        this.keyPending = null;\r\n        this.touchPending = null;\r\n\r\n        return true;\r\n      }\r\n\r\n      this.currentTarget = null;\r\n\r\n      // If popup is visible, need to move over popup, not over main keyboard\r\n      // Could be turned into a browser-longpress specific implementation within browser.PendingLongpress?\r\n      if (key1 \u0026\u0026 key1[\u0027subKeys\u0027] != null \u0026\u0026 this.initTouchCoord) {\r\n        if(this.pendingSubkey \u0026\u0026 this.pendingSubkey instanceof browser.PendingLongpress) {\r\n          // Show popup keys immediately if touch moved up towards key array (KMEW-100, Build 353)\r\n          if (this.initTouchCoord.y - input.y \u003e this.getLongpressFlickThreshold()) {\r\n            this.pendingSubkey.resolve();\r\n          }\r\n        }\r\n      }\r\n\r\n      // If there is an active popup menu (which can occur from the previous block),\r\n      // a subkey popup exists; do not allow base key output.\r\n      if (this.subkeyGesture || this.pendingSubkey) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    }\r\n\r\n    private getLongpressFlickThreshold(): number {\r\n      const rowHeight = this.currentLayer.rowHeight;\r\n\r\n      // If larger than 5 (and it likely is), new threshold = 1/4 the std. key height.\r\n      const proportionalThreshold = rowHeight / 4;\r\n\r\n      // 5 - the longpress-flick triggering threshold before 15.0.\r\n      return Math.max(proportionalThreshold, 5);\r\n    }\r\n\r\n    optionKey(e: KeyElement, keyName: string, keyDown: boolean) {\r\n      let keyman = com.keyman.singleton;\r\n      let oskManager = keyman.osk;\r\n      if (keyDown) {\r\n        if (keyName.indexOf(\u0027K_LOPT\u0027) \u003e= 0) {\r\n          oskManager.showLanguageMenu();\r\n        } else if (keyName.indexOf(\u0027K_ROPT\u0027) \u003e= 0) {\r\n          keyman.uiManager.setActivatingUI(false);\r\n          oskManager.startHide(true);\r\n          let active = keyman.domManager.activeElement;\r\n          if (dom.Utils.instanceof(active, \"TouchAliasElement\")) {\r\n            (active as dom.TouchAliasElement).hideCaret();\r\n          }\r\n          keyman.domManager.lastActiveElement = null;\r\n        }\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Add (or remove) the keytip preview (if KeymanWeb on a phone device)\r\n     *\r\n     * @param   {Object}  key   HTML key element\r\n     * @param   {boolean} on    show or hide\r\n     */\r\n    showKeyTip(key: KeyElement, on: boolean) {\r\n      var tip = this.keytip;\r\n\r\n      if (tip == null) {\r\n        return;\r\n      }\r\n\r\n      let sk = this.subkeyGesture;\r\n      let popup = (sk \u0026\u0026 sk.isVisible());\r\n\r\n      // If popup keys are active, do not show the key tip.\r\n      on = popup ? false : on;\r\n\r\n      tip.show(key, on, this);\r\n    };\r\n\r\n    /**\r\n     *  Create a key preview element for phone devices\r\n     */\r\n    createKeyTip() {\r\n      let keyman = com.keyman.singleton;\r\n\r\n      if (this.device.formFactor == \u0027phone\u0027) {\r\n        if (this.keytip == null) {\r\n          // For now, should only be true (in production) when keyman.isEmbedded == true.\r\n          let constrainPopup = keyman.isEmbedded;\r\n          this.keytip = new browser.KeyTip(constrainPopup);\r\n        }\r\n\r\n        // Always append to _Box (since cleared during OSK Load)\r\n        if (this.keytip \u0026\u0026 this.keytip.element) {\r\n          keyman.osk._Box.appendChild(this.keytip.element);\r\n        }\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Wait until font is loaded before applying stylesheet - test each 100 ms\r\n     * @param   {Object}  kfd   main font descriptor\r\n     * @param   {Object}  ofd   secondary font descriptor (OSK only)\r\n     * @return  {boolean}\r\n     */\r\n    waitForFonts(kfd, ofd) {\r\n      let keymanweb = com.keyman.singleton;\r\n      let util = keymanweb.util;\r\n\r\n      let fontDefined = !!(kfd \u0026\u0026 kfd[\u0027files\u0027]);\r\n      kfd = fontDefined ? kfd : undefined;\r\n\r\n      let oskFontDefined = !!(ofd \u0026\u0026 ofd[\u0027files\u0027]);\r\n      ofd = oskFontDefined ? ofd : undefined;\r\n\r\n      // Automatically \u0027ready\u0027 if the descriptor is explicitly `undefined`.\r\n      // Thus, also covers the case where both are undefined.\r\n      var kReady = util.checkFontDescriptor(kfd), oReady = util.checkFontDescriptor(ofd);\r\n      if (kReady \u0026\u0026 oReady) {\r\n        return true;\r\n      }\r\n\r\n      keymanweb.fontCheckTimer = window.setInterval(function () {\r\n        if (util.checkFontDescriptor(kfd) \u0026\u0026 util.checkFontDescriptor(ofd)) {\r\n          window.clearInterval(keymanweb.fontCheckTimer);\r\n          keymanweb.fontCheckTimer = null;\r\n          keymanweb.alignInputs();\r\n        }\r\n      }, 100);\r\n\r\n      // Align anyway as best as can if font appears to remain uninstalled after 5 seconds\r\n      window.setTimeout(function () {\r\n        if (keymanweb.fontCheckTimer) {\r\n          window.clearInterval(keymanweb.fontCheckTimer);\r\n          keymanweb.fontCheckTimer = null;\r\n          keymanweb.alignInputs();\r\n          // Don\u0027t notify - this is a management issue, not anything the user needs to deal with\r\n          // TODO: Consider having an icon in the OSK with a bubble that indicates missing font\r\n          //util.alert(\u0027Unable to download the font normally used with \u0027+ks[\u0027KN\u0027]+\u0027.\u0027);\r\n        }\r\n      }, 5000);\r\n      return false;\r\n    };\r\n\r\n    shutdown() {\r\n      let keyman = com.keyman.singleton;\r\n\r\n      // Prevents style-sheet pollution from multiple keyboard swaps.\r\n      if (this.styleSheet) {\r\n        keyman.util.removeStyleSheet(this.styleSheet);\r\n      }\r\n\r\n      if(this.inputEngine) {\r\n        this.inputEngine.unregisterEventHandlers();\r\n      }\r\n\r\n      if(this.deleting) {\r\n        window.clearTimeout(this.deleting);\r\n      }\r\n\r\n      this.keyPending = null;\r\n      this.touchPending = null;\r\n\r\n      this.keytip?.show(null, false, this);\r\n      this.subkeyGesture?.clear();\r\n      this.pendingMultiTap?.cancel();\r\n      this.pendingSubkey?.cancel();\r\n    }\r\n  }\r\n}\r\n","namespace com.keyman.osk {\r\n  /**\r\n   * This class was added to facilitate scroll handling for overflow-x elements, though it could\r\n   * be extended in the future to accept overflow-y if needed.\r\n   *\r\n   * This is necessary because of the OSK\u0027s need to use `.preventDefault()` for stability; that\r\n   * same method blocks native handling of overflow scrolling for touch browsers.\r\n   */\r\n  class ScrollState {\r\n    // While we don\u0027t currently track y-coordinates here, the class is designed\r\n    // to permit tracking them with minimal extra effort if we ever decide to do so.\r\n    x: number;\r\n    totalLength = 0;\r\n\r\n    // The amount of coordinate \u0027noise\u0027 allowed during a scroll-enabled touch allowed\r\n    // before interpreting the currently-ongoing touch command as having scrolled.\r\n    static readonly HAS_SCROLLED_FUDGE_FACTOR = 10;\r\n\r\n    constructor(coord: InputEventCoordinate) {\r\n      this.x = coord.x;\r\n\r\n      this.totalLength = 0;\r\n    }\r\n\r\n    updateTo(coord: InputEventCoordinate): {deltaX: number} {\r\n      let x = this.x;\r\n      this.x = coord.x;\r\n\r\n      let deltas = {deltaX: this.x - x};\r\n      this.totalLength += Math.abs(deltas.deltaX);\r\n\r\n      return deltas;\r\n    }\r\n\r\n    public get hasScrolled(): boolean {\r\n      // Allow an accidental fudge-factor for overflow element noise during a touch, but not much.\r\n      return this.totalLength \u003e ScrollState.HAS_SCROLLED_FUDGE_FACTOR;\r\n    }\r\n  }\r\n\r\n  export abstract class UITouchHandlerBase\u003cTarget extends HTMLElement\u003e {\r\n    private rowClassMatch: string;\r\n    private selectedTargetMatch: string;\r\n    private baseElement: HTMLElement;\r\n\r\n    private touchX: number;\r\n    private touchY: number;\r\n    private touchCount: number;\r\n\r\n    private currentTarget: Target;\r\n\r\n    private scrollTouchState: ScrollState;\r\n    private pendingTarget: Target;\r\n\r\n    constructor(baseElement: HTMLElement, rowClassMatch: string, selectedTargetMatch: string) {\r\n      this.baseElement = baseElement;\r\n      this.rowClassMatch = rowClassMatch;\r\n      this.selectedTargetMatch = selectedTargetMatch;\r\n    }\r\n\r\n    /**\r\n     * Finds the internally-preferred target element or submenu target element.\r\n     * @param e The DOM element that actually received the touch event.\r\n     * May be parent, child, or the actually-desired element itself.\r\n     */\r\n    abstract findTargetFrom(e: HTMLElement): Target;\r\n\r\n    /**\r\n     * Highlights the target element as visual feedback representing\r\n     * a pending touch.\r\n     * @param t The `Target` to highlight\r\n     * @param state `true` to apply highlighting, `false` to remove it.\r\n     */\r\n    protected abstract highlight(t: Target, state: boolean): void;\r\n\r\n    /**\r\n     * Called whenever the touch-handling analysis determines that the Target has been selected\r\n     * @param t The `Target` to activate/execute.\r\n     */\r\n    protected abstract select(t: Target): void;\r\n\r\n    /**\r\n     * Requests info on whether or not the indicated `Target` has subkeys or a submenu.\r\n     * @param t A `Target`.\r\n     */\r\n    protected abstract hasSubmenu(t: Target): boolean;\r\n\r\n    /**\r\n     * Indicates that the user is maintaining a `Touch` on the specified `Target`.\r\n     * Popups and-or longpress menus may be appropriate.\r\n     * @param t The `Target` being held.\r\n     */\r\n    protected abstract hold(t: Target): void;\r\n\r\n    /**\r\n     * Signals that any popup elements (previews, subkey views, etc) should be cancelled.\r\n     */\r\n    protected abstract clearHolds(): void;\r\n\r\n    /**\r\n     * Requests a boolean indicating whether or not the UI is currently displaying any input-blocking popup elements.\r\n     * Embedded mode should return `true` when the app is displaying popup menus.\r\n     */\r\n    protected abstract hasModalPopup(): boolean;\r\n\r\n    /**\r\n     * Designed to support highlighting of prepended base keys on phone form-factor subkey menus.\r\n     * @param target The base element with a potential subkey menu alias.\r\n     * @returns The aliased submenu version of the `Target`, or the original `Target` if no alias exists.\r\n     */\r\n    protected abstract dealiasSubTarget(target: Target): Target;\r\n\r\n    /**\r\n     * Should return true whenever a \u0027native\u0027-mode submenu (or subkey) display is active.\r\n     */\r\n    protected abstract isSubmenuActive(): boolean;\r\n\r\n    /**\r\n     * For \u0027native\u0027 mode - requests that the submenu for the indicated `Target` be instantly displayed.\r\n     * @param target The base element with a potential submenu\r\n     */\r\n    protected abstract displaySubmenuFor(target: Target);\r\n\r\n    /**\r\n     * Identify the key nearest to (but NOT under) the touch point if at the end of a key row,\r\n     * but return null more than about 0.6 key width from the nearest key.\r\n     *\r\n     *  @param  {Object}  coord   A pre-analyzed input coordinate\r\n     *  @param  {Object}  t   HTML object at touch point\r\n     *  @param  {boolean} omitCurrent  Omits any target directly under the touch point.\r\n     *  @return {Object}      nearest key to touch point\r\n     *\r\n     **/\r\n    private findTargetFromTouch(coord: InputEventCoordinate, t: HTMLElement, forMove: boolean): Target {\r\n      var x = coord.x;\r\n\r\n      // Get the UI row beneath touch point (SuggestionBanner div, \u0027kmw-key-row\u0027 if OSK, ...)\r\n      while(t \u0026\u0026 t.className !== undefined \u0026\u0026 t.className.indexOf(this.rowClassMatch) \u003c 0) {\r\n        t = \u003cHTMLElement\u003e t.parentNode;\r\n      }\r\n      if(!t) {\r\n        return null;\r\n      }\r\n\r\n      // Find minimum distance from any key\r\n      var k: number, bestMatch=0, dxMax=24, dxMin=100000, x1: number, x2: number;\r\n      for(k = 0; k \u003c t.childNodes.length; k++) {\r\n        let childNode = t.childNodes[k] as HTMLElement;\r\n\r\n        if(this.isInvalidTarget(this.findTargetFrom(childNode))) {\r\n          continue;\r\n        }\r\n\r\n        x1 = childNode.offsetLeft;\r\n        x2 = x1 + childNode.offsetWidth;\r\n\r\n        // If it lies completely to the right and is the closest so far\r\n        let dxRight = x1 - x;\r\n        if(dxRight \u003e= 0 \u0026\u0026 dxRight \u003c dxMin) {\r\n          bestMatch = k;\r\n          dxMin = dxRight;\r\n        }\r\n\r\n        // If it lies completely to the left and is the closest so far\r\n        let dxLeft = x - x2;\r\n        if(dxLeft \u003e= 0 \u0026\u0026 dxLeft \u003c dxMin) {\r\n          bestMatch = k;\r\n          dxMin = dxLeft;\r\n        }\r\n\r\n        // If it is neither completely to the left nor completely to the right,\r\n        // it\u0027s under the cursor.  Stop the search!\r\n        if(dxLeft \u003c 0 \u0026\u0026 dxRight \u003c 0) {\r\n          return this.findTargetFrom(childNode);\r\n        }\r\n      }\r\n\r\n      if(dxMin \u003c 100000) {\r\n        t = \u003cHTMLElement\u003e t.childNodes[bestMatch];\r\n        x1 = t.offsetLeft;\r\n        x2 = x1 + t.offsetWidth;\r\n\r\n        // Limit extended touch area to the larger of 0.6 of the potential target\u0027s width and 24 px\r\n        if(t.offsetWidth \u003e 40) {\r\n          dxMax = 0.6 * t.offsetWidth;\r\n        }\r\n\r\n        if(((x1 - x) \u003e= 0 \u0026\u0026 (x1 - x) \u003c dxMax) || ((x - x2) \u003e= 0 \u0026\u0026 (x - x2) \u003c dxMax)) {\r\n          return this.findTargetFrom(t);\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n\r\n    findBestTarget(coord: InputEventCoordinate, forMove?: boolean) {\r\n      var eventTarget: HTMLElement;\r\n\r\n      if(forMove) {\r\n        const clientX = coord.x + document.body.scrollLeft;\r\n        const clientY = coord.y + document.body.scrollTop;\r\n        eventTarget = document.elementFromPoint(clientX, clientY) as HTMLElement;\r\n      } else {\r\n        eventTarget = coord.target as HTMLElement;\r\n      }\r\n\r\n      let target = this.findTargetFrom(eventTarget);\r\n\r\n      // Should refactor this multi-check a bit for more overall reliability.\r\n      if(!target) {\r\n        // We didn\u0027t find a direct target, so we should look for the closest possible one.\r\n        // Filters out invalid targets.\r\n        target = this.findTargetFromTouch(coord, eventTarget, forMove);\r\n      }\r\n\r\n      return target;\r\n    }\r\n\r\n    /**\r\n     * Reports whether or not a `Target` should be considered invalid.  Needed by the OSK for\r\n     * hidden keys.\r\n     * @param target A `Target` element to be validated.\r\n     */\r\n    protected isInvalidTarget(target: Target): boolean {\r\n      return false;\r\n    }\r\n\r\n    touchStart(coord: InputEventCoordinate) {\r\n      // Determine the selected Target, manage state.\r\n      this.currentTarget = this.findBestTarget(coord);\r\n      this.touchX = coord.x;\r\n      this.touchY = coord.y;\r\n\r\n      // If popup stuff, immediately return.\r\n\r\n      this.touchCount = coord.activeInputCount;\r\n\r\n      if(!this.currentTarget) {\r\n        return;\r\n      }\r\n\r\n      // Establish scroll tracking.\r\n      let shouldScroll = (this.currentTarget.clientWidth \u003c this.currentTarget.scrollWidth);\r\n      this.scrollTouchState = shouldScroll ? new ScrollState(coord) : null;\r\n\r\n      // Alright, Target acquired!  Now to use it:\r\n\r\n      // Highlight the touched key\r\n      this.highlight(this.currentTarget,true);\r\n\r\n      // If used by the OSK, the special function keys need immediate action\r\n      // Add a `checkForImmediates()` to facilitate this.\r\n      if(this.pendingTarget) {\r\n        this.highlight(this.pendingTarget, false);\r\n        this.select(this.pendingTarget);\r\n        this.clearHolds();\r\n        // Decrement the number of unreleased touch points to prevent\r\n        // sending the keystroke again when the key is actually released\r\n        this.touchCount--;\r\n      } else {\r\n        // If this key has subkey, start timer to display subkeys after delay, set up release\r\n        this.hold(this.currentTarget);\r\n      }\r\n      this.pendingTarget = this.currentTarget;\r\n    }\r\n\r\n    touchEnd(coord: InputEventCoordinate): void {\r\n      // Prevent incorrect multi-touch behaviour if native or device popup visible\r\n      let t = this.currentTarget;\r\n\r\n      if(this.isSubmenuActive() || this.hasModalPopup()) {\r\n        // Ignore release if a multiple touch\r\n        if(coord.activeInputCount \u003e 0) {\r\n          return;\r\n        }\r\n\r\n        // Cancel (but do not execute) pending key if neither a popup key or the base key\r\n        if(t == null || t.id.indexOf(\u0027popup\u0027) \u003c 0) {\r\n          this.highlight(this.pendingTarget,false);\r\n          this.clearHolds();\r\n          this.pendingTarget = null;\r\n        }\r\n      }\r\n\r\n      // Test if moved off screen (effective release point must be corrected for touch point horizontal speed)\r\n      // This is not completely effective and needs some tweaking, especially on Android\r\n      var x = coord.x;\r\n      var beyondEdge = ((x \u003c 2 \u0026\u0026 this.touchX \u003e 5) || (x \u003e window.innerWidth - 2 \u0026\u0026 this.touchX \u003c window.innerWidth - 5));\r\n\r\n      if(this.scrollTouchState) {\r\n        beyondEdge = beyondEdge || this.scrollTouchState.hasScrolled;\r\n      }\r\n\r\n      // Save then decrement current touch count\r\n      var tc=this.touchCount;\r\n      if(this.touchCount \u003e 0) {\r\n        this.touchCount--;\r\n      }\r\n\r\n      // Process and clear highlighting of pending target\r\n      if(this.pendingTarget) {\r\n        this.highlight(this.pendingTarget,false);\r\n\r\n        // Output character unless moved off key\r\n        if(this.pendingTarget.className.indexOf(\u0027hidden\u0027) \u003c 0 \u0026\u0026 tc \u003e 0 \u0026\u0026 !beyondEdge) {\r\n          this.select(this.pendingTarget);\r\n        }\r\n        this.clearHolds();\r\n        this.pendingTarget = null;\r\n        // Always clear highlighting of current target on release (multi-touch)\r\n      } else {\r\n        t = this.findBestTarget(coord);\r\n\r\n        if(t) {\r\n          this.highlight(t,false);\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * OSK touch move event handler\r\n     *\r\n     *  @param  {Object}  coord   A pre-analyzed input coordinate\r\n     *\r\n     **/\r\n    touchMove(coord: InputEventCoordinate) : void {\r\n      let keyman = com.keyman.singleton;\r\n      let util = keyman.util;\r\n\r\n      // Do not attempt to support reselection of target key for overlapped keystrokes\r\n      if(coord.activeInputCount \u003e 1 || this.touchCount == 0) {\r\n        return;\r\n      }\r\n\r\n      if(this.currentTarget \u0026\u0026 this.scrollTouchState != null) {\r\n        let deltaX = this.scrollTouchState.updateTo(coord).deltaX;\r\n        this.currentTarget.scrollLeft -= window.devicePixelRatio * deltaX;\r\n\r\n        return;\r\n      }\r\n\r\n      // Get touch position\r\n      var y = coord.y;\r\n\r\n      // Move target key and highlighting\r\n      var key0 = this.pendingTarget,\r\n          key1 = this.findBestTarget(coord, true);  // For the OSK, this ALSO gets subkeys.\r\n\r\n      // If option should not be selectable, how do we re-target?\r\n\r\n\r\n      // Do not move over keys if device popup visible\r\n      if(this.hasModalPopup()) {\r\n        if(key0) {\r\n          this.highlight(key0,false);\r\n        }\r\n        this.pendingTarget=null;\r\n        return;\r\n      }\r\n\r\n      // Use the popup duplicate of the base key if a phone with a visible popup array\r\n      key1 = this.dealiasSubTarget(key1);\r\n\r\n      // Identify current touch position (to manage off-key release)\r\n      this.currentTarget = key1;\r\n\r\n      // Clear previous key highlighting\r\n      if(key0 \u0026\u0026 key1 \u0026\u0026 key1 !== key0) {\r\n        this.highlight(key0,false);\r\n      }\r\n\r\n      // Code below directly related to subkeys should only be triggered within \u0027native\u0027 mode.\r\n      // The embedded version instead passes info to the apps to produce their own subkeys in-app.\r\n\r\n      // If popup is visible, need to move over popup, not over main keyboard\r\n      if(key1 \u0026\u0026 this.hasSubmenu(key1)) {\r\n        //this.highlightSubKeys(key1,x,y);\r\n\r\n        // Native-mode: show popup keys immediately if touch moved up towards key array (KMEW-100, Build 353)\r\n        if(!keyman.isEmbedded \u0026\u0026 (this.touchY-y \u003e 5) \u0026\u0026 !this.isSubmenuActive()) {\r\n          // Instantly show the submenu.\r\n          this.displaySubmenuFor(key1);\r\n        }\r\n\r\n        // Once a subkey array is displayed, do not allow changing the base key.\r\n        // Keep that array visible and accept no other options until the touch ends.\r\n        if(key1 \u0026\u0026 key1.id.indexOf(\u0027popup\u0027) \u003c 0) { // TODO:  reliant on \u0027popup\u0027 in .id\r\n          return;\r\n        }\r\n\r\n        // Highlight the base key on devices that do not append it to the subkey array.\r\n        if(key1 \u0026\u0026 key1.className.indexOf(this.selectedTargetMatch) \u003c 0) {\r\n          this.highlight(key1,true);\r\n        }\r\n        // Cancel touch if moved up and off keyboard, unless popup keys visible\r\n      } else {\r\n        let base = this.baseElement;\r\n        let top = dom.Utils.getAbsoluteY(base);\r\n        let height = base.offsetHeight;\r\n        let yMin = Math.max(5, top - 0.25 * height);\r\n        let yMax = (top + height) + 0.25 * height;\r\n        if(key0 \u0026\u0026 (coord.y \u003c yMin || coord.y \u003e yMax)) {\r\n          this.highlight(key0,false);\r\n          this.clearHolds();\r\n          this.pendingTarget = null;\r\n        }\r\n      }\r\n\r\n      // Replace the target key, if any, by the new target key\r\n      // Do not replace a null target, as that indicates the key has already been released\r\n      if(key1 \u0026\u0026 this.pendingTarget) {\r\n        this.pendingTarget = key1;\r\n      }\r\n\r\n      if(this.pendingTarget) {\r\n        if(key1 \u0026\u0026 (key0 != key1 || key1.className.indexOf(this.selectedTargetMatch) \u003c 0)) {\r\n          this.highlight(key1,true);\r\n        }\r\n      }\r\n\r\n      if(key0 \u0026\u0026 key1 \u0026\u0026 (key1 != key0) \u0026\u0026 (key1.id != \u0027\u0027)) {\r\n        //  Display the touch-hold keys (after a pause)\r\n        this.hold(key1);\r\n      }\r\n    }\r\n  }\r\n}\r\n","///\u003creference path=\"visualKeyboard.ts\" /\u003e\r\n///\u003creference path=\"uiTouchHandlerBase.ts\" /\u003e\r\n\r\nnamespace com.keyman.osk {\r\n  // Base class for a banner above the keyboard in the OSK\r\n\r\n  export abstract class Banner {\r\n    private _height: number; // pixels\r\n    private div: HTMLDivElement;\r\n\r\n    public static DEFAULT_HEIGHT: number = 37; // pixels; embedded apps can modify\r\n\r\n    public static readonly BANNER_CLASS: string = \u0027kmw-banner-bar\u0027;\r\n    public static readonly BANNER_ID: string = \u0027kmw-banner-bar\u0027;\r\n\r\n    /**\r\n     * Function     height\r\n     * Scope        Public\r\n     * @returns     {number} height in pixels\r\n     * Description  Returns the height of the banner in pixels\r\n     */\r\n    public get height(): number {\r\n      return this._height;\r\n    }\r\n\r\n    /**\r\n     * Function     height\r\n     * Scope        Public\r\n     * @param       {number} height   the height in pixels\r\n     * Description  Sets the height of the banner in pixels. If a negative\r\n     *              height is given, set height to 0 pixels.\r\n     *              Also updates the banner styling.\r\n     */\r\n    public set height(height: number) {\r\n      this._height = (height \u003e 0) ?  height : 0;\r\n      this.update();\r\n    }\r\n\r\n    /**\r\n     * Function      update\r\n     * @return       {boolean}   true if the banner styling changed\r\n     * Description   Update the height and display styling of the banner\r\n     */\r\n    private update() : boolean {\r\n      let ds = this.div.style;\r\n      let currentHeightStyle = ds.height;\r\n      let currentDisplayStyle = ds.display;\r\n\r\n      if (this._height \u003e 0) {\r\n        ds.height = this._height + \u0027px\u0027;\r\n        ds.display = \u0027block\u0027;\r\n      } else {\r\n        ds.height = \u00270px\u0027;\r\n        ds.display = \u0027none\u0027;\r\n      }\r\n\r\n      return (!(currentHeightStyle === ds.height) ||\r\n        !(currentDisplayStyle === ds.display));\r\n    }\r\n\r\n    public constructor(height?: number) {\r\n      let keymanweb = com.keyman.singleton;\r\n      let util = keymanweb.util;\r\n\r\n      let d = util._CreateElement(\u0027div\u0027);\r\n      d.id = Banner.BANNER_ID;\r\n      d.className = Banner.BANNER_CLASS;\r\n      this.div = d;\r\n\r\n      this.height = height;\r\n      this.update();\r\n    }\r\n\r\n    public appendStyleSheet() {\r\n      let keymanweb = com.keyman.singleton;\r\n      let util = keymanweb.util;\r\n\r\n      // TODO: add stylesheets\r\n    }\r\n\r\n    /**\r\n     * Function     getDiv\r\n     * Scope        Public\r\n     * @returns     {HTMLElement} Base element of the banner\r\n     * Description  Returns the HTMLElelemnt of the banner\r\n     */\r\n    public getDiv(): HTMLElement {\r\n      return this.div;\r\n    }\r\n\r\n    /**\r\n     * Function     activate\r\n     * Scope        Public\r\n     * Description  Adds any relevant event listeners needed by this banner type.\r\n     */\r\n    public activate() {\r\n      // Default implementation - no listeners.\r\n    }\r\n\r\n    /**\r\n     * Function     activate\r\n     * Scope        Public\r\n     * Description  Removes any relevant event listeners previously added by this banner.\r\n     */\r\n    public deactivate() {\r\n      // Default implementation - no listeners.\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Function       BlankBanner\r\n   * Description    A banner of height 0 that should not be shown\r\n   */\r\n  export class BlankBanner extends Banner {\r\n\r\n    constructor() {\r\n      super(0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Function       ImageBanner\r\n   * @param         {string}        imagePath   Path of image to display in the banner\r\n   * @param         {number}        height      If provided, the height of the banner in pixels\r\n   * Description    Display an image in the banner\r\n   */\r\n  export class ImageBanner extends Banner {\r\n    private img: HTMLElement;\r\n\r\n    constructor(imagePath: string, height?: number) {\r\n      if (imagePath.length \u003e 0) {\r\n        super();\r\n        if (height) {\r\n          this.height = height;\r\n        }\r\n      } else {\r\n        super(0);\r\n      }\r\n\r\n      if(imagePath.indexOf(\u0027base64\u0027) \u003e=0) {\r\n        console.log(\"Loading img from base64 data\");\r\n      } else {\r\n        console.log(\"Loading img with src \u0027\" + imagePath + \"\u0027\");\r\n      }\r\n      this.img = document.createElement(\u0027img\u0027);\r\n      this.img.setAttribute(\u0027src\u0027, imagePath);\r\n      let ds = this.img.style;\r\n      ds.width = \u0027100%\u0027;\r\n      ds.height = \u0027100%\u0027;\r\n      this.getDiv().appendChild(this.img);\r\n      console.log(\"Image loaded.\");\r\n    }\r\n\r\n    /**\r\n     * Function     setImagePath\r\n     * Scope        Public\r\n     * @param       {string}     imagePath   Path of image to display in the banner\r\n     * Description  Update the image in the banner\r\n     */\r\n    public setImagePath(imagePath: string) {\r\n      if (this.img) {\r\n        this.img.setAttribute(\u0027src\u0027, imagePath);\r\n      }\r\n    }\r\n  }\r\n\r\n  export class BannerSuggestion {\r\n    div: HTMLDivElement;\r\n    private display: HTMLSpanElement;\r\n    private fontFamily?: string;\r\n\r\n    private _suggestion: Suggestion;\r\n\r\n    private index: number;\r\n\r\n    static readonly BASE_ID = \u0027kmw-suggestion-\u0027;\r\n\r\n    constructor(index: number) {\r\n      let keyman = com.keyman.singleton;\r\n\r\n      this.index = index;\r\n\r\n      this.constructRoot();\r\n\r\n      // Provides an empty, base SPAN for text display.  We\u0027ll swap these out regularly;\r\n      // `Suggestion`s will have varying length and may need different styling.\r\n      let display = this.display = keyman.util._CreateElement(\u0027span\u0027);\r\n      this.div.appendChild(display);\r\n    }\r\n\r\n    private constructRoot() {\r\n      let keyman = com.keyman.singleton;\r\n\r\n      // Add OSK suggestion labels\r\n      let div = this.div = keyman.util._CreateElement(\u0027div\u0027), ds=div.style;\r\n      div.className = \"kmw-suggest-option\";\r\n      div.id = BannerSuggestion.BASE_ID + this.index;\r\n\r\n      let kbdDetails = keyman.keyboardManager.activeStub;\r\n      if(kbdDetails) {\r\n        if (kbdDetails[\u0027KLC\u0027]) {\r\n          div.lang = kbdDetails[\u0027KLC\u0027];\r\n        }\r\n\r\n        // Establish base font settings\r\n        let font = kbdDetails[\u0027KFont\u0027];\r\n        if(font \u0026\u0026 font.family \u0026\u0026 font.family != \u0027\u0027) {\r\n          ds.fontFamily = this.fontFamily = font.family;\r\n        }\r\n      }\r\n\r\n      // Ensures that a reasonable width % is set.\r\n      let usableWidth = 100 - SuggestionBanner.MARGIN * (SuggestionBanner.SUGGESTION_LIMIT - 1);\r\n      let widthpc = usableWidth / SuggestionBanner.SUGGESTION_LIMIT;\r\n\r\n      ds.width = widthpc + \u0027%\u0027;\r\n\r\n      this.div[\u0027suggestion\u0027] = this;\r\n    }\r\n\r\n    get suggestion(): Suggestion {\r\n      return this._suggestion;\r\n    }\r\n\r\n    /**\r\n     * Function update\r\n     * @param {string}     id           Element ID for the suggestion span\r\n     * @param {Suggestion} suggestion   Suggestion from the lexical model\r\n     * Description  Update the ID and text of the BannerSuggestionSpec\r\n     */\r\n    public update(suggestion: Suggestion) {\r\n      this._suggestion = suggestion;\r\n      this.updateText();\r\n    }\r\n\r\n    private updateText() {\r\n      let display = this.generateSuggestionText();\r\n      this.div.replaceChild(display, this.display);\r\n      this.display = display;\r\n    }\r\n\r\n    /**\r\n     * Function apply\r\n     * @param target (Optional) The OutputTarget to which the `Suggestion` ought be applied.\r\n     * Description  Applies the predictive `Suggestion` represented by this `BannerSuggestion`.\r\n     */\r\n    public apply(target?: text.OutputTarget): Promise\u003cReversion\u003e {\r\n      let keyman = com.keyman.singleton;\r\n\r\n      if(this.isEmpty()) {\r\n        return null;\r\n      }\r\n\r\n      if(!target) {\r\n        /* Assume it\u0027s the currently-active `OutputTarget`.  We should probably invalidate\r\n          * everything if/when the active `OutputTarget` changes, though we haven\u0027t gotten that\r\n          * far in implementation yet.\r\n          */\r\n        target = dom.Utils.getOutputTarget();\r\n      }\r\n\r\n      if(this._suggestion.tag == \u0027revert\u0027) {\r\n        keyman.core.languageProcessor.applyReversion(this._suggestion as Reversion, target);\r\n        return null;\r\n      } else {\r\n        return keyman.core.languageProcessor.applySuggestion(this.suggestion, target, () =\u003e keyman.core.keyboardProcessor.layerId);\r\n      }\r\n    }\r\n\r\n    public isEmpty(): boolean {\r\n      return !this._suggestion;\r\n    }\r\n\r\n    /**\r\n     * Function generateSuggestionText\r\n     * @return {HTMLSpanElement}  Span element of the suggestion\r\n     * Description   Produces a HTMLSpanElement with the key\u0027s actual text.\r\n     */\r\n    //\r\n    public generateSuggestionText(): HTMLSpanElement {\r\n      let keyman = com.keyman.singleton;\r\n      let util = keyman.util;\r\n\r\n      let suggestion = this._suggestion;\r\n      var suggestionText: string;\r\n\r\n      var s=util._CreateElement(\u0027span\u0027);\r\n      s.className = \u0027kmw-suggestion-text\u0027;\r\n\r\n      if(suggestion == null) {\r\n        return s;\r\n      }\r\n\r\n      if(suggestion.displayAs == null || suggestion.displayAs == \u0027\u0027) {\r\n        suggestionText = \u0027\\xa0\u0027;  // default:  nbsp.\r\n      } else {\r\n        // Default the LTR ordering to match that of the active keyboard.\r\n        let activeKeyboard = keyman.core.activeKeyboard;\r\n        let rtl = activeKeyboard \u0026\u0026 activeKeyboard.isRTL;\r\n        let orderCode = rtl ? 0x202e /* RTL */ : 0x202d /* LTR */;\r\n        suggestionText = String.fromCharCode(orderCode) + suggestion.displayAs;\r\n      }\r\n\r\n      // TODO:  Dynamic suggestion text resizing.  (Refer to OSKKey.getTextWidth in visualKeyboard.ts.)\r\n\r\n      // Finalize the suggestion text\r\n      s.innerHTML = suggestionText;\r\n      return s;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Function     SuggestionBanner\r\n   * Scope        Public\r\n   * @param {number} height - If provided, the height of the banner in pixels\r\n   * Description  Display lexical model suggestions in the banner\r\n   */\r\n  export class SuggestionBanner extends Banner {\r\n    public static readonly SUGGESTION_LIMIT: number = 3;\r\n    public static readonly MARGIN = 1;\r\n\r\n    private options : BannerSuggestion[];\r\n    private hostDevice: utils.DeviceSpec;\r\n\r\n    private manager: SuggestionManager;\r\n\r\n    static readonly TOUCHED_CLASS: string = \u0027kmw-suggest-touched\u0027;\r\n    static readonly BANNER_CLASS: string = \u0027kmw-suggest-banner\u0027;\r\n\r\n    constructor(hostDevice: utils.DeviceSpec, height?: number) {\r\n      super(height || Banner.DEFAULT_HEIGHT);\r\n      this.hostDevice = hostDevice;\r\n\r\n      this.getDiv().className = this.getDiv().className + \u0027 \u0027 + SuggestionBanner.BANNER_CLASS;\r\n\r\n      this.options = new Array();\r\n      for (var i=0; i\u003cSuggestionBanner.SUGGESTION_LIMIT; i++) {\r\n        let d = new BannerSuggestion(i);\r\n        this.options[i] = d;\r\n      }\r\n\r\n      /* LTR behavior:  the default (index 0) suggestion should be at the left\r\n       * RTL behavior:  the default (index 0) suggestion should be at the right\r\n       *\r\n       * The cleanest way to make it work - simply invert the order in which\r\n       * the elements are inserted for RTL.  This allows the banner to be RTL\r\n       * for visuals/UI while still being internally LTR.\r\n       */\r\n      let activeKeyboard = com.keyman.singleton.core.activeKeyboard;\r\n      let rtl = activeKeyboard \u0026\u0026 activeKeyboard.isRTL;\r\n      for (var i=0; i\u003cSuggestionBanner.SUGGESTION_LIMIT; i++) {\r\n        let indexToInsert = rtl ? SuggestionBanner.SUGGESTION_LIMIT - i -1 : i;\r\n        this.getDiv().appendChild(this.options[indexToInsert].div);\r\n\r\n        if(i != SuggestionBanner.SUGGESTION_LIMIT) {\r\n          // Adds a \u0027separator\u0027 div element for UI purposes.\r\n          let separatorDiv = com.keyman.singleton.util._CreateElement(\u0027div\u0027);\r\n          separatorDiv.className = \u0027kmw-banner-separator\u0027;\r\n\r\n          let ds = separatorDiv.style;\r\n          ds.marginLeft = (SuggestionBanner.MARGIN / 2) + \u0027%\u0027;\r\n          ds.marginRight = (SuggestionBanner.MARGIN / 2) + \u0027%\u0027;\r\n\r\n          this.getDiv().appendChild(separatorDiv);\r\n        }\r\n      }\r\n\r\n      this.manager = new SuggestionManager(this.getDiv(), this.options);\r\n\r\n      this.setupInputHandling();\r\n    }\r\n\r\n    private setupInputHandling() {\r\n      let inputEngine: InputEventEngine;\r\n      if(this.hostDevice.touchable) { //  /*\u0026\u0026 (\u0027ontouchstart\u0027 in window)*/ // Except Chrome emulation doesn\u0027t set this.\r\n        // Not to mention, it\u0027s rather redundant.\r\n        inputEngine = TouchEventEngine.forPredictiveBanner(this, this.manager);\r\n      } else {\r\n        inputEngine = MouseEventEngine.forPredictiveBanner(this, this.manager);\r\n      }\r\n\r\n      inputEngine.registerEventHandlers();\r\n    }\r\n\r\n    activate() {\r\n      let keyman = com.keyman.singleton;\r\n      let manager = this.manager;\r\n\r\n      keyman.core.languageProcessor.addListener(\u0027invalidatesuggestions\u0027, manager.invalidateSuggestions);\r\n      keyman.core.languageProcessor.addListener(\u0027suggestionsready\u0027, manager.updateSuggestions);\r\n      keyman.core.languageProcessor.addListener(\u0027tryaccept\u0027, manager.tryAccept);\r\n      keyman.core.languageProcessor.addListener(\u0027tryrevert\u0027, manager.tryRevert);\r\n      keyman.core.languageProcessor.addListener(\u0027suggestionapplied\u0027, this.suggestionApplied);\r\n    }\r\n\r\n    /**\r\n     * Handler for post-processing once a suggestion has been applied: calls\r\n     * into the active keyboard\u0027s `begin postKeystroke` entry point.\r\n     * @param    outputTarget\r\n     * @returns  true\r\n     */\r\n    suggestionApplied: (outputTarget: text.OutputTarget) =\u003e boolean = function(this: SuggestionBanner, outputTarget: text.OutputTarget) {\r\n      const keyman = com.keyman.singleton;\r\n      // Tell the keyboard that the current layer has not changed\r\n      keyman.core.keyboardProcessor.newLayerStore.set(\u0027\u0027);\r\n      keyman.core.keyboardProcessor.oldLayerStore.set(\u0027\u0027);\r\n      // Call the keyboard\u0027s entry point.\r\n      keyman.core.keyboardProcessor.processPostKeystroke(this.hostDevice, outputTarget)\r\n        // If we have a RuleBehavior as a result, run it on the target. This should\r\n        // only change system store and variable store values.\r\n        ?.finalize(keyman.core.keyboardProcessor, outputTarget, true);\r\n\r\n      return true;\r\n    }.bind(this);\r\n\r\n    postConfigure() {\r\n      let keyman = com.keyman.singleton;\r\n      // Trigger a null-based initial prediction to kick things off.\r\n      keyman.core.languageProcessor.predictFromTarget(dom.Utils.getOutputTarget(), keyman.core.keyboardProcessor.layerId);\r\n    }\r\n\r\n    deactivate() {\r\n      let keyman = com.keyman.singleton;\r\n      let manager = this.manager;\r\n\r\n      keyman.core.languageProcessor.removeListener(\u0027invalidatesuggestions\u0027, manager.invalidateSuggestions);\r\n      keyman.core.languageProcessor.removeListener(\u0027suggestionsready\u0027, manager.updateSuggestions);\r\n      keyman.core.languageProcessor.removeListener(\u0027tryaccept\u0027, manager.tryAccept);\r\n      keyman.core.languageProcessor.removeListener(\u0027tryrevert\u0027, manager.tryRevert);\r\n      keyman.core.languageProcessor.removeListener(\u0027suggestionapplied\u0027, this.suggestionApplied);\r\n    }\r\n  }\r\n\r\n  export class SuggestionManager extends UITouchHandlerBase\u003cHTMLDivElement\u003e {\r\n    private selected: BannerSuggestion;\r\n\r\n    platformHold: (suggestion: BannerSuggestion, isCustom: boolean) =\u003e void;\r\n\r\n    //#region Touch handling implementation\r\n    findTargetFrom(e: HTMLElement): HTMLDivElement {\r\n      let keyman = com.keyman.singleton;\r\n      let util = keyman.util;\r\n\r\n      try {\r\n        if(e) {\r\n          if(util.hasClass(e,\u0027kmw-suggest-option\u0027)) {\r\n            return e as HTMLDivElement;\r\n          }\r\n          if(e.parentNode \u0026\u0026 util.hasClass(\u003cHTMLElement\u003e e.parentNode,\u0027kmw-suggest-option\u0027)) {\r\n            return e.parentNode as HTMLDivElement;\r\n          }\r\n          // if(e.firstChild \u0026\u0026 util.hasClass(\u003cHTMLElement\u003e e.firstChild,\u0027kmw-suggest-option\u0027)) {\r\n          //   return e.firstChild as HTMLDivElement;\r\n          // }\r\n        }\r\n      } catch(ex) {}\r\n      return null;\r\n    }\r\n\r\n    protected highlight(t: HTMLDivElement, on: boolean): void {\r\n      let classes = t.className;\r\n      let cs = \u0027 \u0027 + SuggestionBanner.TOUCHED_CLASS;\r\n\r\n      if(t.id.indexOf(BannerSuggestion.BASE_ID) == -1) {\r\n        console.warn(\"Cannot find BannerSuggestion object for element to highlight!\");\r\n      } else {\r\n        // Never highlight an empty suggestion button.\r\n        let suggestion = this.selected = t[\u0027suggestion\u0027] as BannerSuggestion;\r\n        if(suggestion.isEmpty()) {\r\n          on = false;\r\n          this.selected = null;\r\n        }\r\n      }\r\n\r\n      if(on \u0026\u0026 classes.indexOf(cs) \u003c 0) {\r\n        t.className=classes+cs;\r\n      } else {\r\n        t.className=classes.replace(cs,\u0027\u0027);\r\n      }\r\n    }\r\n\r\n    protected select(t: HTMLDivElement): void {\r\n      this.doAccept(t[\u0027suggestion\u0027] as BannerSuggestion);\r\n    }\r\n\r\n    //#region Long-press support\r\n    protected hold(t: HTMLDivElement): void {\r\n      let suggestionObj = t[\u0027suggestion\u0027] as BannerSuggestion;\r\n\r\n      // Is this the \u003ckeep\u003e suggestion?  It\u0027s never in this.currentSuggestions, so check against that.\r\n      let isCustom = this.currentSuggestions.indexOf(suggestionObj.suggestion) == -1;\r\n\r\n      if(this.platformHold) {\r\n        // Implemented separately for native + embedded mode branches.\r\n        // Embedded mode should pass any info needed to show a submenu IMMEDIATELY.\r\n        this.platformHold(suggestionObj, isCustom); // No implementation yet for native.\r\n      }\r\n    }\r\n    protected clearHolds(): void {\r\n      // Temp, pending implementation of suggestion longpress submenus\r\n      // - nothing to clear without them -\r\n\r\n      // only really used in native-KMW\r\n    }\r\n\r\n    protected hasModalPopup(): boolean {\r\n      // Utilized by the mobile apps; allows them to \u0027take over\u0027 touch handling,\r\n      // blocking it within KMW when the apps are already managing an ongoing touch-hold.\r\n      let keyman = com.keyman.singleton;\r\n      return keyman[\u0027osk\u0027].vkbd.subkeyGesture \u0026\u0026 keyman.isEmbedded;\r\n    }\r\n\r\n    protected dealiasSubTarget(target: HTMLDivElement): HTMLDivElement {\r\n      return target;\r\n    }\r\n\r\n    protected hasSubmenu(t: HTMLDivElement): boolean {\r\n      // Temp, pending implementation of suggestion longpress submenus\r\n\r\n      // Only really used by native-KMW - see kmwnative\u0027s highlightSubKeys func.\r\n      return false;\r\n    }\r\n\r\n    protected isSubmenuActive(): boolean {\r\n      // Temp, pending implementation of suggestion longpress submenus\r\n\r\n      // Utilized only by native-KMW - it parallels hasModalPopup() in purpose.\r\n      return false;\r\n    }\r\n\r\n    protected displaySubmenuFor(target: HTMLDivElement) {\r\n      // Utilized only by native-KMW to show submenus.\r\n      throw new Error(\"Method not implemented.\");\r\n    }\r\n    //#endregion\r\n    //#endregion\r\n\r\n    private options: BannerSuggestion[];\r\n\r\n    private initNewContext: boolean = true;\r\n\r\n    private currentSuggestions: Suggestion[] = [];\r\n    private keepSuggestion: Keep;\r\n    private revertSuggestion: Reversion;\r\n\r\n    private recentAccept: boolean = false;\r\n    private revertAcceptancePromise: Promise\u003cReversion\u003e;\r\n\r\n    private swallowPrediction: boolean = false;\r\n\r\n    private doRevert: boolean = false;\r\n    private recentRevert: boolean = false;\r\n\r\n    constructor(div: HTMLElement, options: BannerSuggestion[]) {\r\n      // TODO:  Determine appropriate CSS styling names, etc.\r\n      super(div, Banner.BANNER_CLASS, SuggestionBanner.TOUCHED_CLASS);\r\n      this.options = options;\r\n    }\r\n\r\n    private doAccept(suggestion: BannerSuggestion) {\r\n      let _this = this;\r\n\r\n      this.revertAcceptancePromise = suggestion.apply();\r\n      if(!this.revertAcceptancePromise) {\r\n        // We get here either if suggestion acceptance fails or if it was a reversion.\r\n        if(suggestion.suggestion \u0026\u0026 suggestion.suggestion.tag == \u0027revert\u0027) {\r\n          // Reversion state management\r\n          this.recentAccept = false;\r\n          this.doRevert = false;\r\n          this.recentRevert = true;\r\n\r\n          this.doUpdate();\r\n        }\r\n        return;\r\n      }\r\n\r\n      this.revertAcceptancePromise.then(function(suggestion) {\r\n        // Always null-check!\r\n        if(suggestion) {\r\n          _this.revertSuggestion = suggestion;\r\n        }\r\n      });\r\n\r\n      this.selected = null;\r\n      this.recentAccept = true;\r\n      this.doRevert = false;\r\n      this.recentRevert = false;\r\n\r\n      this.swallowPrediction = true;\r\n      this.doUpdate();\r\n    }\r\n\r\n    private showRevert() {\r\n      // Construct a \u0027revert suggestion\u0027 to facilitate a reversion UI component.\r\n      this.doRevert = true;\r\n      this.doUpdate();\r\n    }\r\n\r\n    /**\r\n     * Receives messages from the keyboard that the \u0027accept\u0027 keystroke has been entered.\r\n     * Should return \u0027false\u0027 if the current state allows accepting a suggestion and act accordingly.\r\n     * Otherwise, return true.\r\n     */\r\n    tryAccept: (source: string) =\u003e boolean = function(this: SuggestionManager, source: string, returnObj: {shouldSwallow: boolean}) {\r\n      let keyman = com.keyman.singleton;\r\n\r\n      if(!this.recentAccept \u0026\u0026 this.selected) {\r\n        this.doAccept(this.selected);\r\n        returnObj.shouldSwallow = true;\r\n      } else if(this.recentAccept \u0026\u0026 source == \u0027space\u0027) {\r\n        this.recentAccept = false;\r\n        // If the model doesn\u0027t insert wordbreaks, don\u0027t swallow the space.  If it does,\r\n        // we consider that insertion to be the results of the first post-accept space.\r\n        returnObj.shouldSwallow = !!keyman.core.languageProcessor.wordbreaksAfterSuggestions;\r\n      } else {\r\n        returnObj.shouldSwallow = false;\r\n      }\r\n    }.bind(this);\r\n\r\n    /**\r\n     * Receives messages from the keyboard that the \u0027revert\u0027 keystroke has been entered.\r\n     * Should return \u0027false\u0027 if the current state allows reverting a recently-applied suggestion and act accordingly.\r\n     * Otherwise, return true.\r\n     */\r\n    tryRevert: () =\u003e boolean = function(this: SuggestionManager, returnObj: {shouldSwallow: boolean}) {\r\n      // Has the revert keystroke (BKSP) already been sent once since the last accept?\r\n      if(this.doRevert) {\r\n        // If so, clear the \u0027revert\u0027 option and start doing normal predictions again.\r\n        this.doRevert = false;\r\n        this.recentAccept = false;\r\n        // Otherwise, did we just accept something before the revert signal was received?\r\n      } else if(this.recentAccept) {\r\n        this.showRevert();\r\n        this.swallowPrediction = true;\r\n      }\r\n\r\n      // We don\u0027t yet actually do key-based reversions.\r\n      returnObj.shouldSwallow = false;\r\n      return;\r\n    }.bind(this);\r\n\r\n    /**\r\n     * Function invalidateSuggestions\r\n     * Scope        Public\r\n     * Description  Clears the suggestions in the suggestion banner\r\n     */\r\n    public invalidateSuggestions: (this: SuggestionManager, source: text.prediction.InvalidateSourceEnum) =\u003e boolean =\r\n        function(this: SuggestionManager, source: string) {\r\n\r\n      // By default, we assume that the context is the same until we notice otherwise.\r\n      this.initNewContext = false;\r\n\r\n      if(!this.swallowPrediction || source == \u0027context\u0027) {\r\n        this.recentAccept = false;\r\n        this.doRevert = false;\r\n        this.recentRevert = false;\r\n\r\n        if(source == \u0027context\u0027) {\r\n          this.swallowPrediction = false;\r\n          this.initNewContext = true;\r\n        }\r\n      }\r\n\r\n      this.options.forEach((option: BannerSuggestion) =\u003e {\r\n        option.update(null);\r\n      });\r\n    }.bind(this);\r\n\r\n    public activateKeep(): boolean {\r\n      return !this.recentAccept \u0026\u0026 !this.recentRevert \u0026\u0026 !this.initNewContext;\r\n    }\r\n\r\n    private doUpdate() {\r\n      let suggestions = [];\r\n      // Insert \u0027current text\u0027 if/when valid as the leading option.\r\n      // Since we don\u0027t yet do auto-corrections, we only show \u0027keep\u0027 whenever it\u0027s\r\n      // a valid word (according to the model).\r\n      if(this.activateKeep() \u0026\u0026 this.keepSuggestion \u0026\u0026 this.keepSuggestion.matchesModel) {\r\n        suggestions.push(this.keepSuggestion);\r\n      } else if(this.doRevert) {\r\n        suggestions.push(this.revertSuggestion);\r\n      }\r\n\r\n      suggestions = suggestions.concat(this.currentSuggestions);\r\n\r\n      this.options.forEach((option: BannerSuggestion, i: number) =\u003e {\r\n        if(i \u003c suggestions.length) {\r\n          option.update(suggestions[i]);\r\n        } else {\r\n          option.update(null);\r\n        }\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Function updateSuggestions\r\n     * Scope       Public\r\n     * @param {Suggestion[]}  suggestions   Array of suggestions from the lexical model.\r\n     * Description    Update the displayed suggestions in the SuggestionBanner\r\n     */\r\n    public updateSuggestions: (this: SuggestionManager, prediction: text.prediction.ReadySuggestions) =\u003e boolean =\r\n        function(this: SuggestionManager, prediction: text.prediction.ReadySuggestions) {\r\n\r\n      let suggestions = prediction.suggestions;\r\n\r\n      this.currentSuggestions = suggestions;\r\n\r\n      // Do we have a keep suggestion?  If so, remove it from the list so that we can control its display position\r\n      // and prevent it from being hidden after reversion operations.\r\n      this.keepSuggestion = null;\r\n      for(let s of suggestions) {\r\n        if(s.tag == \u0027keep\u0027) {\r\n          this.keepSuggestion = s as Keep;\r\n        }\r\n      }\r\n\r\n      if(this.keepSuggestion) {\r\n        this.currentSuggestions.splice(this.currentSuggestions.indexOf(this.keepSuggestion), 1);\r\n      }\r\n\r\n      // If we\u0027ve gotten an update request like this, it\u0027s almost always user-triggered and means the context has shifted.\r\n      if(!this.swallowPrediction) {\r\n        this.recentAccept = false;\r\n        this.doRevert = false;\r\n        this.recentRevert = false;\r\n      } else { // This prediction was triggered by a recent \u0027accept.\u0027  Now that it\u0027s fulfilled, we clear the flag.\r\n        this.swallowPrediction = false;\r\n      }\r\n\r\n      // The rest is the same, whether from input or from \"self-updating\" after a reversion to provide new suggestions.\r\n      this.doUpdate();\r\n    }.bind(this);\r\n  }\r\n}\r\n","/// \u003creference path=\"banner.ts\" /\u003e\r\n/// \u003creference path=\"oskViewComponent.ts\" /\u003e\r\n\r\nnamespace com.keyman.osk {\r\n  /**\r\n   * This object is used to specify options by both `BannerManager.getOptions`\r\n   * and `BannerManager.setOptions`.  Refer to the latter for specification of\r\n   * each field.\r\n   */\r\n  export interface BannerOptions {\r\n    alwaysShow?: boolean;\r\n    mayPredict?: boolean;\r\n    mayCorrect?: boolean;\r\n    imagePath?: string;\r\n  }\r\n\r\n  export type BannerType = \"blank\" | \"image\" | \"suggestion\";\r\n\r\n  /**\r\n   * The `BannerManager` module is designed to serve as a manager for the\r\n   * different `Banner` types.\r\n   * To facilitate this, it will provide a root element property that serves\r\n   * as a container for any active `Banner`, helping KMW to avoid needless\r\n   * DOM element shuffling.\r\n   *\r\n   * Goals for the `BannerManager`:\r\n   *\r\n   * * It will be exposed as `keyman.osk.banner` and will provide the following API:\r\n   *   * `getOptions`, `setOptions` - refer to the `BannerOptions` class for details.\r\n   *   * This provides a persistent point that the web page designers and our \r\n   *     model apps can utilize and can communicate with.\r\n   *   * These API functions are designed for live use and will allow \r\n   *     _hot-swapping_ the `Banner` instance; they\u0027re not initialization-only.\r\n   * * Disabling the `Banner` (even for suggestions) outright with \r\n   *   `enablePredictions == false` will auto-unload any loaded predictive model \r\n   *   from `ModelManager` and setting it to `true` will revert this.\r\n   *   * This should help to avoid wasting computational resources.\r\n   * * It will listen to ModelManager events and automatically swap Banner \r\n   *   instances as appropriate:\r\n   *   * The option `persistentBanner == true` is designed to replicate current \r\n   *     iOS system keyboard behavior.\r\n   *     * When true, an `ImageBanner` will be displayed.\r\n   *     * If false, it will be replaced with a `BlankBanner` of zero height, \r\n   *       corresponding to our current default lack of banner.\r\n   *   * It will not automatically set `persistentBanner == true`; \r\n   *     this must be set by the iOS app, and only under the following conditions:\r\n   *     * `keyman.isEmbedded == true`\r\n   *     * `device.OS == \u0027ios\u0027`\r\n   *     * Keyman is being used as the system keyboard within an app that \r\n   *       needs to reserve this space (i.e: Keyman for iOS),\r\n   *       rather than as its standalone app.\r\n   */\r\n  export class BannerManager implements OSKViewComponent {\r\n    private _activeType: BannerType;\r\n    private _options: BannerOptions = {};\r\n    private bannerContainer: HTMLDivElement;\r\n    private activeBanner: Banner;\r\n    private alwaysShow: boolean;\r\n    private imagePath?: string = \"\";\r\n\r\n    private readonly hostDevice: utils.DeviceSpec;\r\n\r\n    public static readonly DEFAULT_OPTIONS: BannerOptions = {\r\n      alwaysShow: false,\r\n      mayPredict: true,\r\n      mayCorrect: true,\r\n      imagePath: \"\"\r\n    }\r\n\r\n    constructor(hostDevice: utils.DeviceSpec) {\r\n      // Step 1 - establish the container element.  Must come before this.setOptions.\r\n      this.constructContainer();\r\n      this.hostDevice = hostDevice;\r\n\r\n      // Initialize with the default options - \r\n      // any \u0027manually set\u0027 options come post-construction.\r\n      // This will also automatically set the default banner in place.\r\n      this.setOptions(BannerManager.DEFAULT_OPTIONS);\r\n    }\r\n\r\n    /**\r\n     * Constructs the \u003cdiv\u003e element used to contain hot-swapped `Banner` instances.\r\n     */\r\n    private constructContainer(): HTMLDivElement {\r\n      let keymanweb = com.keyman.singleton;\r\n      let util = keymanweb.util;\r\n      let d = util._CreateElement(\u0027div\u0027);\r\n      d.id = \"keymanweb_banner_container\";\r\n      d.className = \"kmw-banner-container\";\r\n      return this.bannerContainer = d;\r\n    }\r\n\r\n    /**\r\n     * Returns the `Banner`-containing div element used to facilitate hot-swapping.\r\n     */\r\n    public get element(): HTMLDivElement {\r\n      return this.bannerContainer;\r\n    }\r\n\r\n    /**\r\n     * This function corresponds to `keyman.osk.banner.getOptions`.\r\n     * \r\n     * Gets the current control settings in use by `BannerManager`.\r\n     */\r\n    public getOptions(): BannerOptions {\r\n      let retObj = {};\r\n\r\n      for(let key in this._options) {\r\n        retObj[key] = this._options[key];\r\n      }\r\n\r\n      return retObj;\r\n    }\r\n\r\n    /**\r\n     * This function corresponds to `keyman.osk.banner.setOptions`.\r\n     * \r\n     * Sets options used to tweak the automatic `Banner` \r\n     * control logic used by `BannerManager`.\r\n     * @param optionSpec An object specifying one or more of the following options:\r\n     * * `persistentBanner` (boolean) When `true`, ensures that a `Banner` \r\n     *   is always displayed, even when no predictive model exists \r\n     *   for the active language.\r\n     *\r\n     *   Default: `false`\r\n     * * `imagePath` (URL string) Specifies the file path to use for an \r\n     *   `ImageBanner` when `persistentBanner` is `true` and no predictive model exists.\r\n     * \r\n     *   Default: `\u0027\u0027`.\r\n     * * `enablePredictions` (boolean) Turns KMW predictions \r\n     *   on (when `true`) and off (when `false`).\r\n     * \r\n     *   Default:  `true`.\r\n     */\r\n    public setOptions(optionSpec: BannerOptions) {\r\n      let keyman = com.keyman.singleton;\r\n\r\n      for(let key in optionSpec) {\r\n        switch(key) {\r\n          // Each defined option may require specialized handling.\r\n          case \u0027alwaysShow\u0027:\r\n            // Determines the banner type to activate.\r\n            this.alwaysShow = optionSpec[key];\r\n            break;\r\n          case \u0027mayPredict\u0027:\r\n            // If this toggles our internal flag, it will generate events\r\n            // that reconfigures the banner (and internal engine state) appropriately.\r\n            keyman.core.languageProcessor.mayPredict = optionSpec[key]\r\n            break;\r\n          case \u0027mayCorrect\u0027:\r\n            keyman.core.languageProcessor.mayCorrect = optionSpec[key];\r\n            break;\r\n          case \u0027imagePath\u0027:\r\n            // Determines the image file to use for ImageBanners.\r\n            this.imagePath = optionSpec[key];\r\n            break;\r\n          default:\r\n            // Invalid option specified!\r\n        }\r\n        this._options[key] = optionSpec[key];\r\n\r\n        // If no banner instance exists yet, go with a safe, blank initialization.\r\n        if(!this.activeBanner) {\r\n          this.selectBanner(\u0027inactive\u0027);\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Applies any stylesheets needed by specific `Banner` instances.\r\n     */\r\n    public appendStyles() {\r\n      if(this.activeBanner) {\r\n        this.activeBanner.appendStyleSheet();\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Sets the active `Banner` to the specified type, regardless of \r\n     * existing management logic settings.\r\n     * \r\n     * @param type `\u0027blank\u0027 | \u0027image\u0027 | \u0027suggestion\u0027` - A plain-text string \r\n     *        representing the type of `Banner` to set active.\r\n     * @param height - Optional banner height in pixels.\r\n     */\r\n    public setBanner(type: BannerType, height?: number) {\r\n      var banner: Banner;\r\n\r\n      switch(type) {\r\n        case \u0027blank\u0027:\r\n          banner = new BlankBanner();\r\n          break;\r\n        case \u0027image\u0027:\r\n          banner = new ImageBanner(this.imagePath, Banner.DEFAULT_HEIGHT);\r\n          break;\r\n        case \u0027suggestion\u0027:\r\n          banner = new SuggestionBanner(this.hostDevice, height);\r\n          break;\r\n        default:\r\n          throw new Error(\"Invalid type specified for the banner!\");\r\n      }\r\n\r\n      this._activeType = type;\r\n      \r\n      if(banner) {\r\n        this._setBanner(banner);\r\n        banner.activate();\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Handles `LanguageProcessor`\u0027s `\u0027statechange\u0027` events, \r\n     * allowing logic to automatically hot-swap `Banner`s as needed.\r\n     * @param state \r\n     */\r\n    selectBanner(state: text.prediction.StateChangeEnum) {\r\n      // Only display a SuggestionBanner when LanguageProcessor states it is active.\r\n      if(state == \u0027active\u0027) {\r\n        this.setBanner(\u0027suggestion\u0027);\r\n      } else if(state == \u0027inactive\u0027) {\r\n        if(this.alwaysShow) {\r\n          this.setBanner(\u0027image\u0027);\r\n        } else {\r\n          this.setBanner(\u0027blank\u0027);\r\n        }\r\n      } else if(state == \u0027configured\u0027) {\r\n        let suggestionBanner = this.activeBanner as SuggestionBanner;\r\n        if(suggestionBanner.postConfigure) {\r\n          // Triggers the initially-displayed suggestions.\r\n          suggestionBanner.postConfigure();\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Internal method used by the public API `setBanner`.  `setBanner` \r\n     * translates the string parameter into a new instance consumed by this method.\r\n     * @param banner The `Banner` instance to set as active.\r\n     */\r\n    private _setBanner(banner: Banner) {\r\n      if(this.activeBanner) {\r\n        if(banner == this.activeBanner) {\r\n          return;\r\n        } else {\r\n          let prevBanner = this.activeBanner;\r\n          prevBanner.deactivate();\r\n          this.bannerContainer.replaceChild(banner.getDiv(), prevBanner.getDiv());\r\n        }\r\n      }\r\n\r\n      this.activeBanner = banner;\r\n      this.bannerContainer.appendChild(banner.getDiv());\r\n\r\n      // Don\u0027t forget to adjust the OSK in case we\u0027re now using a blank Banner!\r\n      // Null guard b/c this function can be trigggered during OSK initialization.\r\n      let keyman = com.keyman.singleton;\r\n      if(keyman[\u0027osk\u0027]) {\r\n        keyman[\u0027osk\u0027].refreshLayout();\r\n      }\r\n    }\r\n\r\n    public get activeType(): BannerType {\r\n      return this._activeType;\r\n    }\r\n\r\n    /**\r\n     * Gets the height (in pixels) of the active `Banner` instance.\r\n     */\r\n    public get height(): number {\r\n      if(this.activeBanner) {\r\n        return this.activeBanner.height;\r\n      } else {\r\n        return 0;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Sets the height (in pixels) of the active \u0027Banner\u0027 instance.\r\n     */\r\n    public set height(h: number) {\r\n      if (this.activeBanner) {\r\n        this.activeBanner.height = h;\r\n      }\r\n    }\r\n\r\n    public get layoutHeight(): ParsedLengthStyle {\r\n      return ParsedLengthStyle.inPixels(this.height);\r\n    }\r\n\r\n    public refreshLayout() {};\r\n  }\r\n}\r\n","/// \u003creference path=\"keyboardView.interface.ts\" /\u003e\r\n\r\nnamespace com.keyman.osk {\r\n  export class HelpPageView implements KeyboardView {\r\n    private readonly kbd: keyboards.Keyboard;\r\n    public readonly element: HTMLDivElement;\r\n\r\n    private static readonly ID = \u0027kmw-osk-help-page\u0027;\r\n\r\n    constructor(keyboard: keyboards.Keyboard) {\r\n      this.kbd = keyboard;\r\n\r\n      var Ldiv = this.element = document.createElement(\u0027div\u0027);\r\n      Ldiv.style.userSelect = \"none\";\r\n      Ldiv.className = \u0027kmw-osk-static\u0027;\r\n      Ldiv.id = HelpPageView.ID;\r\n      Ldiv.innerHTML = keyboard.helpText;\r\n    }\r\n\r\n    public postInsert() {\r\n      if(!this.element.parentElement || !document.getElementById(HelpPageView.ID)) {\r\n        throw new Error(\"The HelpPage root element has not yet been inserted into the DOM.\");\r\n      }\r\n\r\n      if(this.kbd.hasScript) {\r\n        // .parentElement:  ensure this matches the _Box element from OSKManager / OSKView\r\n        // Not a hard requirement for any known keyboards, but is asserted by legacy docs.\r\n        this.kbd.embedScript(this.element.parentElement);\r\n      }\r\n    }\r\n\r\n    public updateState() { }\r\n    public refreshLayout() { }\r\n\r\n    public get layoutHeight(): ParsedLengthStyle {\r\n      return ParsedLengthStyle.inPercent(100);\r\n    }\r\n  }\r\n}","/// \u003creference path=\"keyboardView.interface.ts\" /\u003e\r\n\r\nnamespace com.keyman.osk {\r\n  export class EmptyView implements KeyboardView {\r\n    readonly element: HTMLDivElement;\r\n    \r\n    constructor() {\r\n      let Ldiv = this.element = document.createElement(\u0027div\u0027);\r\n      Ldiv.style.userSelect = \u0027none\u0027;\r\n      Ldiv.className=\u0027kmw-osk-none\u0027;\r\n    }\r\n\r\n    // No operations needed; this is a stand-in for the desktop OSK when no keyboard is active.\r\n    public postInsert() { }\r\n    public updateState() { }\r\n\r\n    public refreshLayout() { }\r\n\r\n    public get layoutHeight(): ParsedLengthStyle {\r\n      return ParsedLengthStyle.inPixels(0);\r\n    }\r\n  }\r\n}","// Includes the banner\r\n/// \u003creference path=\"./bannerManager.ts\" /\u003e\r\n\r\n// Generates the visual keyboard specific to each keyboard.  (class=\"kmw-osk-inner-frame\")\r\n/// \u003creference path=\"visualKeyboard.ts\" /\u003e\r\n// Models keyboards that present a help page, rather than a standard OSK.\r\n/// \u003creference path=\"helpPageView.ts\" /\u003e\r\n/// \u003creference path=\"emptyView.ts\" /\u003e\r\n\r\nnamespace com.keyman.osk {\r\n  export type OSKRect = {\r\n    \u0027left\u0027?: number,\r\n    \u0027top\u0027?: number,\r\n    \u0027width\u0027?: number,\r\n    \u0027height\u0027?: number,\r\n    \u0027nosize\u0027?: boolean,\r\n    \u0027nomove\u0027?: boolean\r\n  };\r\n\r\n  export enum ActivationMode {\r\n    static      = \"static\",  // For use by documentation keyboards, eventually.\r\n    manual      = \"manual\",\r\n    automatic = \"automatic\"\r\n  }\r\n\r\n  export abstract class OSKView {\r\n    _Box: HTMLDivElement;\r\n\r\n    headerView:   OSKViewComponent;\r\n    bannerView:   BannerManager; // Which implements OSKViewComponent\r\n    keyboardView: KeyboardView;  // Which implements OSKViewComponent\r\n    footerView:   OSKViewComponent;\r\n\r\n    protected device: com.keyman.utils.DeviceSpec;\r\n    protected readonly hostDevice: com.keyman.utils.DeviceSpec;\r\n\r\n    private _boxBaseMouseDown:        (e: MouseEvent) =\u003e boolean;\r\n    private _boxBaseTouchStart:       (e: TouchEvent) =\u003e boolean;\r\n    private _boxBaseTouchEventCancel: (e: TouchEvent) =\u003e boolean;\r\n\r\n    private keyboard: keyboards.Keyboard;\r\n\r\n    private _target:  text.OutputTarget;\r\n\r\n    /**\r\n     * The configured width for this OSKManager.  May be `undefined` or `null`\r\n     * to allow automatic width scaling.\r\n     */\r\n    private _width: ParsedLengthStyle;\r\n\r\n    /**\r\n     * The configured height for this OSKManager.  May be `undefined` or `null`\r\n     * to allow automatic height scaling.\r\n     */\r\n    private _height: ParsedLengthStyle;\r\n\r\n    /**\r\n     * The computed width for this OSKManager.  May be null if auto sizing\r\n     * is allowed and the OSKManager is not currently in the DOM hierarchy.\r\n     */\r\n    private _computedWidth: number;\r\n\r\n    /**\r\n    * The computed height for this OSKManager.  May be null if auto sizing\r\n    * is allowed and the OSKManager is not currently in the DOM hierarchy.\r\n    */\r\n    private _computedHeight: number;\r\n\r\n    /**\r\n     * The base font size to use for hosted `Banner`s and `VisualKeyboard`\r\n     * instances.\r\n     */\r\n    private _baseFontSize: ParsedLengthStyle;\r\n\r\n    private needsLayout: boolean = true;\r\n\r\n    //\r\n    private _activationMode: ActivationMode = ActivationMode.automatic;\r\n    private _displayIfActive: boolean = true;\r\n\r\n    private _animatedHideTimeout: number;\r\n\r\n    constructor(deviceSpec: com.keyman.utils.DeviceSpec, hostDevice?: com.keyman.utils.DeviceSpec) {\r\n      this.device = deviceSpec;\r\n\r\n      if(!hostDevice) {\r\n        hostDevice = deviceSpec;\r\n      }\r\n      this.hostDevice = hostDevice;\r\n\r\n      // OSK initialization - create DIV and set default styles\r\n      this._Box = document.createElement(\u0027div\u0027);   // Container for OSK (Help DIV, displayed when user clicks Help icon)\r\n      this._Box.style.userSelect = \u0027none\u0027;\r\n\r\n      // Initializes the two constant OSKComponentView fields.\r\n      this.bannerView   = new BannerManager(this.hostDevice);\r\n      this.keyboardView = null;\r\n\r\n      let keymanweb = com.keyman.singleton;\r\n      let util = keymanweb.util;\r\n\r\n      // Install the default OSK stylesheet\r\n      util.linkStyleSheet(keymanweb.getStyleSheetPath(\u0027kmwosk.css\u0027));\r\n\r\n      this.setBaseMouseEventListeners();\r\n      if(hostDevice.touchable) {\r\n        this.setBaseTouchEventListeners();\r\n      }\r\n\r\n      // Register a listener for model change events so that we can hot-swap the banner as needed.\r\n      // Handled here b/c banner changes may trigger a need to re-layout the OSK.\r\n      const _this = this;\r\n      keymanweb.core.languageProcessor.on(\u0027statechange\u0027,\r\n                                          function(state: text.prediction.StateChangeEnum) {\r\n        let currentType = _this.bannerView.activeType;\r\n        _this.bannerView.selectBanner(state);\r\n\r\n        if(currentType != _this.bannerView.activeType) {\r\n          _this.refreshLayout();\r\n        }\r\n\r\n        return true;\r\n      });\r\n    }\r\n\r\n    private setBaseMouseEventListeners() {\r\n      let keymanweb = com.keyman.singleton;\r\n\r\n      this._boxBaseMouseDown = function(e) {\r\n        keymanweb.uiManager.setActivatingUI(true);\r\n        return false;\r\n      }\r\n\r\n      this._Box.addEventListener(\u0027mousedown\u0027, this._boxBaseMouseDown, false);\r\n    }\r\n\r\n    private removeBaseMouseEventListeners() {\r\n      if(this._boxBaseMouseDown) {\r\n        this._Box.removeEventListener(\u0027mousedown\u0027, this._boxBaseMouseDown, false);\r\n        this._boxBaseMouseDown = null;\r\n      }\r\n    }\r\n\r\n    private setBaseTouchEventListeners() {\r\n      // And to prevent touch event default behaviour on mobile devices\r\n      let keymanweb = com.keyman.singleton;\r\n\r\n      var cancelEventFunc = this._boxBaseTouchEventCancel = function(e) {\r\n        if(e.cancelable) {\r\n          e.preventDefault();\r\n        }\r\n        e.stopPropagation();\r\n        return false;\r\n      };\r\n\r\n      this._boxBaseTouchStart = function(e) {\r\n        keymanweb.uiManager.setActivatingUI(true);\r\n        return cancelEventFunc(e);\r\n      }\r\n\r\n      this._Box.addEventListener(\u0027touchstart\u0027, this._boxBaseTouchStart, false);\r\n      this._Box.addEventListener(\u0027touchmove\u0027,  this._boxBaseTouchEventCancel, false);\r\n      this._Box.addEventListener(\u0027touchend\u0027,  this._boxBaseTouchEventCancel, false);\r\n      this._Box.addEventListener(\u0027touchcancel\u0027,  this._boxBaseTouchEventCancel, false);\r\n    }\r\n\r\n    private removeBaseTouchEventListeners() {\r\n      if(!this._boxBaseTouchEventCancel) {\r\n        return;\r\n      }\r\n\r\n      this._Box.removeEventListener(\u0027touchstart\u0027, this._boxBaseTouchStart, false);\r\n      this._Box.removeEventListener(\u0027touchmove\u0027,  this._boxBaseTouchEventCancel, false);\r\n      this._Box.removeEventListener(\u0027touchend\u0027,  this._boxBaseTouchEventCancel, false);\r\n      this._Box.removeEventListener(\u0027touchcancel\u0027,  this._boxBaseTouchEventCancel, false);\r\n\r\n      this._boxBaseTouchEventCancel = null;\r\n      this._boxBaseTouchStart = null;\r\n    }\r\n\r\n    /**\r\n     * Gets and sets the IME-like interface (`OutputTarget`) to be affected by events from\r\n     * the OSK.\r\n     *\r\n     * If `activationMode` is `\u0027conditional\u0027`, this property\u0027s state controls the visibility\r\n     * of the OSKView.\r\n     */\r\n    public get activeTarget(): text.OutputTarget {\r\n      return this._target;\r\n    }\r\n\r\n    public set activeTarget(targ: text.OutputTarget) {\r\n      // If already null \u0026 set to null again, take no action.\r\n      if(this._target == null \u0026\u0026 targ == null) {\r\n        return;\r\n      }\r\n\r\n      this._target = targ;\r\n      this.commonCheckAndDisplay();\r\n    }\r\n\r\n\r\n    public get targetDevice(): com.keyman.utils.DeviceSpec {\r\n      return this.device;\r\n    }\r\n\r\n    public set targetDevice(spec: com.keyman.utils.DeviceSpec) {\r\n      if(this.allowsDeviceChange(spec)) {\r\n        this.device = spec;\r\n        this.loadActiveKeyboard();\r\n      } else {\r\n        console.error(\"May not change target device for this OSKView type.\");\r\n      }\r\n    }\r\n\r\n    protected allowsDeviceChange(newSpec: com.keyman.utils.DeviceSpec): boolean {\r\n      return false;\r\n    }\r\n\r\n    /**\r\n     * Determines the activation state model used to control presentation of the OSK.\r\n     * - `\u0027conditional\u0027`:  Only displays if `activeTarget` is non-null - if there is an active\r\n     * target that can receive the OSK\u0027s context-manipulation events.\r\n     * - `\u0027manual\u0027`:  Display is directly controlled by manipulating the value of `displayIfActive`.\r\n     *   It may be displayed while `activeTarget` is `null`.\r\n     * - `\u0027static\u0027`:  The OSK should be permanently displayed and may never be hidden.\r\n     */\r\n    get activationMode(): ActivationMode {\r\n      if(!this._activationMode) {\r\n        this._activationMode = ActivationMode.automatic;\r\n      }\r\n\r\n      return this._activationMode;\r\n    }\r\n\r\n    set activationMode(mode: ActivationMode) {\r\n      this._activationMode = mode;\r\n      this.commonCheckAndDisplay();\r\n    }\r\n\r\n    /**\r\n     * Implementation of the activation modeling described in the documentation for\r\n     * `activationMode`.\r\n     */\r\n    protected get activationConditionsMet(): boolean {\r\n      switch(this.activationMode) {\r\n        case \u0027manual\u0027:\r\n          return true;\r\n        case \u0027static\u0027:\r\n          return true;\r\n        case \u0027automatic\u0027:\r\n          return !!this.activeTarget;\r\n        default:\r\n          console.error(\"Unexpected activation mode set for the OSK.\");\r\n          return false;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * A property denoting whether or not the OSK should be presented if it meets its\r\n     * activation conditions.\r\n     *\r\n     * When `activationMode == \u0027manual\u0027`, `displayIfActive == true` is the lone\r\n     * activation condition.\r\n     *\r\n     * Note: cannot be set to `false` if `activationMode == \u0027static\u0027`.\r\n     */\r\n    get displayIfActive(): boolean {\r\n      return this._displayIfActive;\r\n    }\r\n\r\n    set displayIfActive(flag: boolean) {\r\n      if(this.displayIfActive == flag) {\r\n        return;\r\n      }\r\n\r\n      // if is touch device or is CJK keyboard, this.displayIfActive must remain true.\r\n      if(this.keyboard?.isCJK \u0026\u0026 !flag) {\r\n        console.warn(\"Cannot hide display of OSK for CJK keyboards.\");\r\n        flag = true;\r\n      } else if(this.hostDevice.touchable \u0026\u0026 !flag) {\r\n        console.warn(\"Cannot hide display of OSK when hosted on touch-based devices.\");\r\n        flag = true;\r\n      } else if(this.activationMode == \u0027static\u0027) {\r\n        // Silently fail; it\u0027s a documentation keyboard.\r\n        // This is the primary difference between \u0027manual\u0027 and \u0027static\u0027.\r\n        flag = true;\r\n      }\r\n\r\n      this._displayIfActive = flag;\r\n      this.commonCheckAndDisplay();\r\n    }\r\n\r\n    /**\r\n     * Used by the activation \u0026 visibility properties as a common helper; all of their\r\n     * setters rely on this function to manage presentation (showing / hiding) of the OSK.\r\n     */\r\n    private commonCheckAndDisplay() {\r\n      if(this.activationConditionsMet \u0026\u0026 this.displayIfActive) {\r\n        this.present();\r\n      } else {\r\n        this.startHide(false);\r\n      }\r\n    }\r\n\r\n    public get vkbd(): VisualKeyboard {\r\n      if(this.keyboardView instanceof VisualKeyboard) {\r\n        return this.keyboardView;\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    public get banner(): BannerManager {  // Maintains old reference point used by embedding apps.\r\n      return this.bannerView;\r\n    }\r\n\r\n    /**\r\n     * The configured width for this VisualKeyboard.  May be `undefined` or `null`\r\n     * to allow automatic width scaling.\r\n     */\r\n    get width(): ParsedLengthStyle {\r\n      return this._width;\r\n    }\r\n\r\n    /**\r\n     * The configured height for this VisualKeyboard.  May be `undefined` or `null`\r\n     * to allow automatic height scaling.\r\n     */\r\n    get height(): ParsedLengthStyle {\r\n      return this._height;\r\n    }\r\n\r\n    /**\r\n     * The computed width for this VisualKeyboard.  May be null if auto sizing\r\n     * is allowed and the VisualKeyboard is not currently in the DOM hierarchy.\r\n     */\r\n    get computedWidth(): number {\r\n      // Computed during layout operations; allows caching instead of continuous recomputation.\r\n      if(this.needsLayout) {\r\n        this.refreshLayout();\r\n      }\r\n      return this._computedWidth;\r\n    }\r\n\r\n    /**\r\n     * The computed height for this VisualKeyboard.  May be null if auto sizing\r\n     * is allowed and the VisualKeyboard is not currently in the DOM hierarchy.\r\n     */\r\n    get computedHeight(): number {\r\n      // Computed during layout operations; allows caching instead of continuous recomputation.\r\n      if(this.needsLayout) {\r\n        this.refreshLayout();\r\n      }\r\n      return this._computedHeight;\r\n    }\r\n\r\n    /**\r\n     * The top-level style string for the font size used by the predictive banner\r\n     * and the primary keyboard visualization elements.\r\n     */\r\n    get baseFontSize(): string {\r\n      return this.parsedBaseFontSize?.styleString || \u0027\u0027;\r\n    }\r\n\r\n    protected get parsedBaseFontSize(): ParsedLengthStyle {\r\n      if(!this._baseFontSize) {\r\n        let keymanweb = com.keyman.singleton;\r\n        this._baseFontSize = this.defaultFontSize(this.device, keymanweb.isEmbedded);\r\n      }\r\n\r\n      return this._baseFontSize;\r\n    }\r\n\r\n    public defaultFontSize(device: utils.DeviceSpec, isEmbedded: boolean): ParsedLengthStyle {\r\n      if(device.touchable) {\r\n        const fontScale = device.formFactor == \u0027phone\u0027\r\n          ? 1.6 * (isEmbedded ? 0.65 : 0.6) * 1.2  // Combines original scaling factor with one previously applied to the layer group.\r\n          : 2; // iPad or Android tablet\r\n        return ParsedLengthStyle.special(fontScale, \u0027em\u0027);\r\n      } else {\r\n        return this.computedHeight ? ParsedLengthStyle.inPixels(this.computedHeight / 8) : undefined;\r\n      }\r\n    }\r\n\r\n    public get activeKeyboard(): keyboards.Keyboard {\r\n      return this.keyboard;\r\n    }\r\n\r\n    public set activeKeyboard(keyboard: keyboards.Keyboard) {\r\n      this.keyboard = keyboard;\r\n      this.loadActiveKeyboard();\r\n\r\n      if(this.keyboard?.isCJK) {\r\n        this.displayIfActive = true;\r\n      }\r\n    }\r\n\r\n    private computeFrameHeight(): number {\r\n      return (this.headerView?.layoutHeight.val || 0) + (this.footerView?.layoutHeight.val || 0);\r\n    }\r\n\r\n    setSize(width?: number | LengthStyle, height?: number | LengthStyle, pending?: boolean) {\r\n      let mutatedFlag = false;\r\n\r\n      let parsedWidth: ParsedLengthStyle;\r\n      let parsedHeight: ParsedLengthStyle;\r\n\r\n      if(!width \u0026\u0026 width !== 0) {\r\n        return;\r\n      }\r\n\r\n      if(!height \u0026\u0026 height !== 0) {\r\n        return;\r\n      }\r\n\r\n      if(Number.isFinite(width as number)) {\r\n        parsedWidth = ParsedLengthStyle.inPixels(width as number);\r\n      } else {\r\n        parsedWidth = new ParsedLengthStyle(width as LengthStyle);\r\n      }\r\n\r\n      if(Number.isFinite(height as number)) {\r\n        parsedHeight = ParsedLengthStyle.inPixels(height as number);\r\n      } else {\r\n        parsedHeight = new ParsedLengthStyle(height as LengthStyle);\r\n      }\r\n\r\n      if(width \u0026\u0026 height) {\r\n        mutatedFlag = !this._width || !this._height;\r\n\r\n        mutatedFlag = mutatedFlag || parsedWidth.styleString  != this._width.styleString;\r\n        mutatedFlag = mutatedFlag || parsedHeight.styleString != this._height.styleString;\r\n\r\n        this._width = parsedWidth;\r\n        this._height = parsedHeight;\r\n      }\r\n\r\n      this.needsLayout = this.needsLayout || mutatedFlag;\r\n      this.refreshLayoutIfNeeded(pending);\r\n    }\r\n\r\n    protected setNeedsLayout() {\r\n      this.needsLayout = true;\r\n    }\r\n\r\n    public refreshLayout(pending?: boolean): void {\r\n      if(!this.keyboardView) {\r\n        return;\r\n      }\r\n\r\n      // Step 1:  have the necessary conditions been met?\r\n      const hasDimensions = this.width \u0026\u0026 this.height;\r\n      const fixedSize = hasDimensions \u0026\u0026 this.width.absolute \u0026\u0026 this.height.absolute;\r\n      const computedStyle = getComputedStyle(this._Box);\r\n      const isInDOM = computedStyle.height != \u0027\u0027 \u0026\u0026 computedStyle.height != \u0027auto\u0027;\r\n\r\n      // Step 2:  determine basic layout geometry\r\n      if(fixedSize) {\r\n        this._computedWidth  = this.width.val;\r\n        this._computedHeight = this.height.val;\r\n      } else if(isInDOM \u0026\u0026 hasDimensions) {\r\n        const parent = this._Box.offsetParent as HTMLElement;\r\n        this._computedWidth  = this.width.val  * (this.width.absolute  ? 1 : parent.offsetWidth);\r\n        this._computedHeight = this.height.val * (this.height.absolute ? 1 : parent.offsetHeight);\r\n      } else {\r\n        // Cannot perform layout operations!\r\n        return;\r\n      }\r\n\r\n      // Must be set before any references to the .computedWidth and .computedHeight properties!\r\n      this.needsLayout = false;\r\n\r\n      // Step 3:  perform layout operations.\r\n      this.banner.element.style.fontSize = this.baseFontSize;\r\n      if(this.vkbd) {\r\n        this.vkbd.fontSize = this.parsedBaseFontSize;\r\n      }\r\n\r\n      if(!pending) {\r\n        this.headerView?.refreshLayout();\r\n        this.bannerView.refreshLayout();\r\n        this.footerView?.refreshLayout();\r\n      }\r\n\r\n      if(this.vkbd) {\r\n        let availableHeight = this.computedHeight - this.computeFrameHeight();\r\n\r\n        // +5:  from kmw-banner-bar\u0027s \u0027top\u0027 attribute when active\r\n        if(this.bannerView.height \u003e 0) {\r\n          availableHeight -= this.bannerView.height + 5;\r\n        }\r\n        this.vkbd.setSize(this.computedWidth, availableHeight, pending);\r\n\r\n        const bs = this._Box.style;\r\n        // OSK size settings can only be reliably applied to standard VisualKeyboard\r\n        // visualizations, not to help text or empty views.\r\n        bs.width  = bs.maxWidth  = this.computedWidth + \u0027px\u0027;\r\n        bs.height = bs.maxHeight = this.computedHeight + \u0027px\u0027;\r\n\r\n      } else {\r\n        const bs = this._Box.style;\r\n        bs.width  = \u0027auto\u0027;\r\n        bs.height = \u0027auto\u0027;\r\n        bs.maxWidth = bs.maxHeight = \u0027\u0027;\r\n      }\r\n\r\n      let keyman = com.keyman.singleton;\r\n      keyman.alignInputs();\r\n    }\r\n\r\n    public refreshLayoutIfNeeded(pending?: boolean) {\r\n      if(this.needsLayout) {\r\n        this.refreshLayout(pending);\r\n      }\r\n    }\r\n\r\n    public abstract getDefaultWidth(): number;\r\n    public abstract getDefaultKeyboardHeight(): number;\r\n\r\n    /**\r\n     * Function     _Load\r\n     * Scope        Private\r\n     * Description  OSK initialization when keyboard selected\r\n     */\r\n    _Load() { // Load Help - maintained only temporarily.\r\n      let keymanweb = com.keyman.singleton;\r\n      this.activeKeyboard = keymanweb.core.activeKeyboard;\r\n    }\r\n\r\n    protected abstract postKeyboardLoad(): void;\r\n\r\n    protected abstract setBoxStyling(): void;\r\n\r\n    private loadActiveKeyboard() {\r\n      this.setBoxStyling();\r\n\r\n      if(this.vkbd) {\r\n        this.vkbd.shutdown();\r\n      }\r\n      this.keyboardView = null;\r\n      this.needsLayout = true;\r\n\r\n      // Instantly resets the OSK container, erasing / delinking the previously-loaded keyboard.\r\n      this._Box.innerHTML = \u0027\u0027;\r\n\r\n      // Any event-cancelers would go here, after the innerHTML reset.\r\n\r\n      // Add header element to OSK only for desktop browsers\r\n      if(this.headerView) {\r\n        this._Box.appendChild(this.headerView.element);\r\n      }\r\n\r\n      // Add suggestion banner bar to OSK\r\n      this._Box.appendChild(this.banner.element);\r\n\r\n      let kbdView: KeyboardView = this.keyboardView = this._GenerateKeyboardView(this.activeKeyboard);\r\n      this._Box.appendChild(kbdView.element);\r\n      kbdView.postInsert();\r\n\r\n      // Add footer element to OSK only for desktop browsers\r\n      if(this.footerView) {\r\n        this._Box.appendChild(this.footerView.element);\r\n      }\r\n      // END:  construction of the actual internal layout for the overall OSK\r\n\r\n      // Correct the classname for the (inner) OSK frame (Build 360)\r\n      var kbdID: string = (this.activeKeyboard ? this.activeKeyboard.id.replace(\u0027Keyboard_\u0027,\u0027\u0027) : \u0027\u0027);\r\n\r\n      if(kbdID.indexOf(\u0027::\u0027) != -1) { // We used to also test if we were in embedded mode, but... whatever.\r\n        // De-namespaces the ID for use with CSS classes.\r\n        // Assumes that keyboard IDs may not contain the \u0027:\u0027 symbol.\r\n        kbdID = kbdID.substring(kbdID.indexOf(\u0027::\u0027) + 2);\r\n      }\r\n\r\n      const kbdClassSuffix = \u0027 kmw-keyboard-\u0027 + kbdID;\r\n      kbdView.element.className = kbdView.element.className + kbdClassSuffix;\r\n\r\n      this.banner.appendStyles();\r\n\r\n      if(this.vkbd) {\r\n        // Create the key preview (for phones)\r\n        this.vkbd.createKeyTip();\r\n\r\n        // Append a stylesheet for this keyboard for keyboard specific styles\r\n        // or if needed to specify an embedded font\r\n        this.vkbd.appendStyleSheet();\r\n      }\r\n\r\n      this.postKeyboardLoad();\r\n    }\r\n\r\n    private layerChangeHandler: text.SystemStoreMutationHandler = function(this: OSKView,\r\n      source: text.MutableSystemStore,\r\n      newValue: string) {\r\n      // This handler is also triggered on state-key state changes (K_CAPS) that\r\n      // may not actually change the layer.\r\n      if(this.vkbd) {\r\n        this.vkbd._UpdateVKShiftStyle(newValue);\r\n      }\r\n\r\n      if((this.vkbd \u0026\u0026 this.vkbd.layerId != newValue) || source.value != newValue) {\r\n        // Prevents console errors when a keyboard only displays help.\r\n        // Can occur when using SHIFT with sil_euro_latin on a desktop form-factor.\r\n        if(this.vkbd) {\r\n          this.vkbd.layerId = newValue;\r\n          // Ensure that the layer\u0027s spacebar is properly captioned.\r\n          this.vkbd.showLanguage();\r\n        }\r\n\r\n        // Ensure the keyboard view is modeling the correct state.  (Correct layer, etc.)\r\n        this.keyboardView.updateState();\r\n        // We need to recalc the font size here because the layer did not have\r\n        // calculated dimensions available before it was visible\r\n        this.refreshLayout();\r\n      }\r\n    }.bind(this);\r\n\r\n    private _GenerateKeyboardView(keyboard: keyboards.Keyboard): KeyboardView {\r\n      let device = this.device;\r\n\r\n      if(this.vkbd) {\r\n        this.vkbd.shutdown();\r\n      }\r\n\r\n      this._Box.className = \"\";\r\n\r\n      // Case 1:  since we hide the system keyboard on touch devices, we need\r\n      //          to display SOMETHING that can accept input.\r\n      if(keyboard == null \u0026\u0026 !device.touchable) {\r\n        // We do not (currently) allow selecting the default system keyboard on\r\n        // touch form-factors.  Likely b/c mnemonic difficulties.\r\n        return new EmptyView();\r\n      } else {\r\n        // Generate a visual keyboard from the layout (or layout default)\r\n        // Condition is false if no key definitions exist, formFactor == desktop, AND help text exists.  All three.\r\n        if(keyboard \u0026\u0026 keyboard.layout(device.formFactor as utils.FormFactor)) {\r\n          return this._GenerateVisualKeyboard(keyboard);\r\n        } else if(!keyboard /* \u0026\u0026 device.touchable (implied) */) {\r\n          // Show a basic, \"hollow\" OSK that at least allows input, since we\u0027re\r\n          // on a touch device and hiding the system keyboard\r\n          return this._GenerateVisualKeyboard(null);\r\n        } else {\r\n          // A keyboard help-page or help-text is still a visualization, even not a standard OSK.\r\n          return new HelpPageView(keyboard);\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Function     _GenerateVisualKeyboard\r\n     * Scope        Private\r\n     * @param       {Object}      keyboard    The keyboard to visualize\r\n     * Description  Generates the visual keyboard element and attaches it to KMW\r\n     */\r\n    private _GenerateVisualKeyboard(keyboard: keyboards.Keyboard): VisualKeyboard {\r\n      let device = this.device;\r\n\r\n      // Root element sets its own classes, one of which is \u0027kmw-osk-inner-frame\u0027.\r\n      let vkbd = new VisualKeyboard(keyboard, device, this.hostDevice);\r\n\r\n      // Ensure the OSK\u0027s current layer is kept up to date.\r\n      let core = com.keyman.singleton.core; // Note:  will eventually be a class field.\r\n      core.keyboardProcessor.layerStore.handler = this.layerChangeHandler;\r\n\r\n      // Set box class - OS and keyboard added for Build 360\r\n      this._Box.className=device.formFactor+\u0027 \u0027+ device.OS.toLowerCase() + \u0027 kmw-osk-frame\u0027;\r\n\r\n      // Add primary keyboard element to OSK\r\n      return vkbd;\r\n    }\r\n\r\n    /**\r\n     * The main function for presenting the OSKView.\r\n     *\r\n     * This includes:\r\n     * - refreshing its layout\r\n     * - displaying it\r\n     * - positioning it\r\n     */\r\n    public present(): void {\r\n      // Do not try to display OSK if no active element\r\n      if(!this.mayShow()) {\r\n        return;\r\n      }\r\n\r\n      // Ensure the keyboard view is modeling the correct state.  (Correct layer, etc.)\r\n      this.keyboardView.updateState();\r\n\r\n      this._Box.style.display=\u0027block\u0027; // Is \u0027none\u0027 when hidden.\r\n\r\n      // First thing after it\u0027s made visible.\r\n      this.refreshLayoutIfNeeded();\r\n\r\n      if(this.keyboardView instanceof VisualKeyboard) {\r\n        this.keyboardView.showLanguage();\r\n      }\r\n\r\n      this._Visible=true;\r\n\r\n      /* In case it\u0027s still \u00270\u0027 from a hide() operation.\r\n       *\r\n       * (Opacity is only modified when device.touchable = true,\r\n       * though a couple of extra conditions may apply.)\r\n       */\r\n      this._Box.style.opacity = \u00271\u0027;\r\n\r\n      // If OSK still hidden, make visible only after all calculation finished\r\n      if(this._Box.style.visibility == \u0027hidden\u0027) {\r\n        let _this = this;\r\n        window.setTimeout(function() {\r\n          _this._Box.style.visibility = \u0027visible\u0027;\r\n        }, 0);\r\n      }\r\n\r\n      this.setDisplayPositioning();\r\n    }\r\n\r\n    /**\r\n     * Method usable by subclasses of OSKView to control that OSKView type\u0027s\r\n     * positioning behavior when needed by the present() method.\r\n     */\r\n    protected abstract setDisplayPositioning();\r\n\r\n    /**\r\n     * Method used to start a potentially-asynchronous hide of the OSK.\r\n     * @param hiddenByUser `true` if this hide operation was directly requested by the user.\r\n     */\r\n    public startHide(hiddenByUser: boolean): void {\r\n      if(!this.mayHide(hiddenByUser)) {\r\n        return;\r\n      }\r\n\r\n      if(hiddenByUser) {\r\n        // The one location outside of the `displayIfActive` property that bypasses the setter.\r\n        // Avoids needless recursion that could be triggered by it, as we\u0027re already in the\r\n        // process of hiding the OSK anyway.\r\n        this._displayIfActive = ((this.keyboard.isCJK || this.hostDevice.touchable)? true : false); // I3363 (Build 301)\r\n      }\r\n\r\n      let promise: Promise\u003cboolean\u003e = null;\r\n      if(this._Box \u0026\u0026 this.hostDevice.touchable \u0026\u0026 !(this.keyboardView instanceof EmptyView)) {\r\n        /**\r\n         * Note:  this refactored code appears to reflect a currently-dead code path.  14.0\u0027s\r\n         * equivalent is either extremely niche or is actually inaccessible.\r\n         */\r\n        promise = this.useHideAnimation();\r\n      } else {\r\n        promise = Promise.resolve(true);\r\n      }\r\n\r\n      const _this = this;\r\n      promise.then(function(shouldHide: boolean) {\r\n        if(shouldHide) {\r\n          _this.finalizeHide();\r\n        }\r\n      });\r\n\r\n      // Allow UI to execute code when hiding the OSK\r\n      var p={};\r\n      p[\u0027HiddenByUser\u0027]=hiddenByUser;\r\n      this.doHide(p);\r\n\r\n      // If hidden by the UI, be sure to restore the focus\r\n      if(hiddenByUser \u0026\u0026 this.activeTarget instanceof dom.targets.OutputTarget) {\r\n        this.activeTarget?.focus();\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Performs the _actual_ logic and functionality involved in hiding the OSK.\r\n     */\r\n    protected finalizeHide() {\r\n      if(document.body.className.indexOf(\u0027osk-always-visible\u0027) \u003e= 0) {\r\n        return;\r\n      }\r\n\r\n      if(this._Box) {\r\n        let bs=this._Box.style;\r\n        bs.display = \u0027none\u0027;\r\n        bs.transition = \u0027\u0027;\r\n        bs.opacity = \u00271\u0027;\r\n        this._Visible=false;\r\n      }\r\n\r\n      if(this.vkbd) {\r\n        this.vkbd.onHide();\r\n      }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns `false` if the OSK is in an invalid state for being presented to the user.\r\n     */\r\n    protected mayShow(): boolean {\r\n      if(!this.activationConditionsMet) {\r\n        return false;\r\n      }\r\n\r\n      // Never display the OSK for desktop browsers unless KMW element is focused, and a keyboard selected\r\n      if(!this.keyboardView || this.keyboardView instanceof EmptyView || !this.displayIfActive) {\r\n        return false;\r\n      }\r\n\r\n      if(!this._Box) {\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param hiddenByUser\r\n     * @returns `false` if the OSK is in an invalid state for being hidden from the user.\r\n     */\r\n    protected mayHide(hiddenByUser: boolean): boolean {\r\n      if(this.activationMode != \u0027automatic\u0027 \u0026\u0026 this.displayIfActive) {\r\n        return false;\r\n      }\r\n\r\n      if(!hiddenByUser \u0026\u0026 this.hostDevice.formFactor == \u0027desktop\u0027) {\r\n        //Allow desktop OSK to remain visible on blur if body class set\r\n        if(document.body.className.indexOf(\u0027osk-always-visible\u0027) \u003e= 0) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    /**\r\n     * Applies CSS styling and handling needed to perform a fade animation when\r\n     * hiding the OSK.\r\n     *\r\n     * Note:  currently reflects an effectively-dead code path, though this is\r\n     * likely not intentional.  Other parts of the KMW engine seem to call hideNow()\r\n     * synchronously after each and every part of the engine that calls this function,\r\n     * cancelling the Promise.\r\n     *\r\n     * @returns A Promise denoting either cancellation of the hide (`false`) or\r\n     * completion of the hide \u0026 its animation (`true`)\r\n     */\r\n\r\n    protected useHideAnimation(): Promise\u003cboolean\u003e {\r\n      const os = this._Box.style;\r\n      const _this = this;\r\n\r\n      return new Promise\u003cboolean\u003e(function(resolve) {\r\n        const cleanup = function() {\r\n          // TODO(lowpri): attach event listeners on create and leave them there\r\n          _this._Box.removeEventListener(\u0027transitionend\u0027, cleanup, false);\r\n          _this._Box.removeEventListener(\u0027webkitTransitionEnd\u0027, cleanup, false);\r\n          _this._Box.removeEventListener(\u0027transitioncancel\u0027, cleanup, false);\r\n          _this._Box.removeEventListener(\u0027webkitTransitionCancel\u0027, cleanup, false);\r\n          if(_this._animatedHideTimeout != 0) {\r\n            window.clearTimeout(_this._animatedHideTimeout);\r\n          }\r\n          _this._animatedHideTimeout = 0;\r\n\r\n          if(_this._Visible \u0026\u0026 _this.activationConditionsMet) {\r\n            // Leave opacity alone and clear transition if another element activated\r\n            os.transition=\u0027\u0027;\r\n            os.opacity=\u00271\u0027;\r\n            resolve(false);\r\n            return false;\r\n          } else {\r\n            resolve(true);\r\n            return true;\r\n          }\r\n        }, startup = function() {\r\n          _this._Box.removeEventListener(\u0027transitionrun\u0027, startup, false);\r\n          _this._Box.removeEventListener(\u0027webkitTransitionRun\u0027, startup, false);\r\n          _this._Box.addEventListener(\u0027transitionend\u0027, cleanup, false);\r\n          _this._Box.addEventListener(\u0027webkitTransitionEnd\u0027, cleanup, false);\r\n          _this._Box.addEventListener(\u0027transitioncancel\u0027, cleanup, false);\r\n          _this._Box.addEventListener(\u0027webkitTransitionCancel\u0027, cleanup, false);\r\n        };\r\n\r\n        _this._Box.addEventListener(\u0027transitionrun\u0027, startup, false);\r\n        _this._Box.addEventListener(\u0027webkitTransitionRun\u0027, startup, false);\r\n\r\n        os.transition=\u0027opacity 0.5s linear 0\u0027;\r\n        os.opacity=\u00270\u0027;\r\n\r\n        // Cannot hide the OSK smoothly using a transitioned drop, since for\r\n        // position:fixed elements transitioning is incompatible with translate3d(),\r\n        // and also does not work with top, bottom or height styles.\r\n        // Opacity can be transitioned and is probably the simplest alternative.\r\n        // We must condition on osk._Visible in case focus has since been moved to another\r\n        // input (in which case osk._Visible will be non-zero)\r\n        _this._animatedHideTimeout = window.setTimeout(cleanup,\r\n          200); // Wait a bit before starting, to allow for moving to another element\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Used to synchronously hide the OSK, cancelling any async hide animations that have\r\n     * not started and immediately completing the hide of any hide ops pending completion\r\n     * of their animation.\r\n     */\r\n    public hideNow() {\r\n      if(!this.mayHide(false) || !this._Box) {\r\n        return;\r\n      }\r\n\r\n      // Two possible uses for _animatedHideResolver:\r\n      // - _animatedHideTimeout is set:   animation is waiting to start\r\n      // - _animatedHideTimeout is null:  animation has already started.\r\n\r\n      // Was an animated hide waiting to start?  Just cancel it.\r\n      if(this._animatedHideTimeout) {\r\n        window.clearTimeout(this._animatedHideTimeout);\r\n        this._animatedHideTimeout = 0;\r\n      }\r\n\r\n      // Was an animated hide already in progress?  If so, just trigger it early.\r\n      const os = this._Box.style;\r\n      os.transition=\u0027\u0027;\r\n      os.opacity=\u00270\u0027;\r\n      this.finalizeHide();\r\n    }\r\n\r\n    [\u0027shutdown\u0027]() {\r\n      // Disable the OSK\u0027s event handlers.\r\n      this.removeBaseMouseEventListeners();\r\n      this.removeBaseTouchEventListeners();\r\n\r\n      // Remove the OSK\u0027s elements from the document, allowing them to be properly cleaned up.\r\n      // Necessary for clean engine testing.\r\n      var _box = this._Box;\r\n      if(_box.parentElement) {\r\n        _box.parentElement.removeChild(_box);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Function     getRect\r\n     * Scope        Public\r\n     * @return      {Object.\u003cstring,number\u003e}   Array object with position and size of OSK container\r\n     * Description  Get rectangle containing KMW Virtual Keyboard\r\n     */\r\n     [\u0027getRect\u0027](): OSKRect {\t\t// I2405\r\n      var p: OSKRect = {};\r\n\r\n      // Always return these based upon _Box; using this.vkbd will fail to account for banner and/or\r\n      // the desktop OSK border.\r\n      p[\u0027left\u0027] = p.left = dom.Utils.getAbsoluteX(this._Box);\r\n      p[\u0027top\u0027]  = p.top  = dom.Utils.getAbsoluteY(this._Box);\r\n\r\n      p[\u0027width\u0027] = this.computedWidth;\r\n      p[\u0027height\u0027] = this.computedHeight;\r\n      return p;\r\n    }\r\n\r\n    /* ---- Legacy interfacing methods and fields ----\r\n     *\r\n     * The endgoal is to eliminate the need for these entirely, but extra work and care\r\n     * will be necessary to achieve said endgoal for these methods.\r\n     *\r\n     * The simplest way forward is to maintain them, then resolve them independently,\r\n     * one at a time.\r\n     */\r\n\r\n    /**\r\n     * Display build number\r\n     *\r\n     * In the future, this should raise an event that the consuming KeymanWeb\r\n     * engine may listen for \u0026 respond to, rather than having it integrated\r\n     * as part of the OSK itself.\r\n     */\r\n    showBuild() {\r\n      let keymanweb = com.keyman.singleton;\r\n      keymanweb.util.internalAlert(\u0027KeymanWeb Version \u0027+keymanweb[\u0027version\u0027]+\u0027.\u0027+keymanweb[\u0027build\u0027]+\u0027\u003cbr /\u003e\u003cbr /\u003e\u0027\r\n          +\u0027\u003cspan style=\"font-size:0.8em\"\u003eCopyright \u0026copy; 2021 SIL International\u003c/span\u003e\u0027);\r\n    }\r\n\r\n    /**\r\n     * Display list of installed keyboards in pop-up menu\r\n     *\r\n     * In the future, this language menu should be defined as a UI module like the standard\r\n     * desktop UI modules.  The globe key should then trigger an event to _request_ that the\r\n     * consuming engine display the active UI module\u0027s menu.\r\n     *\r\n     **/\r\n    showLanguageMenu() {\r\n      if(this.hostDevice.touchable) {\r\n        let menu = new LanguageMenu(com.keyman.singleton);\r\n        menu.show();\r\n      }\r\n    }\r\n\r\n    // OSK state fields \u0026 events\r\n    //\r\n    // These are relatively stable and may be preserved as they are.\r\n    _Visible: boolean = false;\r\n\r\n    /**\r\n     * Function     enabled\r\n     * Scope        Public\r\n     * @return      {boolean|number}    True if KMW OSK enabled\r\n     * Description  Test if KMW OSK is enabled\r\n     */\r\n     [\u0027isEnabled\u0027](): boolean {\r\n      return this.displayIfActive;\r\n    }\r\n\r\n    /**\r\n     * Function     isVisible\r\n     * Scope        Public\r\n     * @return      {boolean|number}    True if KMW OSK visible\r\n     * Description  Test if KMW OSK is actually visible\r\n     * Note that this will usually return false after any UI event that results in (temporary) loss of input focus\r\n     */\r\n    [\u0027isVisible\u0027](): boolean {\r\n      return this._Visible;\r\n    }\r\n\r\n    /**\r\n     * Function     hide\r\n     * Scope        Public\r\n     * Description  Prevent display of OSK window on focus\r\n     */\r\n     [\u0027hide\u0027]() {\r\n      this.displayIfActive = false;\r\n      this.startHide(true);\r\n    }\r\n\r\n    /**\r\n     * Description  Display KMW OSK (at position set in callback to UI)\r\n     * Function     show\r\n     * Scope        Public\r\n     * @param       {(boolean|number)=}      bShow     True to display, False to hide, omitted to toggle\r\n     */\r\n     [\u0027show\u0027](bShow: boolean) {\r\n      if(arguments.length \u003e 0) {\r\n        this.displayIfActive = bShow;\r\n      } else {\r\n        if(this.activationConditionsMet) {\r\n          this.displayIfActive = !this.displayIfActive;\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Allow UI to respond to OSK being shown (passing position and properties)\r\n     *\r\n     * @param       {Object=}       p     object with coordinates and userdefined flag\r\n     * @return      {boolean}\r\n     *\r\n     */\r\n     doShow(p) {\r\n      return com.keyman.singleton.util.callEvent(\u0027osk.show\u0027,p);\r\n    }\r\n\r\n    /**\r\n     * Allow UI to update respond to OSK being hidden\r\n     *\r\n     * @param       {Object=}       p     object with coordinates and userdefined flag\r\n     * @return      {boolean}\r\n     *\r\n     */\r\n    doHide(p) {\r\n      return com.keyman.singleton.util.callEvent(\u0027osk.hide\u0027,p);\r\n    }\r\n\r\n    /**\r\n     * Function     addEventListener\r\n     * Scope        Public\r\n     * @param       {string}            event     event name\r\n     * @param       {function(Object)}  func      event handler\r\n     * @return      {boolean}\r\n     * Description  Wrapper function to add and identify OSK-specific event handlers\r\n     */\r\n    [\u0027addEventListener\u0027](event: string, func: (obj) =\u003e boolean) {\r\n      return com.keyman.singleton.util.addEventListener(\u0027osk.\u0027+event, func);\r\n    }\r\n  }\r\n}","// Includes KMW-added property declaration extensions for HTML elements.\r\n/// \u003creference path=\"../kmwexthtml.ts\" /\u003e\r\n// Includes the touch-mode language picker UI.\r\n/// \u003creference path=\"languageMenu.ts\" /\u003e\r\n/// \u003creference path=\"lengthStyle.ts\" /\u003e\r\n// Defines desktop-centric OSK positioning + sizing behavior\r\n/// \u003creference path=\"layouts/targetedFloatLayout.ts\" /\u003e\r\n/// \u003creference path=\"oskView.ts\" /\u003e\r\n\r\n/***\r\n   KeymanWeb 10.0\r\n   Copyright 2017 SIL International\r\n***/\r\n\r\nnamespace com.keyman.osk {\r\n  type OSKPos = {\u0027left\u0027?: number, \u0027top\u0027?: number};\r\n\r\n  export class AnchoredOSKView extends OSKView {\r\n    desktopLayout: layouts.TargetedFloatLayout;\r\n\r\n    // OSK positioning fields\r\n    x: number;\r\n    y: number;\r\n\r\n    // Key code definition aliases for legacy keyboards  (They expect window[\u0027keyman\u0027][\u0027osk\u0027].___)\r\n    modifierCodes = text.Codes.modifierCodes;\r\n    modifierBitmasks = text.Codes.modifierBitmasks;\r\n    stateBitmasks = text.Codes.stateBitmasks;\r\n    keyCodes = text.Codes.keyCodes;\r\n\r\n    public constructor(modeledDevice: utils.DeviceSpec) {\r\n      super(modeledDevice);\r\n\r\n      document.body.appendChild(this._Box);\r\n\r\n      let keymanweb = com.keyman.singleton;\r\n      if(keymanweb.isEmbedded) {\r\n        this.activationMode == ActivationMode.manual;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Function     _Unload\r\n     * Scope        Private\r\n     * Description  Clears OSK variables prior to exit (JMD 1.9.1 - relocation of local variables 3/9/10)\r\n     */\r\n    _Unload() {\r\n      this.keyboardView = null;\r\n      this.bannerView = null;\r\n      this._Box = null;\r\n    }\r\n\r\n    protected setBoxStyling() {\r\n      const s = this._Box.style;\r\n\r\n      s.zIndex   = \u00279999\u0027;\r\n      s.display  = \u0027none\u0027;\r\n      s.width    = \u0027100%\u0027;\r\n      s.position = \u0027fixed\u0027;\r\n    }\r\n\r\n    protected postKeyboardLoad() {\r\n      // Initializes the size of a touch keyboard.\r\n      if(this.vkbd \u0026\u0026 this.device.touchable) {\r\n        let targetOSKHeight = this.getDefaultKeyboardHeight();\r\n        this.setSize(this.getDefaultWidth(), targetOSKHeight + this.banner.height);\r\n      }\r\n\r\n      this._Visible = false;  // I3363 (Build 301)\r\n\r\n      this._Box.onmouseover = this._VKbdMouseOver;\r\n      this._Box.onmouseout = this._VKbdMouseOut;\r\n\r\n      if(this.displayIfActive) {\r\n        this.present();\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Function     restorePosition\r\n     * Scope        Public\r\n     * @param       {boolean?}      keepDefaultPosition  If true, does not reset the default x,y set by `setRect`.\r\n     *                                                   If false or omitted, resets the default x,y as well.\r\n     * Description  Move OSK back to default position, floating under active input element\r\n     */\r\n    [\u0027restorePosition\u0027]: (keepDefaultPosition?: boolean) =\u003e void = function(this: AnchoredOSKView, keepDefaultPosition?: boolean) {\r\n      return;\r\n    }.bind(this);\r\n\r\n    /**\r\n     * Function     _VKbdMouseOver\r\n     * Scope        Private\r\n     * @param       {Object}      e      event\r\n     * Description  Activate the KMW UI on mouse over\r\n     */\r\n    private _VKbdMouseOver = function(this: AnchoredOSKView, e) {\r\n      com.keyman.singleton.uiManager.setActivatingUI(true);\r\n    }.bind(this);\r\n\r\n    /**\r\n     * Function     _VKbdMouseOut\r\n     * Scope        Private\r\n     * @param       {Object}      e      event\r\n     * Description  Cancel activation of KMW UI on mouse out\r\n     */\r\n    private _VKbdMouseOut = function(this: AnchoredOSKView, e) {\r\n      com.keyman.singleton.uiManager.setActivatingUI(false);\r\n    }.bind(this);\r\n\r\n    /**\r\n     * Get the wanted height of the OSK for touch devices (does not include banner height)\r\n     *  @return   {number}    height in pixels\r\n     **/\r\n    getDefaultKeyboardHeight(): number {\r\n      let keymanweb = com.keyman.singleton;\r\n      let device = keymanweb.util.device;\r\n\r\n      // KeymanTouch - get OSK height from device\r\n      if(typeof(keymanweb[\u0027getOskHeight\u0027]) == \u0027function\u0027) {\r\n        return keymanweb[\u0027getOskHeight\u0027]();\r\n      }\r\n\r\n      var oskHeightLandscapeView=Math.floor(Math.min(screen.availHeight,screen.availWidth)/2),\r\n          height=oskHeightLandscapeView;\r\n\r\n      if(device.formFactor == \u0027phone\u0027) {\r\n        var sx=Math.min(screen.height,screen.width),\r\n            sy=Math.max(screen.height,screen.width);\r\n\r\n        if(keymanweb.util.portraitView())\r\n          height=Math.floor(Math.max(screen.availHeight,screen.availWidth)/3);\r\n        else\r\n          height=height*(sy/sx)/1.6;  //adjust for aspect ratio, increase slightly for iPhone 5\r\n      }\r\n\r\n      // Correct for viewport scaling (iOS - Android 4.2 does not want this, at least on Galaxy Tab 3))\r\n      if(device.OS == \u0027iOS\u0027) {\r\n        height=height/keymanweb.util.getViewportScale();\r\n      }\r\n\r\n      return height;\r\n    }\r\n\r\n    /**\r\n     * Get the wanted width of the OSK for touch devices\r\n     *\r\n     *  @return   {number}    height in pixels\r\n     **/\r\n    getDefaultWidth(): number {\r\n      let keymanweb = com.keyman.singleton;\r\n      let device = keymanweb.util.device;\r\n\r\n      // KeymanTouch - get OSK height from device\r\n      if(typeof(keymanweb[\u0027getOskWidth\u0027]) == \u0027function\u0027) {\r\n        return keymanweb[\u0027getOskWidth\u0027]();\r\n      }\r\n\r\n      var width: number;\r\n      if(device.OS == \u0027iOS\u0027) {\r\n        // iOS does not interchange these values when the orientation changes!\r\n        //width = util.portraitView() ? screen.width : screen.height;\r\n        width = window.innerWidth;\r\n      } else if(device.OS == \u0027Android\u0027) {\r\n        try {\r\n          width=document.documentElement.clientWidth;\r\n        } catch(ex) {\r\n          width=screen.availWidth;\r\n        }\r\n      } else {\r\n        width=screen.width;\r\n      }\r\n\r\n      return width;\r\n    }\r\n\r\n    /**\r\n     * Allow the UI or page to set the position and size of the OSK\r\n     * and (optionally) override user repositioning or sizing\r\n     *\r\n     * @param       {Object.\u003cstring,number\u003e}   p  Array object with position and size of OSK container\r\n    **/\r\n    [\u0027setRect\u0027](p: OSKRect) {\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Get position of OSK window\r\n     *\r\n     * @return      {Object.\u003cstring,number\u003e}     Array object with OSK window position\r\n    **/\r\n    getPos(): OSKPos {\r\n      var Lkbd=this._Box, p={\r\n        left: this._Visible ? Lkbd.offsetLeft : this.x,\r\n        top: this._Visible ? Lkbd.offsetTop : this.y\r\n      };\r\n\r\n      return p;\r\n    }\r\n\r\n    /**\r\n     * Function     setPos\r\n     * Scope        Private\r\n     * @param       {Object.\u003cstring,number\u003e}    p     Array object with OSK left, top\r\n     * Description  Set position of OSK window, but limit to screen, and ignore if  a touch input device\r\n     */\r\n    [\u0027setPos\u0027](p: OSKPos) {\r\n      return; // I3363 (Build 301)\r\n    }\r\n\r\n    protected setDisplayPositioning() {\r\n      let Ls = this._Box.style;\r\n\r\n      // The following code will always be executed except for externally created OSK such as EuroLatin\r\n      if(this.vkbd) {\r\n        Ls.position=\u0027fixed\u0027;\r\n        Ls.left=Ls.bottom=\u00270px\u0027;\r\n        Ls.border=\u0027none\u0027;\r\n        Ls.borderTop=\u00271px solid gray\u0027;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Allow UI to respond to OSK being shown (passing position and properties)\r\n     *\r\n     * @param       {Object=}       p     object with coordinates and userdefined flag\r\n     * @return      {boolean}\r\n     *\r\n     */\r\n    doShow(p) {\r\n      return com.keyman.singleton.util.callEvent(\u0027osk.show\u0027,p);\r\n    }\r\n\r\n    /**\r\n     * Allow UI to update respond to OSK being hidden\r\n     *\r\n     * @param       {Object=}       p     object with coordinates and userdefined flag\r\n     * @return      {boolean}\r\n     *\r\n     */\r\n    doHide(p) {\r\n      return com.keyman.singleton.util.callEvent(\u0027osk.hide\u0027,p);\r\n    }\r\n  }\r\n}\r\n","// Includes KMW-added property declaration extensions for HTML elements.\r\n/// \u003creference path=\"../kmwexthtml.ts\" /\u003e\r\n// Includes the touch-mode language picker UI.\r\n/// \u003creference path=\"languageMenu.ts\" /\u003e\r\n/// \u003creference path=\"lengthStyle.ts\" /\u003e\r\n// Defines desktop-centric OSK positioning + sizing behavior\r\n/// \u003creference path=\"layouts/targetedFloatLayout.ts\" /\u003e\r\n/// \u003creference path=\"oskView.ts\" /\u003e\r\n\r\n/***\r\n   KeymanWeb 10.0\r\n   Copyright 2017 SIL International\r\n***/\r\n\r\nnamespace com.keyman.osk {\r\n  type OSKRect = {\u0027left\u0027?: number, \u0027top\u0027?: number, \u0027width\u0027?: number, \u0027height\u0027?: number,\r\n    \u0027nosize\u0027?: boolean, \u0027nomove\u0027?: boolean};\r\n  type OSKPos = {\u0027left\u0027?: number, \u0027top\u0027?: number};\r\n\r\n  export class FloatingOSKView extends OSKView {\r\n    readonly desktopLayout: layouts.TargetedFloatLayout;\r\n\r\n    // OSK positioning fields\r\n    userPositioned: boolean = false;\r\n    specifiedPosition: boolean = false;\r\n    x: number;\r\n    y: number;\r\n    noDrag: boolean = false;\r\n    dfltX: string;\r\n    dfltY: string;\r\n\r\n    // Key code definition aliases for legacy keyboards  (They expect window[\u0027keyman\u0027][\u0027osk\u0027].___)\r\n    modifierCodes = text.Codes.modifierCodes;\r\n    modifierBitmasks = text.Codes.modifierBitmasks;\r\n    stateBitmasks = text.Codes.stateBitmasks;\r\n    keyCodes = text.Codes.keyCodes;\r\n\r\n    public constructor(modeledDevice: utils.DeviceSpec) {\r\n      super(modeledDevice);\r\n\r\n      document.body.appendChild(this._Box);\r\n\r\n      this.loadCookie();\r\n\r\n      // Add header element to OSK only for desktop browsers\r\n      const layout = this.desktopLayout = new layouts.TargetedFloatLayout();\r\n      this.headerView = layout.titleBar;\r\n      layout.titleBar.attachHandlers(this);\r\n    }\r\n\r\n    /**\r\n     * Function     _Unload\r\n     * Scope        Private\r\n     * Description  Clears OSK variables prior to exit (JMD 1.9.1 - relocation of local variables 3/9/10)\r\n     */\r\n    _Unload() {\r\n      this.keyboardView = null;\r\n      this.bannerView = null;\r\n      this._Box = null;\r\n    }\r\n\r\n    protected setBoxStyling() {\r\n      const s = this._Box.style;\r\n\r\n      s.zIndex   = \u00279999\u0027;\r\n      s.display  = \u0027none\u0027;\r\n      s.width    = \u0027auto\u0027;\r\n      s.position = \u0027absolute\u0027;\r\n    }\r\n\r\n    protected postKeyboardLoad() {\r\n      this._Visible = false;  // I3363 (Build 301)\r\n\r\n      this._Box.onmouseover = this._VKbdMouseOver;\r\n      this._Box.onmouseout = this._VKbdMouseOut;\r\n\r\n      // Add header element to OSK only for desktop browsers\r\n      const layout = this.desktopLayout;\r\n      layout.attachToView(this);\r\n      if(this.activeKeyboard) {\r\n        this.desktopLayout.titleBar.setTitleFromKeyboard(this.activeKeyboard);\r\n      }\r\n\r\n      if(this.vkbd) {\r\n        this.footerView = layout.resizeBar;\r\n        this._Box.appendChild(this.footerView.element);\r\n      } else {\r\n        if(this.footerView) {\r\n          this._Box.removeChild(this.footerView.element);\r\n        }\r\n        this.footerView = null;\r\n      }\r\n\r\n      this.loadCookie();\r\n      this.setNeedsLayout();\r\n\r\n      if(this.displayIfActive) {\r\n        this.present();\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Function     restorePosition\r\n     * Scope        Public\r\n     * @param       {boolean?}      keepDefaultPosition  If true, does not reset the default x,y set by `setRect`.\r\n     *                                                   If false or omitted, resets the default x,y as well.\r\n     * Description  Move OSK back to default position, floating under active input element\r\n     */\r\n    [\u0027restorePosition\u0027]: (keepDefaultPosition?: boolean) =\u003e void = function(this: FloatingOSKView, keepDefaultPosition?: boolean) {\r\n      let isVisible = this._Visible;\r\n      if(isVisible \u0026\u0026 this.activeTarget instanceof dom.targets.OutputTarget) {\r\n        this.activeTarget?.focus();  // I2036 - OSK does not unpin to correct location\r\n      }\r\n\r\n      this.loadCookie();\r\n      this.userPositioned=false;\r\n      if(!keepDefaultPosition) {\r\n        delete this.dfltX;\r\n        delete this.dfltY;\r\n      }\r\n      this.saveCookie();\r\n\r\n      if(isVisible) {\r\n        this.present();\r\n      }\r\n\r\n      this.doResizeMove(); //allow the UI to respond to OSK movements\r\n      this.desktopLayout.titleBar.showPin(false);\r\n    }.bind(this);\r\n\r\n    /**\r\n     * Function     enabled\r\n     * Scope        Public\r\n     * @return      {boolean|number}    True if KMW OSK enabled\r\n     * Description  Test if KMW OSK is enabled\r\n     */\r\n    [\u0027isEnabled\u0027](): boolean {\r\n      return this.displayIfActive;\r\n    }\r\n\r\n    /**\r\n     * Function     isVisible\r\n     * Scope        Public\r\n     * @return      {boolean|number}    True if KMW OSK visible\r\n     * Description  Test if KMW OSK is actually visible\r\n     * Note that this will usually return false after any UI event that results in (temporary) loss of input focus\r\n     */\r\n    [\u0027isVisible\u0027](): boolean {\r\n      return this._Visible;\r\n    }\r\n\r\n    /**\r\n     * Function     _VKbdMouseOver\r\n     * Scope        Private\r\n     * @param       {Object}      e      event\r\n     * Description  Activate the KMW UI on mouse over\r\n     */\r\n    private _VKbdMouseOver = function(this: AnchoredOSKView, e) {\r\n      com.keyman.singleton.uiManager.setActivatingUI(true);\r\n    }.bind(this);\r\n\r\n    /**\r\n     * Function     _VKbdMouseOut\r\n     * Scope        Private\r\n     * @param       {Object}      e      event\r\n     * Description  Cancel activation of KMW UI on mouse out\r\n     */\r\n    private _VKbdMouseOut = function(this: AnchoredOSKView, e) {\r\n      com.keyman.singleton.uiManager.setActivatingUI(false);\r\n    }.bind(this);\r\n\r\n    /**\r\n     * Save size, position, font size and visibility of OSK\r\n     */\r\n    saveCookie() {\r\n      let util = com.keyman.singleton.util;\r\n\r\n      var c = util.loadCookie(\u0027KeymanWeb_OnScreenKeyboard\u0027);\r\n      var p = this.getPos();\r\n\r\n      c[\u0027visible\u0027] = this.displayIfActive ? 1 : 0;\r\n      c[\u0027userSet\u0027] = this.userPositioned ? 1 : 0;\r\n      c[\u0027left\u0027] = p.left;\r\n      c[\u0027top\u0027] = p.top;\r\n      c[\u0027_version\u0027] = utils.Version.CURRENT.toString();\r\n\r\n      if(this.vkbd) {\r\n        c[\u0027width\u0027] = this.width.val;\r\n        c[\u0027height\u0027] = this.height.val;\r\n      }\r\n\r\n      util.saveCookie(\u0027KeymanWeb_OnScreenKeyboard\u0027,c);\r\n    }\r\n\r\n    /**\r\n     * Restore size, position, font size and visibility of desktop OSK\r\n     *\r\n     *  @return {boolean}\r\n     */\r\n    loadCookie(): void {\r\n      let util = com.keyman.singleton.util;\r\n\r\n      var c = util.loadCookie(\u0027KeymanWeb_OnScreenKeyboard\u0027);\r\n\r\n      this.displayIfActive = util.toNumber(c[\u0027visible\u0027], 1) == 1;\r\n      this.userPositioned = util.toNumber(c[\u0027userSet\u0027], 0) == 1;\r\n      this.x = util.toNumber(c[\u0027left\u0027],-1);\r\n      this.y = util.toNumber(c[\u0027top\u0027],-1);\r\n      let cookieVersionString = c[\u0027_version\u0027];\r\n\r\n      // Restore OSK size - font size now fixed in relation to OSK height, unless overridden (in em) by keyboard\r\n      let dfltWidth=0.3*screen.width;\r\n      let dfltHeight=0.15*screen.height;\r\n      //if(util.toNumber(c[\u0027width\u0027],0) == 0) dfltWidth=0.5*screen.width;\r\n      let newWidth  = parseInt(c[\u0027width\u0027], 10);\r\n      let newHeight = parseInt(c[\u0027height\u0027], 10);\r\n      let isNewCookie = isNaN(newHeight);\r\n      newWidth  = isNaN(newWidth)  ? dfltWidth  : newWidth;\r\n      newHeight = isNaN(newHeight) ? dfltHeight : newHeight;\r\n\r\n      // Limit the OSK dimensions to reasonable values\r\n      if(newWidth \u003c 0.2*screen.width) {\r\n        newWidth = 0.2*screen.width;\r\n      }\r\n      if(newHeight \u003c 0.1*screen.height) {\r\n        newHeight = 0.1*screen.height;\r\n      }\r\n      if(newWidth \u003e 0.9*screen.width) {\r\n        newWidth=0.9*screen.width;\r\n      }\r\n      if(newHeight \u003e 0.5*screen.height) {\r\n        newHeight=0.5*screen.height;\r\n      }\r\n\r\n      // if(!cookieVersionString) - this component was not tracked until 15.0.\r\n      // Before that point, the OSK\u0027s title bar and resize bar heights were not included\r\n      // in the OSK\u0027s cookie-persisted height.\r\n      if(isNewCookie || !cookieVersionString) {\r\n        // Adds some space to account for the OSK\u0027s header and footer, should they exist.\r\n        if(this.headerView \u0026\u0026 this.headerView.layoutHeight.absolute) {\r\n          newHeight += this.headerView.layoutHeight.val;\r\n        }\r\n\r\n        if(this.footerView \u0026\u0026 this.footerView.layoutHeight.absolute) {\r\n          newHeight += this.footerView.layoutHeight.val;\r\n        }\r\n      }\r\n\r\n      this.setSize(newWidth, newHeight);\r\n\r\n      // and OSK position if user located\r\n      if(this.x == -1 || this.y == -1 || (!this._Box)) {\r\n        this.userPositioned = false;\r\n      }\r\n\r\n      if(this.x \u003c window.pageXOffset-0.8*newWidth) {\r\n        this.x=window.pageXOffset-0.8*newWidth;\r\n      }\r\n      if(this.y \u003c 0) {\r\n        this.x=-1;\r\n        this.y=-1;\r\n        this.userPositioned=false;\r\n      }\r\n\r\n      if(this.userPositioned \u0026\u0026 this._Box) {\r\n        this.setPos({\u0027left\u0027: this.x, \u0027top\u0027: this.y});\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Get the wanted height of the OSK for touch devices (does not include banner height)\r\n     *  @return   {number}    height in pixels\r\n     **/\r\n    getDefaultKeyboardHeight(): number {\r\n      let keymanweb = com.keyman.singleton;\r\n      let device = keymanweb.util.device;\r\n\r\n      // KeymanTouch - get OSK height from device\r\n      if(typeof(keymanweb[\u0027getOskHeight\u0027]) == \u0027function\u0027) {\r\n        return keymanweb[\u0027getOskHeight\u0027]();\r\n      }\r\n\r\n      var oskHeightLandscapeView=Math.floor(Math.min(screen.availHeight,screen.availWidth)/2),\r\n          height=oskHeightLandscapeView;\r\n\r\n      if(device.formFactor == \u0027phone\u0027) {\r\n        var sx=Math.min(screen.height,screen.width),\r\n            sy=Math.max(screen.height,screen.width);\r\n\r\n        if(keymanweb.util.portraitView())\r\n          height=Math.floor(Math.max(screen.availHeight,screen.availWidth)/3);\r\n        else\r\n          height=height*(sy/sx)/1.6;  //adjust for aspect ratio, increase slightly for iPhone 5\r\n      }\r\n\r\n      // Correct for viewport scaling (iOS - Android 4.2 does not want this, at least on Galaxy Tab 3))\r\n      if(device.OS == \u0027iOS\u0027) {\r\n        height=height/keymanweb.util.getViewportScale();\r\n      }\r\n\r\n      return height;\r\n    }\r\n\r\n    /**\r\n     * Get the wanted width of the OSK for touch devices\r\n     *\r\n     *  @return   {number}    height in pixels\r\n     **/\r\n    getDefaultWidth(): number {\r\n      let keymanweb = com.keyman.singleton;\r\n      let device = keymanweb.util.device;\r\n\r\n      // KeymanTouch - get OSK height from device\r\n      if(typeof(keymanweb[\u0027getOskWidth\u0027]) == \u0027function\u0027) {\r\n        return keymanweb[\u0027getOskWidth\u0027]();\r\n      }\r\n\r\n      var width: number;\r\n      if(device.OS == \u0027iOS\u0027) {\r\n        // iOS does not interchange these values when the orientation changes!\r\n        //width = util.portraitView() ? screen.width : screen.height;\r\n        width = window.innerWidth;\r\n      } else if(device.OS == \u0027Android\u0027) {\r\n        try {\r\n          width=document.documentElement.clientWidth;\r\n        } catch(ex) {\r\n          width=screen.availWidth;\r\n        }\r\n      } else {\r\n        width=screen.width;\r\n      }\r\n\r\n      return width;\r\n    }\r\n\r\n    /**\r\n     * Allow UI to update OSK position and properties\r\n     *\r\n     * @param       {Object=}     p       object with coordinates and userdefined flag\r\n     *\r\n     */\r\n    doResizeMove(p?) {\r\n      return com.keyman.singleton.util.callEvent(\u0027osk.resizemove\u0027,p);\r\n    }\r\n\r\n    /**\r\n     * Allow the UI or page to set the position and size of the OSK\r\n     * and (optionally) override user repositioning or sizing\r\n     *\r\n     * @param       {Object.\u003cstring,number\u003e}   p  Array object with position and size of OSK container\r\n    **/\r\n    [\u0027setRect\u0027](p: OSKRect) {\r\n      let util = com.keyman.singleton.util;\r\n      if(this._Box == null || util.device.formFactor != \u0027desktop\u0027) {\r\n        return;\r\n      }\r\n\r\n      var b = this._Box, bs = b.style;\r\n      if(\u0027left\u0027 in p) {\r\n        this.x = p[\u0027left\u0027] - dom.Utils.getAbsoluteX(b) + b.offsetLeft;\r\n        bs.left= this.x + \u0027px\u0027;\r\n        this.dfltX=bs.left;\r\n      }\r\n\r\n      if(\u0027top\u0027 in p) {\r\n        this.y = p[\u0027top\u0027] - dom.Utils.getAbsoluteY(b) + b.offsetTop;\r\n        bs.top = this.y + \u0027px\u0027;\r\n        this.dfltY=bs.top;\r\n      }\r\n\r\n      //Do not allow user resizing for non-standard keyboards (e.g. EuroLatin)\r\n      if(this.vkbd != null) {\r\n        var d=this.vkbd.kbdDiv, ds=d.style;\r\n\r\n        // Set width, but limit to reasonable value\r\n        if(\u0027width\u0027 in p) {\r\n          var w=(p[\u0027width\u0027]-(b.offsetWidth-d.offsetWidth));\r\n          if(w \u003c 0.2*screen.width) {\r\n            w=0.2*screen.width;\r\n          }\r\n          if(w \u003e 0.9*screen.width) {\r\n            w=0.9*screen.width;\r\n          }\r\n          ds.width=w+\u0027px\u0027;\r\n          // Use of the `computed` variant is here temporary.\r\n          // Shouldn\u0027t use `setSize` for this in the long-term.\r\n          this.setSize(w, this.computedHeight, true);\r\n        }\r\n\r\n        // Set height, but limit to reasonable value\r\n        // This sets the default font size for the OSK in px, but that\r\n        // can be modified at the key text level by setting\r\n        // the font size in em in the kmw-key-text class\r\n        if(\u0027height\u0027 in p) {\r\n          var h=(p[\u0027height\u0027]-(b.offsetHeight-d.offsetHeight));\r\n          if(h \u003c 0.1*screen.height) {\r\n            h=0.1*screen.height;\r\n          }\r\n          if(h \u003e 0.5*screen.height) {\r\n            h=0.5*screen.height;\r\n          }\r\n          ds.height=h+\u0027px\u0027; ds.fontSize=(h/8)+\u0027px\u0027;\r\n          // Use of the `computed` variant is here temporary.\r\n          // Shouldn\u0027t use `setSize` for this in the long-term.\r\n          this.setSize(this.computedWidth, h, true);\r\n        }\r\n\r\n        // Fix or release user resizing\r\n        if(\u0027nosize\u0027 in p) {\r\n          this.desktopLayout.resizingEnabled = !p[\u0027nosize\u0027];\r\n        }\r\n\r\n      }\r\n      // Fix or release user dragging\r\n      if(\u0027nomove\u0027 in p) {\r\n        this.noDrag=p[\u0027nomove\u0027];\r\n        this.desktopLayout.movementEnabled = !this.noDrag;\r\n      }\r\n      // Save the user-defined OSK size\r\n      this.saveCookie();\r\n    }\r\n\r\n    /**\r\n     * Get position of OSK window\r\n     *\r\n     * @return      {Object.\u003cstring,number\u003e}     Array object with OSK window position\r\n    **/\r\n    getPos(): OSKPos {\r\n      var Lkbd=this._Box, p={\r\n        left: this._Visible ? Lkbd.offsetLeft : this.x,\r\n        top: this._Visible ? Lkbd.offsetTop : this.y\r\n      };\r\n\r\n      return p;\r\n    }\r\n\r\n    /**\r\n     * Function     setPos\r\n     * Scope        Private\r\n     * @param       {Object.\u003cstring,number\u003e}    p     Array object with OSK left, top\r\n     * Description  Set position of OSK window, but limit to screen, and ignore if  a touch input device\r\n     */\r\n    [\u0027setPos\u0027](p: OSKPos) {\r\n      if(typeof(this._Box) == \u0027undefined\u0027) {\r\n        return; // I3363 (Build 301)\r\n      }\r\n\r\n      if(this.userPositioned) {\r\n        var Px=p[\u0027left\u0027], Py=p[\u0027top\u0027];\r\n\r\n        if(typeof(Px) != \u0027undefined\u0027) {\r\n          if(Px \u003c -0.8*this._Box.offsetWidth) {\r\n            Px = -0.8*this._Box.offsetWidth;\r\n          }\r\n          if(this.userPositioned) {\r\n            this._Box.style.left=Px+\u0027px\u0027;\r\n            this.x = Px;\r\n          }\r\n        }\r\n        // May not be needed - vertical positioning is handled differently and defaults to input field if off screen\r\n        if(typeof(Py) != \u0027undefined\u0027) {\r\n          if(Py \u003c 0) {\r\n            Py = 0;\r\n          }\r\n\r\n          if(this.userPositioned) {\r\n            this._Box.style.top=Py+\u0027px\u0027;\r\n            this.y = Py;\r\n          }\r\n        }\r\n      }\r\n\r\n      if(this.desktopLayout) {\r\n        this.desktopLayout.titleBar.showPin(this.userPositioned);\r\n      }\r\n    }\r\n\r\n    public setDisplayPositioning() {\r\n      var Ls = this._Box.style;\r\n\r\n      Ls.position=\u0027absolute\u0027; Ls.display=\u0027block\u0027; //Ls.visibility=\u0027visible\u0027;\r\n      Ls.left=\u00270px\u0027;\r\n      if(this.specifiedPosition || this.userPositioned) {\r\n        Ls.left = this.x+\u0027px\u0027;\r\n        Ls.top  = this.y+\u0027px\u0027;\r\n      } else {\r\n        let el: HTMLElement = null;\r\n        if(this.activeTarget instanceof dom.targets.OutputTarget) {\r\n          el = this.activeTarget?.getElement();\r\n        }\r\n\r\n        if(this.dfltX) {\r\n          Ls.left=this.dfltX;\r\n        } else if(typeof el != \u0027undefined\u0027 \u0026\u0026 el != null) {\r\n          Ls.left=dom.Utils.getAbsoluteX(el) + \u0027px\u0027;\r\n        }\r\n\r\n        if(this.dfltY) {\r\n          Ls.top=this.dfltY;\r\n        } else if(typeof el != \u0027undefined\u0027 \u0026\u0026 el != null) {\r\n          Ls.top=(dom.Utils.getAbsoluteY(el) + el.offsetHeight)+\u0027px\u0027;\r\n        }\r\n      }\r\n\r\n      // Unset the flag, keeping \u0027specified position\u0027 specific to single\r\n      // presentAtPosition calls.\r\n      this.specifiedPosition = false;\r\n    }\r\n\r\n    /**\r\n     * Display KMW OSK at specified position (returns nothing)\r\n     *\r\n     * @param       {number=}     Px      x-coordinate for OSK rectangle\r\n     * @param       {number=}     Py      y-coordinate for OSK rectangle\r\n     */\r\n    presentAtPosition(Px?: number, Py?: number) {\r\n      if(!this.mayShow()) {\r\n        return;\r\n      }\r\n\r\n      this.specifiedPosition = Px \u003e= 0 || Py \u003e= 0; //probably never happens, legacy support only\r\n      if(this.specifiedPosition) {\r\n        this.x = Px;\r\n        this.y = Py;\r\n      }\r\n\r\n      // Combines the two paths with set positioning.\r\n      this.specifiedPosition = this.specifiedPosition || this.userPositioned;\r\n\r\n      this.present();\r\n    }\r\n\r\n    present() {\r\n      if(!this.mayShow()) {\r\n        return;\r\n      }\r\n\r\n      this.desktopLayout.titleBar.showPin(this.userPositioned);\r\n\r\n      super.present();\r\n\r\n      // Allow desktop UI to execute code when showing the OSK\r\n      var Lpos={};\r\n      Lpos[\u0027x\u0027]=this._Box.offsetLeft;\r\n      Lpos[\u0027y\u0027]=this._Box.offsetTop;\r\n      Lpos[\u0027userLocated\u0027]=this.userPositioned;\r\n      this.doShow(Lpos);\r\n    }\r\n\r\n    public startHide(hiddenByUser: boolean) {\r\n      super.startHide(hiddenByUser);\r\n\r\n      if(hiddenByUser) {\r\n        this.saveCookie();  // Save current OSK state, size and position (desktop only)\r\n      }\r\n    }\r\n\r\n    [\u0027show\u0027](bShow: boolean) {\r\n      super[\u0027show\u0027](bShow);\r\n      this.saveCookie();\r\n    }\r\n\r\n    /**\r\n     * Function     userPositioned\r\n     * Scope        Public\r\n     * @return      {(boolean|number)}          true if user located\r\n     * Description  Test if OSK window has been repositioned by user\r\n     */\r\n    [\u0027userLocated\u0027]() {\r\n      return this.userPositioned;\r\n    }\r\n  }\r\n}\r\n","// Includes KMW-added property declaration extensions for HTML elements.\r\n/// \u003creference path=\"../kmwexthtml.ts\" /\u003e\r\n// Includes the touch-mode language picker UI.\r\n/// \u003creference path=\"languageMenu.ts\" /\u003e\r\n/// \u003creference path=\"lengthStyle.ts\" /\u003e\r\n// Defines desktop-centric OSK positioning + sizing behavior\r\n/// \u003creference path=\"layouts/targetedFloatLayout.ts\" /\u003e\r\n/// \u003creference path=\"oskView.ts\" /\u003e\r\n\r\n/*\r\n * Keyman is copyright (c) SIL International.  MIT License.\r\n */\r\n\r\nnamespace com.keyman.osk {\r\n  type OSKPos = {\u0027left\u0027?: number, \u0027top\u0027?: number};\r\n\r\n  /**\r\n   * Defines a version of the OSK that produces an element designed for site-controlled\r\n   * insertion into the DOM.  Rather than \"floating\" over the page, this version is inlined\r\n   * as part of the host page\u0027s layout.\r\n   */\r\n  export class InlinedOSKView extends OSKView {\r\n    // Key code definition aliases for legacy keyboards  (They expect window[\u0027keyman\u0027][\u0027osk\u0027].___)\r\n    modifierCodes = text.Codes.modifierCodes;\r\n    modifierBitmasks = text.Codes.modifierBitmasks;\r\n    stateBitmasks = text.Codes.stateBitmasks;\r\n    keyCodes = text.Codes.keyCodes;\r\n\r\n    public constructor(modeledDevice: utils.DeviceSpec, hostDevice?: utils.DeviceSpec) {\r\n      super(modeledDevice, hostDevice);\r\n\r\n      this.activationMode = ActivationMode.manual;\r\n    }\r\n\r\n    public get element(): HTMLDivElement {\r\n      return this._Box;\r\n    }\r\n\r\n    /**\r\n     * Clears OSK variables prior to exit (JMD 1.9.1 - relocation of local variables 3/9/10)\r\n     * \r\n     * This should probably be merged or incorporated into the `shutdown` method at some point.\r\n     */\r\n    _Unload() {\r\n      this.keyboardView = null;\r\n      this.bannerView = null;\r\n      this._Box = null;\r\n    }\r\n\r\n    protected setBoxStyling() {\r\n      const s = this._Box.style;\r\n      s.display  = \u0027none\u0027;\r\n      // Positioned with no relative offset from its default position.\r\n      // This allows _Box to still serve as an offsetParent for keytip \u0026 subkey menu positioning.\r\n      s.position = \u0027relative\u0027;\r\n    }\r\n\r\n    protected postKeyboardLoad() {\r\n      this._Visible = false;  // I3363 (Build 301)\r\n\r\n      this._Box.onmouseover = this._VKbdMouseOver;\r\n      this._Box.onmouseout = this._VKbdMouseOut;\r\n\r\n      if(this.displayIfActive) {\r\n        this.present();\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Moves the OSK back to default position, floating under active input element\r\n     * \r\n     * Is a long-published API intended solely for use with the FloatingOSKView use pattern.\r\n     * @param  keepDefaultPosition  If true, does not reset the default x,y set by `setRect`.\r\n     *                              If false or omitted, resets the default x,y as well.\r\n     */\r\n    [\u0027restorePosition\u0027]: (keepDefaultPosition?: boolean) =\u003e void = function(this: AnchoredOSKView, keepDefaultPosition?: boolean) {\r\n      return;\r\n    }.bind(this);\r\n\r\n    /**\r\n     * Activates the KMW UI on mouse over, allowing DOMManager to preserve the\r\n     * active element\u0027s (conceptual) focus during OSK interactions.\r\n     */\r\n    private _VKbdMouseOver = function(this: AnchoredOSKView, e) {\r\n      com.keyman.singleton.uiManager.setActivatingUI(true);\r\n    }.bind(this);\r\n\r\n    /**\r\n     * Cancels activation of the KMW UI on mouse out, which is used to disable\r\n     * DOMManager\u0027s focus-preservation mode.\r\n     * \r\n     * @see _VKbdMouseOver\r\n     */\r\n    private _VKbdMouseOut = function(this: AnchoredOSKView, e) {\r\n      com.keyman.singleton.uiManager.setActivatingUI(false);\r\n    }.bind(this);\r\n\r\n    /**\r\n     * Get the default height for the OSK\r\n     * @return  height in pixels\r\n     **/\r\n    getDefaultKeyboardHeight(): number {\r\n      if(this.keyboardView instanceof VisualKeyboard) {\r\n        return this.keyboardView.height;\r\n      } else {\r\n        // Should probably refine, but it\u0027s a decent stopgap.\r\n        return this.computedHeight;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Get the default width for the OSK\r\n     * @return width in pixels\r\n     **/\r\n    getDefaultWidth(): number {\r\n      return this.computedWidth;\r\n    }\r\n\r\n    /**\r\n     * Allow the UI or page to set the position and size of the OSK\r\n     * and (optionally) override user repositioning or sizing\r\n     * \r\n     * Designed solely for use with the FloatingOSKView use pattern, but is a\r\n     * long-standing API endpoint that needs preservation.\r\n     *\r\n     * @param  p  Array object with position and size of OSK container\r\n    **/\r\n    [\u0027setRect\u0027](p: OSKRect) {\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Get position of OSK window\r\n     *\r\n     * @return Array object with OSK window position\r\n    **/\r\n    getPos(): OSKPos {\r\n      var Lkbd=this._Box, p={\r\n        left: this._Visible ? Lkbd.offsetLeft : undefined,\r\n        top:  this._Visible ? Lkbd.offsetTop  : undefined\r\n      };\r\n\r\n      return p;\r\n    }\r\n\r\n    /**\r\n     * Set position of OSK window, but limited to the screen.\r\n     * \r\n     * Designed solely for use with the FloatingOSKView use pattern, but is a\r\n     * long-standing API endpoint that needs preservation.\r\n     * @param  p Array object with OSK left, top\r\n     */\r\n    [\u0027setPos\u0027](p: OSKPos) {\r\n      return; // I3363 (Build 301)\r\n    }\r\n\r\n    protected setDisplayPositioning() {\r\n      // no-op; an inlined OSK cannot control its own positioning.\r\n    }\r\n\r\n    /**\r\n     * Allow UI to respond to OSK being shown (passing position and properties)\r\n     *\r\n     * @param  p  object with coordinates and userdefined flag\r\n     * @return \r\n     *\r\n     */\r\n    doShow(p) {\r\n      return com.keyman.singleton.util.callEvent(\u0027osk.show\u0027,p);\r\n    }\r\n\r\n    /**\r\n     * Allows UI modules to update state when the OSK is being hidden\r\n     *\r\n     * @param  p  object with coordinates and userdefined flag\r\n     * @return \r\n     */\r\n    doHide(p) {\r\n      return com.keyman.singleton.util.callEvent(\u0027osk.hide\u0027,p);\r\n    }\r\n\r\n    protected allowsDeviceChange(newSpec: com.keyman.utils.DeviceSpec): boolean {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","// Defines the KeyboardManager and its related types.\r\n///\u003creference path=\"../../keyboards/kmwkeyboards.ts\" /\u003e\r\n\r\nnamespace com.keyman.text.prediction {\r\n  export class ModelManager {\r\n    // Tracks registered models by ID.\r\n    private registeredModels: {[id: string]: ModelSpec} = {};\r\n\r\n    // Allows for easy model lookup by language code; useful when switching keyboards.\r\n    languageModelMap: {[language:string]: ModelSpec} = {};\r\n\r\n    init() {\r\n      let keyman = com.keyman.singleton;\r\n\r\n      // Registers this module for keyboard (language) and model change events.\r\n      keyman[\u0027addEventListener\u0027](\u0027keyboardchange\u0027, this.onKeyboardChange.bind(this));\r\n    }\r\n\r\n    onKeyboardChange(kbdInfo?: keyboards.KeyboardChangeData | string) {\r\n      let keyman = com.keyman.singleton;\r\n      let core = keyman.core;\r\n\r\n      if(typeof kbdInfo == \u0027string\u0027) {  // This case refers to the active language code.\r\n        kbdInfo = {\r\n          [\u0027internalName\u0027]: keyman.keyboardManager.getActiveKeyboardName(),\r\n          [\u0027languageCode\u0027]: kbdInfo,\r\n          [\u0027indirect\u0027]: true\r\n        }\r\n      }\r\n\r\n      let lgCode = kbdInfo[\u0027languageCode\u0027];\r\n      let model = this.languageModelMap[lgCode];\r\n      var loadPromise: Promise\u003cvoid\u003e;\r\n\r\n      if(core.activeModel) {\r\n        core.languageProcessor.unloadModel();\r\n      }\r\n\r\n      if(model) {\r\n        loadPromise = core.languageProcessor.loadModel(model);\r\n      }\r\n    }\r\n\r\n    // Accessible publicly as keyman.modelManager.register(model: ModelSpec)\r\n    register(model: ModelSpec): void {\r\n      let keyman = com.keyman.singleton;\r\n      let activeLanguage = keyman.keyboardManager.getActiveLanguage();\r\n\r\n      if(JSON.stringify(model) == JSON.stringify(this.registeredModels[model.id])) {\r\n        // We are already registered, let\u0027s not go through and re-register\r\n        // because we\u0027ll already have the correct model active\r\n        return;\r\n      }\r\n      this.registeredModels[model.id] = model;\r\n\r\n      // Register the model for each targeted language code variant.\r\n      let mm = this;\r\n      model.languages.forEach(function(code: string) {\r\n        mm.languageModelMap[code] = model;\r\n\r\n        // The model\u0027s for our active language!  Activate it!\r\n        if(code == activeLanguage) {\r\n          // Manually trigger our model-update event function.\r\n          mm.onKeyboardChange(code);\r\n        }\r\n      });\r\n    }\r\n\r\n    deregister(modelId: string): void {\r\n      let keyman = com.keyman.singleton;\r\n      let core = keyman.core;\r\n      let model: ModelSpec;\r\n\r\n      // Remove the model from the id-lookup associative array.\r\n      if(this.registeredModels[modelId]) {\r\n        model = this.registeredModels[modelId];\r\n        delete this.registeredModels[modelId];\r\n      } else {\r\n        return;\r\n      }\r\n\r\n      // Is it the active model?\r\n      if(core.activeModel \u0026\u0026 core.activeModel.id == modelId) {\r\n        core.languageProcessor.unloadModel();\r\n      }\r\n\r\n      // Ensure the model is deregistered for each targeted language code variant.\r\n      let mm = this;\r\n      model.languages.forEach(function(code: string) {\r\n        if(mm.languageModelMap[code].id == modelId) {\r\n          delete mm.languageModelMap[code];\r\n        }\r\n      });\r\n    }\r\n\r\n    isRegistered(model: ModelSpec): boolean {\r\n      return !! this.registeredModels[model.id];\r\n    }\r\n  }\r\n}\r\n","// Includes KMW-added property declaration extensions for HTML elements.\r\n/// \u003creference path=\"kmwexthtml.ts\" /\u003e\r\n// Defines the web-page interface object.\r\n/// \u003creference path=\"singleton.ts\" /\u003e\r\n// Extends KeyboardInterface with DOM-oriented offerings.\r\n/// \u003creference path=\"text/domKbdInterface.ts\" /\u003e\r\n// Defines the web-page interface object.\r\n/// \u003creference path=\"dom/domManager.ts\" /\u003e\r\n// Includes KMW-added property declaration extensions for HTML elements.\r\n/// \u003creference path=\"kmwutils.ts\" /\u003e\r\n// Defines keyboard management classes.\r\n/// \u003creference path=\"keyboards/kmwkeyboards.ts\" /\u003e\r\n// Defines KMW\u0027s hotkey management object.\r\n/// \u003creference path=\"kmwhotkeys.ts\" /\u003e\r\n// Defines the ui management code that tracks UI activation and such.\r\n/// \u003creference path=\"kmwuimanager.ts\" /\u003e\r\n// Defines OSK management code.\r\n/// \u003creference path=\"osk/anchoredOskView.ts\" /\u003e\r\n/// \u003creference path=\"osk/floatingOskView.ts\" /\u003e\r\n/// \u003creference path=\"osk/inlinedOskView.ts\" /\u003e\r\n// Defines the model manager.\r\n/// \u003creference path=\"text/prediction/modelManager.ts\" /\u003e\r\n\r\n/***\r\n   KeymanWeb 14.0\r\n   Copyright 2017-2021 SIL International\r\n***/\r\nnamespace com.keyman {\r\n\r\n  export enum SpacebarText {\r\n    KEYBOARD = \u0027keyboard\u0027,\r\n    LANGUAGE = \u0027language\u0027,\r\n    LANGUAGE_KEYBOARD = \u0027languageKeyboard\u0027,\r\n    BLANK = \u0027blank\u0027\r\n  };\r\n\r\n  export interface OptionType {\r\n    root?: string;\r\n    resources?: string;\r\n    keyboards?: string;\r\n    fonts?: string;\r\n    attachType?: \u0027auto\u0027 | \u0027manual\u0027 | \u0027\u0027; // If blank or undefined, attachType will be assigned to \"auto\" or \"manual\"\r\n    ui?: string;\r\n    setActiveOnRegister?: string; // TODO: Convert to boolean. Option loader needs to be able to receive this as a string or boolean\r\n\r\n    // Determines the default text shown on the spacebar, if undefined, LANGUAGE_KEYBOARD\r\n    spacebarText?: SpacebarText;\r\n\r\n    // Determines whether or not KeymanWeb should display its own alert messages\r\n    useAlerts?: boolean;\r\n  }\r\n\r\n  export class KeymanBase {\r\n    _MasterDocument = null;    // Document with controller (to allow iframes to distinguish local/master control)\r\n    _HotKeys = [];             // Array of document-level hotkey objects\r\n    warned = false;            // Warning flag (to prevent multiple warnings)\r\n    baseFont = \u0027sans-serif\u0027;   // Default font for mapped input elements\r\n    appliedFont = \u0027\u0027;          // Chain of fonts to be applied to mapped input elements\r\n    fontCheckTimer = null;     // Timer for testing loading of embedded fonts\r\n    srcPath = \u0027\u0027;              // Path to folder containing executing keymanweb script\r\n    rootPath = \u0027\u0027;             // Path to server root\r\n    protocol = \u0027\u0027;             // Protocol used for the KMW script.\r\n    mustReloadKeyboard = false;// Force keyboard refreshing even if already loaded\r\n    globalKeyboard = null;     // Indicates the currently-active keyboard for controls without independent keyboard settings.\r\n    globalLanguageCode = null; // Indicates the language code corresponding to `globalKeyboard`.\r\n    isEmbedded = false;        // Indicates if the KeymanWeb instance is embedded within a mobile app.\r\n                               // Blocks full page initialization when set to `true`.\r\n    refocusTimer = 0;          // Tracks a timeout event that aids of OSK modifier/state key tracking when the document loses focus.\r\n\r\n    initialized: number;       // Signals the initialization state of the KeymanWeb system.\r\n    isHeadless = false;        // Indicates that KMW lacks any access to the DOM.  Nothing yet implemented for \u0027= true\u0027.\r\n    \u0027build\u0027 = 300;             // TS needs this to be defined within the class.\r\n    _BrowserIsSafari: boolean; // A legacy browser-check variable.\r\n\r\n    // Used as placeholders during initialization.\r\n    // The corresponding class properties should be dropped after a refactor;\r\n    // this is an intermediate solution while doing the big conversion.\r\n    static _srcPath: string;\r\n    static _rootPath: string;\r\n    static _protocol: string;\r\n\r\n    // Internal objects\r\n    [\u0027util\u0027]: Util;\r\n    [\u0027osk\u0027]: com.keyman.osk.OSKView;\r\n    [\u0027ui\u0027]: any;\r\n    keyboardManager: keyboards.KeyboardManager;\r\n    domManager: dom.DOMManager;\r\n    hotkeyManager: HotkeyManager;\r\n    uiManager: UIManager;\r\n    core: text.InputProcessor;\r\n    modelManager: text.prediction.ModelManager;\r\n\r\n    touchAliasing: dom.DOMEventHandlers;\r\n\r\n    // Defines default option values\r\n    options: OptionType = {\r\n      root: \u0027\u0027,\r\n      resources: \u0027\u0027,\r\n      keyboards: \u0027\u0027,\r\n      fonts: \u0027\u0027,\r\n      attachType: \u0027\u0027,\r\n      ui: null,\r\n      setActiveOnRegister: \u0027true\u0027, // TODO: convert to boolean\r\n      spacebarText: SpacebarText.LANGUAGE_KEYBOARD,\r\n\r\n      // Determines whether or not KeymanWeb should display its own alert messages\r\n      useAlerts: true\r\n    };\r\n\r\n    // Stub functions (defined later in code only if required)\r\n    setDefaultDeviceOptions(opt: OptionType){}\r\n    getStyleSheetPath(s){return s;}\r\n    getKeyboardPath(f, p?){return f;}\r\n    KC_(n, ln, Pelem){return \u0027\u0027;}\r\n    handleRotationEvents(){}\r\n    // Will serve as an API function for a workaround, in case of future touch-alignment issues.\r\n    [\u0027alignInputs\u0027](eleList?: HTMLElement[]){}\r\n    hideInputs() {};\r\n    namespaceID(Pstub) {};\r\n    preserveID(Pk) {};\r\n\r\n    setInitialized(val: number) {\r\n      this.initialized = this[\u0027initialized\u0027] = val;\r\n    }\r\n\r\n    refreshElementContent = null;\r\n\r\n    // -------------\r\n\r\n    constructor() {\r\n      // Allow internal minification of the public modules.\r\n      this.util = this[\u0027util\u0027] = new Util(this);\r\n      this.ui = this[\u0027ui\u0027] = {};\r\n\r\n      this.keyboardManager = new keyboards.KeyboardManager(this);\r\n      this.domManager = new dom.DOMManager(this);\r\n      this.hotkeyManager = new HotkeyManager(this);\r\n      this.uiManager = new UIManager(this);\r\n\r\n      // I732 START - Support for European underlying keyboards #1\r\n      var baseLayout: string;\r\n      if(typeof(window[\u0027KeymanWeb_BaseLayout\u0027]) !== \u0027undefined\u0027) {\r\n        baseLayout = window[\u0027KeymanWeb_BaseLayout\u0027];\r\n      } else {\r\n        baseLayout = \u0027us\u0027;\r\n      }\r\n      this._BrowserIsSafari = (navigator.userAgent.indexOf(\u0027AppleWebKit\u0027) \u003e= 0);  // I732 END - Support for European underlying keyboards #1\r\n\r\n      this.core = new text.InputProcessor(this.util.device.coreSpec, {\r\n        baseLayout: baseLayout,\r\n        variableStoreSerializer: new dom.VariableStoreCookieSerializer()\r\n      });\r\n\r\n      // Used by the embedded apps.\r\n      this[\u0027interface\u0027] = this.core.keyboardInterface;\r\n\r\n      this.modelManager = new text.prediction.ModelManager();\r\n      this.osk = this[\u0027osk\u0027] = null;\r\n\r\n      // Load properties from their static variants.\r\n      this[\u0027build\u0027] = Number.parseInt(com.keyman.KEYMAN_VERSION.VERSION_PATCH, 10);\r\n      this.srcPath = KeymanBase._srcPath;\r\n      this.rootPath = KeymanBase._rootPath;\r\n      this.protocol = KeymanBase._protocol;\r\n\r\n      this[\u0027version\u0027] = com.keyman.KEYMAN_VERSION.VERSION_RELEASE;\r\n      this[\u0027helpURL\u0027] = \u0027http://help.keyman.com/go\u0027;\r\n      this.setInitialized(0);\r\n\r\n      // Signals that a KMW load has occurred in order to prevent double-loading.\r\n      this[\u0027loaded\u0027] = true;\r\n    }\r\n\r\n    delayedInit() {\r\n      // Track the selected Event-handling object.\r\n      this.touchAliasing = this.util.device.touchable ? this.domManager.touchHandlers : this.domManager.nonTouchHandlers;\r\n    }\r\n\r\n    /**\r\n     * Triggers a KeymanWeb engine shutdown to facilitate a full system reset.\r\n     * This function is designed for use with KMW unit-testing, which reloads KMW\r\n     * multiple times to test the different initialization paths.\r\n     */\r\n    [\u0027shutdown\u0027]() {\r\n      // Disable page focus/blur events, which can sometimes trigger and cause parallel KMW instances in testing.\r\n      this.util.detachDOMEvent(window, \u0027focus\u0027, this[\u0027pageFocusHandler\u0027], false);\r\n      this.util.detachDOMEvent(window, \u0027blur\u0027, this[\u0027pageFocusHandler\u0027], false);\r\n\r\n      this.domManager.shutdown();\r\n      this.osk.shutdown();\r\n      this.util.shutdown();\r\n      this.keyboardManager.shutdown();\r\n      this.core.languageProcessor.shutdown();\r\n\r\n      if(this.ui \u0026\u0026 this.ui.shutdown) {\r\n        this.ui.shutdown();\r\n      }\r\n\r\n      dom.DOMEventHandlers.states = new dom.CommonDOMStates();\r\n    }\r\n\r\n    /**\r\n     * Returns a generalized metadata object about the state of KMW for use with error reporting.\r\n     */\r\n    [\u0027getDebugInfo\u0027]() {\r\n      let metadata = {\r\n        attachType: this.options.attachType,\r\n        device: this.util.device,\r\n        initialized: this.initialized,\r\n        isEmbedded: this.isEmbedded,\r\n        ui: this.ui ? this.ui.name : null\r\n      }\r\n\r\n      if(this.util.device.touchable) {\r\n        metadata.ui = \u0027touch\u0027;\r\n      }\r\n\r\n      return metadata;\r\n    }\r\n\r\n    /**\r\n     * Expose font testing to allow checking that SpecialOSK or custom font has\r\n     * been correctly loaded by browser\r\n     *\r\n     *  @param  {string}  fName   font-family name\r\n     *  @return {boolean}         true if available\r\n     **/\r\n    [\u0027isFontAvailable\u0027](fName: string): boolean {\r\n      return this.util.checkFont({\u0027family\u0027:fName});\r\n    }\r\n\r\n    /**\r\n     * Function     addEventListener\r\n     * Scope        Public\r\n     * @param       {string}            event     event to handle\r\n     * @param       {function(Event)}   func      event handler function\r\n     * @return      {boolean}                     value returned by util.addEventListener\r\n     * Description  Wrapper function to add and identify KeymanWeb-specific event handlers\r\n     */\r\n    [\u0027addEventListener\u0027](event: string, func): boolean {\r\n      return this.util.addEventListener(\u0027kmw.\u0027+event, func);\r\n    }\r\n\r\n    /**\r\n     * Function     _push\r\n     * Scope        Private\r\n     * @param       {Array}     Parray    Array\r\n     * @param       {*}         Pval      Value to be pushed or appended to array\r\n     * @return      {Array}               Returns extended array\r\n     * Description  Push (if possible) or append a value to an array\r\n     */\r\n    _push\u003cT\u003e(Parray: T[], Pval: T) {\r\n      if(Parray.push) {\r\n        Parray.push(Pval);\r\n      } else {\r\n        Parray=Parray.concat(Pval);\r\n      }\r\n      return Parray;\r\n    }\r\n\r\n    // Base object API definitions\r\n\r\n    /**\r\n     * Function     attachToControl\r\n     * Scope        Public\r\n     * @param       {Element}    Pelem       Element to which KMW will be attached\r\n     * Description  Attaches KMW to control (or IFrame)\r\n     */\r\n    [\u0027attachToControl\u0027](Pelem: HTMLElement) {\r\n      this.domManager.attachToControl(Pelem);\r\n    }\r\n\r\n    /**\r\n     * Function     detachFromControl\r\n     * Scope        Public\r\n     * @param       {Element}    Pelem       Element from which KMW will detach\r\n     * Description  Detaches KMW from a control (or IFrame)\r\n     */\r\n    [\u0027detachFromControl\u0027](Pelem: HTMLElement) {\r\n      this.domManager.detachFromControl(Pelem);\r\n    }\r\n\r\n    /**\r\n     * Exposed function to load keyboards by name. One or more arguments may be used\r\n     *\r\n     * @param {any[]} args keyboard name string or keyboard metadata JSON object\r\n     * @returns {Promise\u003c(KeyboardStub|ErrorStub)[]\u003e} Promise of added keyboard/error stubs\r\n     *\r\n     */\r\n    [\u0027addKeyboards\u0027](...args: any[]) :\r\n        Promise\u003c(com.keyman.keyboards.KeyboardStub|com.keyman.keyboards.ErrorStub)[]\u003e {\r\n      if (!args || !args[0] || args[0].length == 0) {\r\n        // Get the cloud keyboard catalog\r\n        return this.keyboardManager.keymanCloudRequest(\u0027\u0027,false).catch(error =\u003e {\r\n          console.error(error);\r\n          return Promise.reject([{error: error}]);\r\n        });\r\n      } else {\r\n        let x: (string|com.keyman.keyboards.KeyboardStub)[] = [];\r\n        if (Array.isArray(args[0])) {\r\n          args[0].forEach(a =\u003e\r\n            x.push(a));\r\n        } else if (Array.isArray(args)) {\r\n          args.forEach(a =\u003e\r\n            x.push(a));\r\n        } else {\r\n          x.push(args);\r\n        }\r\n        return this.keyboardManager.addKeyboardArray(x);\r\n      }\r\n    }\r\n\r\n    /**\r\n     *  Add default keyboards for given language(s)\r\n     *\r\n     *  @param  {string|string[]}   arg    Language name (multiple arguments allowed)\r\n     *  @returns {Promise\u003c(KeyboardStub|ErrorStub)[]\u003e} Promise of added keyboard/error stubs\r\n     **/\r\n    [\u0027addKeyboardsForLanguage\u0027](arg: string[]|string) : Promise\u003c(com.keyman.keyboards.KeyboardStub|com.keyman.keyboards.ErrorStub)[]\u003e {\r\n      if (typeof arg === \u0027string\u0027) {\r\n        return this.keyboardManager.addLanguageKeyboards(arg.split(\u0027,\u0027).map(item =\u003e item.trim()));\r\n      } else {\r\n        return this.keyboardManager.addLanguageKeyboards(arg);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Call back from cloud for adding keyboard metadata\r\n     *\r\n     * @param {Object}    x   metadata object\r\n     **/\r\n    [\u0027register\u0027](x) {\r\n      this.keyboardManager.register(x);\r\n    }\r\n\r\n    /**\r\n     * Build 362: removeKeyboards() remove keyboard from list of available keyboards\r\n     *\r\n     * @param {string}  x      keyboard name string\r\n     * @param {boolean} force  When true, also drops the cached keyboard object\r\n     *\r\n     */\r\n    [\u0027removeKeyboards\u0027](x, force?) {\r\n      return this.keyboardManager.removeKeyboards(x);\r\n    }\r\n\r\n    /**\r\n     * Allow to change active keyboard by (internal) keyboard name\r\n     *\r\n     * @param       {string}    PInternalName   Internal name\r\n     * @param       {string}    PLgCode         Language code\r\n     */\r\n    [\u0027setActiveKeyboard\u0027](PInternalName: string, PLgCode: string): Promise\u003cvoid\u003e {\r\n      return this.keyboardManager.setActiveKeyboard(PInternalName,PLgCode);\r\n    }\r\n\r\n    /**\r\n     * Function     getActiveKeyboard\r\n     * Scope        Public\r\n     * @return      {string}      Name of active keyboard\r\n     * Description  Return internal name of currently active keyboard\r\n     */\r\n    [\u0027getActiveKeyboard\u0027](): string {\r\n      return this.keyboardManager.getActiveKeyboardName();\r\n    }\r\n\r\n    /**\r\n     * Function    getActiveLanguage\r\n     * Scope       Public\r\n     * @param      {boolean=}        true to retrieve full language name, false/undefined to retrieve code.\r\n     * @return     {string}         language code\r\n     * Description Return language code for currently selected language\r\n     */\r\n    [\u0027getActiveLanguage\u0027](fullName?: boolean): string {\r\n      return this.keyboardManager.getActiveLanguage(fullName);\r\n    }\r\n\r\n    [\u0027isAttached\u0027](x: HTMLElement): boolean {\r\n      return this.domManager.isAttached(x);\r\n    }\r\n\r\n    /**\r\n     * Function    isCJK\r\n     * Scope       Public\r\n     * @param      {Object=}  k0\r\n     * @return     {boolean}\r\n     * Description Tests if active keyboard (or specified keyboard script object, as optional argument)\r\n     *             uses a pick list (Chinese, Japanese, Korean, etc.)\r\n     *             (This function accepts either keyboard structure.)\r\n     */\r\n    [\u0027isCJK\u0027](k0?) {\r\n      var kbd: keyboards.Keyboard;\r\n      if(k0) {\r\n        kbd = new keyboards.Keyboard(k0);\r\n      } else {\r\n        kbd = this.core.activeKeyboard;\r\n      }\r\n\r\n      return kbd \u0026\u0026 kbd.isCJK;\r\n    }\r\n\r\n    /**\r\n     * Function     isChiral\r\n     * Scope        Public\r\n     * @param       {string|Object=}   k0\r\n     * @return      {boolean}\r\n     * Description  Tests if the active keyboard (or optional argument) uses chiral modifiers.\r\n     */\r\n    [\u0027isChiral\u0027](k0?) {\r\n      var kbd: keyboards.Keyboard;\r\n      if(k0) {\r\n        kbd = new keyboards.Keyboard(k0);\r\n      } else {\r\n        kbd = this.core.activeKeyboard;\r\n      }\r\n      return kbd.isChiral;\r\n    }\r\n\r\n    /**\r\n     * Get keyboard meta data for the selected keyboard and language\r\n     *\r\n     * @param       {string}    PInternalName     Internal name of keyboard\r\n     * @param       {string=}   PlgCode           language code\r\n     * @return      {Object}                      Details of named keyboard\r\n     *\r\n     **/\r\n    [\u0027getKeyboard\u0027](PInternalName: string, PlgCode?: string) {\r\n      var Ln, Lrn;\r\n\r\n      var kbdList = this.keyboardManager.getDetailedKeyboards();\r\n\r\n      for(Ln=0; Ln \u003c kbdList.length; Ln++) {\r\n        Lrn = kbdList[Ln];\r\n\r\n        if(Lrn[\u0027InternalName\u0027] == PInternalName || Lrn[\u0027InternalName\u0027] == \"Keyboard_\" + PInternalName) {\r\n          if(arguments.length \u003c 2) {\r\n            return Lrn;\r\n          }\r\n\r\n          if(Lrn[\u0027LanguageCode\u0027] == PlgCode) {\r\n            return Lrn;\r\n          }\r\n        }\r\n      }\r\n\r\n      return null;\r\n    }\r\n\r\n    /**\r\n     * Get array of available keyboard stubs\r\n     *\r\n     * @return   {Array}     Array of available keyboards\r\n     *\r\n     */\r\n    [\u0027getKeyboards\u0027]() {\r\n      return this.keyboardManager.getDetailedKeyboards();\r\n    }\r\n\r\n    /**\r\n     * Gets the cookie for the name and language code of the most recently active keyboard\r\n     *\r\n     *  Defaults to US English, but this needs to be user-set in later revision (TODO)\r\n     *\r\n     * @return      {string}          InternalName:LanguageCode\r\n     */\r\n    [\u0027getSavedKeyboard\u0027]() {\r\n      return this.keyboardManager.getSavedKeyboard();\r\n    }\r\n\r\n    /**\r\n     * Function     Initialization\r\n     * Scope        Public\r\n     * @param       {Object}  arg     object array of user-defined properties\r\n     * Description  KMW window initialization\r\n     */\r\n    [\u0027init\u0027](arg): Promise\u003cany\u003e {\r\n      return this.domManager.init(arg);\r\n    }\r\n\r\n    /**\r\n     * Function     resetContext\r\n     * Scope        Public\r\n     * @param       {Object} e      The element whose context should be cleared.  If null, the currently-active element will be chosen.\r\n     * Description  Reverts the OSK to the default layer, clears any processing caches and modifier states,\r\n     *              and clears deadkeys and prediction-processing states on the active element (if it exists)\r\n     */\r\n    [\u0027resetContext\u0027](e?: HTMLElement) {\r\n      let elem = e;\r\n      if(!elem) {\r\n        elem = this.domManager.activeElement;\r\n      }\r\n      let outputTarget = dom.Utils.getOutputTarget(elem);\r\n      if(outputTarget) {\r\n        outputTarget.resetContext();\r\n      }\r\n      this.core.resetContext(outputTarget);\r\n    };\r\n\r\n    /**\r\n     * Function     setNumericLayer\r\n     * Scope        Public\r\n     * Description  Set OSK to numeric layer if it exists\r\n     */\r\n    [\u0027setNumericLayer\u0027]() {\r\n      this.core.keyboardProcessor.setNumericLayer(this.util.device.coreSpec);\r\n    };\r\n\r\n    /**\r\n     * Function     disableControl\r\n     * Scope        Public\r\n     * @param       {Element}      Pelem       Element to be disabled\r\n     * Description  Disables a KMW control element\r\n     */\r\n    [\u0027disableControl\u0027](Pelem: HTMLElement) {\r\n      this.domManager.disableControl(Pelem);\r\n    }\r\n\r\n    /**\r\n     * Function     enableControl\r\n     * Scope        Public\r\n     * @param       {Element}      Pelem       Element to be disabled\r\n     * Description  Disables a KMW control element\r\n     */\r\n    [\u0027enableControl\u0027](Pelem: HTMLMapElement) {\r\n      this.domManager.enableControl(Pelem);\r\n    }\r\n\r\n    /**\r\n     * Function     setKeyboardForControl\r\n     * Scope        Public\r\n     * @param       {Element}    Pelem    Control element\r\n     * @param       {string|null=}    Pkbd     Keyboard (Clears the set keyboard if set to null.)\r\n     * @param       {string|null=}     Plc      Language Code\r\n     * Description  Set default keyboard for the control\r\n     */\r\n    [\u0027setKeyboardForControl\u0027](Pelem: HTMLElement, Pkbd?: string, Plc?: string) {\r\n      this.domManager.setKeyboardForControl(Pelem, Pkbd, Plc);\r\n    }\r\n\r\n    /**\r\n     * Function     getKeyboardForControl\r\n     * Scope        Public\r\n     * @param       {Element}    Pelem    Control element\r\n     * @return      {string|null}         The independently-managed keyboard for the control.\r\n     * Description  Returns the keyboard ID of the current independently-managed keyboard for this control.\r\n     *              If it is currently following the global keyboard setting, returns null instead.\r\n     */\r\n    [\u0027getKeyboardForControl\u0027](Pelem) {\r\n      this.domManager.getKeyboardForControl(Pelem);\r\n    }\r\n\r\n    /**\r\n     * Function     getLanguageForControl\r\n     * Scope        Public\r\n     * @param       {Element}    Pelem    Control element\r\n     * @return      {string|null}         The independently-managed keyboard for the control.\r\n     * Description  Returns the language code used with the current independently-managed keyboard for this control.\r\n     *              If it is currently following the global keyboard setting, returns null instead.\r\n     */\r\n    [\u0027getLanguageForControl\u0027](Pelem) {\r\n      this.domManager.getLanguageForControl(Pelem);\r\n    }\r\n\r\n    /**\r\n     * Set focus to last active target element (browser-dependent)\r\n     */\r\n    [\u0027focusLastActiveElement\u0027]() {\r\n      this.domManager.focusLastActiveElement();\r\n    }\r\n\r\n    /**\r\n     * Get the last active target element *before* KMW activated (I1297)\r\n     *\r\n     * @return      {Object}\r\n     */\r\n    [\u0027getLastActiveElement\u0027]() {\r\n      return this.domManager.lastActiveElement;\r\n    }\r\n\r\n    /**\r\n     *  Set the active input element directly optionally setting focus\r\n     *\r\n     *  @param  {Object|string} e         element id or element\r\n     *  @param  {boolean=}      setFocus  optionally set focus  (KMEW-123)\r\n     **/\r\n    [\u0027setActiveElement\u0027](e: string|HTMLElement, setFocus: boolean) {\r\n      return this.domManager.setActiveElement(e, setFocus);\r\n    }\r\n\r\n    /**\r\n     * Move focus to user-specified element\r\n     *\r\n     *  @param  {string|Object}   e   element or element id\r\n     *\r\n     **/\r\n    [\u0027moveToElement\u0027](e: string|HTMLElement) {\r\n      this.domManager.moveToElement(e);\r\n    }\r\n\r\n    /**\r\n     * Function     addHotkey\r\n     * Scope        Public\r\n     * @param       {number}            keyCode\r\n     * @param       {number}            shiftState\r\n     * @param       {function(Object)}  handler\r\n     * Description  Add hot key handler to array of document-level hotkeys triggered by key up event\r\n     */\r\n    [\u0027addHotKey\u0027](keyCode: number, shiftState: number, handler: () =\u003e void) {\r\n      this.hotkeyManager.addHotKey(keyCode, shiftState, handler);\r\n    }\r\n\r\n    /**\r\n     * Function     removeHotkey\r\n     * Scope        Public\r\n     * @param       {number}        keyCode\r\n     * @param       {number}        shiftState\r\n     * Description  Remove a hot key handler from array of document-level hotkeys triggered by key up event\r\n     */\r\n    [\u0027removeHotKey\u0027](keyCode: number, shiftState: number) {\r\n      this.hotkeyManager.removeHotkey(keyCode, shiftState);\r\n    }\r\n\r\n    /**\r\n     * Function     getUIState\r\n     * Scope        Public\r\n     * @return      {Object.\u003cstring,(boolean|number)\u003e}\r\n     * Description  Return object with activation state of UI:\r\n     *                activationPending (bool):   KMW being activated\r\n     *                activated         (bool):   KMW active\r\n     */\r\n    [\u0027getUIState\u0027](): UIState {\r\n      return this.uiManager.getUIState();\r\n    }\r\n\r\n    /**\r\n     * Set or clear the IsActivatingKeymanWebUI flag (exposed function)\r\n     *\r\n     * @param       {(boolean|number)}  state  Activate (true,false)\r\n     */\r\n    [\u0027activatingUI\u0027](state: boolean) {\r\n      this.uiManager.setActivatingUI(state);\r\n    }\r\n\r\n    // Functions that might be added later\r\n    [\u0027beepKeyboard\u0027]: () =\u003e void;\r\n    /**\r\n     * @param {number}  dn  Number of pre-caret characters to delete\r\n     * @param {string}  s   Text to insert\r\n     * @param {number=}  dr  Number of post-caret characters to delete\r\n     */\r\n    [\u0027oninserttext\u0027]: (dn: number, s: string, dr?: number) =\u003e void;\r\n\r\n    /**\r\n     * Create copy of the OSK that can be used for embedding in documentation or help\r\n     * The currently active keyboard will be returned if PInternalName is null\r\n     *\r\n     *  @param  {string}          PInternalName   internal name of keyboard, with or without Keyboard_ prefix\r\n     *  @param  {number}          Pstatic         static keyboard flag  (unselectable elements)\r\n     *  @param  {string=}         argFormFactor   layout form factor, defaulting to \u0027desktop\u0027\r\n     *  @param  {(string|number)=}  argLayerId    name or index of layer to show, defaulting to \u0027default\u0027\r\n     *  @return {Object}                          DIV object with filled keyboard layer content\r\n     */\r\n    [\u0027BuildVisualKeyboard\u0027](PInternalName, Pstatic, argFormFactor, argLayerId): HTMLElement {\r\n      let PKbd: com.keyman.keyboards.Keyboard = null;\r\n\r\n      if(PInternalName != null) {\r\n        var p=PInternalName.toLowerCase().replace(\u0027keyboard_\u0027,\u0027\u0027);\r\n        var keyboardsList = this.keyboardManager.keyboards;\r\n\r\n        for(let Ln=0; Ln\u003ckeyboardsList.length; Ln++) {\r\n          if(p == keyboardsList[Ln][\u0027KI\u0027].toLowerCase().replace(\u0027keyboard_\u0027,\u0027\u0027)) {\r\n            // Requires the Keyboard wrapping object now.\r\n            PKbd = new com.keyman.keyboards.Keyboard(keyboardsList[Ln]);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      PKbd = PKbd || this.core.activeKeyboard;\r\n\r\n      // help.keyman.com will (lkudingly) set this function in place to specify the desired\r\n      // dimensions for the documentation-keyboards, so we\u0027ll give it priority.  One of those\r\n      // \"temporary\" (but actually permanent) solutions from yesteryear.\r\n      //\r\n      // Note that the main intended use of that function is for embedded KMW on the mobile apps...\r\n      // but they never call `BuildVisualKeyboard`, so it\u0027s all good.\r\n      const getOskHeight = this[\u0027getOskHeight\u0027];\r\n      let targetHeight = (typeof getOskHeight == \u0027function\u0027 ? getOskHeight() : null) || this.osk.computedHeight || 200;\r\n\r\n      return com.keyman.osk.VisualKeyboard.buildDocumentationKeyboard(PKbd, argFormFactor, argLayerId, targetHeight);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Determine path and protocol of executing script, setting them as\r\n * construction defaults.\r\n *\r\n * This can only be done during load when the active script will be the\r\n * last script loaded.  Otherwise the script must be identified by name.\r\n*/\r\nvar scripts = document.getElementsByTagName(\u0027script\u0027);\r\nvar ss = scripts[scripts.length-1].src;\r\nvar sPath = ss.substr(0,ss.lastIndexOf(\u0027/\u0027)+1);\r\n\r\nimport KeymanBase = com.keyman.KeymanBase;\r\n\r\nKeymanBase._srcPath = sPath;\r\nKeymanBase._rootPath = sPath.replace(/(https?:\\/\\/)([^\\/]*)(.*)/,\u0027$1$2/\u0027);\r\nKeymanBase._protocol = sPath.replace(/(.{3,5}:)(.*)/,\u0027$1\u0027);\r\n\r\n/**\r\n * Base code: Declare major component namespaces, instances, and utility functions\r\n */\r\n\r\n// If a copy of the script is already loaded, detect this and prevent re-initialization / data reset.\r\nif(!window[\u0027keyman\u0027] || !window[\u0027keyman\u0027][\u0027loaded\u0027]) {\r\n\r\n  (function() {\r\n    /* The base object call may need to be moved into a separate, later file eventually.\r\n     * It will be necessary to override methods with kmwnative.ts and kmwembedded.ts before the\r\n     * affected objects are initialized.\r\n     *\r\n     * We only recreate the \u0027keyman\u0027 object if it\u0027s not been loaded.\r\n     * As this is the base object, not creating it prevents a KMW system reset.\r\n     */\r\n    window[\u0027keyman\u0027] = com.keyman[\u0027singleton\u0027] = com.keyman.singleton = new KeymanBase();\r\n\r\n    // TODO:  Eliminate the need for this.  Will require more refactoring \u0026 redesign to drop.\r\n    window[\u0027keyman\u0027].core.languageProcessor.init();\r\n  })();\r\n}\r\n","// Includes KMW-added property declaration extensions for HTML elements.\r\n/// \u003creference path=\"kmwexthtml.ts\" /\u003e\r\n// Includes type definitions for basic KMW types.\r\n/// \u003creference path=\"kmwtypedefs.ts\" /\u003e\r\n\r\n/***\r\n   KeymanWeb 11.0\r\n   Copyright 2019 SIL International\r\n***/\r\n\r\n// If KMW is already initialized, the KMW script has been loaded more than once. We wish to prevent resetting the\r\n// KMW system, so we use the fact that \u0027initialized\u0027 is only 1 / true after all scripts are loaded for the initial\r\n// load of KMW.\r\nif(!window[\u0027keyman\u0027][\u0027initialized\u0027]) {\r\n\r\n  // Continued KeymanWeb initialization.\r\n  (function()\r\n  {\r\n\r\n    // Declare KeymanWeb, OnScreen Keyboard and Util object variables\r\n    var keymanweb=window[\u0027keyman\u0027],util=keymanweb[\u0027util\u0027];\r\n\r\n    /**\r\n     * Function     debug\r\n     * Scope        Private\r\n     * @param       {(string|Object)}     s   string (or object) to print\r\n     * Description  Simple debug display (upper right of screen)\r\n     *              Extended to support multiple arguments May 2015\r\n     */\r\n    keymanweb[\u0027debug\u0027]=keymanweb.debug=function(s){\r\n      var p;\r\n      if(keymanweb.debugElement == null)\r\n      {\r\n        var d=document.createElement(\u0027DIV\u0027),ds=d.style;\r\n        ds.position=\u0027absolute\u0027;ds.width=\u002730%\u0027;ds.maxHeight=\u002750%\u0027;ds.top=\u00270\u0027;ds.right=\u00270\u0027;\r\n        ds.minHeight=\u002750px\u0027; ds.border=\u00271px solid blue\u0027; ds.whiteSpace=\u0027pre-line\u0027;ds.overflowY=\u0027scroll\u0027;\r\n        p=document.createElement(\u0027P\u0027); p.id=\u0027debug_output\u0027;p.style.margin=\u00272px\u0027;\r\n        d.appendChild(p);\r\n        document.body.appendChild(d);\r\n        keymanweb.debugElement=p;\r\n      }\r\n      if((p=document.getElementById(\u0027debug_output\u0027)) == null) return;\r\n\r\n      if(arguments.length == 0)\r\n        if(typeof p.textContent != \u0027undefined\u0027) p.textContent=\u0027\u0027; else p.innerHTML=\u0027\u0027;\r\n      else\r\n      {\r\n        var ts=new Date().toTimeString().substr(3,5),t=ts+\u0027 \u0027,t1,k,m,sx;\r\n        for(k=0; k\u003carguments.length; k++)\r\n        {\r\n          if(k \u003e 0) t = t + \u0027; \u0027;\r\n          sx = arguments[k];\r\n          if(typeof sx == \u0027object\u0027)\r\n          {\r\n            if(sx == null)\r\n            {\r\n              t = t + \u0027null\u0027;\r\n            }\r\n            else\r\n            {\r\n              t1 = \u0027\u0027;\r\n              for(m in sx)\r\n              {\r\n                if(t1.length \u003e 0) t1 = t1 + \u0027, \u0027;\r\n                t1 = t1 + m + \u0027:\u0027;\r\n                switch(typeof sx[m])\r\n                {\r\n                  case \u0027string\u0027:\r\n                  case \u0027number\u0027:\r\n                  case \u0027boolean\u0027:\r\n                    t1 = t1 + sx[m]; break;\r\n                  default:\r\n                    t1 = t1 + typeof sx[m]; break;\r\n                }\r\n                if(t1.length \u003e 1024)\r\n                {\r\n                  t1 = t1.substr(0,1000)+\u0027...\u0027; break;\r\n                }\r\n              }\r\n              if(t1.length \u003e 0) t = t + \u0027{\u0027 + t1 + \u0027}\u0027;\r\n            }\r\n          }\r\n          else\r\n          {\r\n            t = t + sx;\r\n          }\r\n        }\r\n        // Truncate if necessary to avoid memory problems\r\n        if(t.length \u003e 1500) t = t.substr(0,1500) + \u0027 (more)\u0027;\r\n\r\n        if(typeof p.textContent != \u0027undefined\u0027)\r\n          p.textContent=t+\u0027\\n\u0027+p.textContent;\r\n        else\r\n          p.innerHTML=t+\u0027\u003cbr /\u003e\u0027+p.innerHTML;\r\n\r\n      }\r\n    }\r\n\r\n    /*\r\n     * The following code existed here as part of the original pre-conversion JavaScript source, performing some inline initialization.\r\n     * Ideally, this will be refactored once proper object-orientation of the codebase within TypeScript is complete.\r\n     */\r\n    keymanweb.debugElement=null;\r\n    var dbg=keymanweb.debug;\r\n\r\n    keymanweb.delayedInit();\r\n\r\n  //TODO: find all references to next three routines and disambiguate!!\r\n\r\n    // Complete page initialization only after the page is fully loaded, including any embedded fonts\r\n    // This avoids the need to use a timer to test for the fonts\r\n\r\n    util.attachDOMEvent(window, \u0027load\u0027, keymanweb.domManager._WindowLoad,false);\r\n    util.attachDOMEvent(window, \u0027unload\u0027, keymanweb.domManager._WindowUnload,false);  // added fourth argument (default value)\r\n\r\n    // *** I3319 Supplementary Plane modifications - end new code\r\n\r\n    util.attachDOMEvent(document, \u0027keyup\u0027, keymanweb.hotkeyManager._Process, false);\r\n\r\n    /**\r\n     * Reset OSK shift states when entering or exiting the active element\r\n     **/\r\n    function resetVKShift() {\r\n      let keyman = com.keyman.singleton;\r\n      if(!keyman.uiManager.isActivating \u0026\u0026 keyman.osk?.vkbd) {\r\n        keyman.core.keyboardProcessor._UpdateVKShift(null);  //this should be enabled !!!!! TODO\r\n      }\r\n    }\r\n\r\n    // We need to track this handler, as it causes... interesting... interactions during testing in certain browsers.\r\n    keymanweb[\u0027pageFocusHandler\u0027] = resetVKShift;\r\n    util.attachDOMEvent(window, \u0027focus\u0027, keymanweb[\u0027pageFocusHandler\u0027], false);  // I775\r\n    util.attachDOMEvent(window, \u0027blur\u0027, keymanweb[\u0027pageFocusHandler\u0027], false);   // I775\r\n\r\n    // Initialize supplementary plane string extensions\r\n    String.kmwEnableSupplementaryPlane(true);\r\n\r\n  })();\r\n}","// References the base KMW object.\r\n/// \u003creference path=\"kmwbase.ts\" /\u003e\r\n\r\nnamespace com.keyman {\r\n  class RotationState {\r\n    innerWidth: number;\r\n    innerHeight: number;\r\n\r\n    constructor() {\r\n      this.innerWidth = window.innerWidth;\r\n      this.innerHeight = window.innerHeight;\r\n    }\r\n\r\n    equals(other: RotationState) {\r\n      return this.innerWidth == other.innerWidth \u0026\u0026 this.innerHeight == other.innerHeight;\r\n    }\r\n  }\r\n\r\n  // Please reference /testing/rotation-events/index.html and update it as necessary when maintaining this class.\r\n  export class RotationManager {\r\n    private keyman: KeymanBase;\r\n\r\n    // State variables used by rotations.\r\n    private oskVisible: boolean;\r\n    private isActive: boolean;\r\n\r\n    // iOS-oriented members\r\n    // --------------------\r\n    // We\u0027ll assume permutations are complete after this many \u0027update\u0027 iterations.\r\n    private static readonly IDLE_PERMUTATION_CAP = 15;\r\n    // Tracks the number of idle \u0027update\u0027 iterations since the last permutation.\r\n    private idlePermutationCounter: number = RotationManager.IDLE_PERMUTATION_CAP;\r\n    // Tracks the most recent rotation state snapshot.\r\n    private rotState: RotationState;\r\n    // Tracks the window.setTimeout id for rotation update checks.\r\n    private updateTimer: number;\r\n    private static readonly UPDATE_INTERVAL = 20; // 20 ms, that is.\r\n    // --------------------\r\n\r\n    constructor(keyman: KeymanBase) {\r\n      this.keyman = keyman;\r\n    }\r\n\r\n    resolve() {\r\n      this.keyman.alignInputs();\r\n\r\n      var osk = this.keyman.osk;\r\n      // TODO:  Reattach later in the refactoring process!\r\n      //osk.hideLanguageList();\r\n      // Force a re-layout for the active keyboard\u0027s currently-utilized layout.\r\n      if(this.keyman.core.activeKeyboard) {\r\n        this.keyman.core.activeKeyboard.refreshLayouts();\r\n      }\r\n\r\n      osk._Load();\r\n      if(this.oskVisible) {\r\n        osk.refreshLayout();\r\n      }\r\n\r\n      this.isActive = false;\r\n\r\n      // If we\u0027ve been using an update interval loop, we should clear the state information.\r\n      if(this.updateTimer) {\r\n        window.clearInterval(this.updateTimer);\r\n        this.rotState = null;\r\n      }\r\n    }\r\n\r\n    // Used by both Android and iOS.\r\n    initNewRotation() {\r\n      this.oskVisible = this.keyman.osk.isVisible();\r\n      this.keyman.osk.hideNow();\r\n      this.isActive = true;\r\n    }\r\n\r\n    /**\r\n     * Establishes rotation-oriented event handling for native-mode KeymanWeb.  At this time, tablet PCs are not directly supported.\r\n     */\r\n    init() {\r\n      // If we\u0027re in embedded mode, we really should NOT run this method.\r\n      if(this.keyman.isEmbedded) {\r\n        return;\r\n      }\r\n\r\n      // Note:  we use wrapper functions instead of `.bind(this)` in this method to facilitate stubbing for our rotation test page.\r\n      var os = this.keyman.util.device.OS;\r\n      var util = this.keyman.util;\r\n\r\n      var rotationManager = this;\r\n\r\n      if(os == \u0027iOS\u0027) {\r\n      /* iOS is rather inconsistent about these events, with changes to important window state information -\r\n       * especially to `window.innerWidth` - possible after the events trigger!  They don\u0027t always trigger\r\n       * the same amount or in a consistently predictable manner.\r\n       *\r\n       * The overall idea is to wait out all those changes so that we don\u0027t produce a bad keyboard layout.\r\n       */\r\n        util.attachDOMEvent(window, \u0027orientationchange\u0027, function() {\r\n          rotationManager.iOSEventHandler();\r\n          return false;\r\n        });\r\n        util.attachDOMEvent(window, \u0027resize\u0027, function() {\r\n          rotationManager.iOSEventHandler();\r\n          return false;\r\n        });\r\n      } else if(os == \u0027Android\u0027) {\r\n        // Android\u0027s far more consistent with its event generation than iOS.\r\n        if(\u0027onmozorientationchange\u0027 in screen) {\r\n          util.attachDOMEvent(\u003cany\u003escreen, \u0027mozorientationchange\u0027, function() {\r\n            rotationManager.initNewRotation();\r\n            return false;\r\n          });\r\n        } else {\r\n          util.attachDOMEvent(window, \u0027orientationchange\u0027, function() {\r\n            rotationManager.initNewRotation();\r\n            return false;\r\n          });\r\n        }\r\n\r\n        util.attachDOMEvent(window, \u0027resize\u0027, function() {\r\n          rotationManager.resolve();\r\n          return false;\r\n        });\r\n      }\r\n    }\r\n\r\n    iOSEventHandler() {\r\n      if(!this.isActive) {\r\n        this.initNewRotation();\r\n        this.rotState = new RotationState();\r\n\r\n        this.updateTimer = window.setInterval(this.iOSEventUpdate.bind(this), RotationManager.UPDATE_INTERVAL);\r\n      }\r\n\r\n      // If one of the rotation-oriented events just triggered, we should ALWAYS reset the counter.\r\n      this.idlePermutationCounter = 0;\r\n    }\r\n\r\n    iOSEventUpdate() {\r\n      var newState = new RotationState();\r\n\r\n      if(this.rotState.equals(newState)) {\r\n        if(++this.idlePermutationCounter == RotationManager.IDLE_PERMUTATION_CAP) {\r\n          this.resolve();\r\n        }\r\n      } else {\r\n        this.rotState = newState;\r\n        this.idlePermutationCounter = 0;\r\n      }\r\n    }\r\n  }\r\n}","// Contains event management for mobile device rotation events.\r\n/// \u003creference path=\"kmwrotation.ts\" /\u003e\r\n\r\n/***\r\n   KeymanWeb 11.0\r\n   Copyright 2019 SIL International\r\n***/\r\n\r\n// If KMW is already initialized, the KMW script has been loaded more than once. We wish to prevent resetting the \r\n// KMW system, so we use the fact that \u0027initialized\u0027 is only 1 / true after all scripts are loaded for the initial\r\n// load of KMW.\r\nif(!window[\u0027keyman\u0027][\u0027initialized\u0027]) { \r\n  /*****************************************/\r\n  /*                                       */\r\n  /*   On-Screen (Visual) Keyboard Code    */\r\n  /*                                       */\r\n  /*****************************************/\r\n  (function() {\r\n    // Declare KeymanWeb object\r\n    var keymanweb=window[\u0027keyman\u0027],osk=keymanweb[\u0027osk\u0027],util=keymanweb[\u0027util\u0027],device=util.device;\r\n    var dbg=keymanweb.debug;\r\n    var dom = com.keyman.dom;\r\n\r\n    // Force full initialization\r\n    keymanweb.isEmbedded = false;\r\n\r\n    /**\r\n     * Set default device options\r\n     * @param {OptionType}  opt device options object\r\n     */\r\n    keymanweb.setDefaultDeviceOptions = function(opt : com.keyman.OptionType) {\r\n      // Element attachment type\r\n      if (!opt[\u0027attachType\u0027]) {\r\n        opt[\u0027attachType\u0027] = (device.touchable ? \u0027manual\u0027 : \u0027auto\u0027);\r\n      }\r\n    }\r\n\r\n  /**\r\n     * Customized wait display\r\n     * \r\n     * @param   {string|boolean}   s       displayed text (or false)\r\n     */\r\n    util.wait = function(s) {\r\n      // Keyboards loaded with page are initialized before the page is ready,\r\n      // so cannot use the wait indicator (and don\u0027t need it, anyway)\r\n      // Do not display if a blocking cloud server error has occurred (to prevent multiple errors)\r\n      var bg=this.waiting;\r\n      if(typeof(bg) == \u0027undefined\u0027 || bg == null || keymanweb.warned) {\r\n        return;\r\n      }\r\n      \r\n      var nn=bg.firstChild.childNodes;\r\n      if(s) {\r\n        bg.pending=true;\r\n        window.setTimeout(function() {\r\n            if(bg.pending \u0026\u0026 keymanweb.options.useAlerts) {\r\n              window.scrollTo(0,0);\r\n              nn[0].style.display=\u0027none\u0027;\r\n              nn[1].className=\u0027kmw-wait-text\u0027; nn[1].innerHTML=s;\r\n              nn[2].style.display=\u0027block\u0027;\r\n              bg.style.display=\u0027block\u0027;\r\n            }\r\n          },1000);\r\n      } else {\r\n        if(bg.pending) {\r\n          nn[1].innerHTML=\u0027\u0027;\r\n          bg.pending=false; bg.style.display=\u0027none\u0027;\r\n        }\r\n      }\r\n    }\r\n      \r\n    // Get default style sheet path\r\n    keymanweb.getStyleSheetPath=function(ssName) {\r\n      var ssPath = util[\u0027getOption\u0027](\u0027resources\u0027)+\u0027osk/\u0027+ssName;\r\n      return ssPath;\r\n    }\r\n\r\n    /**\r\n     * Get keyboard path (relative or absolute)\r\n     * KeymanWeb 2 revised keyboard location specification:\r\n     *  (a) absolute URL (includes \u0027:\u0027) - load from specified URL\r\n     *  (b) relative URL (starts with /, ./, ../) - load with respect to current page\r\n     *  (c) filename only (anything else) - prepend keyboards option to URL \r\n     *      (e.g. default keyboards option will be set by Cloud)\r\n     *           \r\n     * @param {string}  Lfilename  keyboard file name with optional prefix                     \r\n     */   \r\n    keymanweb.getKeyboardPath=function(Lfilename) {           \r\n      var rx=RegExp(\u0027^(([\\\\.]/)|([\\\\.][\\\\.]/)|(/))|(:)\u0027);   \r\n      return (rx.test(Lfilename) ? \u0027\u0027 : keymanweb.options[\u0027keyboards\u0027]) + Lfilename;\r\n    }\r\n\r\n    /**\r\n     * Align input fields (should not be needed with KMEI, KMEA), making them visible if previously hidden.\r\n     * \r\n     *  @param  {object}   eleList    A list of specific elements to align.  If nil, selects all elements.\r\n     * \r\n     **/\r\n    keymanweb.alignInputs = function(eleList: HTMLElement[]) {\r\n      if(device.touchable) {\r\n        var domManager = keymanweb.domManager;\r\n        var processList: HTMLElement[] = [];\r\n\r\n        if(eleList) {\r\n          // Did the user specify the actual element or the touch-alias?\r\n          eleList.forEach(function(element: HTMLElement){\r\n            if(element.base) {\r\n              // It\u0027s a touch-alias element, which is what we wish to perform alignment on.\r\n              processList.push(element);\r\n            } else {\r\n              // This retrieves an element\u0027s touch-alias, should it exist.\r\n              let touchAlias = element[\u0027kmw_ip\u0027] as HTMLDivElement;\r\n              if(touchAlias) {\r\n                processList.push(element[\u0027kmw_ip\u0027]);\r\n              }\r\n            }\r\n          });\r\n        } else {\r\n          processList = domManager.inputList;\r\n        }\r\n\r\n        processList.forEach(function(element: HTMLElement) {\r\n          if(dom.Utils.instanceof(element, \"TouchAliasElement\")) {\r\n            (element as com.keyman.dom.TouchAliasElement).updateInput();\r\n          }\r\n          element.style.visibility = \u0027visible\u0027;\r\n          if(element.base.textContent.length \u003e 0) {\r\n            element.base.style.visibility = \u0027hidden\u0027;\r\n          }\r\n        })      \r\n      }\r\n    }\r\n\r\n    /**\r\n     * Programatically hides all input fields with underlying elements.  Restore with .alignInputs.    \r\n     * \r\n     *  @param  {boolean}   align    align and make visible, else hide\r\n     * \r\n     **/\r\n    keymanweb.hideInputs = function() {\r\n      var domManager = keymanweb.domManager;\r\n      if(device.touchable) {\r\n        for(var i=0; i\u003cdomManager.inputList.length; i++) {\r\n          domManager.inputList[i].style.visibility=\u0027hidden\u0027;\r\n          domManager.inputList[i].base.style.visibility=\u0027visible\u0027;\r\n        }        \r\n      }\r\n    }\r\n\r\n    /**\r\n     * Test if caret position is determined from the active element, or \r\n     * from the synthesized overlay element (touch devices)\r\n     * \r\n     * @return  {boolean}\r\n     **/          \r\n    keymanweb.isPositionSynthesized = function() {\r\n      return device.touchable;\r\n    }\r\n\r\n    /**\r\n     * Use rotation events to adjust OSK and input element positions and scaling as necessary\r\n     */     \r\n    keymanweb.handleRotationEvents=function() {\r\n      var rotationManager = new com.keyman.RotationManager(keymanweb);\r\n\r\n      rotationManager.init();\r\n    }\r\n\r\n    /**\r\n     * Possible way to detect the start of a rotation and hide the OSK before it is adjusted in size\r\n     * \r\n     *  @param  {Object}    e   accelerometer rotation event      \r\n     *      \r\n    keymanweb.testRotation = function(e)\r\n    {\r\n      var r=e.rotationRate;\r\n      if(typeof(r) != \u0027undefined\u0027)\r\n      {\r\n        dbg(r.alpha+\u0027 \u0027+r.beta+\u0027 \u0027+r.gamma);\r\n      }\r\n    }\r\n    */ \r\n  })();\r\n}","/***\r\n   KeymanWeb 11.0\r\n   Copyright 2019 SIL International\r\n***/\r\n\r\n/********************************************************/\r\n/*                                                      */\r\n/* Automatically initialize keymanweb with defaults     */ \r\n/* after the page is fully loaded                       */ \r\n/*                                                      */\r\n/********************************************************/\r\n\r\n(function() {\r\n  // Declare KeymanWeb object\r\n  var keymanweb=window[\u0027keyman\u0027];\r\n\r\n  // We don\u0027t want to instantly init() in case this code is used via bookmarklet.\r\n  var readyStateCheckInterval = window.setInterval(function() {\r\n    if (document.readyState === \"complete\") {\r\n      window.clearInterval(readyStateCheckInterval);\r\n      keymanweb.init(null);\r\n    }\r\n  }, 10);\r\n  \r\n})();\r\n","/// \u003creference path=\"kmwbase.ts\" /\u003e\r\n/// \u003creference path=\"kmwutils.ts\" /\u003e\r\n\r\n/**\r\n * This file generates aliases linking renamed functions to some of our published developer API for KMW.\r\n * This won\u0027t enable Closure to do \"advanced minification\", but it\u0027s useful for ensuring we don\u0027t break\r\n * things people depended on in legacy versions.\r\n */\r\n\r\n// Util.ts\r\n(function() {\r\n  let prototype = com.keyman.Util.prototype;\r\n\r\n  var publishAPI = function(legacyName: string, name: string) {\r\n    prototype[legacyName] = prototype[name];\r\n  }\r\n\r\n  // These four were renamed, but we need to maintain their legacy names.\r\n  publishAPI(\"_GetAbsoluteX\", \u0027getAbsoluteX\u0027);\r\n  publishAPI(\"_GetAbsoluteY\", \"getAbsoluteY\");\r\n  publishAPI(\"_GetAbsolute\", \"getAbsolute\");\r\n  publishAPI(\"toNzString\", \"nzString\");\r\n}());\r\n\r\n(function() {\r\n  // DOM-aware KeymanWeb overwrites some of the API functions, so we\r\n  // re-publish the API so that the overwritten functions are accessible\r\n  // via their short-form equivalents found in actual keyboard code.\r\n  com.keyman.text.KeyboardInterface.__publishShorthandAPI();\r\n}());","namespace com.keyman.osk.embedded {\r\n  export class KeyTip implements com.keyman.osk.KeyTip {\r\n    public key: KeyElement;\r\n    public state: boolean = false;\r\n\r\n    private showPreview: (x: number, y: number, width: number, height: number, text: string) =\u003e void;\r\n    private clearPreview: () =\u003e void;\r\n\r\n    constructor(showPreview: typeof KeyTip.prototype.showPreview,\r\n                clearPreview: () =\u003e void) {\r\n\r\n      if(showPreview == null || typeof showPreview == \u0027function\u0027) {\r\n        this.showPreview = showPreview;\r\n      }\r\n      if(clearPreview == null || typeof clearPreview == \u0027function\u0027) {\r\n        this.clearPreview = clearPreview;\r\n      }\r\n    }\r\n\r\n    show(key: KeyElement, on: boolean, vkbd: VisualKeyboard) {\r\n      let util = com.keyman.singleton.util;\r\n\r\n      if(on \u0026\u0026 this.showPreview) {\r\n        var xBase = dom.Utils.getAbsoluteX(key) - dom.Utils.getAbsoluteX(vkbd.kbdDiv) + key.offsetWidth/2,\r\n            yBase = dom.Utils.getAbsoluteY(key) /*- dom.Utils.getAbsoluteY(this.kbdDiv) + bannerHeight*/,\r\n            kc;\r\n\r\n        // Find key text element\r\n        for(var i=0; i\u003ckey.childNodes.length; i++) {\r\n          kc = key.childNodes[i];\r\n          if(util.hasClass(kc,\u0027kmw-key-text\u0027)) {\r\n            break;\r\n          }\r\n        }\r\n\r\n        if(key.className.indexOf(\u0027kmw-key-default\u0027) \u003e= 0 \u0026\u0026 key.id.indexOf(\u0027K_SPACE\u0027) \u003c 0) {\r\n          this.showPreview(xBase, yBase, key.offsetWidth, key.offsetHeight, kc.innerHTML);\r\n        }\r\n      } else if(!on \u0026\u0026 this.clearPreview) {\r\n        if(vkbd.touchCount == 0 || key == null) {\r\n          this.clearPreview();\r\n        }\r\n      }\r\n\r\n      this.key = key;\r\n      this.state = on;\r\n    }\r\n  }\r\n}","/// \u003creference path=\"../realizedGesture.interface.ts\" /\u003e\r\n\r\nnamespace com.keyman.osk.embedded {\r\n  /**\r\n   * As the subkey popup view is handled by the host app when in embedded mode\r\n   * within our Android app, this class represents the fact that KMW has\r\n   * \"delegated\" subkey UI and selection to the host app.  Hence, \"Delegator\",\r\n   * rather than \"Popup\".\r\n   * \r\n   * The `resolve` method should be triggered, in some fashion, by the host app\r\n   * whenever the user has completed their longpress, potentially selecting\r\n   * a subkey.\r\n   * \r\n   * This class will also track the ongoing touch event in case the base key is\r\n   * reselected, which _is_ managed by this class, not the host app.\r\n   */\r\n  export class SubkeyDelegator implements RealizedGesture {\r\n    private resolver: (keyEvent: text.KeyEvent) =\u003e void;\r\n    private readonly vkbd: VisualKeyboard;\r\n\r\n    public readonly baseKey: KeyElement;\r\n    public readonly promise: Promise\u003ctext.KeyEvent\u003e;\r\n\r\n    private movedFromBaseKey: boolean = false;\r\n    private baseKeySelected: boolean = false;\r\n\r\n    constructor(vkbd: VisualKeyboard, e: KeyElement) {\r\n      this.vkbd = vkbd;\r\n\r\n      let _this = this;\r\n      this.promise = new Promise\u003ctext.KeyEvent\u003e(function(resolve) {\r\n        _this.resolver = resolve;\r\n      });\r\n\r\n      this.baseKey = e;\r\n    }\r\n\r\n    /**\r\n     * Resolves the ongoing longpress -\u003e subkey gesture, fulfilling this\r\n     * `SubkeyDelegator`\u0027s `promise` of a `KeyEvent`.\r\n     * \r\n     * If no subkey is selected but the original base key is, `resolve(null)`\r\n     * will return a key event corresponding to the base key.\r\n     * \r\n     * @param keyCoreID   {string}  The \u0027core ID\u0027 (id + modifier layer) of\r\n     *                              a selected subkey.  May be `null`.\r\n     */\r\n    public resolve(keyCoreID: string) {\r\n      if(this.resolver) {\r\n        let keyEvent: text.KeyEvent = null;\r\n\r\n        if(keyCoreID == null \u0026\u0026 this.baseKeySelected) {\r\n          // Handle selection of base key underneath the subkey array.\r\n          keyEvent = this.vkbd.keyEventFromSpec(this.baseKey.key.spec as keyboards.ActiveKey, null);\r\n          this.baseKey.key.highlight(false);\r\n        } else if(keyCoreID != null) {\r\n          // This is set with the base key of our current subkey elsewhere within the engine.\r\n          let baseKey: OSKKeySpec = this.baseKey.key.spec;\r\n          let selectedKey: OSKKeySpec;\r\n\r\n          if(baseKey.coreID == keyCoreID) {\r\n            selectedKey = baseKey;\r\n          } else {\r\n            // ... yeah, there are some funky type shenanigans between the two.\r\n            // OSKKeySpec is the OSK\u0027s... reinterpretation of the ActiveKey type.\r\n            selectedKey = (baseKey as keyboards.ActiveKey).getSubkey(keyCoreID) as OSKKeySpec;\r\n          }\r\n\r\n          if(!selectedKey) {\r\n            // While we can\u0027t complete successfully, the subkey operation is done; we\r\n            // should still signal that and update related gesture state management.\r\n            this.resolver(null);\r\n            console.error(\"Could not find subkey \u0027\" + keyCoreID + \"\u0027 under base key \u0027\" + baseKey.coreID + \"\u0027!\");\r\n            return;\r\n          }\r\n\r\n          keyEvent = this.vkbd.keyEventFromSpec(selectedKey as keyboards.ActiveKey, null);\r\n          keyEvent.vkCode=keyEvent.Lcode;\r\n        } // else /* if(keyCoreID == null) */ keyEvent = null; // As initialized at the top.\r\n\r\n        this.resolver(keyEvent);\r\n      }\r\n      this.resolver = null;\r\n    }\r\n\r\n    public isVisible(): boolean {\r\n      return true;\r\n    }\r\n\r\n    public clear() {\r\n      // no-op; it\u0027s fully controlled on the app side.\r\n    }\r\n\r\n    /**\r\n     * Allows this class to detect if the user may have changed their mind and\r\n     * re-selected the base key.\r\n     * @param touch \r\n     */\r\n    updateTouch(input: InputEventCoordinate) {\r\n      this.baseKeySelected = this.baseKey.key.isUnderTouch(input);\r\n\r\n      // Prevent highlighting \u0026 selection before the touch has moved from the base key.\r\n      if(this.movedFromBaseKey) {\r\n        this.baseKey.key.highlight(this.baseKeySelected);\r\n      } else {\r\n        this.movedFromBaseKey = !this.baseKeySelected;\r\n      }\r\n    }\r\n  }\r\n}\r\n","/// \u003creference path=\"subkeyDelegator.ts\" /\u003e\r\n/// \u003creference path=\"../pendingGesture.interface.ts\" /\u003e\r\n\r\nnamespace com.keyman.osk.embedded {\r\n  /**\r\n   * As control over the subkey display timer and the subkey popup are\r\n   * both handled by the host app within the Android app, this class\r\n   * serves mostly to communicate longpress state management from the\r\n   * app to the VisualKeyboard.\r\n   * \r\n   * The `resolve()` function should be triggered by the host app\r\n   * whenever it has recognized a completed longpress and has thus\r\n   * begun displaying its subkey popup.  (Should these two events\r\n   * ever become separated in time, the latter is the more critical\r\n   * aspect.)\r\n   */\r\n  export class PendingLongpress implements PendingGesture {\r\n    private resolver: (delegator: SubkeyDelegator) =\u003e void;\r\n    private readonly vkbd: VisualKeyboard;\r\n\r\n    public readonly baseKey: KeyElement;\r\n    public readonly promise: Promise\u003cSubkeyDelegator\u003e;\r\n\r\n    constructor(vkbd: VisualKeyboard, e: KeyElement) {\r\n      this.vkbd = vkbd;\r\n      let _this = this;\r\n\r\n      this.promise = new Promise\u003cSubkeyDelegator\u003e(function(resolve) {\r\n        _this.resolver = resolve;\r\n      });\r\n      this.baseKey = e;\r\n    }\r\n\r\n    public resolve() {\r\n      if(this.resolver) {\r\n        this.resolver(new SubkeyDelegator(this.vkbd, this.baseKey));\r\n      }\r\n      this.resolver = null;\r\n    }\r\n\r\n    public cancel() {\r\n      if(this.resolver) {        \r\n        this.resolver(null);\r\n        this.resolver = null;\r\n      }\r\n    }\r\n  }\r\n}"],"names":["com","keyman","KEYMAN_VERSION","VERSION","VERSION_RELEASE","VERSION_MAJOR","VERSION_MINOR","VERSION_PATCH","TIER","VERSION_TAG","VERSION_WITH_TAG","VERSION_ENVIRONMENT","SENTRY_RELEASE","module","exports","utils","deepCopy","p","c0","c","i","constructor","Array","Browser","OperatingSystem","FormFactor","DeviceSpec","browser","formFactor","OS","touchable","toLowerCase","Chrome","Edge","Firefox","Native","Opera","Safari","Other","Desktop","Phone","Tablet","Windows","macOS","Linux","Android","iOS","getGlobalObject","globalThis","window","self","global","Version","text","undefined","components","concat","DEVELOPER_VERSION_FALLBACK","isArray","length","Error","parts","split","componentArray","value","parseInt","isNaN","push","Object","defineProperty","prototype","get","enumerable","configurable","toString","Version.prototype.toString","join","toJSON","Version.prototype.toJSON","equals","Version.prototype.equals","other","compareTo","precedes","Version.prototype.precedes","Version.prototype.compareTo","isShorter","maxDepth","delta","longList","CURRENT","NO_DEFAULT_KEYCAPS","MAC_POSSIBLE_IPAD_ALIAS","String","kmwFromCharCode","String.kmwFromCharCode","cp0","chars","arguments","Number","isFinite","Math","floor","RangeError","fromCharCode","apply","kmwCharCodeAt","String.prototype.kmwCharCodeAt","codePointIndex","str","codeUnitIndex","NaN","kmwNextChar","first","charCodeAt","second","kmwIndexOf","String.prototype.kmwIndexOf","searchValue","fromIndex","indexOf","kmwLastIndexOf","String.prototype.kmwLastIndexOf","lastIndexOf","kmwLength","String.prototype.kmwLength","kmwSlice","String.prototype.kmwSlice","beginSlice","endSlice","beginSliceCodeUnit","kmwCodePointToCodeUnit","endSliceCodeUnit","slice","kmwSubstr","String.prototype.kmwSubstr","start","startCodeUnit","endCodeUnit","substring","kmwSubstring","String.prototype.kmwSubstring","indexA","indexB","indexACodeUnit","indexBCodeUnit","String.prototype.kmwNextChar","kmwPrevChar","String.prototype.kmwPrevChar","String.prototype.kmwCodePointToCodeUnit","kmwCodeUnitToCodePoint","String.prototype.kmwCodeUnitToCodePoint","substr","kmwCharAt","String.prototype.kmwCharAt","kmwBMPNextChar","String.prototype.kmwBMPNextChar","kmwBMPPrevChar","String.prototype.kmwBMPPrevChar","kmwBMPCodePointToCodeUnit","String.prototype.kmwBMPCodePointToCodeUnit","kmwBMPCodeUnitToCodePoint","String.prototype.kmwBMPCodeUnitToCodePoint","kmwBMPLength","String.prototype.kmwBMPLength","kmwBMPSubstr","String.prototype.kmwBMPSubstr","n","ln","kmwEnableSupplementaryPlane","String.kmwEnableSupplementaryPlane","bEnable","_kmwFromCharCode","_kmwCharAt","charAt","_kmwCharCodeAt","_kmwIndexOf","_kmwLastIndexOf","_kmwSlice","_kmwSubstring","_kmwSubstr","_kmwLength","_kmwNextChar","_kmwPrevChar","_kmwCodePointToCodeUnit","_kmwCodeUnitToCodePoint","LMLayerWorkerCode","codePointAt","object","$defineProperty","result","error","position","TypeError","string","size","index","fill","O","len","relativeStart","k","max","min","relativeEnd","end","finalValue","from","toStr","isCallable","fn","call","maxSafeInteger","pow","arrayLike","items","mapFn","T","number","abs","A","C","kValue","keys","hasOwnProperty","hasDontEnumBug","propertyIsEnumerable","dontEnums","dontEnumsLength","obj","prop","reduce","Function","bind","isEnumerable","values","Object.values","v","entries","Object.entries","e","factory","defineProperties","symbolHiddenCounter","globalSymbolRegistry","ES6","objectToString","emptyFunction","simpleFunction","arg","Iterator","ArrayIterator","array","flag","_array","_flag","_nextIndex","StringIterator","_string","isObject","appendArray","array1","array2","length1","length2","simpleInheritance","child","parent","create","Symbol","desc","symbol","_description","_isSymbol","_id","for","key","record","registryLength","writable","keyFor","isSymbol","hasInstance","isConcatSpreadable","iterator","toStringTag","Symbol.prototype.toString","valueOf","Symbol.prototype.valueOf","next","ArrayIterator.prototype.next","nextValue","done","StringIterator.prototype.next","stringObject","SpreadOperatorImpl","target","thisArg","_target","_values","_thisArg","spread","SpreadOperatorImpl.prototype.spread","forEach","iterable","forOf","add","SpreadOperatorImpl.prototype.add","SpreadOperatorImpl.prototype.call","new","SpreadOperatorImpl.prototype.new","temp","returnValue","SpreadOperatorImpl.prototype.array","instanceOf","hasInstanceSymbolProp","callback","iterationResult","spreadOperator","instance","targets","outputs","unshift","models","isHighSurrogate","codeUnit","isLowSurrogate","SENTINEL_CODE_UNIT","applyTransform","transform","context","fullLeftContext","left","lLen","leftContext","lDel","deleteLeft","insert","fullRightContext","right","rLen","rightContext","rDel","deleteRight","startOfBuffer","endOfBuffer","casingForm","buildMergedTransform","mergedFirstInsert","mergedSecondDelete","firstLength","isSentinel","char","transformToSuggestion","suggestion","transformId","id","displayAs","defaultApplyCasing","casing","toUpperCase","headUnitLength","PriorityQueue","comparator","initialEntries","heap","heapify","leftChildIndex","PriorityQueue.leftChildIndex","rightChildIndex","PriorityQueue.rightChildIndex","parentIndex","PriorityQueue.parentIndex","PriorityQueue.prototype.heapify","count","queuedIndices","lastParent","siftDown","shift","peek","PriorityQueue.prototype.peek","enqueue","PriorityQueue.prototype.enqueue","element","a","enqueueAll","PriorityQueue.prototype.enqueueAll","elements","firstIndex","firstParent","dequeue","PriorityQueue.prototype.dequeue","root","tail","pop","PriorityQueue.prototype.siftDown","leftIndex","rightIndex","topMostIndex","toArray","PriorityQueue.prototype.toArray","tokenize","wordBreaker","leftSpans","rightSpans","leftTail","leftTailBase","mergedSpan","tokenization","map","span","caretSplitsToken","rightHead","rightPrefixWordbreak","getLastPreCaretToken","wordbreak","__generator","body","verb","step","op","f","_","y","t","label","ops","trys","sent","g","findPrefix","node","type","children","getSortedResults","prefix","N","limit","MAX_SUGGESTIONS","queue","b","weight","results","_i","_a","item","content","_loop_4","internal_1","state_1","defaultSearchTermToKey","wordform","normalize","replace","TrieModel","trieData","options","languageUsesCasing","applyCasing","_trie","Trie","searchTermToKey","namespace","wordBreakers","require","breakWords","punctuation","configure","TrieModel.prototype.configure","capabilities","configuration","leftContextCodePoints","maxLeftContextCodePoints","rightContextCodePoints","maxRightContextCodePoints","toKey","TrieModel.prototype.toKey","predict","TrieModel.prototype.predict","makeDistribution","suggestions","distribution","s","sample","firstN","newContext","leftDelOffset","lookup","traverseFromRoot","TrieModel.prototype.traverseFromRoot","Traversal","class_1","class_1.prototype.children","_loop_1","this_1","entry","prefix_1","_loop_2","_b","children_1","_c","entryNode","internalNode_1","_loop_3","_d","_e","lowSurrogate","fullText","prefix_2","prefix_3","_f","_g","traversal","filter","nodeKey","_h","prefix_4","matches","matchingLeaf","totalWeight","wordform2key","Trie.prototype.lookup","searchKey","lowestCommonNode","Trie.prototype.firstN","QuoteBehavior","behavior","defaultTo","default","noQuotes","useQuotes","quotesForKeepSuggestion","open","close","ascii","phrase","matchWord","words","match","exec","RegExpDerivedSpan","WORD_BREAK_PROPERTY","data","isNonSpace","chunk","property","every","wb","findBoundaries","positionAfter","pos","isStartOfSurrogatePair","wordbreakPropertyAt","isAHLetter","boundaries","lookaheadPos","lookahead","nConsecutiveRegionalIndicators","rightPos","lookbehind","character","codepoint","searchForProperty","codePoint","midpoint","candidate","nextRange","startOfNextRange","Infinity","default_","spans","LazySpan","source","_source","placeholder","nextStart","utterance","__values","o","m","DummyModel","_futureSuggestions","futureSuggestions","DummyModel.prototype.configure","DummyModel.prototype.predict","injectedSuggestions","makeUniformDistribution","suggestions_1","suggestions_1_1","e_1_1","e_1","return","currentSet","__read","r","ar","correction","ClassicalDistanceCalculation","diagonalWidth","inputSequence","matchSequence","rowCount","resolvedDistances","getTrueIndex","ClassicalDistanceCalculation.prototype.getTrueIndex","width","retVal","row","col","sparse","getCostAt","ClassicalDistanceCalculation.prototype.getCostAt","j","MAX_VALUE","getFinalCost","ClassicalDistanceCalculation.prototype.getFinalCost","buffer","val","getHeuristicFinalCost","increaseMaxDistance","ClassicalDistanceCalculation.prototype.getHeuristicFinalCost","hasFinalCostWithin","ClassicalDistanceCalculation.prototype.hasFinalCostWithin","threshold","guaranteedBound","editPath","ClassicalDistanceCalculation.prototype.editPath","currentCost","insertParentCost","deleteParentCost","substitutionParentCost","getTransposeParent","lastInputIndex","lastMatchIndex","expectedCost","ClassicalDistanceCalculation.getTransposeParent","initialCostAt","ClassicalDistanceCalculation.initialCostAt","insertCost","deleteCost","baseSubstitutionCost","substitutionCost","insertionCost","deletionCost","transpositionCost","getSubset","ClassicalDistanceCalculation.prototype.getSubset","inputLength","matchLength","trimmedInstance","splice","finalTrueIndex","diagonalIndex","newCount","keptEntries","newEntries","forDiagonalOfAxis","ClassicalDistanceCalculation.forDiagonalOfAxis","centerIndex","axisCap","closure","diagonalCap","startOffset","diagonalStart","addInputChar","ClassicalDistanceCalculation.prototype.addInputChar","token","returnBuffer","diagIndex","addMatchChar","ClassicalDistanceCalculation.prototype.addMatchChar","ClassicalDistanceCalculation.prototype.increaseMaxDistance","forPossibleTranspositionsInDiagonal","startPos","fixedChar","lookupString","leftCell","addedCost_1","insertionCost_1","propagateUpdateFrom","transposeRow_1","axisIndex","rightCell","addedCost_2","transposeCol_1","ClassicalDistanceCalculation.propagateUpdateFrom","internalRow","internalCol","updateCost","nextInputIndex","nextMatchIndex","inputString","matchString","computeDistance","ClassicalDistanceCalculation.computeDistance","input","bandSize","QUEUE_NODE_COMPARATOR","correction.QUEUE_NODE_COMPARATOR","arg1","arg2","SearchNode","rootTraversal","this.toKey","x","calculation","currentTraversal","priorInput","_inputCost","MIN_P_1","SearchSpace","MIN_KEYSTROKE_PROBABILITY","mass","previous","current","log","EDIT_DISTANCE_COST_SCALE","knownCost","inputSamplingCost","buildInsertionEdges","SearchNode.prototype.buildInsertionEdges","edges","lexicalChild","childCalc","matchToken","searchChild","e_2_1","e_2","buildDeletionEdges","SearchNode.prototype.buildDeletionEdges","inputDistribution","inputDistribution_1","inputDistribution_1_1","probMass","exp","edgeCalc","inputPath","keyedChar","childEdge","e_3_1","e_3","buildSubstitutionEdges","SearchNode.prototype.buildSubstitutionEdges","e_5","intermediateEdges","intermediateEdges_1","intermediateEdges_1_1","edge","e_5_1","e_4_1","e_4","SearchSpaceTier","initialEdges","processed","correctionQueue","increaseMaxEditDistance","SearchSpaceTier.prototype.increaseMaxEditDistance","SearchResult","resultNode","model","tierOrdering","minInputCost","returnedValues","processedEdgeSet","buildQueueSpaceComparator","selectionQueue","QUEUE_SPACE_COMPARATOR","rootNode","completedPaths","baseTier","SearchSpace.prototype.buildQueueSpaceComparator","searchSpace","this.QUEUE_SPACE_COMPARATOR","space1","space2","node1","node2","index1","index2","tierMinCost","sign","SearchSpace.prototype.increaseMaxEditDistance","tier","addInput","SearchSpace.prototype.addInput","newlyAvailableEdges","batches","deletions","substitutions","batch","removeLastInput","SearchSpace.prototype.removeLastInput","hasNextMatchEntry","SearchSpace.prototype.hasNextMatchEntry","topQueue","handleNextNode","SearchSpace.prototype.handleNextNode","bestTier","currentNode","unmatchedResult","cost","mapKey","substitutionsOnly","insertionEdges","finalNode","nextTier","inputIndex","deletionEdges","substitutionEdges","getBestMatches","SearchSpace.prototype.getBestMatches","waitMillis","currentReturns","timeStart","maxTime","BatchingAssistant","batcher","preprocessedQueue","batch_1","batch_2","timedOut","newResult","now","batch_3","Date","DEFAULT_ALLOTTED_CORRECTION_TIME_INTERVAL","MIN_SAFE_INTEGER","checkAndAdd","BatchingAssistant.prototype.checkAndAdd","tryFinalize","outputMapKey","BatchingAssistant.prototype.tryFinalize","__extends","extendStatics","d","setPrototypeOf","__proto__","__","textToCharTransforms","perCharTransforms","TrackedContextSuggestion","TrackedContextToken","transformDistributions","activeReplacementId","replacementText","raw","replacementId","replacements","find","replacement","revert","TrackedContextToken.prototype.revert","TrackedContextState","tokens","copy","indexOffset","popHead","TrackedContextState.prototype.popHead","pushTail","TrackedContextState.prototype.pushTail","state","distrib","pushWhitespaceToTail","TrackedContextState.prototype.pushWhitespaceToTail","transformDistribution","whitespaceToken","replaceTailForBackspace","TrackedContextState.prototype.replaceTailForBackspace","tokenText","backspacedTokenContext","compactedToken","updateTail","TrackedContextState.prototype.updateTail","editedToken","space","toRawTokenization","TrackedContextState.prototype.toRawTokenization","sequence","currentText","e_6_1","e_6","ContextTracker","_super","attemptMatchContext","ContextTracker.attemptMatchContext","tokenizedContext","matchState","matchContext","mapping","poppedHead","pushedTail","tailIndex","ignorePenultimateMatch","primaryInput","isBackspace","finalToken","emptyToken","modelContextState","ContextTracker.modelContextState","lexicalModel","baseTokens","analyzeState","ContextTracker.prototype.analyzeState","wordbreaker","resultState","taggedContext","CircularArray","DEFAULT_ARRAY_SIZE","currentTail","currentHead","circle","diff","CircularArray.prototype.enqueue","prevItem","nextHead","maxCount","CircularArray.prototype.dequeue","popNewest","CircularArray.prototype.popNewest","CircularArray.prototype.item","__assign","assign","ModelCompositor","SUGGESTION_ID_SEED","contextTracker","determinePunctuationFromModel","isWhitespace","ModelCompositor.prototype.isWhitespace","whitespaceRemover","ModelCompositor.prototype.isBackspace","isEmpty","ModelCompositor.prototype.isEmpty","predictFromCorrections","ModelCompositor.prototype.predictFromCorrections","corrections","returnedPredictions","correction_1","predictionSet","this_2","predictions","pair","inputProb","prediction","corrections_1","corrections_1_1","e_7_1","e_7","ModelCompositor.prototype.predict","suggestionDistribution","inputTransform","sort","allowSpace","allowBksp","postContext","keepOptionText","keepOption","rawPredictions","contextState","newEmptyToken_1","contextTokens","isNew","prefixTransform","bestCorrectionCost","predictionRoots","correctionTransform","totalCost","correctionCost","e_8_1","e_8","alt","tuple","suggestionDistribMap","currentCasing","detectCurrentCasing","baseWord","rawPredictions_1","rawPredictions_1_1","displayText","preserveAsKeep","baseTransform","keepTransform","intermediateKeep","toAnnotatedSuggestion","matchesModel","applySuggestionCasing","existingSuggestion","e_9_1","e_9","keepSuggestion","compositor","insertAfterWord","mergedTransform","tokenWidth","ModelCompositor.prototype.applySuggestionCasing","unchangedLength","ModelCompositor.prototype.toAnnotatedSuggestion","annotationType","quoteBehavior","defaultQuoteBehavior","tag","ModelCompositor.determinePunctuationFromModel","defaults","DEFAULT_PUNCTUATION","specifiedPunctuation","isRTL","acceptSuggestion","ModelCompositor.prototype.acceptSuggestion","postTransform","sourceTransform","deletedLeftChars","insertedLength","reversionTransform","postContextTokenization","revertedPrefix","firstConversion","reversion","newest","acceptedContext","applyReversion","ModelCompositor.prototype.applyReversion","fallbackSuggestions","revertedContext","contextMatchFound","trackedSuggestion","ModelCompositor.prototype.wordbreak","ModelCompositor.prototype.tokenize","resetContext","ModelCompositor.prototype.resetContext","ModelCompositor.prototype.detectCurrentCasing","LMLayerWorker","importScripts","postMessage","_postMessage","_importScripts","setupConfigState","LMLayerWorker.prototype.error","message","cast","stack","onMessage","LMLayerWorker.prototype.onMessage","event","im","duplicated","_currentModelSource","file","code","console","warn","handleMessage","LMLayerWorker.prototype.cast","payload","loadModel","LMLayerWorker.prototype.loadModel","_platformCapabilities","leftContextCodeUnits","rightContextCodeUnits","transitionToReadyState","wordbreaksAfterSuggestions","err","loadModelFile","LMLayerWorker.prototype.loadModelFile","url","unloadModel","LMLayerWorker.prototype.unloadModel","transitionToLoadingState","LMLayerWorker.prototype.setupConfigState","_this_1","name","LMLayerWorker.prototype.transitionToLoadingState","_this","code_1","evalInContext","eval","LMLayerWorker.prototype.transitionToReadyState","brokenWord","word","install","LMLayerWorker.install","scope","worker","onmessage","PromiseStore","_promises","Map","make","PromiseStore.prototype.make","resolve","reject","has","set","keep","PromiseStore.prototype.keep","callbacks","accept","delete","break","PromiseStore.prototype.break","reason","LMLayer","_worker","DefaultWorker","constructInstance","_declareLMLayerReady","_predictPromises","_wordbreakPromises","_acceptPromises","_revertPromises","_nextToken","sendConfig","LMLayer.prototype.sendConfig","LMLayer.prototype.loadModel","modelSource","loadType","Promise","_reject","modelSourceSpec","LMLayer.prototype.unloadModel","LMLayer.prototype.predict","LMLayer.prototype.wordbreak","LMLayer.prototype.acceptSuggestion","revertSuggestion","LMLayer.prototype.revertSuggestion","LMLayer.prototype.resetContext","LMLayer.prototype.onMessage","shutdown","LMLayer.prototype.shutdown","terminate","unwrap","LMLayer.unwrap","wrapper","ns","DefaultWorker.constructInstance","Worker","asBlobURI","DefaultWorker.asBlobURI","blob","Blob","URL","createObjectURL","Events","EE","once","addListener","emitter","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","eventNames","EventEmitter.prototype.eventNames","names","events","getOwnPropertySymbols","listeners","EventEmitter.prototype.listeners","handlers","l","ee","listenerCount","EventEmitter.prototype.listenerCount","emit","EventEmitter.prototype.emit","a1","a2","a3","a4","a5","args","removeListener","on","EventEmitter.prototype.on","EventEmitter.prototype.once","EventEmitter.prototype.removeListener","removeAllListeners","EventEmitter.prototype.removeAllListeners","off","prefixed","ContextWindow","mock","config","layerId","getTextBeforeCaret","getTextAfterCaret","toMock","ContextWindow.prototype.toMock","caretPos","Mock","ENGINE_RULE_WINDOW","prediction_1","ReadySuggestions","transcriptionID","LanguageProcessor","recentTranscriptions","_mayPredict","_mayCorrect","init","LanguageProcessor.prototype.init","supportsRightDeletions","canEnable","lmEngine","currentModel","LanguageProcessor.prototype.unloadModel","LanguageProcessor.prototype.loadModel","specType","path","lp","mayPredict","then","catch","invalidateContext","LanguageProcessor.prototype.invalidateContext","outputTarget","isActive","transcription","buildTranscriptionFrom","predict_internal","LanguageProcessor.prototype.wordbreak","LanguageProcessor.prototype.predict","applySuggestion","LanguageProcessor.prototype.applySuggestion","getLayerId","original","getPredictionState","final","preInput","buildTransformFrom","preApply","suggestionContext","reversionPromise","lp_1","mappedReversion","predictFromTarget","LanguageProcessor.prototype.applyReversion","promise","currentPromise","LanguageProcessor.prototype.predictFromTarget","LanguageProcessor.prototype.predict_internal","recordTranscription","alternates","LanguageProcessor.prototype.recordTranscription","TRANSCRIPTION_BUFFER","LanguageProcessor.prototype.getPredictionState","LanguageProcessor.prototype.shutdown","activeModel","LanguageProcessor.prototype.canEnable","oldVal","tryAcceptSuggestion","LanguageProcessor.prototype.tryAcceptSuggestion","returnObj","shouldSwallow","tryRevertSuggestion","LanguageProcessor.prototype.tryRevertSuggestion","InputProcessor","device","DEFAULT_OPTIONS","kbdProcessor","KeyboardProcessor","lngProcessor","keyboardProcessor","keyboardInterface","activeKeyboard","keyboard","languageProcessor","processNewContextEvent","InputProcessor.prototype.processNewContextEvent","ruleBehavior","finalize","processKeyEvent","InputProcessor.prototype.processKeyEvent","keyEvent","fromOSK","isSynthetic","usesDesktopLayoutOnDevice","selectLayer","doModifierPress","kName","Lcode","Codes","keyCodes","RuleBehavior","preInputMock","startingLayerId","processKeystroke","kNextLayer","isOnlyLayerSwitchKey","isKnownOSKModifierKey","isNoOp","keepRuleBehavior","buildAlternates","triggersDefaultCommand","hasLayerChanged","setStore","KeyboardInterface","TSS_LAYER","newLayerStore","oldLayerStore","postRuleBehavior","processPostKeystroke","predictionPromise","doInputEvent","InputProcessor.prototype.buildAlternates","keyDistribution","windowedMock","contextWindow","kbdLayer","TIMEOUT_THRESHOLD","_globalThis_1","timer","KEYSTROKE_EPSILON","activeLayout","layout","totalMass_1","altKey","getLayer","getKey","keyId","altEvent","constructKeyEvent","alternateBehavior","beep","InputProcessor.prototype.resetContext","baseLayout","Deadkey","ordinalSeed","Deadkey.prototype.match","Deadkey.prototype.set","matched","reset","Deadkey.prototype.reset","before","Deadkey.prototype.before","clone","Deadkey.prototype.clone","dk","sortFunc","Deadkey.sortFunc","DeadkeyTracker","dks","toSortedArray","DeadkeyTracker.prototype.toSortedArray","DeadkeyTracker.prototype.clone","dkt","isMatch","DeadkeyTracker.prototype.isMatch","resetMatched","DeadkeyTracker.prototype.add","remove","DeadkeyTracker.prototype.remove","clear","DeadkeyTracker.prototype.clear","DeadkeyTracker.prototype.resetMatched","deleteMatched","DeadkeyTracker.prototype.deleteMatched","Li","adjustPositions","DeadkeyTracker.prototype.adjustPositions","Lstart","Ldelta","DeadkeyTracker.prototype.count","KeyEvent","constructNullKeyEvent","KeyEvent.constructNullKeyEvent","text_1","TextTransform","TextTransform.prototype.isNoOp","nil","Transcription","keystroke","tokenSeed","OutputTarget","_dks","OutputTarget.prototype.resetContext","deadkeys","OutputTarget.prototype.deadkeys","hasDeadkeyMatch","OutputTarget.prototype.hasDeadkeyMatch","getDeadkeyCaret","insertDeadkeyBeforeCaret","OutputTarget.prototype.insertDeadkeyBeforeCaret","adjustDeadkeys","OutputTarget.prototype.adjustDeadkeys","setDeadkeys","OutputTarget.prototype.setDeadkeys","OutputTarget.prototype.buildTransformFrom","to","getText","fromCaret","toCaret","maxLeftMatch","maxSMPLeftMatch","mid","fromLeft","toLeft","potentialHigh","potentialFromLow","potentialToLow","newCaret","deletedLeft","undeletedRight","deletedRight","OutputTarget.prototype.buildTranscriptionFrom","readonly","restoreTo","OutputTarget.prototype.restoreTo","setTextBeforeCaret","setTextAfterCaret","OutputTarget.prototype.apply","deleteCharsBeforeCaret","insertTextBeforeCaret","OutputTarget.prototype.setTextBeforeCaret","saveProperties","OutputTarget.prototype.saveProperties","restoreProperties","OutputTarget.prototype.restoreProperties","defaultLength","caretIndex","Mock.from","text_2","afterText","preText","clearSelection","Mock.prototype.clearSelection","invalidateSelection","Mock.prototype.invalidateSelection","isSelectionEmpty","Mock.prototype.isSelectionEmpty","hasSelection","Mock.prototype.hasSelection","Mock.prototype.getDeadkeyCaret","setDeadkeyCaret","Mock.prototype.setDeadkeyCaret","Mock.prototype.getTextBeforeCaret","Mock.prototype.getTextAfterCaret","Mock.prototype.getText","Mock.prototype.deleteCharsBeforeCaret","dn","Mock.prototype.insertTextBeforeCaret","handleNewlineAtCaret","Mock.prototype.handleNewlineAtCaret","Mock.prototype.setTextAfterCaret","Mock.prototype.doInputEvent","modifierCodes","modifierBitmasks","stateBitmasks","codesUS","keyID","saveStore","variableStores","RuleBehavior.prototype.finalize","processor","beepHandler","storeID","sysStore","systemStores","errorLogger","warningLogger","applyVariableStores","variableStoreSerializer","DefaultOutput","applyCommand","warningLog","errorLog","mergeInDefaults","RuleBehavior.prototype.mergeInDefaults","keyFromOther","Lmodifiers","mergingMock","EmulationKeystrokes","codeForEvent","DefaultOutput.codeForEvent","Lkc","forAny","DefaultOutput.forAny","isMnemonic","forSpecialEmulation","forNumpadKeys","forUnicodeKeynames","forBaseKeys","isCommand","DefaultOutput.isCommand","DefaultOutput.applyCommand","DefaultOutput.forSpecialEmulation","Backspace","Enter","DefaultOutput.forNumpadKeys","ch","Lch","DefaultOutput.forUnicodeKeynames","keyName","codePoints_1","codePoints","codePointValue","DefaultOutput.forBaseKeys","keyShiftState","keyboards","Layouts","buildDefaultLayout","Layouts.buildDefaultLayout","PVK","layoutType","dfltLayout","kbdBitmask","kbdDevVersion","modifierBitmask","compilerVersion","DEFAULT_RAW_SPEC","layers","keyLabels","key102","rows","chiral","IS_CHIRAL","legacyFontSpec","font","kmw10Plus","processLegacyDefinitions","validIdList","getOwnPropertyNames","invalidIdList","emulatesAltGr","scriptObject","generateLayerIds","idList","shiftKey","layerID","specialChar","modifierSpecials","subkey","sp","nextlayer","formatDefaultLayer","layer","scrollKey","numKey","capsKey","layerSpec","isShift","isDefault","kx","dfltCodes","dfltText","buttonClasses","Layouts.getLayerId","Layouts.generateLayerIds","layerCnt","offset","layerIds","Layouts.formatDefaultLayer","Layouts.processLegacyDefinitions","BK","KLS","arr","valid","__decorate","decorators","getOwnPropertyDescriptor","Reflect","decorate","Enumerable","propertyKey","descriptor","ActiveKey","baseID","displayLayer","coreID","polyfill","ActiveKey.polyfill","dummy","proto","getPrototypeOf","sk","constructBaseKeyEvent","ActiveKey.prototype.constructBaseKeyEvent","getModifierState","Lstates","getStateFromLayer","LisVirtualKey","vkCode","kLayer","definesPositionalOrMnemonic","KeyMapping","_USKeyCodeToCharCode","baseKeyEvent","ActiveKey.prototype.constructKeyEvent","setMnemonicCode","stateKeys","setSyntheticEventDefaults","bitmask","bitmap","CAPS","NUM_LOCK","SCROLL_LOCK","LmodifierChange","getSubkey","ActiveKey.prototype.getSubkey","DEFAULT_PAD","DEFAULT_RIGHT_MARGIN","DEFAULT_KEY_WIDTH","DEFAULT_KEY","pad","ActiveRow","ActiveRow.polyfill","totalWidth","proportionalY","tp","SPECIAL_LABEL","test","totalPercent","keyPercent","padPercent","proportionalPad","padPc","proportionalWidth","keyPc","proportionalX","totalPc","populateKeyMap","ActiveRow.prototype.populateKeyMap","ActiveLayer","ActiveLayer.polyfill","aligned","kw","kp","defaultKeyProportionalWidth","rowProportionalHeight","keyMap","constructKeyMap","ActiveLayer.prototype.constructKeyMap","getTouchProbabilities","ActiveLayer.prototype.getTouchProbabilities","touchCoords","kbdScaleRatio","simpleTouchDistribution","list","ActiveLayer.prototype.simpleTouchDistribution","keyDists","keyTouchDistances","keyProbs","totalMass","ActiveLayer.prototype.keyTouchDistances","baseKeyID","dx","dy","distX","distY","ActiveLayer.prototype.getKey","idComponents","baseKey","ActiveLayout","ActiveLayout.prototype.getLayer","layerMap","correctLayerEmptyRowBug","ActiveLayout.correctLayerEmptyRowBug","ActiveLayout.polyfill","SystemStore","SystemStore.prototype.set","MutableSystemStore","defaultValue","handler","_value","MutableSystemStore.prototype.matches","MutableSystemStore.prototype.set","PlatformSystemStore","TSS_PLATFORM","kbdInterface","PlatformSystemStore.prototype.matches","constraints","activeDevice","constraint","KeyInformation","RuleDeadkey","ContextAny","RuleIndex","ContextEx","ContextNul","StoreBeep","CachedContext","CachedContext.prototype.reset","_cache","CachedContext.prototype.get","CachedContext.prototype.set","CachedContextEx","CachedContextEx.prototype.reset","CachedContextEx.prototype.get","CachedContextEx.prototype.set","CachedContextEx.prototype.clone","cachedContext","cachedContextEx","_AnyIndices","TSS_NEWLAYER","TSS_OLDLAYER","saveFocus","KeyboardInterface.prototype.saveFocus","registerKeyboard","KeyboardInterface.prototype.registerKeyboard","Pk","Keyboard","KeyboardInterface.prototype.context","KC_","KeyboardInterface.prototype.KC_","tempContext","nul","KeyboardInterface.prototype.nul","cx","contextMatch","KeyboardInterface.prototype.contextMatch","_BuildExtendedContext","KeyboardInterface.prototype._BuildExtendedContext","cache","unmatchedDeadkeys","valContext","deadContext","deadPos","kc","subCache","fullContextMatch","KeyboardInterface.prototype.fullContextMatch","rule","fullContext","ruleContextEx","mismatch","any","NUL_CONTEXT","_Index","isKeypress","KeyboardInterface.prototype.isKeypress","matchModifiersToRuleChirality","KeyboardInterface.matchModifiersToRuleChirality","eventModifiers","targetModifierMask","CHIRAL_ALT","CHIRAL_CTRL","altIntersection","modifiers","ctrlIntersection","keyMatch","KeyboardInterface.prototype.keyMatch","Lruleshift","Lrulekey","keyCode","stateBitmask","stateMatch","activeTargetOutput","KeyboardInterface.prototype.stateMatch","Lstate","keyInformation","KeyboardInterface.prototype.keyInformation","ei","deadkeyMatch","KeyboardInterface.prototype.deadkeyMatch","KeyboardInterface.prototype.beep","resetContextCache","_ExplodeStore","KeyboardInterface.prototype._ExplodeStore","store","cachedStores","explodedStores","KeyboardInterface.prototype.any","Lix","KeyboardInterface.prototype._Index","Ps","Pn","indexOutput","KeyboardInterface.prototype.indexOutput","Pdn","indexChar","output","deadkeyOutput","deleteContext","KeyboardInterface.prototype.deleteContext","nulCount","contextLength","KeyboardInterface.prototype.output","contextExOutput","KeyboardInterface.prototype.contextExOutput","contextOffset","vc","KeyboardInterface.prototype.deadkeyOutput","Pd","ifStore","KeyboardInterface.prototype.ifStore","systemId","strValue","KeyboardInterface.prototype.setStore","loadStore","KeyboardInterface.prototype.loadStore","kbdName","storeName","dfltValue","cValue","KeyboardInterface.prototype.saveStore","optValue","kbd","valueObj","KeyboardInterface.prototype.resetContextCache","defaultBackspace","KeyboardInterface.prototype.defaultBackspace","KeyboardInterface.prototype.processNewContextEvent","process","KeyboardInterface.prototype.processPostKeystroke","KeyboardInterface.prototype.processKeystroke","KeyboardInterface.prototype.process","callee","cachedVariableStores","triggerKeyDefault","KeyboardInterface.prototype.applyVariableStores","stores","__publishShorthandAPI","KeyboardInterface.__publishShorthandAPI","exportKBCallback","miniName","longName","GLOBAL_NAME","CacheTag","LayoutState","keyboardScript","DEFAULT_SCRIPT_OBJECT","layoutStates","Keyboard.prototype.process","Keyboard.prototype.processNewContextEvent","Keyboard.prototype.processPostKeystroke","storeNames","embedScript","Keyboard.prototype.embedScript","lg","cacheTag","isChiral","_legacyLayoutSpec","emulationMask","unshiftedEmulationLayer","shiftedEmulationLayer","Keyboard.prototype.usesDesktopLayoutOnDevice","notify","Keyboard.prototype.notify","_PCommand","_PTarget","_PData","findOrConstructLayout","Keyboard.prototype.findOrConstructLayout","_layouts","rawSpecifications","keyCaps","helpText","Keyboard.prototype.layout","rawLayout","NOT_LOADED","POLYFILLED","refreshLayouts","Keyboard.prototype.refreshLayouts","formFactors","form","markLayoutCalibrated","Keyboard.prototype.markLayoutCalibrated","CALIBRATED","getLayoutState","Keyboard.prototype.getLayoutState","gs","KeyMap","BrowserKeyMaps","FF","LanguageKeyMaps","_usCodeInit","KeyMapping._usCodeInit","s0","s1","_usCharCodes","KeyMapping._USKeyCodeToCharCode","Levent","usCharCodes","browserMap","languageMap","modStateFlags","installInterface","KeyboardProcessor.prototype.installInterface","layerStore","defaultRuleBehavior","KeyboardProcessor.prototype.defaultRuleBehavior","special","KeyboardProcessor.prototype.setSyntheticEventDefaults","getVKDictionaryCode","KeyboardProcessor.prototype.constructNullKeyEvent","KeyboardProcessor.prototype.processNewContextEvent","KeyboardProcessor.prototype.processPostKeystroke","KeyboardProcessor.prototype.processKeystroke","matchBehavior","defaultBehavior","KeyboardProcessor.setMnemonicCode","shifted","capsActive","mappingEvent","mappedChar","isModifier","KeyboardProcessor.getModifierState","modifier","ctrlMatched","altMatched","KeyboardProcessor.getStateFromLayer","KeyboardProcessor.prototype.getVKDictionaryCode","res","_UpdateVKShift","KeyboardProcessor.prototype._UpdateVKShift","lockNames","lockKeys","updateStates","KeyboardProcessor.prototype.updateStates","onBit","offBit","KeyboardProcessor.prototype.getLayerId","KeyboardProcessor.prototype.selectLayer","nextLayer","updateLayer","KeyboardProcessor.prototype.updateLayer","activeLayer","idx","baseModifierState","KeyboardProcessor.isModifier","KeyboardProcessor.prototype.doModifierPress","isKeyDown","KeyboardProcessor.prototype.resetContext","setNumericLayer","KeyboardProcessor.prototype.setNumericLayer","AttachmentInfo","eleInterface","touch","interface","touchEnabled","keyman_1","text.KeyboardInterface.prototype.registerKeyboard","singleton","keyboardManager","_registerKeyboard","registerStub","text.KeyboardInterface.prototype.registerStub","Pstub","keymanweb","initialized","Lk","keyboardStubs","_registerStub","insertText","text.KeyboardInterface.prototype.insertText","Ptext","PdeadKey","dom","Utils","getOutputTarget","uiManager","setActivatingUI","DOMEventHandlers","states","_IgnoreNextSelChange","domManager","focusLastActiveElement","text.KeyboardInterface.prototype.saveFocus","osk","startHide","Px","Py","FloatingOSKView","presentAtPosition","present","core","isCJK","userPositioned","StyleConstants","popupCanvasBackgroundColor","prefersDarkMode","StyleConstants.prefersDarkMode","matchMedia","Device","detected","dyLandscape","dyPortrait","version","orientation","getDPI","Device.prototype.getDPI","document","createElement","style","dpi","readyState","display","visibility","top","height","appendChild","devicePixelRatio","offsetWidth","removeChild","detect","Device.prototype.detect","possMacSpoof","navigator","userAgent","agent","rx","ex","regex","versionString","msMaxTouchPoints","dimMin","screen","aspect","dimMax","possibleChromeEmulation","platform","bMatch","aspectRatio","colorScheme","keyman_2","Utils.getOutputTarget","Lelem","keyman_3","lastActiveElement","_kmwAttachment","getAbsoluteX","Utils.getAbsoluteX","Pobj","Lcurleft","offsetLeft","Lobj","offsetParent","Ldoc_1","ownerDocument","scrollingElement","scrollLeft","Ldoc","defaultView","frameElement","documentElement","getAbsoluteY","Utils.getAbsoluteY","Lcurtop","offsetTop","HTMLElement","Ldoc_2","scrollTop","instanceof","Utils.instanceof","Pelem","className","scopedClass","forceScroll","Utils.forceScroll","DOMEventHandlers_1","selectionStart","selectionEnd","_IgnoreBlurFocus","blur","focus","findTouchAliasTarget","scroller","parentNode","firstChild","parentElement","constructTouchAlias","base","div","TouchAliasData","initWithBase","__executingCaretSearch","__activeCaret","getDevice","TouchAliasData.getDevice","getOS","TouchAliasData.getOS","isMultiline","TouchAliasData.prototype.isMultiline","nodeName","initCaret","TouchAliasData.prototype.initCaret","__caretDiv","cs","backgroundColor","border","zIndex","__caretTimerId","setInterval","flashCaret","TouchAliasData.prototype.init","divThis","__scrollDiv","xs","overflow","borderRadius","sb","__scrollBar","sbs","__preCaret","__postCaret","__caretSpan","innerHTML","ds","preCaretStyle","postCaretStyle","styleCaret","marginLeft","marginRight","padding","tabIndex","minWidth","TouchAliasData.prototype.initWithBase","disabled","baseStyle","getComputedStyle","scrollDivStyle","dir","fontFamily","lineHeight","whiteSpace","updateInput","color","fontSize","fontWeight","textDecoration","margin","webkitTapHighlightColor","HTMLTextAreaElement","h","parseFloat","paddingTop","paddingBottom","dh","calcRows","round","minHeight","xx","__resizeHandler","xx.__resizeHandler","setTimeout","addEventListener","setText","textValue","HTMLInputElement","textContent","TouchAliasData.prototype.setText","cp","t1","t2","tLen","updateBaseElement","TouchAliasData.prototype.getTextBeforeCaret","TouchAliasData.prototype.getTextAfterCaret","TouchAliasData.prototype.setTextBeforeCaret","finalizeCaret","getTextCaret","TouchAliasData.prototype.getTextCaret","setTextCaret","TouchAliasData.prototype.setTextCaret","showCaret","executeCaretSearch","TouchAliasData.prototype.executeCaretSearch","touchPageX","touchPageY","performCaretSearch","TouchAliasData.prototype.performCaretSearch","touchX","touchY","cpMin","cpMax","minY","yRow","offsetHeight","minCpMin","maxCpMin","searchPt","maxCpMax","minCpMax","snapOrder","snapLeniency","X_SNAP_LENIENCY_PIXELS","TouchAliasData.prototype.finalizeCaret","scrollInput","TouchAliasData.prototype.updateBaseElement","Ldv","TouchAliasData.prototype.flashCaret","TouchAliasData.prototype.showCaret","sp2","scrollBody","setScrollBar","hideCaret","TouchAliasData.prototype.hideCaret","ss","TouchAliasData.prototype.getText","TouchAliasData.prototype.updateInput","mLeft","mTop","marginTop","x1","y1","w","pLeft","paddingLeft","pRight","paddingRight","pTop","pBottom","bLeft","borderLeft","bRight","borderRight","bTop","borderTop","bBottom","borderBottom","boxSizing","MozBoxSizing","TouchAliasData.prototype.scrollInput","s2","cy","ey","rowHeight","TouchAliasData.prototype.scrollBody","oskHeight","_Box","pageYOffset","innerHeight","scrollTo","TouchAliasData.prototype.setScrollBar","keyman_4","PreProcessor","_GetEventKeyCode","PreProcessor._GetEventKeyCode","which","_GetKeyEventProperties","PreProcessor._GetKeyEventProperties","keyState","cancelBubble","prevModState","ctrlEvent","curModState","location","altGrMask","CHIRAL","metaKey","util","physicalDevice","coreSpec","isEmbedded","charCode","Lbase","getEventOutputTarget","PreProcessor.getEventOutputTarget","eventTarget","nodeType","keyDown","PreProcessor.keyDown","swallowKeypress","LeventMatched","preventDefault","stopPropagation","keyUp","PreProcessor.keyUp","keyPress","PreProcessor.keyPress","_BrowserIsSafari","keyman_5","CommonDOMStates","_DisableInput","_SelectionControl","_Selection","setFocusTimer","CommonDOMStates.prototype.setFocusTimer","focusing","focusTimer","setFocus","setBlur","_ControlFocus","Ltarg","et","designMode","isContentEditable","priorElement","_lastActiveElement","LfocusTarg","DOMTouchHandlers","HTMLIFrameElement","_AttachToIframe","contentWindow","activeElement","justActivated","_BlurKeyboardSettings","_FocusKeyboardSettings","_CommonFocusHelper","_SetTargDir","doControlFocused","_ControlBlur","isActivating","doControlBlurred","doChangeEvent","_KeyDown","el","kmwInput","_Click","_KeyPress","_KeyUp","inputEle","getElement","ignore","submit","moveToNext","DOMEventHandlers.prototype.doControlFocused","_activeControl","callEvent","DOMEventHandlers.prototype.doControlBlurred","_event","_isActivating","DOMEventHandlers.prototype._BlurKeyboardSettings","lastElem","PInternalName","PLgCode","keyboardID","langCode","getActiveLanguage","languageCode","globalKeyboard","globalLanguageCode","DOMEventHandlers.prototype._FocusKeyboardSettings","blockGlobalChange","setActiveKeyboard","modelManager","DOMEventHandlers.prototype._CommonFocusHelper","_IsEditableIframe","DOMEventHandlers.prototype.doChangeEvent","changed","event_1","Event","dispatchEvent","tEvent","selectTouch","pageX","pageY","sortedInputs","setFocusWithTouch","relatedTarget","elem","executeBlur","dragEnd","firstTouch","dragInput","cancelable","screenX","screenY","x0","y0","yOffset","xOffset","xMin","xMax","DOMTouchHandlers.selectTouch","changedTouches","DOMTouchHandlers.prototype.setFocusWithTouch","tTarg","prevTarget","nextSibling","cancelInput","DOMTouchHandlers.prototype.cancelInput","hideNow","DOMTouchHandlers.prototype.executeBlur","DOMTouchHandlers.prototype.setScrollBar","childNodes","DOMTouchHandlers.prototype.scrollBody","coreIsCommand","coreApplyCommand","TouchAlias","keyman_6","keyman_6.text.prediction.LanguageProcessor.prototype.canEnable","headlessRuleBehaviorFinalize","keyman_6.text.RuleBehavior.prototype.finalize","ruleTransform","refreshElementContent","keyman_7","OutputTarget.prototype.focus","ele","dispatchInputEventOn","OutputTarget.prototype.dispatchInputEventOn","InputEvent","Input","_cachedSelectionStart","Input.prototype.getElement","Input.prototype.clearSelection","getCaret","processedSelectionStart","processedSelectionEnd","setCaret","Input.prototype.isSelectionEmpty","Input.prototype.hasSelection","Input.prototype.invalidateSelection","Input.prototype.getCaret","selectionDirection","Input.prototype.getDeadkeyCaret","Input.prototype.setCaret","caret","setSelection","Input.prototype.setSelection","direction","domStart","domEnd","setSelectionRange","getSelectionDirection","Input.prototype.getSelectionDirection","Input.prototype.getTextBeforeCaret","Input.prototype.setTextBeforeCaret","selectionLength","Input.prototype.setTextAfterCaret","Input.prototype.getTextAfterCaret","Input.prototype.getText","Input.prototype.deleteCharsBeforeCaret","curText","Input.prototype.insertTextBeforeCaret","front","back","Input.prototype.handleNewlineAtCaret","newlineHandler","Input.newlineHandler","Input.prototype.doInputEvent","TextArea","TextArea.prototype.getElement","TextArea.prototype.clearSelection","TextArea.prototype.isSelectionEmpty","TextArea.prototype.hasSelection","TextArea.prototype.invalidateSelection","TextArea.prototype.getCaret","TextArea.prototype.getDeadkeyCaret","TextArea.prototype.setCaret","TextArea.prototype.setSelection","TextArea.prototype.getSelectionDirection","TextArea.prototype.getTextBeforeCaret","TextArea.prototype.setTextBeforeCaret","TextArea.prototype.setTextAfterCaret","TextArea.prototype.getTextAfterCaret","TextArea.prototype.getText","TextArea.prototype.deleteCharsBeforeCaret","TextArea.prototype.insertTextBeforeCaret","TextArea.prototype.handleNewlineAtCaret","TextArea.prototype.doInputEvent","SelectionCaret","SelectionRange","ContentEditable","ContentEditable.prototype.getElement","ContentEditable.prototype.isSelectionEmpty","getSelection","isCollapsed","ContentEditable.prototype.hasSelection","Lsel","anchorNode","contains","focusNode","ContentEditable.prototype.clearSelection","deleteFromDocument","ContentEditable.prototype.invalidateSelection","getCarets","ContentEditable.prototype.getCarets","compareDocumentPosition","anchorOffset","anchor","focus_1","focusOffset","ContentEditable.prototype.getDeadkeyCaret","ContentEditable.prototype.getTextBeforeCaret","ContentEditable.prototype.getTextAfterCaret","ContentEditable.prototype.getText","innerText","ContentEditable.prototype.deleteCharsBeforeCaret","range","createRange","dnOffset","nodeValue","setStart","setEnd","deleteContents","ContentEditable.prototype.insertTextBeforeCaret","finalCaret","textStart","insertData","createTextNode","collapse","insertNode","removeAllRanges","addRange","scrollIntoView","collapseToEnd","ContentEditable.prototype.handleNewlineAtCaret","ContentEditable.prototype.setTextAfterCaret","replaceData","ContentEditable.prototype.doInputEvent","StyleCommand","cmd","stateType","DesignIFrame","doc","docRoot","DesignIFrame.prototype.getElement","DesignIFrame.prototype.focus","DesignIFrame.prototype.isSelectionEmpty","DesignIFrame.prototype.hasSelection","DesignIFrame.prototype.clearSelection","DesignIFrame.prototype.invalidateSelection","DesignIFrame.prototype.getCarets","focus_2","DesignIFrame.prototype.getDeadkeyCaret","DesignIFrame.prototype.getTextBeforeCaret","DesignIFrame.prototype.getTextAfterCaret","DesignIFrame.prototype.getText","DesignIFrame.prototype.deleteCharsBeforeCaret","DesignIFrame.prototype.insertTextBeforeCaret","DesignIFrame.prototype.handleNewlineAtCaret","DesignIFrame.prototype.setTextAfterCaret","DesignIFrame.prototype.saveProperties","_CacheableCommands","queryCommandValue","queryCommandState","commandCache","DesignIFrame.prototype.restoreProperties","_func","execCommand","DesignIFrame.prototype.doInputEvent","TouchAlias.prototype.getElement","TouchAlias.prototype.clearSelection","TouchAlias.prototype.invalidateSelection","TouchAlias.prototype.isSelectionEmpty","TouchAlias.prototype.hasSelection","TouchAlias.prototype.getDeadkeyCaret","TouchAlias.prototype.getTextBeforeCaret","TouchAlias.prototype.getTextAfterCaret","TouchAlias.prototype.getText","TouchAlias.prototype.deleteCharsBeforeCaret","TouchAlias.prototype.insertTextBeforeCaret","TouchAlias.prototype.handleNewlineAtCaret","TouchAlias.prototype.setTextAfterCaret","TouchAlias.prototype.doInputEvent","wrapElement","VariableStoreCookieSerializer","VariableStoreCookieSerializer.prototype.loadStore","loadCookie","decodeURIComponent","VariableStoreCookieSerializer.prototype.saveStore","storeMap","cName","encodeURIComponent","saveCookie","keyman_8","BeepData","BeepData.prototype.reset","DOMManager","inputList","_BeepObjects","_BeepTimeout","deactivateOnRelease","deactivateOnScroll","nonKMWTouchHandler","clearTimeout","_EnablementMutationObserverCore","mutations","mutation","disabledBefore","oldValue","disabledAfter","_EnableControl","_DisableControl","attributeName","readonlyBefore","readonlyAfter","readOnly","_AutoAttachObserverCore","inputElementAdditions","inputElementRemovals","addedNodes","_GetDocumentEditables","removedNodes","isKMWInput","_MutationAdditionObserved","_MutationRemovalObserved","listInputs","this._MutationAdditionObserved","attachFunctor","attachToControl","this._MutationRemovalObserved","disableTouchElement","disableInputElement","clearElementAttachment","enableControl","this.enableControl","isAttached","cn","tagIndex","trim","_WindowLoad","_WindowUnload","doUnload","doBeep","fixPath","protocol","rootPath","srcPath","opt","setDefaultDeviceOptions","_MasterDocument","setInitialized","AnchoredOSKView","prepareWait","endDeferment","initializeUI","setDefaultKeyboard","appliedFont","baseFont","getBaseFont","handleRotationEvents","_SetupDocument","osk_1","dTrailer","touchStartActivationHandler","this.touchStartActivationHandler","touches","p_1","touchMoveActivationHandler","this.touchMoveActivationHandler","touchEndActivationHandler","this.touchEndActivationHandler","attachDOMEvent","restoreCurrentKeyboard","MutationObserver","observationTarget","querySelector","observationConfig","childList","subtree","attachmentObserver","observe","attributes","attributeOldValue","attributeFilter","enablementObserver","suppressFocusCheck","touchHandlers","nonTouchHandlers","DOMManager.prototype.shutdown","disconnect","detachDOMEvent","DOMManager.prototype.doBeep","Lbo","_push","beepReset","DOMManager.prototype.beepReset","getHandlers","DOMManager.prototype.getHandlers","_attachObj","touchAliasing","enableTouchElement","DOMManager.prototype.enableTouchElement","tagName","isKMWDisabled","setupNonKMWTouchElement","removeEventListener","setupElementAttachment","enableInputElement","onblur","DOMManager.prototype.disableTouchElement","_kmwResizeHandler","DOMManager.prototype.setupNonKMWTouchElement","DOMManager.prototype.enableInputElement","isAlias","baseElement","onkeypress","onkeydown","onkeyup","DOMManager.prototype.disableInputElement","_DetachFromIframe","cnIndex","DOMManager.prototype.isKMWDisabled","DOMManager.prototype.attachToControl","detachFromControl","DOMManager.prototype.detachFromControl","DOMManager.prototype.isAttached","DOMManager.prototype.isKMWInput","DOMManager.prototype.setupElementAttachment","DOMManager.prototype.clearElementAttachment","DOMManager.prototype._AttachToIframe","DOMManager.prototype._DetachFromIframe","_ClearDocument","DOMManager.prototype._GetDocumentEditables","possibleInputs","dv","getElementsByTagName","arrayFromNodeList","_colon","querySelectorAll","DOMManager.prototype._SetupDocument","DOMManager.prototype._ClearDocument","DOMManager.prototype._SetTargDir","Ptarg","elDir","DOMManager.prototype._DisableControl","DOMManager.prototype._EnableControl","DOMManager.prototype.listInputs","eList","ip","xySort","e1","e2","tList","disableControl","DOMManager.prototype.disableControl","setKeyboardForControl","DOMManager.prototype.setKeyboardForControl","Pkbd","Plc","getKeyboardForControl","DOMManager.prototype.getKeyboardForControl","getLanguageForControl","DOMManager.prototype.getLanguageForControl","DOMManager.prototype.focusLastActiveElement","activeTarget","_activeElement","setActiveElement","DOMManager.prototype.setActiveElement","getElementById","initActiveElement","DOMManager.prototype.initActiveElement","DOMManager.prototype.moveToNext","bBack","activeBase","moveToElement","DOMManager.prototype.moveToElement","DOMManager.prototype._IsEditableIframe","PtestOn","Lvalid","DOMManager.prototype.getBaseFont","ipInput","ipTextArea","firstInput","firstTextArea","getStyleValue","fs","fsDefault","DOMManager.prototype.initializeUI","ui","DOMManager.suppressFocusCheck","keyman_9","DOMEventTracking","Peventname","Phandler","PuseCapture","DOMEventTracking.prototype.equals","Util","linkedStylesheets","currentEvents","domEvents","embeddedFonts","_GetAbsolute","getAbsolute","selectStartHandler","this.selectStartHandler","_CancelMouse","this._CancelMouse","_CreateElement","initDevices","lgCode","Util.prototype.initDevices","Util.prototype.arrayFromNodeList","nl","Util.prototype.addEventListener","func","Util.prototype.removeEventListener","Util.prototype.callEvent","params","strExcept","Util.prototype.attachDOMEvent","Util.prototype.detachDOMEvent","getOption","Util.prototype.getOption","optionName","dflt","hasClass","Util.prototype.hasClass","setOption","Util.prototype.setOption","Util.prototype.getAbsoluteX","Util.prototype.getAbsoluteY","Util.prototype.getAbsolute","Util.prototype._CreateElement","MozUserSelect","KhtmlUserSelect","UserSelect","WebkitUserSelect","Util.prototype.getStyleValue","getPropertyValue","getStyleInt","Util.prototype.getStyleInt","isTouchDevice","Util.prototype.isTouchDevice","portraitView","Util.prototype.portraitView","landscapeView","Util.prototype.landscapeView","angle","getViewportScale","Util.prototype.getViewportScale","clientWidth","screenWidth","innerWidth","barHeight","Util.prototype.barHeight","_EncodeEntities","Util.prototype._EncodeEntities","P_txt","createShim","Util.prototype.createShim","showShim","Util.prototype.showShim","Pvkbd","Pframe","Phelp","hideShim","Util.prototype.hideShim","rgba","Util.prototype.rgba","bgColor","addStyleSheet","Util.prototype.addStyleSheet","_ElemStyle","_ElemHead","removeStyleSheet","Util.prototype.removeStyleSheet","linkStyleSheet","Util.prototype.linkStyleSheet","JSON","stringify","headElements","linkElement","rel","href","addFontFaceStyleSheet","Util.prototype.addFontFaceStyleSheet","fd","ttf","woff","eot","svg","fList","unCached","Util.prototype.unCached","Util.prototype.loadCookie","xc","cookie","Util.prototype.saveCookie","cv","toUTCString","toNumber","Util.prototype.toNumber","toFloat","Util.prototype.toFloat","nzString","Util.prototype.nzString","Util.prototype.eventTarget","srcElement","eventType","Util.prototype.eventType","alert","Util.prototype.alert","bg","waiting","nn","dismiss","wait","Util.prototype.wait","internalAlert","Util.prototype.internalAlert","useAlerts","Util.prototype.prepareWait","lb","lt","gr","bx","onmousedown","onclick","lb.onclick","bg.onclick","Util.prototype.shutdown","event_2","ss_1","myPath","Util.prototype.myPath","sName","scripts","src","prependProtocol","Util.prototype.prependProtocol","pattern","testString","Util.prototype.testString","fontName","checkFont","Util.prototype.checkFont","p1","p2","setAttribute","fontReady","checkFontDescriptor","Util.prototype.checkFontDescriptor","__awaiter","_arguments","P","generator","adopt","fulfilled","rejected","keyman_10","CloudRequestEntry","language","CloudRequestEntry.prototype.toString","kbid","KeyboardFont","fontObj","fontPath","KeyboardStub","toStubs","KeyboardStub.toStubs","errorMsg","languages","foreach","stubs","stub","filename","displayName","region","oskFont","KeyboardTag","KeyboardManager","kmw","activeStub","dfltStub","deferment","registrationResolvers","languageList","languageListPromise","linkedScripts","_GetKeyboardDetail","this._GetKeyboardDetail","Lstub","Lkbd","Lr","getActiveKeyboardName","KeyboardManager.prototype.getActiveKeyboardName","KeyboardManager.prototype.getActiveLanguage","fullName","getDetailedKeyboards","KeyboardManager.prototype.getDetailedKeyboards","Ln","Lrn","addStub","KeyboardManager.prototype.addStub","lgArg","lgList","localOptions","mergeStub","KeyboardManager.prototype.mergeStub","findStub","rIndex","regionCodes","regions","fonts","doKeyboardRegistered","doBeforeKeyboardChange","_SetActiveKeyboard","doKeyboardChange","KeyboardManager.prototype.findStub","kid","lgid","KeyboardManager.prototype.setDefaultKeyboard","KeyboardManager.prototype.setActiveKeyboard","KeyboardManager.prototype._SetActiveKeyboard","saveCurrentKeyboard","mustReloadKeyboard","vkbd","appendStyleSheet","_Load","Ls","displayIfActive","asyncLoader","loadingStub","lngName","altString","msgType","msg","manager","installKeyboard","KeyboardManager.prototype.installKeyboard","kbdStub","Lscript","charset","kbdLang","scriptSrc","getKeyboardPath","kbdFile","getKeyboardByID","ex2","KeyboardManager.prototype.saveCurrentKeyboard","KeyboardManager.prototype.restoreCurrentKeyboard","getSavedKeyboard","KeyboardManager.prototype.getSavedKeyboard","kd","KeyboardManager.prototype.isCJK","KeyboardManager.prototype.getKeyboardByID","isUniqueRequest","KeyboardManager.prototype.isUniqueRequest","cloudList","tEntry","mergeAndResolveStubPromises","KeyboardManager.prototype.mergeAndResolveStubPromises","errorStubs","addKeyboardArray","KeyboardManager.prototype.addKeyboardArray","comma","pList","lList","convertedStubs","err_1","keymanCloudRequest","registerLanguagesForKeyboard","KeyboardManager.prototype.registerLanguagesForKeyboard","nArg","nDflt","kbId","ll","register","KeyboardManager.prototype.register","promiseid","_registerCore","CLOUD_REGISTRATION_ERR","promiseFuncs","KeyboardManager.prototype._registerCore","currentKeyboardStubsCount","badName","CLOUD_MALFORMED_OBJECT_ERR","addLanguageKeyboards","KeyboardManager.prototype.addLanguageKeyboards","_this_2","lgName","addAll","languageFound","alertLanguageUnavailable","KeyboardManager.prototype.keymanCloudRequest","byLanguage","kbdManager","queryConfig","timeoutID","CLOUD_TIMEOUT_ERR","onload","Lscript.onload","CLOUD_STUB_REGISTRATION_ERR","onerror","Lscript.onerror","lineno","colno","KeyboardManager.prototype.alertLanguageUnavailable","languageName","serverUnavailable","KeyboardManager.prototype.serverUnavailable","warned","removeKeyboards","KeyboardManager.prototype.removeKeyboards","force","success","activeRemoved","anyRemoved","doKeyboardUnregistered","KeyboardManager.prototype._registerKeyboard","savedActiveStub","preserveID","doKeyboardLoaded","KeyboardManager.prototype._registerStub","namespaceID","KeyboardManager.prototype.doKeyboardRegistered","_internalName","_language","_keyboardName","_languageCode","_packageID","KeyboardManager.prototype.doKeyboardUnregistered","KeyboardManager.prototype.doKeyboardLoaded","KeyboardManager.prototype.doBeforeKeyboardChange","KeyboardManager.prototype.doKeyboardChange","_indirect","KeyboardManager.prototype.shutdown","script","keyman_11","Hotkey","Hotkey.prototype.matches","shiftState","HotkeyManager","hotkeys","_Process","_Lcode","_Lmodifiers","ctrlKey","addHotKey","HotkeyManager.prototype.addHotKey","removeHotkey","HotkeyManager.prototype.removeHotkey","keyman_12","UIState","pending","activated","UIManager","this.doUnload","getUIState","UIManager.prototype.getUIState","UIManager.prototype.setActivatingUI","doLoad","UIManager.prototype.doLoad","keyman_13","osk_2","LanguageMenu","scrolling","shim","constructShim","LanguageMenu.prototype.constructShim","languageMenu","hide","sX","sY","spaceBar","showBuild","show","LanguageMenu.prototype.show","kbdList","menu","m2","m3","WebkitOverflowScrolling","mx","scrollToLanguage","scrollHeight","activeLgNo","addLanguages","ms","maxWidth","adjust","scale","factor","qs","menuWidth","LanguageMenu.prototype.adjust","nKbds","maxHeight","lgKey","menuHeight","barWidth","bottom","LanguageMenu.prototype.scrollToLanguage","stopImmediatePropagation","initial","LanguageMenu.prototype.addLanguages","nStubs","langs","lgBar","kb","activeLanguageIndex","kList","scrolled","ontouchend","lgBar.ontouchend","addKeyboard","padLast","cancelTouch","LanguageMenu.prototype.addKeyboard","unique","kn","touchStart","touchMove","yMax","touchEnd","onmspointerdown","onmspointermove","onmspointerout","LanguageMenu.prototype.hide","highlightKey","ParsedLengthStyle","parsed","parseLengthStyle","absolute","scaledBy","ParsedLengthStyle.prototype.scaledBy","scalar","inPixels","ParsedLengthStyle.inPixels","inPercent","ParsedLengthStyle.inPercent","forScalar","ParsedLengthStyle.forScalar","ParsedLengthStyle.special","suffix","ParsedLengthStyle.parseLengthStyle","spec","osk_3","layouts","ResizeBar","dragHandler","mouseCancellingHandler","this.mouseCancellingHandler","ev","_element","buildResizeBar","_resizeHandle","mouseDownHandler","DISPLAY_HEIGHT","allowResizing","ResizeBar.prototype.allowResizing","markUnselectable","ResizeBar.prototype.markUnselectable","ResizeBar.prototype.buildResizeBar","bar","Ltitle","Limg","refreshLayout","ResizeBar.prototype.refreshLayout","InputEventCoordinate","fromEvent","InputEventCoordinate.fromEvent","coordSource","TouchEvent","clientX","clientY","buttons","isFromMouse","MouseEvent","MouseStartSnapshot","_VPreviousMouseMove","onmousemove","_VPreviousMouseUp","onmouseup","_VPreviousCursor","cursor","_VPreviousMouseButton","button","restore","MouseStartSnapshot.prototype.restore","matchesCausingClick","MouseStartSnapshot.prototype.matchesCausingClick","MouseDragOperation","cursorType","startHandler","_VMoveMouseDown","_enabled","_mouseStartSnapshot","MouseDragOperation.prototype._VMoveMouseDown","_startCoord","_VMoveMouseMove","_VMoveMouseUp","onDragStart","MouseDragOperation.prototype._VMoveMouseMove","enabled","coord","onDragMove","MouseDragOperation.prototype._VMoveMouseUp","onDragRelease","osk_4","TitleBar","buildTitleBar","setPinCJKOffset","TitleBar.prototype.setPinCJKOffset","_unpinButton","showPin","TitleBar.prototype.showPin","visible","setTitle","TitleBar.prototype.setTitle","_caption","setTitleFromKeyboard","TitleBar.prototype.setTitleFromKeyboard","attachHandlers","TitleBar.prototype.attachHandlers","_helpButton","this._helpButton.onclick","_configButton","this._configButton.onclick","_closeButton","this._closeButton.onclick","this._unpinButton.onclick","restorePosition","TitleBar.prototype.buildTitleBar","buildCloseButton","buildHelpButton","buildConfigButton","buildUnpinButton","TitleBar.prototype.markUnselectable","TitleBar.prototype.buildCloseButton","TitleBar.prototype.buildHelpButton","title","TitleBar.prototype.buildConfigButton","TitleBar.prototype.buildUnpinButton","TitleBar.prototype.refreshLayout","TargetedFloatLayout","titleBar","titleDragHandler","resizeBar","resizeDragHandler","oskView","attachToView","TargetedFloatLayout.prototype.attachToView","view","noDrag","_moveHandler","class_1.prototype.onDragStart","startX","startY","class_1.prototype.onDragMove","cumulativeX","cumulativeY","getRect","setSize","class_1.prototype.onDragRelease","currentKey","doResizeMove","_resizeHandler","class_2","class_2.prototype.onDragStart","startWidth","computedWidth","startHeight","computedHeight","class_2.prototype.onDragMove","newWidth","newHeight","class_2.prototype.onDragRelease","keyman_14","clickKey","PreProcessor.clickKey","initKeyEvent","raiseKeyEvent","PreProcessor.raiseKeyEvent","handleClick","PreProcessor.handleClick","optionKey","getFontSizeStyle","isKey","OSKKey","KeyData","keyData","link","getKeyFrom","OSKKeySpec","setButtonClass","OSKKey.prototype.setButtonClass","btn","BUTTON_CLASSES","setToggleState","OSKKey.prototype.setToggleState","classAsString","btnClassId","isFrameKey","OSKKey.prototype.isFrameKey","allowsKeyTip","OSKKey.prototype.allowsKeyTip","classList","highlight","OSKKey.prototype.highlight","classes","HIGHLIGHT_CLASS","getTextMetrics","OSKKey.getTextMetrics","emScale","fontSpec","getContext","measureText","metrics","getIdealFontSize","OSKKey.prototype.getIdealFontSize","override","buttonStyle","keyWidth","originalSize","getKeyEmFontSize","getKeyWidth","fontHeight","keyHeight","fontBoundingBoxAscent","fontBoundingBoxDescent","textHeight","Y_PADDING","xProportion","MAX_X_PROPORTION","X_PADDING","yProportion","MAX_Y_PROPORTION","proportion","OSKKey.prototype.getKeyWidth","renameSpecialKey","OSKKey.prototype.renameSpecialKey","oldText","specialCodePUA","VisualKeyboard","specialCharacters","unicodeKeyIdToString","OSKKey.prototype.unicodeKeyIdToString","generateKeyText","OSKKey.prototype.generateKeyText","ts","keyText","specialText","styleSpec","isUnderTouch","OSKKey.prototype.isUnderTouch","OSKKey.prototype.refreshLayout","OSKBaseKey","getId","OSKBaseKey.prototype.getId","elementID","getCoreId","OSKBaseKey.prototype.getCoreId","getBaseId","OSKBaseKey.prototype.getBaseId","generateKeyCapLabel","OSKBaseKey.prototype.generateKeyCapLabel","q","processSubkeys","OSKBaseKey.prototype.processSubkeys","bsn","bsk","skIcon","construct","OSKBaseKey.prototype.construct","kDiv","btnEle","keyCap","capLabel","square","OSKBaseKey.prototype.refreshLayout","layoutWidth","styleString","usesFixedWidthScaling","usesFixedHeightScaling","internalHeight","heightFraction","OSKRow","rowSpec","rDiv","keyObj","displaysKeyCap","OSKRow.prototype.refreshLayout","rs","keyHeightBase","padTop","keyElement","kss","kes","OSKLayer","gDiv","rowObj","displaysKeyCaps","globeKey","findKey","hideKey","spaceBarKey","_rowHeight","OSKLayer.prototype.findKey","OSKLayer.prototype.refreshLayout","layerHeight","nRows","nRow","oskRow","OSKLayerGroup","lDiv","ls","layoutFS","getDefaultKeyObject","tKey","layerObj","keyman_15","KeyTip","constrain","tipElement","pointerEvents","tip","cap","KeyTip.prototype.show","rowElement","rkey","getClientRects","rrow","xLeft","xWidth","xHeight","kts","_BoxRect","getBoundingClientRect","keyRect","canvasWidth","ceil","canvasHeight","textAlign","px","scaleStyle","previewFontScale","xOverflow","bottomY","tipHeight","halfHeight","hx","osk_5","OSKSubKey","OSKSubKey.prototype.getId","OSKSubKey.prototype.construct","topMargin","ks","bs","OSKSubKey.prototype.allowsKeyTip","keyman_16","SubkeyPopup","resolver","currentSelection","subKeySpec","subKeys","nKeys","nCols","needsTopMargin","keyGenerator","selectDefaultSubkey","SubkeyPopup.prototype.finalize","reposition","SubkeyPopup.prototype.reposition","rowElementRect","constrainPopup","topY","topOffset","callout","addCallout","SubkeyPopup.prototype.addCallout","cc","ccs","top_1","SubkeyPopup.prototype.selectDefaultSubkey","popupBase","bk","subkeys","skElement","skSpec","keyPending","isVisible","SubkeyPopup.prototype.isVisible","SubkeyPopup.prototype.clear","updateTouch","SubkeyPopup.prototype.updateTouch","onKey","PendingLongpress","popupDelay","timerId","cancel","PendingLongpress.prototype.cancel","PendingLongpress.prototype.resolve","PendingMultiTapState","PendingMultiTap","_touches","_state","Waiting","cancelDelayFactor","_timeout","Realized","Cancelled","isValidTarget","PendingMultiTap.isValidTarget","layerGroup","touchCount","cleanup","PendingMultiTap.prototype.cleanup","PendingMultiTap.prototype.cancel","incrementTouch","PendingMultiTap.prototype.incrementTouch","newKey","includes","realize","PendingMultiTap.prototype.realize","InputEventEngine","onInputStart","InputEventEngine.prototype.onInputStart","inputStartHandler","onInputMove","InputEventEngine.prototype.onInputMove","inputMoveHandler","onInputMoveCancel","InputEventEngine.prototype.onInputMoveCancel","inputMoveCancelHandler","onInputEnd","InputEventEngine.prototype.onInputEnd","inputEndHandler","TouchEventEngine","_touchStart","onTouchStart","_touchMove","onTouchMove","_touchEnd","onTouchEnd","forVisualKeyboard","TouchEventEngine.forVisualKeyboard","targetRoot","eventRoot","moveOver","moveCancel","release","coordConstrainedWithinInteractiveBounds","detectWithinInteractiveBounds","forPredictiveBanner","TouchEventEngine.forPredictiveBanner","banner","handlerRoot","getDiv","registerEventHandlers","TouchEventEngine.prototype.registerEventHandlers","unregisterEventHandlers","TouchEventEngine.prototype.unregisterEventHandlers","preventPropagation","TouchEventEngine.prototype.preventPropagation","TouchEventEngine.prototype.onTouchStart","TouchEventEngine.prototype.onTouchMove","TouchEventEngine.prototype.onTouchEnd","MouseEventEngine","hasActiveClick","ignoreSequence","_mouseStart","onMouseStart","_mouseMove","onMouseMove","_mouseEnd","onMouseEnd","MouseEventEngine.forVisualKeyboard","MouseEventEngine.forPredictiveBanner","MouseEventEngine.prototype.registerEventHandlers","MouseEventEngine.prototype.unregisterEventHandlers","MouseEventEngine.prototype.preventPropagation","MouseEventEngine.prototype.onMouseStart","MouseEventEngine.prototype.onMouseMove","MouseEventEngine.prototype.onMouseEnd","keyman_17","hostDevice","isStatic","_layerId","layerIndex","_fixedWidthScaling","_fixedHeightScaling","repeatDelete","deleting","modelKeyClick","deleteKey","kbdLayout","layoutKeyboard","kbdDiv","inputEngine","currentLayer","postInsert","VisualKeyboard.prototype.postInsert","_width","_height","baseWidth","borderWidth","baseHeight","borderHeight","layoutHeight","getVerticalLayerGroupPadding","_fontSize","VisualKeyboard.prototype.setSize","VisualKeyboard.prototype.getDefaultKeyObject","getTouchCoordinatesOnKeyboard","VisualKeyboard.prototype.getTouchCoordinatesOnKeyboard","kbdCoords","offsetCoords","VisualKeyboard.prototype.getTouchProbabilities","keySpec","mayCorrect","touchKbdPos","kbdAspectRatio","baseKeyProbabilities","subkeyGesture","baseKeyMass","popupKeyMass","popupKeyID","baseMass","finalArray","getInteractiveBoundingRect","VisualKeyboard.prototype.getInteractiveBoundingRect","oskX","oskY","boundingRect","applyScreenMarginBoundsThresholding","VisualKeyboard.prototype.applyScreenMarginBoundsThresholding","baseBounds","startCoord","xDelta","screenLeft","pageXOffset","yDelta","screenTop","adjustedBounds","initScreenCoord","VisualKeyboard.prototype.detectWithinInteractiveBounds","baseBoundingRect","initTouchCoord","VisualKeyboard.prototype.touch","keyTarget","currentTarget","cancelDelete","activeInputCount","findNearestKey","touchPending","subkeyPopup","initGestures","VisualKeyboard.prototype.release","pendingMultiTap","realized","cancelled","tc","clearPopup","elementFromPoint","VisualKeyboard.prototype.moveCancel","updateGestures","showKeyTip","VisualKeyboard.prototype.moveOver","key0","key1","VisualKeyboard.prototype.keyTarget","VisualKeyboard.prototype.findNearestKey","k0","dxMax","dxMin","keySquare","childNode","x2","VisualKeyboard.prototype.cancelDelete","VisualKeyboard.prototype.modelKeyClick","VisualKeyboard.prototype.initKeyEvent","keyEventFromSpec","VisualKeyboard.prototype.keyEventFromSpec","_UpdateVKShiftStyle","VisualKeyboard.prototype._UpdateVKShiftStyle","VisualKeyboard.prototype.clearPopup","pendingSubkey","showLanguage","VisualKeyboard.prototype.showLanguage","SpacebarText","KEYBOARD","LANGUAGE","LANGUAGE_KEYBOARD","BLANK","tParent","VisualKeyboard.prototype.highlightKey","keytip","VisualKeyboard.prototype.getKeyEmFontSize","keySquareScale","emSizeStr","emSize","updateState","VisualKeyboard.prototype.updateState","layerElement","VisualKeyboard.prototype.refreshLayout","computedAdjustedOskHeight","fixedSize","computedStyle","isInDOM","_computedWidth","_computedHeight","groupStyle","firstElementChild","VisualKeyboard.prototype.getVerticalLayerGroupPadding","computedGroupStyle","VisualKeyboard.prototype.computedAdjustedOskHeight","allottedHeight","oskPad","VisualKeyboard.prototype.appendStyleSheet","styleSheet","kfd","ofd","hideInputs","customStyle","addFontStyle","oskStyling","waitForFonts","alignInputs","VisualKeyboard.prototype.addFontStyle","RegExp","ff","buildDocumentationKeyboard","VisualKeyboard.buildDocumentationKeyboard","PKbd","argFormFactor","argLayerId","kbdObj","refreshInterval","clearInterval","onHide","VisualKeyboard.prototype.onHide","hkKey","startLongpress","VisualKeyboard.prototype.startLongpress","pendingLongpress","keyman_18","VisualKeyboard.prototype.initGestures","timeout","_this_3","pendingLongpress_1","VisualKeyboard.prototype.updateGestures","previousKey","getLongpressFlickThreshold","VisualKeyboard.prototype.getLongpressFlickThreshold","VisualKeyboard.prototype.optionKey","oskManager","showLanguageMenu","active","VisualKeyboard.prototype.showKeyTip","popup","createKeyTip","VisualKeyboard.prototype.createKeyTip","VisualKeyboard.prototype.waitForFonts","kReady","oReady","fontCheckTimer","VisualKeyboard.prototype.shutdown","keyman_19","ScrollState","totalLength","updateTo","ScrollState.prototype.updateTo","deltas","deltaX","HAS_SCROLLED_FUDGE_FACTOR","UITouchHandlerBase","rowClassMatch","selectedTargetMatch","findTargetFromTouch","UITouchHandlerBase.prototype.findTargetFromTouch","forMove","bestMatch","isInvalidTarget","findTargetFrom","dxRight","dxLeft","findBestTarget","UITouchHandlerBase.prototype.findBestTarget","UITouchHandlerBase.prototype.isInvalidTarget","UITouchHandlerBase.prototype.touchStart","scrollTouchState","scrollWidth","pendingTarget","select","clearHolds","hold","UITouchHandlerBase.prototype.touchEnd","isSubmenuActive","hasModalPopup","beyondEdge","hasScrolled","UITouchHandlerBase.prototype.touchMove","dealiasSubTarget","hasSubmenu","displaySubmenuFor","top_2","yMin","keyman_20","Banner","BANNER_ID","BANNER_CLASS","update","Banner.prototype.update","currentHeightStyle","currentDisplayStyle","Banner.prototype.appendStyleSheet","Banner.prototype.getDiv","activate","Banner.prototype.activate","deactivate","Banner.prototype.deactivate","DEFAULT_HEIGHT","BlankBanner","ImageBanner","imagePath","img","setImagePath","ImageBanner.prototype.setImagePath","BannerSuggestion","constructRoot","BannerSuggestion.prototype.constructRoot","BASE_ID","kbdDetails","lang","family","SuggestionBanner","MARGIN","SUGGESTION_LIMIT","_suggestion","BannerSuggestion.prototype.update","updateText","BannerSuggestion.prototype.updateText","generateSuggestionText","replaceChild","BannerSuggestion.prototype.apply","BannerSuggestion.prototype.isEmpty","BannerSuggestion.prototype.generateSuggestionText","suggestionText","orderCode","suggestionApplied","rtl","indexToInsert","separatorDiv","SuggestionManager","setupInputHandling","SuggestionBanner.prototype.setupInputHandling","SuggestionBanner.prototype.activate","invalidateSuggestions","updateSuggestions","tryAccept","tryRevert","postConfigure","SuggestionBanner.prototype.postConfigure","SuggestionBanner.prototype.deactivate","TOUCHED_CLASS","initNewContext","currentSuggestions","recentAccept","swallowPrediction","doRevert","recentRevert","selected","doAccept","showRevert","option","doUpdate","SuggestionManager.prototype.findTargetFrom","SuggestionManager.prototype.highlight","SuggestionManager.prototype.select","SuggestionManager.prototype.hold","suggestionObj","isCustom","platformHold","SuggestionManager.prototype.clearHolds","SuggestionManager.prototype.hasModalPopup","SuggestionManager.prototype.dealiasSubTarget","SuggestionManager.prototype.hasSubmenu","SuggestionManager.prototype.isSubmenuActive","SuggestionManager.prototype.displaySubmenuFor","SuggestionManager.prototype.doAccept","revertAcceptancePromise","SuggestionManager.prototype.showRevert","activateKeep","SuggestionManager.prototype.activateKeep","SuggestionManager.prototype.doUpdate","keyman_21","BannerManager","_options","constructContainer","setOptions","BannerManager.prototype.constructContainer","bannerContainer","getOptions","BannerManager.prototype.getOptions","retObj","BannerManager.prototype.setOptions","optionSpec","alwaysShow","activeBanner","selectBanner","appendStyles","BannerManager.prototype.appendStyles","setBanner","BannerManager.prototype.setBanner","_activeType","_setBanner","BannerManager.prototype.selectBanner","suggestionBanner","BannerManager.prototype._setBanner","prevBanner","BannerManager.prototype.refreshLayout","HelpPageView","Ldiv","userSelect","ID","HelpPageView.prototype.postInsert","hasScript","HelpPageView.prototype.updateState","HelpPageView.prototype.refreshLayout","EmptyView","EmptyView.prototype.postInsert","EmptyView.prototype.updateState","EmptyView.prototype.refreshLayout","keyman_22","ActivationMode","OSKView","deviceSpec","needsLayout","_activationMode","automatic","_displayIfActive","layerChangeHandler","newValue","keyboardView","_Visible","bannerView","getStyleSheetPath","setBaseMouseEventListeners","setBaseTouchEventListeners","currentType","activeType","OSKView.prototype.setBaseMouseEventListeners","_boxBaseMouseDown","this._boxBaseMouseDown","removeBaseMouseEventListeners","OSKView.prototype.removeBaseMouseEventListeners","OSKView.prototype.setBaseTouchEventListeners","cancelEventFunc","_boxBaseTouchEventCancel","this._boxBaseTouchEventCancel","_boxBaseTouchStart","this._boxBaseTouchStart","removeBaseTouchEventListeners","OSKView.prototype.removeBaseTouchEventListeners","targ","commonCheckAndDisplay","allowsDeviceChange","loadActiveKeyboard","OSKView.prototype.allowsDeviceChange","newSpec","mode","activationMode","OSKView.prototype.commonCheckAndDisplay","activationConditionsMet","parsedBaseFontSize","_baseFontSize","defaultFontSize","OSKView.prototype.defaultFontSize","fontScale","computeFrameHeight","OSKView.prototype.computeFrameHeight","headerView","footerView","OSKView.prototype.setSize","mutatedFlag","parsedWidth","parsedHeight","refreshLayoutIfNeeded","setNeedsLayout","OSKView.prototype.setNeedsLayout","OSKView.prototype.refreshLayout","hasDimensions","parent_1","baseFontSize","availableHeight","OSKView.prototype.refreshLayoutIfNeeded","OSKView.prototype._Load","OSKView.prototype.loadActiveKeyboard","setBoxStyling","kbdView","_GenerateKeyboardView","kbdID","postKeyboardLoad","OSKView.prototype._GenerateKeyboardView","_GenerateVisualKeyboard","OSKView.prototype._GenerateVisualKeyboard","OSKView.prototype.present","mayShow","opacity","_this_4","setDisplayPositioning","OSKView.prototype.startHide","hiddenByUser","mayHide","useHideAnimation","shouldHide","finalizeHide","doHide","OSKView.prototype.finalizeHide","transition","OSKView.prototype.mayShow","OSKView.prototype.mayHide","OSKView.prototype.useHideAnimation","os","_animatedHideTimeout","startup","OSKView.prototype.hideNow","_box","OSKView.prototype.showBuild","OSKView.prototype.showLanguageMenu","bShow","doShow","OSKView.prototype.doShow","OSKView.prototype.doHide","modeledDevice","keepDefaultPosition","_VKbdMouseOver","_VKbdMouseOut","manual","_Unload","AnchoredOSKView.prototype._Unload","AnchoredOSKView.prototype.setBoxStyling","AnchoredOSKView.prototype.postKeyboardLoad","targetOSKHeight","getDefaultKeyboardHeight","getDefaultWidth","onmouseover","onmouseout","AnchoredOSKView.prototype.getDefaultKeyboardHeight","oskHeightLandscapeView","availHeight","availWidth","sx","sy","AnchoredOSKView.prototype.getDefaultWidth","getPos","AnchoredOSKView.prototype.getPos","AnchoredOSKView.prototype.setDisplayPositioning","AnchoredOSKView.prototype.doShow","AnchoredOSKView.prototype.doHide","specifiedPosition","dfltX","dfltY","desktopLayout","FloatingOSKView.prototype._Unload","FloatingOSKView.prototype.setBoxStyling","FloatingOSKView.prototype.postKeyboardLoad","FloatingOSKView.prototype.saveCookie","FloatingOSKView.prototype.loadCookie","cookieVersionString","dfltWidth","dfltHeight","isNewCookie","setPos","FloatingOSKView.prototype.getDefaultKeyboardHeight","FloatingOSKView.prototype.getDefaultWidth","FloatingOSKView.prototype.doResizeMove","resizingEnabled","movementEnabled","FloatingOSKView.prototype.getPos","FloatingOSKView.prototype.setDisplayPositioning","FloatingOSKView.prototype.presentAtPosition","FloatingOSKView.prototype.present","Lpos","FloatingOSKView.prototype.startHide","InlinedOSKView","InlinedOSKView.prototype._Unload","InlinedOSKView.prototype.setBoxStyling","InlinedOSKView.prototype.postKeyboardLoad","InlinedOSKView.prototype.getDefaultKeyboardHeight","InlinedOSKView.prototype.getDefaultWidth","InlinedOSKView.prototype.getPos","InlinedOSKView.prototype.setDisplayPositioning","InlinedOSKView.prototype.doShow","InlinedOSKView.prototype.doHide","InlinedOSKView.prototype.allowsDeviceChange","keyman_23","ModelManager","registeredModels","languageModelMap","ModelManager.prototype.init","onKeyboardChange","ModelManager.prototype.onKeyboardChange","kbdInfo","ModelManager.prototype.register","activeLanguage","mm","deregister","ModelManager.prototype.deregister","modelId","isRegistered","ModelManager.prototype.isRegistered","KeymanBase","_HotKeys","refocusTimer","isHeadless","resources","attachType","setActiveOnRegister","spacebarText","hotkeyManager","_srcPath","_rootPath","_protocol","KeymanBase.prototype.setDefaultDeviceOptions","KeymanBase.prototype.getStyleSheetPath","KeymanBase.prototype.getKeyboardPath","KeymanBase.prototype.KC_","KeymanBase.prototype.handleRotationEvents","eleList","KeymanBase.prototype.hideInputs","KeymanBase.prototype.namespaceID","KeymanBase.prototype.preserveID","KeymanBase.prototype.setInitialized","delayedInit","KeymanBase.prototype.delayedInit","metadata","fName","KeymanBase.prototype._push","Parray","Pval","x_1","PlgCode","Pstatic","keyboardsList","getOskHeight","targetHeight","sPath","debug","keymanweb.debug","debugElement","overflowY","toTimeString","resetVKShift","keyman_24","RotationState","RotationState.prototype.equals","RotationManager","idlePermutationCounter","IDLE_PERMUTATION_CAP","RotationManager.prototype.resolve","oskVisible","updateTimer","rotState","initNewRotation","RotationManager.prototype.initNewRotation","RotationManager.prototype.init","rotationManager","iOSEventHandler","RotationManager.prototype.iOSEventHandler","iOSEventUpdate","UPDATE_INTERVAL","RotationManager.prototype.iOSEventUpdate","newState","keymanweb.setDefaultDeviceOptions","util.wait","keymanweb.getStyleSheetPath","ssName","keymanweb.getKeyboardPath","Lfilename","keymanweb.alignInputs","processList","touchAlias","keymanweb.hideInputs","isPositionSynthesized","keymanweb.isPositionSynthesized","keymanweb.handleRotationEvents","readyStateCheckInterval","embedded","showPreview","clearPreview","xBase","yBase","SubkeyDelegator","baseKeySelected","movedFromBaseKey","SubkeyDelegator.prototype.resolve","keyCoreID","selectedKey","SubkeyDelegator.prototype.isVisible","SubkeyDelegator.prototype.clear","SubkeyDelegator.prototype.updateTouch"],"sourceRoot":"/keyman/"}
